/****************************************************************************
*           (c) Copyright 2001 - 2010 Sunext Technology Co., Ltd.
*                           All Rights Reserved
*
*
* FILENAME:   HAL_debug.h
*
*
*
*
* DESCRIPTION
*   This file supports the HAL DEBUG functions implemented in the
*   various blocks
*
*
* NOTES:
*
* $Revision: 1 $
* $Date: 11/01/07 1:06p $
*
*
**************************** SUNEXT CONFIDENTIAL ****************************/
#ifndef _HAL_DEBUG_H_
#define _HAL_DEBUG_H_

#include "..\common\globals.h"
#include "..\AL\REG_HAL.h"
#include "..\AL\REG_global.h"
#include "..\AL\REG_bd_codec.h"
#include "..\AL\REG_dfe.h"
#include "..\AL\REG_wobble.h"
#include "..\AL\REG_demod.h"
#include "..\AL\REG_dvd_decoder.h"
#include "..\AL\REG_dvd_encoder.h"
#include "..\AL\REG_cd_decoder.h"
#include "..\AL\REG_cd_encoder.h"
#include "..\AL\REG_servo.h"
#include "..\al\REG_afe.h"
#include "..\al\REG_write_strategy.h"
#include "..\al\REG_lightscribe.h"
#include "..\al\REG_opc.h"
#include "..\al\REG_host.h"


/****************************************************************************
* MIO ENABLE SIGNALS
* These define allow to selectively enable/disable MIO pin programming
* depending on PCB/HW/platform requirements
* (current state is all enabled)
****************************************************************************/
#define ENABLE_MIO0     1
#define ENABLE_MIO1     1
#define ENABLE_MIO2     1
#define ENABLE_MIO3     1

/****************************************************************************
* DEBUG FIELD format description (32-bit)
****************************************************************************/
//bit[30:28]: debug mode field (MIO32 or DBG64)
#define DBGMODE_STARTBIT  28
#define DBGMODE_MASK      0x70000000
#define DBG64SEL          0x00000000
#define MIO32SEL          0x10000000
//bit[27:24]: block field (4-bit)
#define BLKSEL_STARTBIT   24
#define BLKSEL_MASK       0x0F000000
//bit[23:16]: bus select signal (8-bit)
#define BUS_STARTBIT      16
#define BUS_MASK          0x00FF0000
//bit[15:8]: further MUX select signal (8-bit)
#define MUX_STARTBIT      8
#define MUX_MASK          0x0000FF00
//bit[ 7:0]:  bit select signal (8-bit)

/****************************************************************************
* block field definition
****************************************************************************/
    #if (CHIP_REV >= 0xC0)
#define AHB_BLK         (ULONG)(halGLOBAL_DbgBus_AHB  <<BLKSEL_STARTBIT)
#define BD_BLK          (ULONG)(halGLOBAL_DbgBus_BD   <<BLKSEL_STARTBIT)
#define DFE_BLK         (ULONG)(halGLOBAL_DbgBus_DFE  <<BLKSEL_STARTBIT)
#define WBL_BLK         (ULONG)(halGLOBAL_DbgBus_WBL  <<BLKSEL_STARTBIT)
#define DEM_BLK         (ULONG)(halGLOBAL_DbgBus_DEM  <<BLKSEL_STARTBIT)
#define AFE_BLK         (ULONG)(halGLOBAL_DbgBus_ADC  <<BLKSEL_STARTBIT) //use for AFE
#define DVDD_BLK        (ULONG)(halGLOBAL_DbgBus_DVDD <<BLKSEL_STARTBIT)
#define DVDE_BLK        (ULONG)(halGLOBAL_DbgBus_DVDE <<BLKSEL_STARTBIT)
#define WS_BLK          (ULONG)(halGLOBAL_DbgBus_WS   <<BLKSEL_STARTBIT)
#define LS_BLK          (ULONG)(halGLOBAL_DbgBus_LS   <<BLKSEL_STARTBIT)
#define CDD_BLK         (ULONG)(halGLOBAL_DbgBus_CDD  <<BLKSEL_STARTBIT)
#define CDE_BLK         (ULONG)(halGLOBAL_DbgBus_CDE  <<BLKSEL_STARTBIT)
#define OPC_BLK         (ULONG)(halGLOBAL_DbgBus_OPC  <<BLKSEL_STARTBIT)
#define HOST_BLK        (ULONG)(halGLOBAL_DbgBus_HOST <<BLKSEL_STARTBIT)
#define BVCI_BLK        (ULONG)(halGLOBAL_DbgBus_BVCI <<BLKSEL_STARTBIT)
#define SERVO_BLK       (ULONG)(halGLOBAL_DbgBus_SERVO<<BLKSEL_STARTBIT)
    #else // #if (CHIP_REV >= 0xC0)
#define AHB_BLK         (ULONG)(0  << BLKSEL_STARTBIT)
#define BD_BLK          (ULONG)(1  << BLKSEL_STARTBIT)
#define DFE_BLK         (ULONG)(2  << BLKSEL_STARTBIT)
#define WBL_BLK         (ULONG)(3  << BLKSEL_STARTBIT)
#define DEM_BLK         (ULONG)(4  << BLKSEL_STARTBIT)
#define AFE_BLK         (ULONG)(5  << BLKSEL_STARTBIT)
#define DVDD_BLK        (ULONG)(6  << BLKSEL_STARTBIT)
#define DVDE_BLK        (ULONG)(7  << BLKSEL_STARTBIT)
#define WS_BLK          (ULONG)(8  << BLKSEL_STARTBIT)
#define LS_BLK          (ULONG)(9  << BLKSEL_STARTBIT)
#define CDD_BLK         (ULONG)(10 << BLKSEL_STARTBIT)
#define CDE_BLK         (ULONG)(11 << BLKSEL_STARTBIT)
#define OPC_BLK         (ULONG)(12 << BLKSEL_STARTBIT)
#define HOST_BLK        (ULONG)(13 << BLKSEL_STARTBIT)
#define BVCI_BLK        (ULONG)(14 << BLKSEL_STARTBIT)
#define SERVO_BLK       (ULONG)(15 << BLKSEL_STARTBIT)
    #endif // #if (CHIP_REV >= 0xC0)


/****************************************************************************
* START OF SIGNAL DEFINITIONS
****************************************************************************/


/****************************************************************************
* MIO32 BUS GLOBAL BLOCK (AHB)
****************************************************************************/
//MIO0
#define AHB_MIO0_testopt                   (AHB_BLK + MIO32SEL + (halGLOBAL_MIO0_testopt            <<BUS_STARTBIT) + 0x0000)
#define AHB_MIO0_def_subld                 (AHB_BLK + MIO32SEL + (halGLOBAL_MIO0_def_subld          <<BUS_STARTBIT) + 0x0000)
#define AHB_MIO0_cd_d_wfck                 (AHB_BLK + MIO32SEL + (halGLOBAL_MIO0_cd_d_wfck          <<BUS_STARTBIT) + 0x0000)
#define AHB_MIO0_c2_frame_unc              (AHB_BLK + MIO32SEL + (halGLOBAL_MIO0_c2_frame_unc       <<BUS_STARTBIT) + 0x0000)
#define AHB_MIO0_cd_d_scor                 (AHB_BLK + MIO32SEL + (halGLOBAL_MIO0_cd_d_scor          <<BUS_STARTBIT) + 0x0000)
#define AHB_MIO0_enc_esfs                  (AHB_BLK + MIO32SEL + (halGLOBAL_MIO0_enc_esfs           <<BUS_STARTBIT) + 0x0000)
#define AHB_MIO0_cde_write_clk             (AHB_BLK + MIO32SEL + (halGLOBAL_MIO0_cde_write_clk      <<BUS_STARTBIT) + 0x0000)
#define AHB_MIO0_sv_mio0                   (AHB_BLK + MIO32SEL + (halGLOBAL_MIO0_sv_mio0            <<BUS_STARTBIT) + 0x0000)
#define AHB_MIO0_wobble_mio_debug0         (AHB_BLK + MIO32SEL + (halGLOBAL_MIO0_wobble_mio_debug0  <<BUS_STARTBIT) + 0x0000)
#define AHB_MIO0_opc_mio0                  (AHB_BLK + MIO32SEL + (halGLOBAL_MIO0_opc_mio0           <<BUS_STARTBIT) + 0x0000)
#define AHB_MIO0_sata_dbg0                 (AHB_BLK + MIO32SEL + (halGLOBAL_MIO0_sata_dbg0          <<BUS_STARTBIT) + 0x0000)
#define AHB_MIO0_xin25_clk                 (AHB_BLK + MIO32SEL + (halGLOBAL_MIO0_xin25_clk          <<BUS_STARTBIT) + 0x0000)
#define AHB_MIO0_bhaddr31280               (AHB_BLK + MIO32SEL + (halGLOBAL_MIO0_bhaddr31280        <<BUS_STARTBIT) + 0x0000)
#define AHB_MIO0_mema_armt_rCmdAck         (AHB_BLK + MIO32SEL + (halGLOBAL_MIO0_mema_armt_rCmdAck  <<BUS_STARTBIT) + 0x0000)
#define AHB_MIO0_afe_mio0                  (AHB_BLK + MIO32SEL + (halGLOBAL_MIO0_afe_mio0           <<BUS_STARTBIT) + 0x0000)
#define AHB_MIO0_ws_mio0                   (AHB_BLK + MIO32SEL + (halGLOBAL_MIO0_ws_mio0            <<BUS_STARTBIT) + 0x0000)
#define AHB_MIO0_lsmio                     (AHB_BLK + MIO32SEL + (halGLOBAL_MIO0_lsmio              <<BUS_STARTBIT) + 0x0000)
#define AHB_MIO0_s_defect2afe              (AHB_BLK + MIO32SEL + (halGLOBAL_MIO0_s_defect2afe       <<BUS_STARTBIT) + 0x0000)
#define AHB_MIO0_dvdd_test0                (AHB_BLK + MIO32SEL + (halGLOBAL_MIO0_dvdd_test0         <<BUS_STARTBIT) + 0x0000)
#define AHB_MIO0_dvd_pipo_info             (AHB_BLK + MIO32SEL + (halGLOBAL_MIO0_dvd_pipo_info      <<BUS_STARTBIT) + 0x0000)
#define AHB_MIO0_dvde_test_mio0            (AHB_BLK + MIO32SEL + (halGLOBAL_MIO0_dvde_test_mio0     <<BUS_STARTBIT) + 0x0000)
#define AHB_MIO0_cache_monitor0            (AHB_BLK + MIO32SEL + (halGLOBAL_MIO0_cache_monitor0     <<BUS_STARTBIT) + 0x0000)
//MIO1
#define AHB_MIO1_cd_d_subval               (AHB_BLK + MIO32SEL + (halGLOBAL_MIO1_cd_d_subval        <<BUS_STARTBIT) + 0x0000)
#define AHB_MIO1_ecc_busy                  (AHB_BLK + MIO32SEL + (halGLOBAL_MIO1_ecc_busy           <<BUS_STARTBIT) + 0x0000)
#define AHB_MIO1_c1_frame_unc              (AHB_BLK + MIO32SEL + (halGLOBAL_MIO1_c1_frame_unc       <<BUS_STARTBIT) + 0x0000)
#define AHB_MIO1_cd_d_monit_pad            (AHB_BLK + MIO32SEL + (halGLOBAL_MIO1_cd_d_monit_pad     <<BUS_STARTBIT) + 0x0000)
#define AHB_MIO1_enc_efmsr_cdrrwni         (AHB_BLK + MIO32SEL + (halGLOBAL_MIO1_enc_efmsr_cdrrwni  <<BUS_STARTBIT) + 0x0000)
#define AHB_MIO1_sv_mio1                   (AHB_BLK + MIO32SEL + (halGLOBAL_MIO1_sv_mio1            <<BUS_STARTBIT) + 0x0000)
#define AHB_MIO1_wobble_mio_debug1         (AHB_BLK + MIO32SEL + (halGLOBAL_MIO1_wobble_mio_debug1  <<BUS_STARTBIT) + 0x0000)
#define AHB_MIO1_opc_mio1                  (AHB_BLK + MIO32SEL + (halGLOBAL_MIO1_opc_mio1           <<BUS_STARTBIT) + 0x0000)
#define AHB_MIO1_sata_dbg1                 (AHB_BLK + MIO32SEL + (halGLOBAL_MIO1_sata_dbg1          <<BUS_STARTBIT) + 0x0000)
#define AHB_MIO1_xin33_clk                 (AHB_BLK + MIO32SEL + (halGLOBAL_MIO1_xin33_clk          <<BUS_STARTBIT) + 0x0000)
#define AHB_MIO1_bhaddr31281               (AHB_BLK + MIO32SEL + (halGLOBAL_MIO1_bhaddr31281        <<BUS_STARTBIT) + 0x0000)
#define AHB_MIO1_mema_armt_rRspVal         (AHB_BLK + MIO32SEL + (halGLOBAL_MIO1_mema_armt_rRspVal  <<BUS_STARTBIT) + 0x0000)
#define AHB_MIO1_ws_pr_clk                 (AHB_BLK + MIO32SEL + (halGLOBAL_MIO1_ws_pr_clk          <<BUS_STARTBIT) + 0x0000)
#define AHB_MIO1_afe_mio1                  (AHB_BLK + MIO32SEL + (halGLOBAL_MIO1_afe_mio1           <<BUS_STARTBIT) + 0x0000)
#define AHB_MIO1_ws_mio1                   (AHB_BLK + MIO32SEL + (halGLOBAL_MIO1_ws_mio1            <<BUS_STARTBIT) + 0x0000)
#define AHB_MIO1_lsmio                     (AHB_BLK + MIO32SEL + (halGLOBAL_MIO1_lsmio              <<BUS_STARTBIT) + 0x0000)
#define AHB_MIO1_sv_s_dfct_delayed         (AHB_BLK + MIO32SEL + (halGLOBAL_MIO1_sv_s_dfct_delayed  <<BUS_STARTBIT) + 0x0000)
#define AHB_MIO1_dvdd_test1                (AHB_BLK + MIO32SEL + (halGLOBAL_MIO1_dvdd_test1         <<BUS_STARTBIT) + 0x0000)
#define AHB_MIO1_dvd_pipo_bst              (AHB_BLK + MIO32SEL + (halGLOBAL_MIO1_dvd_pipo_bst       <<BUS_STARTBIT) + 0x0000)
#define AHB_MIO1_dvde_test_mio1            (AHB_BLK + MIO32SEL + (halGLOBAL_MIO1_dvde_test_mio1     <<BUS_STARTBIT) + 0x0000)
#define AHB_MIO1_chk_cache_miss            (AHB_BLK + MIO32SEL + (halGLOBAL_MIO1_chk_cache_miss     <<BUS_STARTBIT) + 0x0000)
//MIO2
#define AHB_MIO2_cd_d_val                  (AHB_BLK + MIO32SEL + (halGLOBAL_MIO2_cd_d_val           <<BUS_STARTBIT) + 0x0000)
#define AHB_MIO2_dau_xsync                 (AHB_BLK + MIO32SEL + (halGLOBAL_MIO2_dau_xsync          <<BUS_STARTBIT) + 0x0000)
#define AHB_MIO2_c2_frame_err              (AHB_BLK + MIO32SEL + (halGLOBAL_MIO2_c2_frame_err       <<BUS_STARTBIT) + 0x0000)
#define AHB_MIO2_efm_flag                  (AHB_BLK + MIO32SEL + (halGLOBAL_MIO2_efm_flag           <<BUS_STARTBIT) + 0x0000)
#define AHB_MIO2_enc_esfs                  (AHB_BLK + MIO32SEL + (halGLOBAL_MIO2_enc_esfs           <<BUS_STARTBIT) + 0x0000)
#define AHB_MIO2_sv_mio2                   (AHB_BLK + MIO32SEL + (halGLOBAL_MIO2_sv_mio2            <<BUS_STARTBIT) + 0x0000)
#define AHB_MIO2_wobble_mio_debug2         (AHB_BLK + MIO32SEL + (halGLOBAL_MIO2_wobble_mio_debug2  <<BUS_STARTBIT) + 0x0000)
#define AHB_MIO2_opc_mio2                  (AHB_BLK + MIO32SEL + (halGLOBAL_MIO2_opc_mio2           <<BUS_STARTBIT) + 0x0000)
#define AHB_MIO2_sata_dbg2                 (AHB_BLK + MIO32SEL + (halGLOBAL_MIO2_sata_dbg2          <<BUS_STARTBIT) + 0x0000)
#define AHB_MIO2_bhaddr31282               (AHB_BLK + MIO32SEL + (halGLOBAL_MIO2_bhaddr31282        <<BUS_STARTBIT) + 0x0000)
#define AHB_MIO2_ws_wbgclk                 (AHB_BLK + MIO32SEL + (halGLOBAL_MIO2_ws_wbgclk          <<BUS_STARTBIT) + 0x0000)
#define AHB_MIO2_afe_mio2                  (AHB_BLK + MIO32SEL + (halGLOBAL_MIO2_afe_mio2           <<BUS_STARTBIT) + 0x0000)
#define AHB_MIO2_ws_mio2                   (AHB_BLK + MIO32SEL + (halGLOBAL_MIO2_ws_mio2            <<BUS_STARTBIT) + 0x0000)
#define AHB_MIO2_lsmio                     (AHB_BLK + MIO32SEL + (halGLOBAL_MIO2_lsmio              <<BUS_STARTBIT) + 0x0000)
#define AHB_MIO2_dfe_blank                 (AHB_BLK + MIO32SEL + (halGLOBAL_MIO2_dfe_blank          <<BUS_STARTBIT) + 0x0000)
#define AHB_MIO2_dvdd_test2                (AHB_BLK + MIO32SEL + (halGLOBAL_MIO2_dvdd_test2         <<BUS_STARTBIT) + 0x0000)
#define AHB_MIO2_dvd_pipo_reset            (AHB_BLK + MIO32SEL + (halGLOBAL_MIO2_dvd_pipo_reset     <<BUS_STARTBIT) + 0x0000)
#define AHB_MIO2_dvde_test_mio2            (AHB_BLK + MIO32SEL + (halGLOBAL_MIO2_dvde_test_mio2     <<BUS_STARTBIT) + 0x0000)
#define AHB_MIO2_s_sf_valid                (AHB_BLK + MIO32SEL + (halGLOBAL_MIO2_s_sf_valid         <<BUS_STARTBIT) + 0x0000)
//MIO3
#define AHB_MIO3_cd_d_dc2po                (AHB_BLK + MIO32SEL + (halGLOBAL_MIO3_cd_d_dc2po         <<BUS_STARTBIT) + 0x0000)
#define AHB_MIO3_cd_d_scor                 (AHB_BLK + MIO32SEL + (halGLOBAL_MIO3_cd_d_scor          <<BUS_STARTBIT) + 0x0000)
#define AHB_MIO3_c1_frame_err              (AHB_BLK + MIO32SEL + (halGLOBAL_MIO3_c1_frame_err       <<BUS_STARTBIT) + 0x0000)
#define AHB_MIO3_def_esync                 (AHB_BLK + MIO32SEL + (halGLOBAL_MIO3_def_esync          <<BUS_STARTBIT) + 0x0000)
#define AHB_MIO3_enc_eefs                  (AHB_BLK + MIO32SEL + (halGLOBAL_MIO3_enc_eefs           <<BUS_STARTBIT) + 0x0000)
#define AHB_MIO3_enc_efmsri                (AHB_BLK + MIO32SEL + (halGLOBAL_MIO3_enc_efmsri         <<BUS_STARTBIT) + 0x0000)
#define AHB_MIO3_sv_mio3                   (AHB_BLK + MIO32SEL + (halGLOBAL_MIO3_sv_mio3            <<BUS_STARTBIT) + 0x0000)
#define AHB_MIO3_wobble_mio_debug3         (AHB_BLK + MIO32SEL + (halGLOBAL_MIO3_wobble_mio_debug3  <<BUS_STARTBIT) + 0x0000)
#define AHB_MIO3_opc_mio3                  (AHB_BLK + MIO32SEL + (halGLOBAL_MIO3_opc_mio3           <<BUS_STARTBIT) + 0x0000)
#define AHB_MIO3_sata_dbg3                 (AHB_BLK + MIO32SEL + (halGLOBAL_MIO3_sata_dbg3          <<BUS_STARTBIT) + 0x0000)
#define AHB_MIO3_bhaddr31283               (AHB_BLK + MIO32SEL + (halGLOBAL_MIO3_bhaddr31283        <<BUS_STARTBIT) + 0x0000)
#define AHB_MIO3_rb_val                    (AHB_BLK + MIO32SEL + (halGLOBAL_MIO3_rb_val             <<BUS_STARTBIT) + 0x0000)
#define AHB_MIO3_afe_mio3                  (AHB_BLK + MIO32SEL + (halGLOBAL_MIO3_afe_mio3           <<BUS_STARTBIT) + 0x0000)
#define AHB_MIO3_ws_mio3                   (AHB_BLK + MIO32SEL + (halGLOBAL_MIO3_ws_mio3            <<BUS_STARTBIT) + 0x0000)
#define AHB_MIO3_lsmio                     (AHB_BLK + MIO32SEL + (halGLOBAL_MIO3_lsmio              <<BUS_STARTBIT) + 0x0000)
#define AHB_MIO3_dfe_defect                (AHB_BLK + MIO32SEL + (halGLOBAL_MIO3_dfe_defect         <<BUS_STARTBIT) + 0x0000)
#define AHB_MIO3_dvdd_test3                (AHB_BLK + MIO32SEL + (halGLOBAL_MIO3_dvdd_test3         <<BUS_STARTBIT) + 0x0000)
#define AHB_MIO3_dfe_defect                (AHB_BLK + MIO32SEL + (halGLOBAL_MIO3_dfe_defect         <<BUS_STARTBIT) + 0x0000)
#define AHB_MIO3_dvde_test_mio3            (AHB_BLK + MIO32SEL + (halGLOBAL_MIO3_dvde_test_mio3     <<BUS_STARTBIT) + 0x0000)

/****************************************************************************
* MIO32 BUS BD BLOCK
****************************************************************************/
//This part is empty

/****************************************************************************
* MIO32 BUS DFE BLOCK
****************************************************************************/
//This part is empty

/****************************************************************************
* MIO32 BUS WBL BLOCK
****************************************************************************/
//Mode1
#define WBL_MIO0_Mode1_wzerox_pulse_int                    (WBL_BLK + MIO32SEL + (halGLOBAL_MIO0_wobble_mio_debug0  <<BUS_STARTBIT) + 1)
#define WBL_MIO1_Mode1_debug_wobble_filtered7              (WBL_BLK + MIO32SEL + (halGLOBAL_MIO1_wobble_mio_debug1  <<BUS_STARTBIT) + 1)
#define WBL_MIO2_Mode1_writeclk_div32or186or69or93_int     (WBL_BLK + MIO32SEL + (halGLOBAL_MIO2_wobble_mio_debug2  <<BUS_STARTBIT) + 1)
#define WBL_MIO3_Mode1_bd_adip_bit_la_lock_int             (WBL_BLK + MIO32SEL + (halGLOBAL_MIO3_wobble_mio_debug3  <<BUS_STARTBIT) + 1)
//Mode2
#define WBL_MIO0_Mode2_wzerox_pulse_int                    (WBL_BLK + MIO32SEL + (halGLOBAL_MIO0_wobble_mio_debug0  <<BUS_STARTBIT) + 2)
#define WBL_MIO1_Mode2_debug_wobble_filtered7              (WBL_BLK + MIO32SEL + (halGLOBAL_MIO1_wobble_mio_debug1  <<BUS_STARTBIT) + 2)
#define WBL_MIO2_Mode2_writeclk_div32or186or69or93_int     (WBL_BLK + MIO32SEL + (halGLOBAL_MIO2_wobble_mio_debug2  <<BUS_STARTBIT) + 2)
#define WBL_MIO3_Mode2_hddvd_rw_wdu_sync_la_lock           (WBL_BLK + MIO32SEL + (halGLOBAL_MIO3_wobble_mio_debug3  <<BUS_STARTBIT) + 2)
//Mode3
#define WBL_MIO0_Mode3_wzerox_pulse_int                    (WBL_BLK + MIO32SEL + (halGLOBAL_MIO0_wobble_mio_debug0  <<BUS_STARTBIT) + 3)
#define WBL_MIO1_Mode3_debug_wobble_filtered7              (WBL_BLK + MIO32SEL + (halGLOBAL_MIO1_wobble_mio_debug1  <<BUS_STARTBIT) + 3)
#define WBL_MIO2_Mode3_writeclk_div32or186or69or93_int     (WBL_BLK + MIO32SEL + (halGLOBAL_MIO2_wobble_mio_debug2  <<BUS_STARTBIT) + 3)
#define WBL_MIO3_Mode3_hddvd_ram_wdu_sync_la_lock          (WBL_BLK + MIO32SEL + (halGLOBAL_MIO3_wobble_mio_debug3  <<BUS_STARTBIT) + 3)
//Mode4
#define WBL_MIO0_Mode4_wzerox_pulse_int                    (WBL_BLK + MIO32SEL + (halGLOBAL_MIO0_wobble_mio_debug0  <<BUS_STARTBIT) + 4)
#define WBL_MIO1_Mode4_debug_wobble_filtered7              (WBL_BLK + MIO32SEL + (halGLOBAL_MIO1_wobble_mio_debug1  <<BUS_STARTBIT) + 4)
#define WBL_MIO2_Mode4_writeclk_div32or186or69or93_int     (WBL_BLK + MIO32SEL + (halGLOBAL_MIO2_wobble_mio_debug2  <<BUS_STARTBIT) + 4)
#define WBL_MIO3_Mode4_dvd_adip_bsyncinlock_la             (WBL_BLK + MIO32SEL + (halGLOBAL_MIO3_wobble_mio_debug3  <<BUS_STARTBIT) + 4)
//Mode5
#define WBL_MIO0_Mode5_wzerox_pulse_int                    (WBL_BLK + MIO32SEL + (halGLOBAL_MIO0_wobble_mio_debug0  <<BUS_STARTBIT) + 5)
#define WBL_MIO1_Mode5_debug_wobble_filtered7              (WBL_BLK + MIO32SEL + (halGLOBAL_MIO1_wobble_mio_debug1  <<BUS_STARTBIT) + 5)
#define WBL_MIO2_Mode5_writeclk_div32or186or69or93_int     (WBL_BLK + MIO32SEL + (halGLOBAL_MIO2_wobble_mio_debug2  <<BUS_STARTBIT) + 5)
#define WBL_MIO3_Mode5_dvd_lpp_bsyncinlock_la              (WBL_BLK + MIO32SEL + (halGLOBAL_MIO3_wobble_mio_debug3  <<BUS_STARTBIT) + 5)
//Mode6
#define WBL_MIO0_Mode6_sysclk                              (WBL_BLK + MIO32SEL + (halGLOBAL_MIO0_wobble_mio_debug0  <<BUS_STARTBIT) + 6)
#define WBL_MIO1_Mode6_bd_freeze_flywheel                  (WBL_BLK + MIO32SEL + (halGLOBAL_MIO1_wobble_mio_debug1  <<BUS_STARTBIT) + 6)
#define WBL_MIO2_Mode6_debug_new_bitsync_dev               (WBL_BLK + MIO32SEL + (halGLOBAL_MIO2_wobble_mio_debug2  <<BUS_STARTBIT) + 6)
#define WBL_MIO3_Mode6_bd_adip_bit_lock_int                (WBL_BLK + MIO32SEL + (halGLOBAL_MIO3_wobble_mio_debug3  <<BUS_STARTBIT) + 6)
//Mode7
#define WBL_MIO0_Mode7_bd_freeze_flywheel                  (WBL_BLK + MIO32SEL + (halGLOBAL_MIO0_wobble_mio_debug0  <<BUS_STARTBIT) + 7)
#define WBL_MIO1_Mode7_sysclk                              (WBL_BLK + MIO32SEL + (halGLOBAL_MIO1_wobble_mio_debug1  <<BUS_STARTBIT) + 7)
#define WBL_MIO2_Mode7_debug_new_bitsync_dev               (WBL_BLK + MIO32SEL + (halGLOBAL_MIO2_wobble_mio_debug2  <<BUS_STARTBIT) + 7)
#define WBL_MIO3_Mode7_bd_adip_word_lock_int               (WBL_BLK + MIO32SEL + (halGLOBAL_MIO3_wobble_mio_debug3  <<BUS_STARTBIT) + 7)
//Mode8
#define WBL_MIO0_Mode8_bd_adip_bit_lock_int                (WBL_BLK + MIO32SEL + (halGLOBAL_MIO0_wobble_mio_debug0  <<BUS_STARTBIT) + 8)
#define WBL_MIO1_Mode8_bd_adip_bit_la_lock_int             (WBL_BLK + MIO32SEL + (halGLOBAL_MIO1_wobble_mio_debug1  <<BUS_STARTBIT) + 8)
#define WBL_MIO2_Mode8_bd_adip_word_lock_int               (WBL_BLK + MIO32SEL + (halGLOBAL_MIO2_wobble_mio_debug2  <<BUS_STARTBIT) + 8)
#define WBL_MIO3_Mode8_bd_adip_reached                     (WBL_BLK + MIO32SEL + (halGLOBAL_MIO3_wobble_mio_debug3  <<BUS_STARTBIT) + 8)
//Mode9
#define WBL_MIO0_Mode9_bd_adip_bit_resync_int              (WBL_BLK + MIO32SEL + (halGLOBAL_MIO0_wobble_mio_debug0  <<BUS_STARTBIT) + 9)
#define WBL_MIO1_Mode9_bd_adip_word_resync_int             (WBL_BLK + MIO32SEL + (halGLOBAL_MIO1_wobble_mio_debug1  <<BUS_STARTBIT) + 9)
#define WBL_MIO2_Mode9_bd_adip_address_resync_int          (WBL_BLK + MIO32SEL + (halGLOBAL_MIO2_wobble_mio_debug2  <<BUS_STARTBIT) + 9)
#define WBL_MIO3_Mode9_bd_adip_missed_sync                 (WBL_BLK + MIO32SEL + (halGLOBAL_MIO3_wobble_mio_debug3  <<BUS_STARTBIT) + 9)
//Mode10
#define WBL_MIO0_Mode10_bd_adip_bit_lock_int               (WBL_BLK + MIO32SEL + (halGLOBAL_MIO0_wobble_mio_debug0  <<BUS_STARTBIT) + 10)
#define WBL_MIO1_Mode10_bd_adip_new_wobble_int             (WBL_BLK + MIO32SEL + (halGLOBAL_MIO1_wobble_mio_debug1  <<BUS_STARTBIT) + 10)
#define WBL_MIO2_Mode10_bd_adip_flywheel_addr_toggle_int   (WBL_BLK + MIO32SEL + (halGLOBAL_MIO2_wobble_mio_debug2  <<BUS_STARTBIT) + 10)
#define WBL_MIO3_Mode10_bd_adip_addr_lock_int              (WBL_BLK + MIO32SEL + (halGLOBAL_MIO3_wobble_mio_debug3  <<BUS_STARTBIT) + 10)
//Mode11
#define WBL_MIO0_Mode11_bd_adip_word_lock_int              (WBL_BLK + MIO32SEL + (halGLOBAL_MIO0_wobble_mio_debug0  <<BUS_STARTBIT) + 11)
#define WBL_MIO1_Mode11_bd_adip_new_wobble_int             (WBL_BLK + MIO32SEL + (halGLOBAL_MIO1_wobble_mio_debug1  <<BUS_STARTBIT) + 11)
#define WBL_MIO2_Mode11_bd_adip_flywheel_addr_toggle_int   (WBL_BLK + MIO32SEL + (halGLOBAL_MIO2_wobble_mio_debug2  <<BUS_STARTBIT) + 11)
#define WBL_MIO3_Mode11_bd_adip_addr_lock_int              (WBL_BLK + MIO32SEL + (halGLOBAL_MIO3_wobble_mio_debug3  <<BUS_STARTBIT) + 11)
//Mode13
#define WBL_MIO0_Mode13_dvd_block_address_valid_int        (WBL_BLK + MIO32SEL + (halGLOBAL_MIO0_wobble_mio_debug0  <<BUS_STARTBIT) + 13)
#define WBL_MIO1_Mode13_dvd_bsyncinlock_int                (WBL_BLK + MIO32SEL + (halGLOBAL_MIO1_wobble_mio_debug1  <<BUS_STARTBIT) + 13)
#define WBL_MIO2_Mode13_dvd_wsyncinlock_int                (WBL_BLK + MIO32SEL + (halGLOBAL_MIO2_wobble_mio_debug2  <<BUS_STARTBIT) + 13)
#define WBL_MIO3_Mode13_dvd_addressinlock_int              (WBL_BLK + MIO32SEL + (halGLOBAL_MIO3_wobble_mio_debug3  <<BUS_STARTBIT) + 13)
//Mode14
#define WBL_MIO0_Mode14_dvd_bsyncinlock_int                (WBL_BLK + MIO32SEL + (halGLOBAL_MIO0_wobble_mio_debug0  <<BUS_STARTBIT) + 14)
#define WBL_MIO1_Mode14_dvd_wordsync_int                   (WBL_BLK + MIO32SEL + (halGLOBAL_MIO1_wobble_mio_debug1  <<BUS_STARTBIT) + 14)
#define WBL_MIO2_Mode14_dvd_adip_missed_sync               (WBL_BLK + MIO32SEL + (halGLOBAL_MIO2_wobble_mio_debug2  <<BUS_STARTBIT) + 14)
#define WBL_MIO3_Mode14_dvd_adip_bit_resync                (WBL_BLK + MIO32SEL + (halGLOBAL_MIO3_wobble_mio_debug3  <<BUS_STARTBIT) + 14)
//Mode15
#define WBL_MIO0_Mode15_dvd_bsyncinlock_int                (WBL_BLK + MIO32SEL + (halGLOBAL_MIO0_wobble_mio_debug0  <<BUS_STARTBIT) + 15)
#define WBL_MIO1_Mode15_dvd_adip_word_resync               (WBL_BLK + MIO32SEL + (halGLOBAL_MIO1_wobble_mio_debug1  <<BUS_STARTBIT) + 15)
#define WBL_MIO2_Mode15_dvd_adip_address_resync            (WBL_BLK + MIO32SEL + (halGLOBAL_MIO2_wobble_mio_debug2  <<BUS_STARTBIT) + 15)
#define WBL_MIO3_Mode15_dvd_adip_bsyncinlock_la            (WBL_BLK + MIO32SEL + (halGLOBAL_MIO3_wobble_mio_debug3  <<BUS_STARTBIT) + 15)
//Mode17
#define WBL_MIO0_Mode17_dvd_bsyncinlock_int                (WBL_BLK + MIO32SEL + (halGLOBAL_MIO0_wobble_mio_debug0  <<BUS_STARTBIT) + 17)
#define WBL_MIO1_Mode17_dvd_wordsync_int                   (WBL_BLK + MIO32SEL + (halGLOBAL_MIO1_wobble_mio_debug1  <<BUS_STARTBIT) + 17)
#define WBL_MIO2_Mode17_dvd_lpp_rel_address_resync         (WBL_BLK + MIO32SEL + (halGLOBAL_MIO2_wobble_mio_debug2  <<BUS_STARTBIT) + 17)
#define WBL_MIO3_Mode17_dvd_lpp_bit_resync                 (WBL_BLK + MIO32SEL + (halGLOBAL_MIO3_wobble_mio_debug3  <<BUS_STARTBIT) + 17)
//Mode18
#define WBL_MIO0_Mode18_dvd_bsyncinlock_int                (WBL_BLK + MIO32SEL + (halGLOBAL_MIO0_wobble_mio_debug0  <<BUS_STARTBIT) + 18)
#define WBL_MIO1_Mode18_dvd_lpp_word_resync                (WBL_BLK + MIO32SEL + (halGLOBAL_MIO1_wobble_mio_debug1  <<BUS_STARTBIT) + 18)
#define WBL_MIO2_Mode18_dvd_lpp_address_resync             (WBL_BLK + MIO32SEL + (halGLOBAL_MIO2_wobble_mio_debug2  <<BUS_STARTBIT) + 18)
#define WBL_MIO3_Mode18_dvd_lpp_reached                    (WBL_BLK + MIO32SEL + (halGLOBAL_MIO3_wobble_mio_debug3  <<BUS_STARTBIT) + 18)
//Mode20
#define WBL_MIO0_Mode20_hddvd_ram_new_wobble               (WBL_BLK + MIO32SEL + (halGLOBAL_MIO0_wobble_mio_debug0  <<BUS_STARTBIT) + 20)
#define WBL_MIO1_Mode20_hddvd_ram_wap_reached              (WBL_BLK + MIO32SEL + (halGLOBAL_MIO1_wobble_mio_debug1  <<BUS_STARTBIT) + 20)
#define WBL_MIO2_Mode20_hddvd_ram_wdu_sync                 (WBL_BLK + MIO32SEL + (halGLOBAL_MIO2_wobble_mio_debug2  <<BUS_STARTBIT) + 20)
#define WBL_MIO3_Mode20_hddvd_ram_wap_in_seq               (WBL_BLK + MIO32SEL + (halGLOBAL_MIO3_wobble_mio_debug3  <<BUS_STARTBIT) + 20)
//Mode21
#define WBL_MIO0_Mode21_hddvd_ram_wdu_missed_sync          (WBL_BLK + MIO32SEL + (halGLOBAL_MIO0_wobble_mio_debug0  <<BUS_STARTBIT) + 21)
#define WBL_MIO1_Mode21_hddvd_ram_wap_addr_resync          (WBL_BLK + MIO32SEL + (halGLOBAL_MIO1_wobble_mio_debug1  <<BUS_STARTBIT) + 21)
#define WBL_MIO2_Mode21_hddvd_ram_wdu_sync_resync          (WBL_BLK + MIO32SEL + (halGLOBAL_MIO2_wobble_mio_debug2  <<BUS_STARTBIT) + 21)
#define WBL_MIO3_Mode21_hddvd_ram_new_wobble               (WBL_BLK + MIO32SEL + (halGLOBAL_MIO3_wobble_mio_debug3  <<BUS_STARTBIT) + 21)
//Mode22
#define WBL_MIO0_Mode22_hddvd_ram_wap_addr_lock            (WBL_BLK + MIO32SEL + (halGLOBAL_MIO0_wobble_mio_debug0  <<BUS_STARTBIT) + 22)
#define WBL_MIO1_Mode22_hddvd_ram_wdu_sync_la_lock         (WBL_BLK + MIO32SEL + (halGLOBAL_MIO1_wobble_mio_debug1  <<BUS_STARTBIT) + 22)
#define WBL_MIO2_Mode22_hddvd_ram_wdu_sync_lock            (WBL_BLK + MIO32SEL + (halGLOBAL_MIO2_wobble_mio_debug2  <<BUS_STARTBIT) + 22)
#define WBL_MIO3_Mode22_hddvd_ram_new_wobble               (WBL_BLK + MIO32SEL + (halGLOBAL_MIO3_wobble_mio_debug3  <<BUS_STARTBIT) + 22)
//Mode23
#define WBL_MIO0_Mode23_hddvd_rw_new_wobble                (WBL_BLK + MIO32SEL + (halGLOBAL_MIO0_wobble_mio_debug0  <<BUS_STARTBIT) + 23)
#define WBL_MIO1_Mode23_hddvd_rw_wap_reached               (WBL_BLK + MIO32SEL + (halGLOBAL_MIO1_wobble_mio_debug1  <<BUS_STARTBIT) + 23)
#define WBL_MIO2_Mode23_hddvd_rw_wdu_sync                  (WBL_BLK + MIO32SEL + (halGLOBAL_MIO2_wobble_mio_debug2  <<BUS_STARTBIT) + 23)
#define WBL_MIO3_Mode23_hddvd_rw_wap_in_seq                (WBL_BLK + MIO32SEL + (halGLOBAL_MIO3_wobble_mio_debug3  <<BUS_STARTBIT) + 23)
//Mode24
#define WBL_MIO0_Mode24_hddvd_rw_wdu_missed_sync           (WBL_BLK + MIO32SEL + (halGLOBAL_MIO0_wobble_mio_debug0  <<BUS_STARTBIT) + 24)
#define WBL_MIO1_Mode24_hddvd_rw_wdu_sync_resync           (WBL_BLK + MIO32SEL + (halGLOBAL_MIO1_wobble_mio_debug1  <<BUS_STARTBIT) + 24)
#define WBL_MIO2_Mode24_hddvd_rw_wap_addr_resync           (WBL_BLK + MIO32SEL + (halGLOBAL_MIO2_wobble_mio_debug2  <<BUS_STARTBIT) + 24)
#define WBL_MIO3_Mode24_hddvd_rw_wdu_sync_lock             (WBL_BLK + MIO32SEL + (halGLOBAL_MIO3_wobble_mio_debug3  <<BUS_STARTBIT) + 24)
//Mode25
#define WBL_MIO0_Mode25_hddvd_rw_new_wobble                (WBL_BLK + MIO32SEL + (halGLOBAL_MIO0_wobble_mio_debug0  <<BUS_STARTBIT) + 25)
#define WBL_MIO1_Mode25_hddvd_rw_wdu_sync_la_lock          (WBL_BLK + MIO32SEL + (halGLOBAL_MIO1_wobble_mio_debug1  <<BUS_STARTBIT) + 25)
#define WBL_MIO2_Mode25_hddvd_rw_wap_addr_lock             (WBL_BLK + MIO32SEL + (halGLOBAL_MIO2_wobble_mio_debug2  <<BUS_STARTBIT) + 25)
#define WBL_MIO3_Mode25_hddvd_wdu_sync_window_nok          (WBL_BLK + MIO32SEL + (halGLOBAL_MIO3_wobble_mio_debug3  <<BUS_STARTBIT) + 25)
//Mode26
#define WBL_MIO0_Mode26_lpp_rise_in_half_wbl               (WBL_BLK + MIO32SEL + (halGLOBAL_MIO0_wobble_mio_debug0  <<BUS_STARTBIT) + 26)
#define WBL_MIO1_Mode26_level_wobble_div2_selected         (WBL_BLK + MIO32SEL + (halGLOBAL_MIO1_wobble_mio_debug1  <<BUS_STARTBIT) + 26)
#define WBL_MIO2_Mode26_hddvd_lpp_data_cmb                 (WBL_BLK + MIO32SEL + (halGLOBAL_MIO2_wobble_mio_debug2  <<BUS_STARTBIT) + 26)
#define WBL_MIO3_Mode26_hddvd_debug_wobble_filtered7       (WBL_BLK + MIO32SEL + (halGLOBAL_MIO3_wobble_mio_debug3  <<BUS_STARTBIT) + 26)
//Mode27
#define WBL_MIO0_Mode27_lpp_rise_in_half_wbl               (WBL_BLK + MIO32SEL + (halGLOBAL_MIO0_wobble_mio_debug0  <<BUS_STARTBIT) + 27)
#define WBL_MIO1_Mode27_level_wobble_div2_selected         (WBL_BLK + MIO32SEL + (halGLOBAL_MIO1_wobble_mio_debug1  <<BUS_STARTBIT) + 27)
#define WBL_MIO2_Mode27_lpp_data_cmb                       (WBL_BLK + MIO32SEL + (halGLOBAL_MIO2_wobble_mio_debug2  <<BUS_STARTBIT) + 27)
#define WBL_MIO3_Mode27_wzerox_pulse_int                   (WBL_BLK + MIO32SEL + (halGLOBAL_MIO3_wobble_mio_debug3  <<BUS_STARTBIT) + 27)
//Mode28
#define WBL_MIO0_Mode28_wobblegain_strobe_tmp              (WBL_BLK + MIO32SEL + (halGLOBAL_MIO0_wobble_mio_debug0  <<BUS_STARTBIT) + 28)
#define WBL_MIO1_Mode28_dvdram_hold_wobbleagc              (WBL_BLK + MIO32SEL + (halGLOBAL_MIO1_wobble_mio_debug1  <<BUS_STARTBIT) + 28)
#define WBL_MIO2_Mode28_slowcnt_lo_mid                     (WBL_BLK + MIO32SEL + (halGLOBAL_MIO2_wobble_mio_debug2  <<BUS_STARTBIT) + 28)
#define WBL_MIO3_Mode28_slowcnt_hi_mid                     (WBL_BLK + MIO32SEL + (halGLOBAL_MIO3_wobble_mio_debug3  <<BUS_STARTBIT) + 28)
//Mode29
#define WBL_MIO0_Mode29_update_gain                        (WBL_BLK + MIO32SEL + (halGLOBAL_MIO0_wobble_mio_debug0  <<BUS_STARTBIT) + 29)
#define WBL_MIO1_Mode29_pos_error                          (WBL_BLK + MIO32SEL + (halGLOBAL_MIO1_wobble_mio_debug1  <<BUS_STARTBIT) + 29)
#define WBL_MIO2_Mode29_neg_error                          (WBL_BLK + MIO32SEL + (halGLOBAL_MIO2_wobble_mio_debug2  <<BUS_STARTBIT) + 29)
#define WBL_MIO3_Mode29_hold_integ                         (WBL_BLK + MIO32SEL + (halGLOBAL_MIO3_wobble_mio_debug3  <<BUS_STARTBIT) + 29)
//Mode30
#define WBL_MIO0_Mode30_update_gain                        (WBL_BLK + MIO32SEL + (halGLOBAL_MIO0_wobble_mio_debug0  <<BUS_STARTBIT) + 30)
#define WBL_MIO1_Mode30_wobble_agc_gain_output3            (WBL_BLK + MIO32SEL + (halGLOBAL_MIO1_wobble_mio_debug1  <<BUS_STARTBIT) + 30)
#define WBL_MIO2_Mode30_wobble_agc_gain_output2            (WBL_BLK + MIO32SEL + (halGLOBAL_MIO2_wobble_mio_debug2  <<BUS_STARTBIT) + 30)
#define WBL_MIO3_Mode30_wobble_agc_gain_output1            (WBL_BLK + MIO32SEL + (halGLOBAL_MIO3_wobble_mio_debug3  <<BUS_STARTBIT) + 30)
//Mode31
#define WBL_MIO0_Mode31_bd_adip_addr_lock                  (WBL_BLK + MIO32SEL + (halGLOBAL_MIO0_wobble_mio_debug0  <<BUS_STARTBIT) + 31)
#define WBL_MIO1_Mode31_bd_adip_addr_lock                  (WBL_BLK + MIO32SEL + (halGLOBAL_MIO1_wobble_mio_debug1  <<BUS_STARTBIT) + 31)
#define WBL_MIO2_Mode31_bd_adip_word_lock                  (WBL_BLK + MIO32SEL + (halGLOBAL_MIO2_wobble_mio_debug2  <<BUS_STARTBIT) + 31)
#define WBL_MIO3_Mode31_sysclk                             (WBL_BLK + MIO32SEL + (halGLOBAL_MIO3_wobble_mio_debug3  <<BUS_STARTBIT) + 31)
//Mode32
#define WBL_MIO0_Mode32_bd_adip_new_wobble                 (WBL_BLK + MIO32SEL + (halGLOBAL_MIO0_wobble_mio_debug0  <<BUS_STARTBIT) + 32)
#define WBL_MIO1_Mode32_iced_area_mask_int                 (WBL_BLK + MIO32SEL + (halGLOBAL_MIO1_wobble_mio_debug1  <<BUS_STARTBIT) + 32)
#define WBL_MIO2_Mode32_iced_area_preset_int               (WBL_BLK + MIO32SEL + (halGLOBAL_MIO2_wobble_mio_debug2  <<BUS_STARTBIT) + 32)
#define WBL_MIO3_Mode32_bd_adip_wobblenr_cnt1              (WBL_BLK + MIO32SEL + (halGLOBAL_MIO3_wobble_mio_debug3  <<BUS_STARTBIT) + 32)
//Mode33
#define WBL_MIO0_Mode33_last_frame_int                     (WBL_BLK + MIO32SEL + (halGLOBAL_MIO0_wobble_mio_debug0  <<BUS_STARTBIT) + 33)
#define WBL_MIO1_Mode33_runin_init_demod_int               (WBL_BLK + MIO32SEL + (halGLOBAL_MIO1_wobble_mio_debug1  <<BUS_STARTBIT) + 33)
#define WBL_MIO2_Mode33_demod_force_int                    (WBL_BLK + MIO32SEL + (halGLOBAL_MIO2_wobble_mio_debug2  <<BUS_STARTBIT) + 33)
#define WBL_MIO3_Mode33_preset_fast_pll_int                (WBL_BLK + MIO32SEL + (halGLOBAL_MIO3_wobble_mio_debug3  <<BUS_STARTBIT) + 33)
//Mode34
#define WBL_MIO0_Mode34_dvdram_tim_eng_applbus1            (WBL_BLK + MIO32SEL + (halGLOBAL_MIO0_wobble_mio_debug0  <<BUS_STARTBIT) + 34) //wzerox_pulse_rise
#define WBL_MIO1_Mode34_dvdram_tim_eng_applbus2            (WBL_BLK + MIO32SEL + (halGLOBAL_MIO1_wobble_mio_debug1  <<BUS_STARTBIT) + 34) //wzerox_pulse_fall
#define WBL_MIO2_Mode34_dvdram_tim_eng_applbus9            (WBL_BLK + MIO32SEL + (halGLOBAL_MIO2_wobble_mio_debug2  <<BUS_STARTBIT) + 34) //header_window_mux
#define WBL_MIO3_Mode34_dvdram_tim_eng_applbus10           (WBL_BLK + MIO32SEL + (halGLOBAL_MIO3_wobble_mio_debug3  <<BUS_STARTBIT) + 34) //landnotgroove_mux
//Mode35
#define WBL_MIO0_Mode35_dvdram_tim_eng_applbus1            (WBL_BLK + MIO32SEL + (halGLOBAL_MIO0_wobble_mio_debug0  <<BUS_STARTBIT) + 35) //wzerox_pulse_rise
#define WBL_MIO1_Mode35_dvdram_tim_eng_applbus9            (WBL_BLK + MIO32SEL + (halGLOBAL_MIO1_wobble_mio_debug1  <<BUS_STARTBIT) + 35) //header_window_mux
#define WBL_MIO2_Mode35_dvdram_tim_eng_applbus11           (WBL_BLK + MIO32SEL + (halGLOBAL_MIO2_wobble_mio_debug2  <<BUS_STARTBIT) + 35) //header_lock_int
#define WBL_MIO3_Mode35_dvdram_tim_eng_applbus12           (WBL_BLK + MIO32SEL + (halGLOBAL_MIO3_wobble_mio_debug3  <<BUS_STARTBIT) + 35) //header_resync
//Mode36
#define WBL_MIO0_Mode36_dvdram_tim_eng_applbus13           (WBL_BLK + MIO32SEL + (halGLOBAL_MIO0_wobble_mio_debug0  <<BUS_STARTBIT) + 36) //iwp_diff_sign_max
#define WBL_MIO1_Mode36_dvdram_tim_eng_applbus14           (WBL_BLK + MIO32SEL + (halGLOBAL_MIO1_wobble_mio_debug1  <<BUS_STARTBIT) + 36) //iwp_slicer
#define WBL_MIO2_Mode36_dvdram_tim_eng_applbus15           (WBL_BLK + MIO32SEL + (halGLOBAL_MIO2_wobble_mio_debug2  <<BUS_STARTBIT) + 36) //header_window_slicer_lg
#define WBL_MIO3_Mode36_dvdram_tim_eng_applbus9            (WBL_BLK + MIO32SEL + (halGLOBAL_MIO3_wobble_mio_debug3  <<BUS_STARTBIT) + 36) //header_window_mux
//Mode37
#define WBL_MIO0_Mode37_dvdram_tim_eng_applbus13           (WBL_BLK + MIO32SEL + (halGLOBAL_MIO0_wobble_mio_debug0  <<BUS_STARTBIT) + 37) //iwp_diff_sign_max
#define WBL_MIO1_Mode37_dvdram_tim_eng_applbus14           (WBL_BLK + MIO32SEL + (halGLOBAL_MIO1_wobble_mio_debug1  <<BUS_STARTBIT) + 37) //iwp_slicer
#define WBL_MIO2_Mode37_dvdram_tim_eng_applbus15           (WBL_BLK + MIO32SEL + (halGLOBAL_MIO2_wobble_mio_debug2  <<BUS_STARTBIT) + 37) //header_window_slicer_lg
#define WBL_MIO3_Mode37_dvdram_tim_eng_applbus10           (WBL_BLK + MIO32SEL + (halGLOBAL_MIO3_wobble_mio_debug3  <<BUS_STARTBIT) + 37) //landnotgroove_mux
//Mode38
#define WBL_MIO0_Mode38_hddvd_wdu_sync_lock                (WBL_BLK + MIO32SEL + (halGLOBAL_MIO0_wobble_mio_debug0  <<BUS_STARTBIT) + 38)
#define WBL_MIO1_Mode38_hddvd_wap_addr_lock                (WBL_BLK + MIO32SEL + (halGLOBAL_MIO1_wobble_mio_debug1  <<BUS_STARTBIT) + 38)
#define WBL_MIO2_Mode38_hddvd_wobblenr_cnt4                (WBL_BLK + MIO32SEL + (halGLOBAL_MIO2_wobble_mio_debug2  <<BUS_STARTBIT) + 38)
#define WBL_MIO3_Mode38_hddvd_wobblenr_cnt3                (WBL_BLK + MIO32SEL + (halGLOBAL_MIO3_wobble_mio_debug3  <<BUS_STARTBIT) + 38)
//Mode39
#define WBL_MIO0_Mode39_hddvd_new_wobble                   (WBL_BLK + MIO32SEL + (halGLOBAL_MIO0_wobble_mio_debug0  <<BUS_STARTBIT) + 39)
#define WBL_MIO1_Mode39_hddvd_new_wobble                   (WBL_BLK + MIO32SEL + (halGLOBAL_MIO1_wobble_mio_debug1  <<BUS_STARTBIT) + 39)
#define WBL_MIO2_Mode39_iced_area_preset_int               (WBL_BLK + MIO32SEL + (halGLOBAL_MIO2_wobble_mio_debug2  <<BUS_STARTBIT) + 39)
#define WBL_MIO3_Mode39_preset_fast_pll_int                (WBL_BLK + MIO32SEL + (halGLOBAL_MIO3_wobble_mio_debug3  <<BUS_STARTBIT) + 39)
//Mode40
#define WBL_MIO0_Mode40_force_idle_rw_int                  (WBL_BLK + MIO32SEL + (halGLOBAL_MIO0_wobble_mio_debug0  <<BUS_STARTBIT) + 40)
#define WBL_MIO1_Mode40_vfo_field_rw_int                   (WBL_BLK + MIO32SEL + (halGLOBAL_MIO1_wobble_mio_debug1  <<BUS_STARTBIT) + 40)
#define WBL_MIO2_Mode40_datafield_rw_int                   (WBL_BLK + MIO32SEL + (halGLOBAL_MIO2_wobble_mio_debug2  <<BUS_STARTBIT) + 40)
#define WBL_MIO3_Mode40_lastframe_rw_int                   (WBL_BLK + MIO32SEL + (halGLOBAL_MIO3_wobble_mio_debug3  <<BUS_STARTBIT) + 40)
//Mode41
#define WBL_MIO0_Mode41_sysclk                             (WBL_BLK + MIO32SEL + (halGLOBAL_MIO0_wobble_mio_debug0  <<BUS_STARTBIT) + 41)
#define WBL_MIO1_Mode41_writeclk                           (WBL_BLK + MIO32SEL + (halGLOBAL_MIO1_wobble_mio_debug1  <<BUS_STARTBIT) + 41)
#define WBL_MIO2_Mode41_w441_int                           (WBL_BLK + MIO32SEL + (halGLOBAL_MIO2_wobble_mio_debug2  <<BUS_STARTBIT) + 41)
#define WBL_MIO3_Mode41_writeclk_div57624                  (WBL_BLK + MIO32SEL + (halGLOBAL_MIO3_wobble_mio_debug3  <<BUS_STARTBIT) + 41)
//Mode42
#define WBL_MIO0_Mode42_w441_int                           (WBL_BLK + MIO32SEL + (halGLOBAL_MIO0_wobble_mio_debug0  <<BUS_STARTBIT) + 42) //Pulse on every zerocrossing ref. cosine -> 2 * wobblefreq
#define WBL_MIO1_Mode42_sync_inlock                        (WBL_BLK + MIO32SEL + (halGLOBAL_MIO1_wobble_mio_debug1  <<BUS_STARTBIT) + 42) //ATIP sync detection lock
#define WBL_MIO2_Mode42_atip_sync_i                        (WBL_BLK + MIO32SEL + (halGLOBAL_MIO2_wobble_mio_debug2  <<BUS_STARTBIT) + 42) //ATIP sync flywheel
#define WBL_MIO3_Mode42_adr_inlock                         (WBL_BLK + MIO32SEL + (halGLOBAL_MIO3_wobble_mio_debug3  <<BUS_STARTBIT) + 42) //ATIP address flywheel lock indication
//Mode43
#define WBL_MIO0_Mode43_sync_inlock                        (WBL_BLK + MIO32SEL + (halGLOBAL_MIO0_wobble_mio_debug0  <<BUS_STARTBIT) + 43) //ATIP sync detection lock
#define WBL_MIO1_Mode43_resync                             (WBL_BLK + MIO32SEL + (halGLOBAL_MIO1_wobble_mio_debug1  <<BUS_STARTBIT) + 43) //resync on ATIP sync flywheel
#define WBL_MIO2_Mode43_out_of_window                      (WBL_BLK + MIO32SEL + (halGLOBAL_MIO2_wobble_mio_debug2  <<BUS_STARTBIT) + 43) //ATIP sync detected outside window
#define WBL_MIO3_Mode43_w441_int                           (WBL_BLK + MIO32SEL + (halGLOBAL_MIO3_wobble_mio_debug3  <<BUS_STARTBIT) + 43) //Pulse on every zerocrossing ref. cosine -> 2 * wobblefreq
//Mode44
#define WBL_MIO0_Mode44_adr_inlock                         (WBL_BLK + MIO32SEL + (halGLOBAL_MIO0_wobble_mio_debug0  <<BUS_STARTBIT) + 44) //ATIP address flywheel lock indication
#define WBL_MIO1_Mode44_adr_resync                         (WBL_BLK + MIO32SEL + (halGLOBAL_MIO1_wobble_mio_debug1  <<BUS_STARTBIT) + 44) //resync on ATIP sync flywheel
#define WBL_MIO2_Mode44_atip_address_reached_int           (WBL_BLK + MIO32SEL + (halGLOBAL_MIO2_wobble_mio_debug2  <<BUS_STARTBIT) + 44) //ATIP reached
#define WBL_MIO3_Mode44_sync_inlock                        (WBL_BLK + MIO32SEL + (halGLOBAL_MIO3_wobble_mio_debug3  <<BUS_STARTBIT) + 44) //ATIP sync detection lock
//Mode45
#define WBL_MIO0_Mode45_wobble_ifclk                       (WBL_BLK + MIO32SEL + (halGLOBAL_MIO0_wobble_mio_debug0  <<BUS_STARTBIT) + 45)
#define WBL_MIO1_Mode45_wzerox_ext_dbg                     (WBL_BLK + MIO32SEL + (halGLOBAL_MIO1_wobble_mio_debug1  <<BUS_STARTBIT) + 45)
#define WBL_MIO2_Mode45_dvd_block_address_valid_in         (WBL_BLK + MIO32SEL + (halGLOBAL_MIO2_wobble_mio_debug2  <<BUS_STARTBIT) + 45)
#define WBL_MIO3_Mode45_dvd_block_address_valid_ext_dbg    (WBL_BLK + MIO32SEL + (halGLOBAL_MIO3_wobble_mio_debug3  <<BUS_STARTBIT) + 45)
//Mode46
#define WBL_MIO0_Mode46_wobble_ifclk                       (WBL_BLK + MIO32SEL + (halGLOBAL_MIO0_wobble_mio_debug0  <<BUS_STARTBIT) + 46)
#define WBL_MIO1_Mode46_wzerox_ext_dbg                     (WBL_BLK + MIO32SEL + (halGLOBAL_MIO1_wobble_mio_debug1  <<BUS_STARTBIT) + 46)
#define WBL_MIO2_Mode46_cd_atip_sync_in                    (WBL_BLK + MIO32SEL + (halGLOBAL_MIO2_wobble_mio_debug2  <<BUS_STARTBIT) + 46)
#define WBL_MIO3_Mode46_cd_atip_sync_ext_dbg               (WBL_BLK + MIO32SEL + (halGLOBAL_MIO3_wobble_mio_debug3  <<BUS_STARTBIT) + 46)
//Mode47
#define WBL_MIO0_Mode47_wobble_ifclk                       (WBL_BLK + MIO32SEL + (halGLOBAL_MIO0_wobble_mio_debug0  <<BUS_STARTBIT) + 47)
#define WBL_MIO1_Mode47_wzerox_ext_dbg                     (WBL_BLK + MIO32SEL + (halGLOBAL_MIO1_wobble_mio_debug1  <<BUS_STARTBIT) + 47)
#define WBL_MIO2_Mode47_bd_adip_address_valid_in           (WBL_BLK + MIO32SEL + (halGLOBAL_MIO2_wobble_mio_debug2  <<BUS_STARTBIT) + 47)
#define WBL_MIO3_Mode47_bd_adip_address_valid_ext_dbg      (WBL_BLK + MIO32SEL + (halGLOBAL_MIO3_wobble_mio_debug3  <<BUS_STARTBIT) + 47)
//Mode48
#define WBL_MIO0_Mode48_wobble_ifclk                       (WBL_BLK + MIO32SEL + (halGLOBAL_MIO0_wobble_mio_debug0  <<BUS_STARTBIT) + 48)
#define WBL_MIO1_Mode48_wzerox_ext_dbg                     (WBL_BLK + MIO32SEL + (halGLOBAL_MIO1_wobble_mio_debug1  <<BUS_STARTBIT) + 48)
#define WBL_MIO2_Mode48_hddvd_address_valid_in             (WBL_BLK + MIO32SEL + (halGLOBAL_MIO2_wobble_mio_debug2  <<BUS_STARTBIT) + 48)
#define WBL_MIO3_Mode48_hddvd_address_valid_ext_dbg        (WBL_BLK + MIO32SEL + (halGLOBAL_MIO3_wobble_mio_debug3  <<BUS_STARTBIT) + 48)
//Mode49
#define WBL_MIO0_Mode49_hf_block_address_interp0           (WBL_BLK + MIO32SEL + (halGLOBAL_MIO0_wobble_mio_debug0  <<BUS_STARTBIT) + 49)
#define WBL_MIO1_Mode49_dvd_block_address_ext_int_dd0      (WBL_BLK + MIO32SEL + (halGLOBAL_MIO1_wobble_mio_debug1  <<BUS_STARTBIT) + 49)
#define WBL_MIO2_Mode49_hf_block_address_valid_interp      (WBL_BLK + MIO32SEL + (halGLOBAL_MIO2_wobble_mio_debug2  <<BUS_STARTBIT) + 49)
#define WBL_MIO3_Mode49_dvd_block_address_valid_ext_int_dd (WBL_BLK + MIO32SEL + (halGLOBAL_MIO3_wobble_mio_debug3  <<BUS_STARTBIT) + 49)
//Mode50
#define WBL_MIO0_Mode50_hf_block_address_interp1           (WBL_BLK + MIO32SEL + (halGLOBAL_MIO0_wobble_mio_debug0  <<BUS_STARTBIT) + 50)
#define WBL_MIO1_Mode50_dvd_block_address_ext_int_dd1      (WBL_BLK + MIO32SEL + (halGLOBAL_MIO1_wobble_mio_debug1  <<BUS_STARTBIT) + 50)
#define WBL_MIO2_Mode50_hf_block_address_valid_interp      (WBL_BLK + MIO32SEL + (halGLOBAL_MIO2_wobble_mio_debug2  <<BUS_STARTBIT) + 50)
#define WBL_MIO3_Mode50_dvd_block_address_valid_ext_int_dd (WBL_BLK + MIO32SEL + (halGLOBAL_MIO3_wobble_mio_debug3  <<BUS_STARTBIT) + 50)
//Mode51
#define WBL_MIO0_Mode51_wzerox_ext_dbg                     (WBL_BLK + MIO32SEL + (halGLOBAL_MIO0_wobble_mio_debug0  <<BUS_STARTBIT) + 51)
#define WBL_MIO1_Mode51_dvd_hfaddr_toggle                  (WBL_BLK + MIO32SEL + (halGLOBAL_MIO1_wobble_mio_debug1  <<BUS_STARTBIT) + 51)
#define WBL_MIO2_Mode51_hf_block_address_valid_interp      (WBL_BLK + MIO32SEL + (halGLOBAL_MIO2_wobble_mio_debug2  <<BUS_STARTBIT) + 51)
#define WBL_MIO3_Mode51_dvd_block_address_valid_ext_int_dd (WBL_BLK + MIO32SEL + (halGLOBAL_MIO3_wobble_mio_debug3  <<BUS_STARTBIT) + 51)
//Mode52
#define WBL_MIO0_Mode52_wzerox_pulse                       (WBL_BLK + MIO32SEL + (halGLOBAL_MIO0_wobble_mio_debug0  <<BUS_STARTBIT) + 52)
#define WBL_MIO1_Mode52_wobble_ifclk                       (WBL_BLK + MIO32SEL + (halGLOBAL_MIO1_wobble_mio_debug1  <<BUS_STARTBIT) + 52)
#define WBL_MIO2_Mode52_efmloadclk                         (WBL_BLK + MIO32SEL + (halGLOBAL_MIO2_wobble_mio_debug2  <<BUS_STARTBIT) + 52)
#define WBL_MIO3_Mode52_efmloadclk_resetn                  (WBL_BLK + MIO32SEL + (halGLOBAL_MIO3_wobble_mio_debug3  <<BUS_STARTBIT) + 52)

/****************************************************************************
* MIO32 BUS DEM BLOCK
****************************************************************************/
//This part is empty

/****************************************************************************
* MIO32 BUS AFE BLOCK
****************************************************************************/
//AFEMIOSEL=0
#define AFE_MIO0_AMIO0OVVL                 (AFE_BLK + MIO32SEL + (halGLOBAL_MIO0_afe_mio0<<BUS_STARTBIT) + 0x0000)
#define AFE_MIO1_AMIO1OVVL                 (AFE_BLK + MIO32SEL + (halGLOBAL_MIO1_afe_mio1<<BUS_STARTBIT) + 0x0000)
#define AFE_MIO2_AMIO2OVVL                 (AFE_BLK + MIO32SEL + (halGLOBAL_MIO2_afe_mio2<<BUS_STARTBIT) + 0x0000)
#define AFE_MIO3_avg_update_clk            (AFE_BLK + MIO32SEL + (halGLOBAL_MIO3_afe_mio3<<BUS_STARTBIT) + 0x0000)
//AFEMIOSEL=1
#define AFE_MIO0_RX                        (AFE_BLK + MIO32SEL + (halGLOBAL_MIO0_afe_mio0<<BUS_STARTBIT) + halAFE_AFE_MIO_SEL1)
#define AFE_MIO1_RC                        (AFE_BLK + MIO32SEL + (halGLOBAL_MIO1_afe_mio1<<BUS_STARTBIT) + halAFE_AFE_MIO_SEL1)
#define AFE_MIO2_TX                        (AFE_BLK + MIO32SEL + (halGLOBAL_MIO2_afe_mio2<<BUS_STARTBIT) + halAFE_AFE_MIO_SEL1)
#define AFE_MIO3_XTOK                      (AFE_BLK + MIO32SEL + (halGLOBAL_MIO3_afe_mio3<<BUS_STARTBIT) + halAFE_AFE_MIO_SEL1)
        #if (CHIP_REV >= 0xC1)
//AFEMIOSEL=2
#define AFE_MIO0_TP1SEL_RPHLDDIG           (AFE_BLK + MIO32SEL + (halGLOBAL_MIO0_afe_mio0<<BUS_STARTBIT) + 0x0002)
#define AFE_MIO0_TP1SEL_TECN               (AFE_BLK + MIO32SEL + (halGLOBAL_MIO0_afe_mio0<<BUS_STARTBIT) + 0x0102)
#define AFE_MIO0_TP1SEL_ATTON              (AFE_BLK + MIO32SEL + (halGLOBAL_MIO0_afe_mio0<<BUS_STARTBIT) + 0x0202)
#define AFE_MIO0_TP1SEL_WOBDIGTP2          (AFE_BLK + MIO32SEL + (halGLOBAL_MIO0_afe_mio0<<BUS_STARTBIT) + 0x0302)
#define AFE_MIO1_TP1SEL_DEFECTI            (AFE_BLK + MIO32SEL + (halGLOBAL_MIO1_afe_mio1<<BUS_STARTBIT) + 0x0002)
#define AFE_MIO1_TP1SEL_TECP               (AFE_BLK + MIO32SEL + (halGLOBAL_MIO1_afe_mio1<<BUS_STARTBIT) + 0x0102)
#define AFE_MIO1_TP1SEL_GAINUP             (AFE_BLK + MIO32SEL + (halGLOBAL_MIO1_afe_mio1<<BUS_STARTBIT) + 0x0202)
#define AFE_MIO1_TP1SEL_WOBDIGTP1          (AFE_BLK + MIO32SEL + (halGLOBAL_MIO1_afe_mio1<<BUS_STARTBIT) + 0x0302)
#define AFE_MIO2_TP1SEL_DEFECT             (AFE_BLK + MIO32SEL + (halGLOBAL_MIO2_afe_mio2<<BUS_STARTBIT) + 0x0002)
#define AFE_MIO2_TP1SEL_XTOK               (AFE_BLK + MIO32SEL + (halGLOBAL_MIO2_afe_mio2<<BUS_STARTBIT) + 0x0102)
#define AFE_MIO2_TP1SEL_WLDONI             (AFE_BLK + MIO32SEL + (halGLOBAL_MIO2_afe_mio2<<BUS_STARTBIT) + 0x0202)
#define AFE_MIO2_TP1SEL_RFDIGTP2           (AFE_BLK + MIO32SEL + (halGLOBAL_MIO2_afe_mio2<<BUS_STARTBIT) + 0x0302)
#define AFE_MIO3_TP1SEL_DFCTMONO           (AFE_BLK + MIO32SEL + (halGLOBAL_MIO3_afe_mio3<<BUS_STARTBIT) + 0x0002)
#define AFE_MIO3_TP1SEL_TX                 (AFE_BLK + MIO32SEL + (halGLOBAL_MIO3_afe_mio3<<BUS_STARTBIT) + 0x0102)
#define AFE_MIO3_TP1SEL_WLDON              (AFE_BLK + MIO32SEL + (halGLOBAL_MIO3_afe_mio3<<BUS_STARTBIT) + 0x0202)
#define AFE_MIO3_TP1SEL_RFDIGTP1           (AFE_BLK + MIO32SEL + (halGLOBAL_MIO3_afe_mio3<<BUS_STARTBIT) + 0x0302)
//AFEMIOSEL=3
#define AFE_MIO0_TP2SEL_RPPOLDIG           (AFE_BLK + MIO32SEL + (halGLOBAL_MIO0_afe_mio0<<BUS_STARTBIT) + 0x0003)
#define AFE_MIO0_TP2SEL_SRVTEHLD           (AFE_BLK + MIO32SEL + (halGLOBAL_MIO0_afe_mio0<<BUS_STARTBIT) + 0x0103)
#define AFE_MIO0_TP2SEL_RX                 (AFE_BLK + MIO32SEL + (halGLOBAL_MIO0_afe_mio0<<BUS_STARTBIT) + 0x0203)
#define AFE_MIO0_TP2SEL_CLK33              (AFE_BLK + MIO32SEL + (halGLOBAL_MIO0_afe_mio0<<BUS_STARTBIT) + 0x0303)
#define AFE_MIO1_TP2SEL_RPINVDIG           (AFE_BLK + MIO32SEL + (halGLOBAL_MIO1_afe_mio1<<BUS_STARTBIT) + 0x0003)
#define AFE_MIO1_TP2SEL_HDRB               (AFE_BLK + MIO32SEL + (halGLOBAL_MIO1_afe_mio1<<BUS_STARTBIT) + 0x0103)
#define AFE_MIO1_TP2SEL_TX                 (AFE_BLK + MIO32SEL + (halGLOBAL_MIO1_afe_mio1<<BUS_STARTBIT) + 0x0203)
#define AFE_MIO1_TP2SEL_NRST               (AFE_BLK + MIO32SEL + (halGLOBAL_MIO1_afe_mio1<<BUS_STARTBIT) + 0x0303)
#define AFE_MIO2_TP2SEL_RC                 (AFE_BLK + MIO32SEL + (halGLOBAL_MIO2_afe_mio2<<BUS_STARTBIT) + 0x0003)
#define AFE_MIO2_TP2SEL_HEADERHLD          (AFE_BLK + MIO32SEL + (halGLOBAL_MIO2_afe_mio2<<BUS_STARTBIT) + 0x0103)
#define AFE_MIO2_TP2SEL_XTOK               (AFE_BLK + MIO32SEL + (halGLOBAL_MIO2_afe_mio2<<BUS_STARTBIT) + 0x0203)
#define AFE_MIO2_TP2SEL_LANDI              (AFE_BLK + MIO32SEL + (halGLOBAL_MIO2_afe_mio2<<BUS_STARTBIT) + 0x0303)
#define AFE_MIO3_TP2SEL_BLANK              (AFE_BLK + MIO32SEL + (halGLOBAL_MIO3_afe_mio3<<BUS_STARTBIT) + 0x0003)
#define AFE_MIO3_TP2SEL_RPCLK              (AFE_BLK + MIO32SEL + (halGLOBAL_MIO3_afe_mio3<<BUS_STARTBIT) + 0x0103)
#define AFE_MIO3_TP2SEL_RC                 (AFE_BLK + MIO32SEL + (halGLOBAL_MIO3_afe_mio3<<BUS_STARTBIT) + 0x0203)
#define AFE_MIO3_TP2SEL_LAND               (AFE_BLK + MIO32SEL + (halGLOBAL_MIO3_afe_mio3<<BUS_STARTBIT) + 0x0303)
        #else // #if (CHIP_REV >= 0xC1)
//AFEMIOSEL=2
#define AFE_MIO0_TP1SEL_VSS                (AFE_BLK + MIO32SEL + (halGLOBAL_MIO0_afe_mio0<<BUS_STARTBIT) + 0x0002)
#define AFE_MIO0_TP1SEL_TECP               (AFE_BLK + MIO32SEL + (halGLOBAL_MIO0_afe_mio0<<BUS_STARTBIT) + 0x0102)
#define AFE_MIO0_TP1SEL_RC                 (AFE_BLK + MIO32SEL + (halGLOBAL_MIO0_afe_mio0<<BUS_STARTBIT) + 0x0202)
#define AFE_MIO0_TP1SEL_TX                 (AFE_BLK + MIO32SEL + (halGLOBAL_MIO0_afe_mio0<<BUS_STARTBIT) + 0x0302)
#define AFE_MIO1_TP1SEL_XTOK               (AFE_BLK + MIO32SEL + (halGLOBAL_MIO1_afe_mio1<<BUS_STARTBIT) + 0x0002)
#define AFE_MIO1_TP1SEL_ATTON              (AFE_BLK + MIO32SEL + (halGLOBAL_MIO1_afe_mio1<<BUS_STARTBIT) + 0x0102)
#define AFE_MIO1_TP1SEL_WLDON              (AFE_BLK + MIO32SEL + (halGLOBAL_MIO1_afe_mio1<<BUS_STARTBIT) + 0x0202)
#define AFE_MIO1_TP1SEL_LAND               (AFE_BLK + MIO32SEL + (halGLOBAL_MIO1_afe_mio1<<BUS_STARTBIT) + 0x0302)
#define AFE_MIO2_TP1SEL_BLANK              (AFE_BLK + MIO32SEL + (halGLOBAL_MIO2_afe_mio2<<BUS_STARTBIT) + 0x0002)
#define AFE_MIO2_TP1SEL_DEFECT             (AFE_BLK + MIO32SEL + (halGLOBAL_MIO2_afe_mio2<<BUS_STARTBIT) + 0x0102)
#define AFE_MIO2_TP1SEL_HDRB               (AFE_BLK + MIO32SEL + (halGLOBAL_MIO2_afe_mio2<<BUS_STARTBIT) + 0x0202)
#define AFE_MIO2_TP1SEL_MCLK               (AFE_BLK + MIO32SEL + (halGLOBAL_MIO2_afe_mio2<<BUS_STARTBIT) + 0x0302)
#define AFE_MIO3_TP1SEL_VSS                (AFE_BLK + MIO32SEL + (halGLOBAL_MIO3_afe_mio3<<BUS_STARTBIT) + 0x0002)
#define AFE_MIO3_TP1SEL_VSS2               (AFE_BLK + MIO32SEL + (halGLOBAL_MIO3_afe_mio3<<BUS_STARTBIT) + 0x0102)
#define AFE_MIO3_TP1SEL_WOBDIGTP1          (AFE_BLK + MIO32SEL + (halGLOBAL_MIO3_afe_mio3<<BUS_STARTBIT) + 0x0202)
#define AFE_MIO3_TP1SEL_RFDIGTP1           (AFE_BLK + MIO32SEL + (halGLOBAL_MIO3_afe_mio3<<BUS_STARTBIT) + 0x0302)
//AFEMIOSEL=3
#define AFE_MIO0_TP2SEL_VSS                (AFE_BLK + MIO32SEL + (halGLOBAL_MIO0_afe_mio0<<BUS_STARTBIT) + 0x0003)
#define AFE_MIO0_TP2SEL_TECN               (AFE_BLK + MIO32SEL + (halGLOBAL_MIO0_afe_mio0<<BUS_STARTBIT) + 0x0103)
#define AFE_MIO0_TP2SEL_RX                 (AFE_BLK + MIO32SEL + (halGLOBAL_MIO0_afe_mio0<<BUS_STARTBIT) + 0x0203)
#define AFE_MIO0_TP2SEL_TX                 (AFE_BLK + MIO32SEL + (halGLOBAL_MIO0_afe_mio0<<BUS_STARTBIT) + 0x0303)
#define AFE_MIO1_TP2SEL_RC                 (AFE_BLK + MIO32SEL + (halGLOBAL_MIO1_afe_mio1<<BUS_STARTBIT) + 0x0003)
#define AFE_MIO1_TP2SEL_GAINUP             (AFE_BLK + MIO32SEL + (halGLOBAL_MIO1_afe_mio1<<BUS_STARTBIT) + 0x0103)
#define AFE_MIO1_TP2SEL_WLDONI             (AFE_BLK + MIO32SEL + (halGLOBAL_MIO1_afe_mio1<<BUS_STARTBIT) + 0x0203)
#define AFE_MIO1_TP2SEL_LANDI              (AFE_BLK + MIO32SEL + (halGLOBAL_MIO1_afe_mio1<<BUS_STARTBIT) + 0x0303)
#define AFE_MIO2_TP2SEL_BLANKI             (AFE_BLK + MIO32SEL + (halGLOBAL_MIO2_afe_mio2<<BUS_STARTBIT) + 0x0003)
#define AFE_MIO2_TP2SEL_DEFECTI            (AFE_BLK + MIO32SEL + (halGLOBAL_MIO2_afe_mio2<<BUS_STARTBIT) + 0x0103)
#define AFE_MIO2_TP2SEL_HEADERHLD          (AFE_BLK + MIO32SEL + (halGLOBAL_MIO2_afe_mio2<<BUS_STARTBIT) + 0x0203)
#define AFE_MIO2_TP2SEL_NRST               (AFE_BLK + MIO32SEL + (halGLOBAL_MIO2_afe_mio2<<BUS_STARTBIT) + 0x0303)
#define AFE_MIO3_TP2SEL_VSS                (AFE_BLK + MIO32SEL + (halGLOBAL_MIO3_afe_mio3<<BUS_STARTBIT) + 0x0003)
#define AFE_MIO3_TP2SEL_VSS2               (AFE_BLK + MIO32SEL + (halGLOBAL_MIO3_afe_mio3<<BUS_STARTBIT) + 0x0103)
#define AFE_MIO3_TP2SEL_WOBDIGTP2          (AFE_BLK + MIO32SEL + (halGLOBAL_MIO3_afe_mio3<<BUS_STARTBIT) + 0x0203)
#define AFE_MIO3_TP2SEL_RFDIGTP2           (AFE_BLK + MIO32SEL + (halGLOBAL_MIO3_afe_mio3<<BUS_STARTBIT) + 0x0303)
        #endif // #if (CHIP_REV >= 0xC1)

/****************************************************************************
* MIO32 BUS DVDD BLOCK
****************************************************************************/

#define DVDD_MIO3_sync_det_frame_sync           (DVDD_BLK + MIO32SEL + (halGLOBAL_MIO3_dvdd_test3 <<BUS_STARTBIT) + 0x0000)
#define DVDD_MIO2_demod_pib_start               (DVDD_BLK + MIO32SEL + (halGLOBAL_MIO2_dvdd_test2 <<BUS_STARTBIT) + 0x0000)
#define DVDD_MIO1_id_ecc_init                   (DVDD_BLK + MIO32SEL + (halGLOBAL_MIO1_dvdd_test1 <<BUS_STARTBIT) + 0x0000)
#define DVDD_MIO0_ecc_blk_sync                  (DVDD_BLK + MIO32SEL + (halGLOBAL_MIO0_dvdd_test0 <<BUS_STARTBIT) + 0x0000)

#define DVDD_MIO3_demod_frame_start             (DVDD_BLK + MIO32SEL + (halGLOBAL_MIO3_dvdd_test3 <<BUS_STARTBIT) + 0x0001)
#define DVDD_MIO2_demod_frame_sync              (DVDD_BLK + MIO32SEL + (halGLOBAL_MIO2_dvdd_test2 <<BUS_STARTBIT) + 0x0001)
#define DVDD_MIO1_demod_sector_start            (DVDD_BLK + MIO32SEL + (halGLOBAL_MIO1_dvdd_test1 <<BUS_STARTBIT) + 0x0001)
#define DVDD_MIO0_demod_first_byte_of_cluster   (DVDD_BLK + MIO32SEL + (halGLOBAL_MIO0_dvdd_test0 <<BUS_STARTBIT) + 0x0001)

#define DVDD_MIO3_sync_skip                     (DVDD_BLK + MIO32SEL + (halGLOBAL_MIO3_dvdd_test3 <<BUS_STARTBIT) + 0x0002)
#define DVDD_MIO2_pib_start                     (DVDD_BLK + MIO32SEL + (halGLOBAL_MIO2_dvdd_test2 <<BUS_STARTBIT) + 0x0002)
#define DVDD_MIO1_jump_across_sector            (DVDD_BLK + MIO32SEL + (halGLOBAL_MIO1_dvdd_test1 <<BUS_STARTBIT) + 0x0002)
#define DVDD_MIO0_jump_back                     (DVDD_BLK + MIO32SEL + (halGLOBAL_MIO0_dvdd_test0 <<BUS_STARTBIT) + 0x0002)

#define DVDD_MIO3_demod_erasure_flag            (DVDD_BLK + MIO32SEL + (halGLOBAL_MIO3_dvdd_test3 <<BUS_STARTBIT) + 0x0003)
#define DVDD_MIO2_sync_det_frame_sync           (DVDD_BLK + MIO32SEL + (halGLOBAL_MIO2_dvdd_test2 <<BUS_STARTBIT) + 0x0003)
#define DVDD_MIO1_sector_sync                   (DVDD_BLK + MIO32SEL + (halGLOBAL_MIO1_dvdd_test1 <<BUS_STARTBIT) + 0x0003)
#define DVDD_MIO0_raw_ecc_blk_sync              (DVDD_BLK + MIO32SEL + (halGLOBAL_MIO0_dvdd_test0 <<BUS_STARTBIT) + 0x0003)

#define DVDD_MIO3_sync_skip_a                   (DVDD_BLK + MIO32SEL + (halGLOBAL_MIO3_dvdd_test3 <<BUS_STARTBIT) + 0x0004)
#define DVDD_MIO2_sync_skip_write               (DVDD_BLK + MIO32SEL + (halGLOBAL_MIO2_dvdd_test2 <<BUS_STARTBIT) + 0x0004)
#define DVDD_MIO1_sync_skip_done                (DVDD_BLK + MIO32SEL + (halGLOBAL_MIO1_dvdd_test1 <<BUS_STARTBIT) + 0x0004)
#define DVDD_MIO0_flush_fifo                    (DVDD_BLK + MIO32SEL + (halGLOBAL_MIO0_dvdd_test0 <<BUS_STARTBIT) + 0x0004)

#define DVDD_MIO3_tid_match                     (DVDD_BLK + MIO32SEL + (halGLOBAL_MIO3_dvdd_test3 <<BUS_STARTBIT) + 0x0005)
#define DVDD_MIO2_pi_sw_gt_0a_and_pi_bst_dly    (DVDD_BLK + MIO32SEL + (halGLOBAL_MIO2_dvdd_test2 <<BUS_STARTBIT) + 0x0005)
#define DVDD_MIO1_po_sw_gt_10_and_po_bst_dly    (DVDD_BLK + MIO32SEL + (halGLOBAL_MIO1_dvdd_test1 <<BUS_STARTBIT) + 0x0005)
#define DVDD_MIO0_i_edcerr_and_edc_done         (DVDD_BLK + MIO32SEL + (halGLOBAL_MIO0_dvdd_test0 <<BUS_STARTBIT) + 0x0005)

#define DVDD_MIO3_end_of_header                 (DVDD_BLK + MIO32SEL + (halGLOBAL_MIO3_dvdd_test3 <<BUS_STARTBIT) + 0x0006)
#define DVDD_MIO2_pid34_match                   (DVDD_BLK + MIO32SEL + (halGLOBAL_MIO2_dvdd_test2 <<BUS_STARTBIT) + 0x0006)
#define DVDD_MIO1_pid12_match                   (DVDD_BLK + MIO32SEL + (halGLOBAL_MIO1_dvdd_test1 <<BUS_STARTBIT) + 0x0006)
#define DVDD_MIO0_track_size_toggle             (DVDD_BLK + MIO32SEL + (halGLOBAL_MIO0_dvdd_test0 <<BUS_STARTBIT) + 0x0006)

#define DVDD_MIO3_pid_ok                        (DVDD_BLK + MIO32SEL + (halGLOBAL_MIO3_dvdd_test3 <<BUS_STARTBIT) + 0x0007)
#define DVDD_MIO2_id_ecc_init                   (DVDD_BLK + MIO32SEL + (halGLOBAL_MIO2_dvdd_test2 <<BUS_STARTBIT) + 0x0007)
#define DVDD_MIO1_id_en                         (DVDD_BLK + MIO32SEL + (halGLOBAL_MIO1_dvdd_test1 <<BUS_STARTBIT) + 0x0007)
#define DVDD_MIO0_block_outputs                 (DVDD_BLK + MIO32SEL + (halGLOBAL_MIO0_dvdd_test0 <<BUS_STARTBIT) + 0x0007)

#define DVDD_MIO3_dvdram_landnotgroove          (DVDD_BLK + MIO32SEL + (halGLOBAL_MIO3_dvdd_test3 <<BUS_STARTBIT) + 0x0008)
#define DVDD_MIO2_use_internal_land             (DVDD_BLK + MIO32SEL + (halGLOBAL_MIO2_dvdd_test2 <<BUS_STARTBIT) + 0x0008)
#define DVDD_MIO1_internal_land                 (DVDD_BLK + MIO32SEL + (halGLOBAL_MIO1_dvdd_test1 <<BUS_STARTBIT) + 0x0008)
#define DVDD_MIO0_land                          (DVDD_BLK + MIO32SEL + (halGLOBAL_MIO0_dvdd_test0 <<BUS_STARTBIT) + 0x0008)

#define DVDD_MIO3_bca_sync_color_found          (DVDD_BLK + MIO32SEL + (halGLOBAL_MIO3_dvdd_test3 <<BUS_STARTBIT) + 0x0009)
#define DVDD_MIO2_bca_n13                       (DVDD_BLK + MIO32SEL + (halGLOBAL_MIO2_dvdd_test2 <<BUS_STARTBIT) + 0x0009)
#define DVDD_MIO1_bca_row_written               (DVDD_BLK + MIO32SEL + (halGLOBAL_MIO1_dvdd_test1 <<BUS_STARTBIT) + 0x0009)
#define DVDD_MIO0_mpi_bend                      (DVDD_BLK + MIO32SEL + (halGLOBAL_MIO0_dvdd_test0 <<BUS_STARTBIT) + 0x0009)

#define DVDD_MIO3_mpi_reset                     (DVDD_BLK + MIO32SEL + (halGLOBAL_MIO3_dvdd_test3 <<BUS_STARTBIT) + 0x000A)
#define DVDD_MIO2_mpi_bstart                    (DVDD_BLK + MIO32SEL + (halGLOBAL_MIO2_dvdd_test2 <<BUS_STARTBIT) + 0x000A)
#define DVDD_MIO1_mpi_data_en                   (DVDD_BLK + MIO32SEL + (halGLOBAL_MIO1_dvdd_test1 <<BUS_STARTBIT) + 0x000A)
#define DVDD_MIO0_mpi_error                     (DVDD_BLK + MIO32SEL + (halGLOBAL_MIO0_dvdd_test0 <<BUS_STARTBIT) + 0x000A)

#define DVDD_MIO3_pi_reset_from_pi              (DVDD_BLK + MIO32SEL + (halGLOBAL_MIO3_dvdd_test3 <<BUS_STARTBIT) + 0x000B)
#define DVDD_MIO2_po_reset                      (DVDD_BLK + MIO32SEL + (halGLOBAL_MIO2_dvdd_test2 <<BUS_STARTBIT) + 0x000B)
#define DVDD_MIO1_edc_reset                     (DVDD_BLK + MIO32SEL + (halGLOBAL_MIO1_dvdd_test1 <<BUS_STARTBIT) + 0x000B)
#define DVDD_MIO0_i_ecci                        (DVDD_BLK + MIO32SEL + (halGLOBAL_MIO0_dvdd_test0 <<BUS_STARTBIT) + 0x000B)

#define DVDD_MIO3_cmdval                        (DVDD_BLK + MIO32SEL + (halGLOBAL_MIO3_dvdd_test3 <<BUS_STARTBIT) + 0x000C)
#define DVDD_MIO2_cmdack                        (DVDD_BLK + MIO32SEL + (halGLOBAL_MIO2_dvdd_test2 <<BUS_STARTBIT) + 0x000C)
#define DVDD_MIO1_ceop                          (DVDD_BLK + MIO32SEL + (halGLOBAL_MIO1_dvdd_test1 <<BUS_STARTBIT) + 0x000C)
#define DVDD_MIO0_cmdrw                         (DVDD_BLK + MIO32SEL + (halGLOBAL_MIO0_dvdd_test0 <<BUS_STARTBIT) + 0x000C)

#define DVDD_MIO3_rspval                        (DVDD_BLK + MIO32SEL + (halGLOBAL_MIO3_dvdd_test3 <<BUS_STARTBIT) + 0x000D)
#define DVDD_MIO2_rspack                        (DVDD_BLK + MIO32SEL + (halGLOBAL_MIO2_dvdd_test2 <<BUS_STARTBIT) + 0x000D)
#define DVDD_MIO1_rspEop                        (DVDD_BLK + MIO32SEL + (halGLOBAL_MIO1_dvdd_test1 <<BUS_STARTBIT) + 0x000D)
#define DVDD_MIO0_cbe                           (DVDD_BLK + MIO32SEL + (halGLOBAL_MIO0_dvdd_test0 <<BUS_STARTBIT) + 0x000D)

#define DVDD_MIO3_dvd_ack                       (DVDD_BLK + MIO32SEL + (halGLOBAL_MIO3_dvdd_test3 <<BUS_STARTBIT) + 0x000E)
#define DVDD_MIO2_dvd_data_valid                (DVDD_BLK + MIO32SEL + (halGLOBAL_MIO2_dvdd_test2 <<BUS_STARTBIT) + 0x000E)
#define DVDD_MIO1_dvd_nw                        (DVDD_BLK + MIO32SEL + (halGLOBAL_MIO1_dvdd_test1 <<BUS_STARTBIT) + 0x000E)
#define DVDD_MIO0_ceop                          (DVDD_BLK + MIO32SEL + (halGLOBAL_MIO0_dvdd_test0 <<BUS_STARTBIT) + 0x000E)

#define DVDD_MIO3_current_req                   (DVDD_BLK + MIO32SEL + (halGLOBAL_MIO3_dvdd_test3 <<BUS_STARTBIT) + 0x000F)
#define DVDD_MIO2_current_req_client2           (DVDD_BLK + MIO32SEL + (halGLOBAL_MIO2_dvdd_test2 <<BUS_STARTBIT) + 0x000F)
#define DVDD_MIO1_current_req_client1           (DVDD_BLK + MIO32SEL + (halGLOBAL_MIO1_dvdd_test1 <<BUS_STARTBIT) + 0x000F)
#define DVDD_MIO0_current_req_client0           (DVDD_BLK + MIO32SEL + (halGLOBAL_MIO0_dvdd_test0 <<BUS_STARTBIT) + 0x000F)

#define DVDD_MIO3_req_start                     (DVDD_BLK + MIO32SEL + (halGLOBAL_MIO3_dvdd_test3 <<BUS_STARTBIT) + 0x0010)
#define DVDD_MIO2_req_state2                    (DVDD_BLK + MIO32SEL + (halGLOBAL_MIO2_dvdd_test2 <<BUS_STARTBIT) + 0x0010)
#define DVDD_MIO1_req_state1                    (DVDD_BLK + MIO32SEL + (halGLOBAL_MIO1_dvdd_test1 <<BUS_STARTBIT) + 0x0010)
#define DVDD_MIO0_req_state0                    (DVDD_BLK + MIO32SEL + (halGLOBAL_MIO0_dvdd_test0 <<BUS_STARTBIT) + 0x0010)

#define DVDD_MIO3_req_start_a                   (DVDD_BLK + MIO32SEL + (halGLOBAL_MIO3_dvdd_test3 <<BUS_STARTBIT) + 0x0011)
#define DVDD_MIO2_req_fifo_counter2             (DVDD_BLK + MIO32SEL + (halGLOBAL_MIO2_dvdd_test2 <<BUS_STARTBIT) + 0x0011)
#define DVDD_MIO1_req_fifo_counter1             (DVDD_BLK + MIO32SEL + (halGLOBAL_MIO1_dvdd_test1 <<BUS_STARTBIT) + 0x0011)
#define DVDD_MIO0_req_fifo_counter0             (DVDD_BLK + MIO32SEL + (halGLOBAL_MIO0_dvdd_test0 <<BUS_STARTBIT) + 0x0011)

#define DVDD_MIO3_req_fifo_wr                   (DVDD_BLK + MIO32SEL + (halGLOBAL_MIO3_dvdd_test3 <<BUS_STARTBIT) + 0x0012)
#define DVDD_MIO2_req_fifo_rd                   (DVDD_BLK + MIO32SEL + (halGLOBAL_MIO2_dvdd_test2 <<BUS_STARTBIT) + 0x0012)
#define DVDD_MIO1_rsp_state1                    (DVDD_BLK + MIO32SEL + (halGLOBAL_MIO1_dvdd_test1 <<BUS_STARTBIT) + 0x0012)
#define DVDD_MIO0_rsp_state0                    (DVDD_BLK + MIO32SEL + (halGLOBAL_MIO0_dvdd_test0 <<BUS_STARTBIT) + 0x0012)

#define DVDD_MIO3_demod_wr_qualified            (DVDD_BLK + MIO32SEL + (halGLOBAL_MIO3_dvdd_test3 <<BUS_STARTBIT) + 0x0013)
#define DVDD_MIO2_pird_qualified                (DVDD_BLK + MIO32SEL + (halGLOBAL_MIO2_dvdd_test2 <<BUS_STARTBIT) + 0x0013)
#define DVDD_MIO1_memif_is_idle                 (DVDD_BLK + MIO32SEL + (halGLOBAL_MIO1_dvdd_test1 <<BUS_STARTBIT) + 0x0013)
#define DVDD_MIO0_slip_qualified                (DVDD_BLK + MIO32SEL + (halGLOBAL_MIO0_dvdd_test0 <<BUS_STARTBIT) + 0x0013)

#define DVDD_MIO3_pilv_qualified                (DVDD_BLK + MIO32SEL + (halGLOBAL_MIO3_dvdd_test3 <<BUS_STARTBIT) + 0x0014)
#define DVDD_MIO2_polv_qualified                (DVDD_BLK + MIO32SEL + (halGLOBAL_MIO2_dvdd_test2 <<BUS_STARTBIT) + 0x0014)
#define DVDD_MIO1_pilv_req_in_progress          (DVDD_BLK + MIO32SEL + (halGLOBAL_MIO1_dvdd_test1 <<BUS_STARTBIT) + 0x0014)
#define DVDD_MIO0_polv_req_in_progress          (DVDD_BLK + MIO32SEL + (halGLOBAL_MIO0_dvdd_test0 <<BUS_STARTBIT) + 0x0014)

#define DVDD_MIO3_pi_data_en                    (DVDD_BLK + MIO32SEL + (halGLOBAL_MIO3_dvdd_test3 <<BUS_STARTBIT) + 0x0015)
#define DVDD_MIO2_demod_wr_req                  (DVDD_BLK + MIO32SEL + (halGLOBAL_MIO2_dvdd_test2 <<BUS_STARTBIT) + 0x0015)
#define DVDD_MIO1_demod_wr_ack                  (DVDD_BLK + MIO32SEL + (halGLOBAL_MIO1_dvdd_test1 <<BUS_STARTBIT) + 0x0015)
#define DVDD_MIO0_demodwr_nw                    (DVDD_BLK + MIO32SEL + (halGLOBAL_MIO0_dvdd_test0 <<BUS_STARTBIT) + 0x0015)

#define DVDD_MIO3_demod_wr_req                  (DVDD_BLK + MIO32SEL + (halGLOBAL_MIO3_dvdd_test3 <<BUS_STARTBIT) + 0x0016)
#define DVDD_MIO2_demod_wr_ack                  (DVDD_BLK + MIO32SEL + (halGLOBAL_MIO2_dvdd_test2 <<BUS_STARTBIT) + 0x0016)
#define DVDD_MIO1_demodwr_nw                    (DVDD_BLK + MIO32SEL + (halGLOBAL_MIO1_dvdd_test1 <<BUS_STARTBIT) + 0x0016)
#define DVDD_MIO0_demod_wr_eop                  (DVDD_BLK + MIO32SEL + (halGLOBAL_MIO0_dvdd_test0 <<BUS_STARTBIT) + 0x0016)

#define DVDD_MIO3_sync_skip_b                   (DVDD_BLK + MIO32SEL + (halGLOBAL_MIO3_dvdd_test3 <<BUS_STARTBIT) + 0x0017)
#define DVDD_MIO2_sync_skip_write_a             (DVDD_BLK + MIO32SEL + (halGLOBAL_MIO2_dvdd_test2 <<BUS_STARTBIT) + 0x0017)
#define DVDD_MIO1_sync_skip_done_a              (DVDD_BLK + MIO32SEL + (halGLOBAL_MIO1_dvdd_test1 <<BUS_STARTBIT) + 0x0017)
#define DVDD_MIO0_flush_fifo_a                  (DVDD_BLK + MIO32SEL + (halGLOBAL_MIO0_dvdd_test0 <<BUS_STARTBIT) + 0x0017)

#define DVDD_MIO3_demod_wr_pi_reset_del         (DVDD_BLK + MIO32SEL + (halGLOBAL_MIO3_dvdd_test3 <<BUS_STARTBIT) + 0x0018)
#define DVDD_MIO2_demod_pib_start_a             (DVDD_BLK + MIO32SEL + (halGLOBAL_MIO2_dvdd_test2 <<BUS_STARTBIT) + 0x0018)
#define DVDD_MIO1_data_ready                    (DVDD_BLK + MIO32SEL + (halGLOBAL_MIO1_dvdd_test1 <<BUS_STARTBIT) + 0x0018)
#define DVDD_MIO0_row_written                   (DVDD_BLK + MIO32SEL + (halGLOBAL_MIO0_dvdd_test0 <<BUS_STARTBIT) + 0x0018)

#define DVDD_MIO3_read_pi_data                  (DVDD_BLK + MIO32SEL + (halGLOBAL_MIO3_dvdd_test3 <<BUS_STARTBIT) + 0x0019)
#define DVDD_MIO2_fifo_wr                       (DVDD_BLK + MIO32SEL + (halGLOBAL_MIO2_dvdd_test2 <<BUS_STARTBIT) + 0x0019)
#define DVDD_MIO1_elsi_vld                      (DVDD_BLK + MIO32SEL + (halGLOBAL_MIO1_dvdd_test1 <<BUS_STARTBIT) + 0x0019)
#define DVDD_MIO0_read_elsi                     (DVDD_BLK + MIO32SEL + (halGLOBAL_MIO0_dvdd_test0 <<BUS_STARTBIT) + 0x0019)

#define DVDD_MIO3_demod_wr_read_state3          (DVDD_BLK + MIO32SEL + (halGLOBAL_MIO3_dvdd_test3 <<BUS_STARTBIT) + 0x001A)
#define DVDD_MIO2_demod_wr_read_state2          (DVDD_BLK + MIO32SEL + (halGLOBAL_MIO2_dvdd_test2 <<BUS_STARTBIT) + 0x001A)
#define DVDD_MIO1_demod_wr_read_state1          (DVDD_BLK + MIO32SEL + (halGLOBAL_MIO1_dvdd_test1 <<BUS_STARTBIT) + 0x001A)
#define DVDD_MIO0_demod_wr_read_state0          (DVDD_BLK + MIO32SEL + (halGLOBAL_MIO0_dvdd_test0 <<BUS_STARTBIT) + 0x001A)

#define DVDD_MIO3_demod_wr_write_state3         (DVDD_BLK + MIO32SEL + (halGLOBAL_MIO3_dvdd_test3 <<BUS_STARTBIT) + 0x001B)
#define DVDD_MIO2_demod_wr_write_state2         (DVDD_BLK + MIO32SEL + (halGLOBAL_MIO2_dvdd_test2 <<BUS_STARTBIT) + 0x001B)
#define DVDD_MIO1_demod_wr_write_state1         (DVDD_BLK + MIO32SEL + (halGLOBAL_MIO1_dvdd_test1 <<BUS_STARTBIT) + 0x001B)
#define DVDD_MIO0_demod_wr_write_state0         (DVDD_BLK + MIO32SEL + (halGLOBAL_MIO0_dvdd_test0 <<BUS_STARTBIT) + 0x001B)

#define DVDD_MIO3_demod_wr_read_state4          (DVDD_BLK + MIO32SEL + (halGLOBAL_MIO3_dvdd_test3 <<BUS_STARTBIT) + 0x001C)
#define DVDD_MIO2_demod_wr_write_state5         (DVDD_BLK + MIO32SEL + (halGLOBAL_MIO2_dvdd_test2 <<BUS_STARTBIT) + 0x001C)
#define DVDD_MIO1_demod_wr_write_state4         (DVDD_BLK + MIO32SEL + (halGLOBAL_MIO1_dvdd_test1 <<BUS_STARTBIT) + 0x001C)
#define DVDD_MIO0_flush_elsi                    (DVDD_BLK + MIO32SEL + (halGLOBAL_MIO0_dvdd_test0 <<BUS_STARTBIT) + 0x001C)

#define DVDD_MIO3_pi_rd_req                     (DVDD_BLK + MIO32SEL + (halGLOBAL_MIO3_dvdd_test3 <<BUS_STARTBIT) + 0x001D)
#define DVDD_MIO2_pird_ack                      (DVDD_BLK + MIO32SEL + (halGLOBAL_MIO2_dvdd_test2 <<BUS_STARTBIT) + 0x001D)
#define DVDD_MIO1_pird_data_valid               (DVDD_BLK + MIO32SEL + (halGLOBAL_MIO1_dvdd_test1 <<BUS_STARTBIT) + 0x001D)
#define DVDD_MIO0_pird_eop                      (DVDD_BLK + MIO32SEL + (halGLOBAL_MIO0_dvdd_test0 <<BUS_STARTBIT) + 0x001D)

#define DVDD_MIO3_pi_rd_req_a                   (DVDD_BLK + MIO32SEL + (halGLOBAL_MIO3_dvdd_test3 <<BUS_STARTBIT) + 0x001E)
#define DVDD_MIO2_pird_ack_a                    (DVDD_BLK + MIO32SEL + (halGLOBAL_MIO2_dvdd_test2 <<BUS_STARTBIT) + 0x001E)
#define DVDD_MIO1_piw_region1                   (DVDD_BLK + MIO32SEL + (halGLOBAL_MIO1_dvdd_test1 <<BUS_STARTBIT) + 0x001E)
#define DVDD_MIO0_piw_region0                   (DVDD_BLK + MIO32SEL + (halGLOBAL_MIO0_dvdd_test0 <<BUS_STARTBIT) + 0x001E)

#define DVDD_MIO3_pilv_req                      (DVDD_BLK + MIO32SEL + (halGLOBAL_MIO3_dvdd_test3 <<BUS_STARTBIT) + 0x001F)
#define DVDD_MIO2_pilv_ack                      (DVDD_BLK + MIO32SEL + (halGLOBAL_MIO2_dvdd_test2 <<BUS_STARTBIT) + 0x001F)
#define DVDD_MIO1_piw_region1_a                 (DVDD_BLK + MIO32SEL + (halGLOBAL_MIO1_dvdd_test1 <<BUS_STARTBIT) + 0x001F)
#define DVDD_MIO0_piw_region1_a                 (DVDD_BLK + MIO32SEL + (halGLOBAL_MIO0_dvdd_test0 <<BUS_STARTBIT) + 0x001F)

#define DVDD_MIO3_polv_req                      (DVDD_BLK + MIO32SEL + (halGLOBAL_MIO3_dvdd_test3 <<BUS_STARTBIT) + 0x0020)
#define DVDD_MIO2_polv_ack                      (DVDD_BLK + MIO32SEL + (halGLOBAL_MIO2_dvdd_test2 <<BUS_STARTBIT) + 0x0020)
#define DVDD_MIO1_dvd_vld_polv                  (DVDD_BLK + MIO32SEL + (halGLOBAL_MIO1_dvdd_test1 <<BUS_STARTBIT) + 0x0020)
#define DVDD_MIO0_porw_region0                  (DVDD_BLK + MIO32SEL + (halGLOBAL_MIO0_dvdd_test0 <<BUS_STARTBIT) + 0x0020)

#define DVDD_MIO3_polv_ack                      (DVDD_BLK + MIO32SEL + (halGLOBAL_MIO3_dvdd_test3 <<BUS_STARTBIT) + 0x0021)
#define DVDD_MIO2_dvd_vld_polv                  (DVDD_BLK + MIO32SEL + (halGLOBAL_MIO2_dvdd_test2 <<BUS_STARTBIT) + 0x0021)
#define DVDD_MIO1_porw_region1                  (DVDD_BLK + MIO32SEL + (halGLOBAL_MIO1_dvdd_test1 <<BUS_STARTBIT) + 0x0021)
#define DVDD_MIO0_porw_region0_a                (DVDD_BLK + MIO32SEL + (halGLOBAL_MIO0_dvdd_test0 <<BUS_STARTBIT) + 0x0021)

#define DVDD_MIO3_start_correcting              (DVDD_BLK + MIO32SEL + (halGLOBAL_MIO3_dvdd_test3 <<BUS_STARTBIT) + 0x0022)
#define DVDD_MIO2_nedc_reset                    (DVDD_BLK + MIO32SEL + (halGLOBAL_MIO2_dvdd_test2 <<BUS_STARTBIT) + 0x0022)
#define DVDD_MIO1_edc_done                      (DVDD_BLK + MIO32SEL + (halGLOBAL_MIO1_dvdd_test1 <<BUS_STARTBIT) + 0x0022)
#define DVDD_MIO0_i_edcerr_and_edc_done_a       (DVDD_BLK + MIO32SEL + (halGLOBAL_MIO0_dvdd_test0 <<BUS_STARTBIT) + 0x0022)

#define DVDD_MIO3_sec_start_nedc                (DVDD_BLK + MIO32SEL + (halGLOBAL_MIO3_dvdd_test3 <<BUS_STARTBIT) + 0x0023)
#define DVDD_MIO2_sec_cnt_exp_nedc              (DVDD_BLK + MIO32SEL + (halGLOBAL_MIO2_dvdd_test2 <<BUS_STARTBIT) + 0x0023)
#define DVDD_MIO1_nw_to_edc                     (DVDD_BLK + MIO32SEL + (halGLOBAL_MIO1_dvdd_test1 <<BUS_STARTBIT) + 0x0023)
#define DVDD_MIO0_hd_row_jump_from_edc          (DVDD_BLK + MIO32SEL + (halGLOBAL_MIO0_dvdd_test0 <<BUS_STARTBIT) + 0x0023)

#define DVDD_MIO3_regfile_overflow              (DVDD_BLK + MIO32SEL + (halGLOBAL_MIO3_dvdd_test3 <<BUS_STARTBIT) + 0x0024)
#define DVDD_MIO2_i_buffi                       (DVDD_BLK + MIO32SEL + (halGLOBAL_MIO2_dvdd_test2 <<BUS_STARTBIT) + 0x0024)
#define DVDD_MIO1_enbuf                         (DVDD_BLK + MIO32SEL + (halGLOBAL_MIO1_dvdd_test1 <<BUS_STARTBIT) + 0x0024)
#define DVDD_MIO0_enecce                        (DVDD_BLK + MIO32SEL + (halGLOBAL_MIO0_dvdd_test0 <<BUS_STARTBIT) + 0x0024)

#define DVDD_MIO3_pseudo_pib_start_for_pi       (DVDD_BLK + MIO32SEL + (halGLOBAL_MIO3_dvdd_test3 <<BUS_STARTBIT) + 0x0025)
#define DVDD_MIO2_cs_of_pi2                     (DVDD_BLK + MIO32SEL + (halGLOBAL_MIO2_dvdd_test2 <<BUS_STARTBIT) + 0x0025)
#define DVDD_MIO1_cs_of_pi1                     (DVDD_BLK + MIO32SEL + (halGLOBAL_MIO1_dvdd_test1 <<BUS_STARTBIT) + 0x0025)
#define DVDD_MIO0_cs_of_pi0                     (DVDD_BLK + MIO32SEL + (halGLOBAL_MIO0_dvdd_test0 <<BUS_STARTBIT) + 0x0025)

#define DVDD_MIO3_pi_reset_from_pi_d            (DVDD_BLK + MIO32SEL + (halGLOBAL_MIO3_dvdd_test3 <<BUS_STARTBIT) + 0x0026)
#define DVDD_MIO2_data_en_ib                    (DVDD_BLK + MIO32SEL + (halGLOBAL_MIO2_dvdd_test2 <<BUS_STARTBIT) + 0x0026)
#define DVDD_MIO1_pseudo_pib_start_for_pi       (DVDD_BLK + MIO32SEL + (halGLOBAL_MIO1_dvdd_test1 <<BUS_STARTBIT) + 0x0026)
#define DVDD_MIO0_data_prepared                 (DVDD_BLK + MIO32SEL + (halGLOBAL_MIO0_dvdd_test0 <<BUS_STARTBIT) + 0x0026)

#define DVDD_MIO3_pi_reset_from_pi_a            (DVDD_BLK + MIO32SEL + (halGLOBAL_MIO3_dvdd_test3 <<BUS_STARTBIT) + 0x0027)
#define DVDD_MIO2_recc_start                    (DVDD_BLK + MIO32SEL + (halGLOBAL_MIO2_dvdd_test2 <<BUS_STARTBIT) + 0x0027)
#define DVDD_MIO1_recc_is_ing                   (DVDD_BLK + MIO32SEL + (halGLOBAL_MIO1_dvdd_test1 <<BUS_STARTBIT) + 0x0027)
#define DVDD_MIO0_po_done                       (DVDD_BLK + MIO32SEL + (halGLOBAL_MIO0_dvdd_test0 <<BUS_STARTBIT) + 0x0027)

#define DVDD_MIO3_pi_reset_from_pi_b            (DVDD_BLK + MIO32SEL + (halGLOBAL_MIO3_dvdd_test3 <<BUS_STARTBIT) + 0x0028)
#define DVDD_MIO2_pseudo_pib_start_for_po       (DVDD_BLK + MIO32SEL + (halGLOBAL_MIO2_dvdd_test2 <<BUS_STARTBIT) + 0x0028)
#define DVDD_MIO1_row0                          (DVDD_BLK + MIO32SEL + (halGLOBAL_MIO1_dvdd_test1 <<BUS_STARTBIT) + 0x0028)
#define DVDD_MIO0_last_blk                      (DVDD_BLK + MIO32SEL + (halGLOBAL_MIO0_dvdd_test0 <<BUS_STARTBIT) + 0x0028)

#define DVDD_MIO3_start_decoding                (DVDD_BLK + MIO32SEL + (halGLOBAL_MIO3_dvdd_test3 <<BUS_STARTBIT) + 0x0029)
#define DVDD_MIO2_start_correcting              (DVDD_BLK + MIO32SEL + (halGLOBAL_MIO2_dvdd_test2 <<BUS_STARTBIT) + 0x0029)
#define DVDD_MIO1_po_reset                      (DVDD_BLK + MIO32SEL + (halGLOBAL_MIO1_dvdd_test1 <<BUS_STARTBIT) + 0x0029)
#define DVDD_MIO0_po_done_a                     (DVDD_BLK + MIO32SEL + (halGLOBAL_MIO0_dvdd_test0 <<BUS_STARTBIT) + 0x0029)

#define DVDD_MIO3_po_done                       (DVDD_BLK + MIO32SEL + (halGLOBAL_MIO3_dvdd_test3 <<BUS_STARTBIT) + 0x002A)
#define DVDD_MIO2_ecc_cnt2                      (DVDD_BLK + MIO32SEL + (halGLOBAL_MIO2_dvdd_test2 <<BUS_STARTBIT) + 0x002A)
#define DVDD_MIO1_ecc_cnt1                      (DVDD_BLK + MIO32SEL + (halGLOBAL_MIO1_dvdd_test1 <<BUS_STARTBIT) + 0x002A)
#define DVDD_MIO0_ecc_cnt0                      (DVDD_BLK + MIO32SEL + (halGLOBAL_MIO0_dvdd_test0 <<BUS_STARTBIT) + 0x002A)

#define DVDD_MIO3_pi_reset_from_pi_c            (DVDD_BLK + MIO32SEL + (halGLOBAL_MIO3_dvdd_test3 <<BUS_STARTBIT) + 0x002B)
#define DVDD_MIO2_ersr_init                     (DVDD_BLK + MIO32SEL + (halGLOBAL_MIO2_dvdd_test2 <<BUS_STARTBIT) + 0x002B)
#define DVDD_MIO1_ersr_we                       (DVDD_BLK + MIO32SEL + (halGLOBAL_MIO1_dvdd_test1 <<BUS_STARTBIT) + 0x002B)
#define DVDD_MIO0_start_correcting              (DVDD_BLK + MIO32SEL + (halGLOBAL_MIO0_dvdd_test0 <<BUS_STARTBIT) + 0x002B)

#define DVDD_MIO3_poedc_idle                    (DVDD_BLK + MIO32SEL + (halGLOBAL_MIO3_dvdd_test3 <<BUS_STARTBIT) + 0x002C)
#define DVDD_MIO2_nw_to_edc                     (DVDD_BLK + MIO32SEL + (halGLOBAL_MIO2_dvdd_test2 <<BUS_STARTBIT) + 0x002C)
#define DVDD_MIO1_edc_done_a                    (DVDD_BLK + MIO32SEL + (halGLOBAL_MIO1_dvdd_test1 <<BUS_STARTBIT) + 0x002C)
#define DVDD_MIO0_edc_reset                     (DVDD_BLK + MIO32SEL + (halGLOBAL_MIO0_dvdd_test0 <<BUS_STARTBIT) + 0x002C)

#define DVDD_MIO3_row0                          (DVDD_BLK + MIO32SEL + (halGLOBAL_MIO3_dvdd_test3 <<BUS_STARTBIT) + 0x002D)
#define DVDD_MIO2_row_completed                 (DVDD_BLK + MIO32SEL + (halGLOBAL_MIO2_dvdd_test2 <<BUS_STARTBIT) + 0x002D)
#define DVDD_MIO1_edc_done_b                    (DVDD_BLK + MIO32SEL + (halGLOBAL_MIO1_dvdd_test1 <<BUS_STARTBIT) + 0x002D)
#define DVDD_MIO0_bca_done                      (DVDD_BLK + MIO32SEL + (halGLOBAL_MIO0_dvdd_test0 <<BUS_STARTBIT) + 0x002D)

#define DVDD_MIO3_pseudo_pib_start_for_po       (DVDD_BLK + MIO32SEL + (halGLOBAL_MIO3_dvdd_test3 <<BUS_STARTBIT) + 0x002E)
#define DVDD_MIO2_cs_of_po_out2                 (DVDD_BLK + MIO32SEL + (halGLOBAL_MIO2_dvdd_test2 <<BUS_STARTBIT) + 0x002E)
#define DVDD_MIO1_cs_of_po_out1                 (DVDD_BLK + MIO32SEL + (halGLOBAL_MIO1_dvdd_test1 <<BUS_STARTBIT) + 0x002E)
#define DVDD_MIO0_cs_of_po_out0                 (DVDD_BLK + MIO32SEL + (halGLOBAL_MIO0_dvdd_test0 <<BUS_STARTBIT) + 0x002E)


/****************************************************************************
* MIO32 BUS DVDE BLOCK
****************************************************************************/
#define DVDE_MIO3_encoder_cmdval                         (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO3_dvde_test_mio3 <<BUS_STARTBIT) + 0x0000)
#define DVDE_MIO2_encoder_cmdack                         (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO2_dvde_test_mio2 <<BUS_STARTBIT) + 0x0000)
#define DVDE_MIO1_encoder_address1                       (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO1_dvde_test_mio1 <<BUS_STARTBIT) + 0x0000)
#define DVDE_MIO0_encoder_eop                            (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO0_dvde_test_mio0 <<BUS_STARTBIT) + 0x0000)

#define DVDE_MIO3_encoder_rspval                         (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO3_dvde_test_mio3 <<BUS_STARTBIT) + 0x0001)
#define DVDE_MIO2_encoder_rspack                         (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO2_dvde_test_mio2 <<BUS_STARTBIT) + 0x0001)
#define DVDE_MIO1_encoder_reop                           (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO1_dvde_test_mio1 <<BUS_STARTBIT) + 0x0001)
#define DVDE_MIO0_rsp_count0                             (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO0_dvde_test_mio0 <<BUS_STARTBIT) + 0x0001)

#define DVDE_MIO3_bf_state3                              (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO3_dvde_test_mio3 <<BUS_STARTBIT) + 0x0002)
#define DVDE_MIO2_bf_state2                              (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO2_dvde_test_mio2 <<BUS_STARTBIT) + 0x0002)
#define DVDE_MIO1_bf_state1                              (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO1_dvde_test_mio1 <<BUS_STARTBIT) + 0x0002)
#define DVDE_MIO0_bf_state0                              (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO0_dvde_test_mio0 <<BUS_STARTBIT) + 0x0002)

#define DVDE_MIO3_ec_req                                 (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO3_dvde_test_mio3 <<BUS_STARTBIT) + 0x0003)
#define DVDE_MIO2_bf_ack_ec                              (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO2_dvde_test_mio2 <<BUS_STARTBIT) + 0x0003)
#define DVDE_MIO1_bf_rwdval_ec                           (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO1_dvde_test_mio1 <<BUS_STARTBIT) + 0x0003)
#define DVDE_MIO0_bf_nxword                              (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO0_dvde_test_mio0 <<BUS_STARTBIT) + 0x0003)

#define DVDE_MIO3_wr_fifo_full                           (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO3_dvde_test_mio3 <<BUS_STARTBIT) + 0x0004)
#define DVDE_MIO2_wr_count2                              (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO2_dvde_test_mio2 <<BUS_STARTBIT) + 0x0004)
#define DVDE_MIO1_wr_count1                              (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO1_dvde_test_mio1 <<BUS_STARTBIT) + 0x0004)
#define DVDE_MIO0_wr_count0                              (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO0_dvde_test_mio0 <<BUS_STARTBIT) + 0x0004)

#define DVDE_MIO3_ec_req_state1                          (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO3_dvde_test_mio3 <<BUS_STARTBIT) + 0x0005)
#define DVDE_MIO2_ec_req_state0                          (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO2_dvde_test_mio2 <<BUS_STARTBIT) + 0x0005)
#define DVDE_MIO1_md_req_state1                          (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO1_dvde_test_mio1 <<BUS_STARTBIT) + 0x0005)
#define DVDE_MIO0_md_req_state0                          (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO0_dvde_test_mio0 <<BUS_STARTBIT) + 0x0005)

#define DVDE_MIO3_md_req                                 (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO3_dvde_test_mio3 <<BUS_STARTBIT) + 0x0006)
#define DVDE_MIO2_bf_ack_md                              (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO2_dvde_test_mio2 <<BUS_STARTBIT) + 0x0006)
#define DVDE_MIO1_md_addr1                               (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO1_dvde_test_mio1 <<BUS_STARTBIT) + 0x0006)
#define DVDE_MIO0_bf_rwdval_md                           (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO0_dvde_test_mio0 <<BUS_STARTBIT) + 0x0006)

#define DVDE_MIO3_ec_burst3                              (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO3_dvde_test_mio3 <<BUS_STARTBIT) + 0x0007)
#define DVDE_MIO2_ec_burst2                              (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO2_dvde_test_mio2 <<BUS_STARTBIT) + 0x0007)
#define DVDE_MIO1_ec_burst1                              (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO1_dvde_test_mio1 <<BUS_STARTBIT) + 0x0007)
#define DVDE_MIO0_ec_burst0                              (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO0_dvde_test_mio0 <<BUS_STARTBIT) + 0x0007)

#define DVDE_MIO3_md_burst3                              (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO3_dvde_test_mio3 <<BUS_STARTBIT) + 0x0008)
#define DVDE_MIO2_md_burst2                              (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO2_dvde_test_mio2 <<BUS_STARTBIT) + 0x0008)
#define DVDE_MIO1_md_burst1                              (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO1_dvde_test_mio1 <<BUS_STARTBIT) + 0x0008)
#define DVDE_MIO0_md_burst0                              (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO0_dvde_test_mio0 <<BUS_STARTBIT) + 0x0008)

#define DVDE_MIO3_l_ecc                                  (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO3_dvde_test_mio3 <<BUS_STARTBIT) + 0x0009)
#define DVDE_MIO2_l_burst2                               (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO2_dvde_test_mio2 <<BUS_STARTBIT) + 0x0009)
#define DVDE_MIO1_l_burst1                               (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO1_dvde_test_mio1 <<BUS_STARTBIT) + 0x0009)
#define DVDE_MIO0_l_burst0                               (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO0_dvde_test_mio0 <<BUS_STARTBIT) + 0x0009)

#define DVDE_MIO3_fradr1                                 (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO3_dvde_test_mio3 <<BUS_STARTBIT) + 0x000A)
#define DVDE_MIO2_fradr0                                 (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO2_dvde_test_mio2 <<BUS_STARTBIT) + 0x000A)
#define DVDE_MIO1_fwadr1                                 (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO1_dvde_test_mio1 <<BUS_STARTBIT) + 0x000A)
#define DVDE_MIO0_fwadr0                                 (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO0_dvde_test_mio0 <<BUS_STARTBIT) + 0x000A)

#define DVDE_MIO3_test_mio_ec_id3                        (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO3_dvde_test_mio3 <<BUS_STARTBIT) + 0x0040)
#define DVDE_MIO2_test_mio_ec_id2                        (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO2_dvde_test_mio2 <<BUS_STARTBIT) + 0x0040)
#define DVDE_MIO1_test_mio_ec_id1                        (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO1_dvde_test_mio1 <<BUS_STARTBIT) + 0x0040)
#define DVDE_MIO0_test_mio_ec_id0                        (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO0_dvde_test_mio0 <<BUS_STARTBIT) + 0x0040)

#define DVDE_MIO3_test_mio_ec_id7                        (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO3_dvde_test_mio3 <<BUS_STARTBIT) + 0x0041)
#define DVDE_MIO2_test_mio_ec_id6                        (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO2_dvde_test_mio2 <<BUS_STARTBIT) + 0x0041)
#define DVDE_MIO1_test_mio_ec_id5                        (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO1_dvde_test_mio1 <<BUS_STARTBIT) + 0x0041)
#define DVDE_MIO0_test_mio_ec_id4                        (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO0_dvde_test_mio0 <<BUS_STARTBIT) + 0x0041)

#define DVDE_MIO3_test_mio_ec_id11                       (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO3_dvde_test_mio3 <<BUS_STARTBIT) + 0x0042)
#define DVDE_MIO2_test_mio_ec_id10                       (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO2_dvde_test_mio2 <<BUS_STARTBIT) + 0x0042)
#define DVDE_MIO1_test_mio_ec_id9                        (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO1_dvde_test_mio1 <<BUS_STARTBIT) + 0x0042)
#define DVDE_MIO0_test_mio_ec_id8                        (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO0_dvde_test_mio0 <<BUS_STARTBIT) + 0x0042)

#define DVDE_MIO3_test_mio_ec_id15                       (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO3_dvde_test_mio3 <<BUS_STARTBIT) + 0x0043)
#define DVDE_MIO2_test_mio_ec_id14                       (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO2_dvde_test_mio2 <<BUS_STARTBIT) + 0x0043)
#define DVDE_MIO1_test_mio_ec_id13                       (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO1_dvde_test_mio1 <<BUS_STARTBIT) + 0x0043)
#define DVDE_MIO0_test_mio_ec_id12                       (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO0_dvde_test_mio0 <<BUS_STARTBIT) + 0x0043)

#define DVDE_MIO3_test_mio_ec_im_cpr3                    (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO3_dvde_test_mio3 <<BUS_STARTBIT) + 0x0044)
#define DVDE_MIO2_test_mio_ec_im_cpr2                    (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO2_dvde_test_mio2 <<BUS_STARTBIT) + 0x0044)
#define DVDE_MIO1_test_mio_ec_im_cpr1                    (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO1_dvde_test_mio1 <<BUS_STARTBIT) + 0x0044)
#define DVDE_MIO0_test_mio_ec_im_cpr0                    (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO0_dvde_test_mio0 <<BUS_STARTBIT) + 0x0044)

#define DVDE_MIO3_test_mio_ec_im_cpr7                    (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO3_dvde_test_mio3 <<BUS_STARTBIT) + 0x0045)
#define DVDE_MIO2_test_mio_ec_im_cpr6                    (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO2_dvde_test_mio2 <<BUS_STARTBIT) + 0x0045)
#define DVDE_MIO1_test_mio_ec_im_cpr5                    (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO1_dvde_test_mio1 <<BUS_STARTBIT) + 0x0045)
#define DVDE_MIO0_test_mio_ec_im_cpr4                    (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO0_dvde_test_mio0 <<BUS_STARTBIT) + 0x0045)

#define DVDE_MIO3_test_mio_ec_im_cpr11                   (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO3_dvde_test_mio3 <<BUS_STARTBIT) + 0x0046)
#define DVDE_MIO2_test_mio_ec_im_cpr10                   (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO2_dvde_test_mio2 <<BUS_STARTBIT) + 0x0046)
#define DVDE_MIO1_test_mio_ec_im_cpr9                    (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO1_dvde_test_mio1 <<BUS_STARTBIT) + 0x0046)
#define DVDE_MIO0_test_mio_ec_im_cpr8                    (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO0_dvde_test_mio0 <<BUS_STARTBIT) + 0x0046)

#define DVDE_MIO3_test_mio_ec_im_cpr15                   (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO3_dvde_test_mio3 <<BUS_STARTBIT) + 0x0047)
#define DVDE_MIO2_test_mio_ec_im_cpr14                   (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO2_dvde_test_mio2 <<BUS_STARTBIT) + 0x0047)
#define DVDE_MIO1_test_mio_ec_im_cpr13                   (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO1_dvde_test_mio1 <<BUS_STARTBIT) + 0x0047)
#define DVDE_MIO0_test_mio_ec_im_cpr12                   (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO0_dvde_test_mio0 <<BUS_STARTBIT) + 0x0047)

#define DVDE_MIO3_test_mio_ec_im_edc3                    (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO3_dvde_test_mio3 <<BUS_STARTBIT) + 0x0048)
#define DVDE_MIO2_test_mio_ec_im_edc2                    (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO2_dvde_test_mio2 <<BUS_STARTBIT) + 0x0048)
#define DVDE_MIO1_test_mio_ec_im_edc1                    (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO1_dvde_test_mio1 <<BUS_STARTBIT) + 0x0048)
#define DVDE_MIO0_test_mio_ec_im_edc0                    (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO0_dvde_test_mio0 <<BUS_STARTBIT) + 0x0048)

#define DVDE_MIO3_test_mio_ec_im_edc7                    (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO3_dvde_test_mio3 <<BUS_STARTBIT) + 0x0049)
#define DVDE_MIO2_test_mio_ec_im_edc6                    (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO2_dvde_test_mio2 <<BUS_STARTBIT) + 0x0049)
#define DVDE_MIO1_test_mio_ec_im_edc5                    (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO1_dvde_test_mio1 <<BUS_STARTBIT) + 0x0049)
#define DVDE_MIO0_test_mio_ec_im_edc4                    (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO0_dvde_test_mio0 <<BUS_STARTBIT) + 0x0049)

#define DVDE_MIO3_test_mio_ec_im_edc11                   (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO3_dvde_test_mio3 <<BUS_STARTBIT) + 0x004A)
#define DVDE_MIO2_test_mio_ec_im_edc10                   (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO2_dvde_test_mio2 <<BUS_STARTBIT) + 0x004A)
#define DVDE_MIO1_test_mio_ec_im_edc9                    (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO1_dvde_test_mio1 <<BUS_STARTBIT) + 0x004A)
#define DVDE_MIO0_test_mio_ec_im_edc8                    (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO0_dvde_test_mio0 <<BUS_STARTBIT) + 0x004A)

#define DVDE_MIO3_test_mio_ec_im_edc15                   (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO3_dvde_test_mio3 <<BUS_STARTBIT) + 0x004B)
#define DVDE_MIO2_test_mio_ec_im_edc14                   (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO2_dvde_test_mio2 <<BUS_STARTBIT) + 0x004B)
#define DVDE_MIO1_test_mio_ec_im_edc13                   (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO1_dvde_test_mio1 <<BUS_STARTBIT) + 0x004B)
#define DVDE_MIO0_test_mio_ec_im_edc12                   (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO0_dvde_test_mio0 <<BUS_STARTBIT) + 0x004B)

#define DVDE_MIO3_test_mio_ec_pi3                        (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO3_dvde_test_mio3 <<BUS_STARTBIT) + 0x004C)
#define DVDE_MIO2_test_mio_ec_pi2                        (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO2_dvde_test_mio2 <<BUS_STARTBIT) + 0x004C)
#define DVDE_MIO1_test_mio_ec_pi1                        (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO1_dvde_test_mio1 <<BUS_STARTBIT) + 0x004C)
#define DVDE_MIO0_test_mio_ec_pi0                        (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO0_dvde_test_mio0 <<BUS_STARTBIT) + 0x004C)

#define DVDE_MIO3_test_mio_ec_pi7                        (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO3_dvde_test_mio3 <<BUS_STARTBIT) + 0x004D)
#define DVDE_MIO2_test_mio_ec_pi6                        (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO2_dvde_test_mio2 <<BUS_STARTBIT) + 0x004D)
#define DVDE_MIO1_test_mio_ec_pi5                        (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO1_dvde_test_mio1 <<BUS_STARTBIT) + 0x004D)
#define DVDE_MIO0_test_mio_ec_pi4                        (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO0_dvde_test_mio0 <<BUS_STARTBIT) + 0x004D)

#define DVDE_MIO3_test_mio_ec_pi11                       (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO3_dvde_test_mio3 <<BUS_STARTBIT) + 0x004E)
#define DVDE_MIO2_test_mio_ec_pi10                       (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO2_dvde_test_mio2 <<BUS_STARTBIT) + 0x004E)
#define DVDE_MIO1_test_mio_ec_pi9                        (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO1_dvde_test_mio1 <<BUS_STARTBIT) + 0x004E)
#define DVDE_MIO0_test_mio_ec_pi8                        (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO0_dvde_test_mio0 <<BUS_STARTBIT) + 0x004E)

#define DVDE_MIO3_test_mio_ec_pi15                       (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO3_dvde_test_mio3 <<BUS_STARTBIT) + 0x004F)
#define DVDE_MIO2_test_mio_ec_pi14                       (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO2_dvde_test_mio2 <<BUS_STARTBIT) + 0x004F)
#define DVDE_MIO1_test_mio_ec_pi13                       (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO1_dvde_test_mio1 <<BUS_STARTBIT) + 0x004F)
#define DVDE_MIO0_test_mio_ec_pi12                       (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO0_dvde_test_mio0 <<BUS_STARTBIT) + 0x004F)

#define DVDE_MIO3_test_mio_ec_po3                        (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO3_dvde_test_mio3 <<BUS_STARTBIT) + 0x0050)
#define DVDE_MIO2_test_mio_ec_po2                        (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO2_dvde_test_mio2 <<BUS_STARTBIT) + 0x0050)
#define DVDE_MIO1_test_mio_ec_po1                        (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO1_dvde_test_mio1 <<BUS_STARTBIT) + 0x0050)
#define DVDE_MIO0_test_mio_ec_po0                        (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO0_dvde_test_mio0 <<BUS_STARTBIT) + 0x0050)

#define DVDE_MIO3_test_mio_ec_po7                        (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO3_dvde_test_mio3 <<BUS_STARTBIT) + 0x0051)
#define DVDE_MIO2_test_mio_ec_po6                        (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO2_dvde_test_mio2 <<BUS_STARTBIT) + 0x0051)
#define DVDE_MIO1_test_mio_ec_po5                        (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO1_dvde_test_mio1 <<BUS_STARTBIT) + 0x0051)
#define DVDE_MIO0_test_mio_ec_po4                        (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO0_dvde_test_mio0 <<BUS_STARTBIT) + 0x0051)

#define DVDE_MIO3_test_mio_ec_po11                       (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO3_dvde_test_mio3 <<BUS_STARTBIT) + 0x0052)
#define DVDE_MIO2_test_mio_ec_po10                       (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO2_dvde_test_mio2 <<BUS_STARTBIT) + 0x0052)
#define DVDE_MIO1_test_mio_ec_po9                        (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO1_dvde_test_mio1 <<BUS_STARTBIT) + 0x0052)
#define DVDE_MIO0_test_mio_ec_po8                        (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO0_dvde_test_mio0 <<BUS_STARTBIT) + 0x0052)

#define DVDE_MIO3_test_mio_ec_po15                       (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO3_dvde_test_mio3 <<BUS_STARTBIT) + 0x0053)
#define DVDE_MIO2_test_mio_ec_po14                       (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO2_dvde_test_mio2 <<BUS_STARTBIT) + 0x0053)
#define DVDE_MIO1_test_mio_ec_po13                       (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO1_dvde_test_mio1 <<BUS_STARTBIT) + 0x0053)
#define DVDE_MIO0_test_mio_ec_po12                       (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO0_dvde_test_mio0 <<BUS_STARTBIT) + 0x0053)

#define DVDE_MIO3_test_mio_ec_memh3                      (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO3_dvde_test_mio3 <<BUS_STARTBIT) + 0x0054)
#define DVDE_MIO2_test_mio_ec_memh2                      (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO2_dvde_test_mio2 <<BUS_STARTBIT) + 0x0054)
#define DVDE_MIO1_test_mio_ec_memh1                      (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO1_dvde_test_mio1 <<BUS_STARTBIT) + 0x0054)
#define DVDE_MIO0_test_mio_ec_memh0                      (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO0_dvde_test_mio0 <<BUS_STARTBIT) + 0x0054)

#define DVDE_MIO3_test_mio_ec_memh7                      (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO3_dvde_test_mio3 <<BUS_STARTBIT) + 0x0055)
#define DVDE_MIO2_test_mio_ec_memh6                      (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO2_dvde_test_mio2 <<BUS_STARTBIT) + 0x0055)
#define DVDE_MIO1_test_mio_ec_memh5                      (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO1_dvde_test_mio1 <<BUS_STARTBIT) + 0x0055)
#define DVDE_MIO0_test_mio_ec_memh4                      (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO0_dvde_test_mio0 <<BUS_STARTBIT) + 0x0055)

#define DVDE_MIO3_test_mio_ec_memh11                     (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO3_dvde_test_mio3 <<BUS_STARTBIT) + 0x0056)
#define DVDE_MIO2_test_mio_ec_memh10                     (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO2_dvde_test_mio2 <<BUS_STARTBIT) + 0x0056)
#define DVDE_MIO1_test_mio_ec_memh9                      (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO1_dvde_test_mio1 <<BUS_STARTBIT) + 0x0056)
#define DVDE_MIO0_test_mio_ec_memh8                      (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO0_dvde_test_mio0 <<BUS_STARTBIT) + 0x0056)

#define DVDE_MIO3_test_mio_ec_memh15                     (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO3_dvde_test_mio3 <<BUS_STARTBIT) + 0x0057)
#define DVDE_MIO2_test_mio_ec_memh14                     (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO2_dvde_test_mio2 <<BUS_STARTBIT) + 0x0057)
#define DVDE_MIO1_test_mio_ec_memh13                     (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO1_dvde_test_mio1 <<BUS_STARTBIT) + 0x0057)
#define DVDE_MIO0_test_mio_ec_memh12                     (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO0_dvde_test_mio0 <<BUS_STARTBIT) + 0x0057)

#define DVDE_MIO3_test_mio_ec_meme3                      (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO3_dvde_test_mio3 <<BUS_STARTBIT) + 0x0058)
#define DVDE_MIO2_test_mio_ec_meme2                      (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO2_dvde_test_mio2 <<BUS_STARTBIT) + 0x0058)
#define DVDE_MIO1_test_mio_ec_meme1                      (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO1_dvde_test_mio1 <<BUS_STARTBIT) + 0x0058)
#define DVDE_MIO0_test_mio_ec_meme0                      (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO0_dvde_test_mio0 <<BUS_STARTBIT) + 0x0058)

#define DVDE_MIO3_test_mio_ec_meme7                      (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO3_dvde_test_mio3 <<BUS_STARTBIT) + 0x0059)
#define DVDE_MIO2_test_mio_ec_meme6                      (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO2_dvde_test_mio2 <<BUS_STARTBIT) + 0x0059)
#define DVDE_MIO1_test_mio_ec_meme5                      (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO1_dvde_test_mio1 <<BUS_STARTBIT) + 0x0059)
#define DVDE_MIO0_test_mio_ec_meme4                      (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO0_dvde_test_mio0 <<BUS_STARTBIT) + 0x0059)

#define DVDE_MIO3_test_mio_ec_meme11                     (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO3_dvde_test_mio3 <<BUS_STARTBIT) + 0x005A)
#define DVDE_MIO2_test_mio_ec_meme10                     (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO2_dvde_test_mio2 <<BUS_STARTBIT) + 0x005A)
#define DVDE_MIO1_test_mio_ec_meme9                      (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO1_dvde_test_mio1 <<BUS_STARTBIT) + 0x005A)
#define DVDE_MIO0_test_mio_ec_meme8                      (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO0_dvde_test_mio0 <<BUS_STARTBIT) + 0x005A)

#define DVDE_MIO3_test_mio_ec_meme15                     (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO3_dvde_test_mio3 <<BUS_STARTBIT) + 0x005B)
#define DVDE_MIO2_test_mio_ec_meme14                     (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO2_dvde_test_mio2 <<BUS_STARTBIT) + 0x005B)
#define DVDE_MIO1_test_mio_ec_meme13                     (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO1_dvde_test_mio1 <<BUS_STARTBIT) + 0x005B)
#define DVDE_MIO0_test_mio_ec_meme12                     (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO0_dvde_test_mio0 <<BUS_STARTBIT) + 0x005B)

#define DVDE_MIO3_test_mio_ec_sram1283                   (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO3_dvde_test_mio3 <<BUS_STARTBIT) + 0x005C)
#define DVDE_MIO2_test_mio_ec_sram1282                   (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO2_dvde_test_mio2 <<BUS_STARTBIT) + 0x005C)
#define DVDE_MIO1_test_mio_ec_sram1281                   (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO1_dvde_test_mio1 <<BUS_STARTBIT) + 0x005C)
#define DVDE_MIO0_test_mio_ec_sram1280                   (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO0_dvde_test_mio0 <<BUS_STARTBIT) + 0x005C)

#define DVDE_MIO3_test_mio_ec_sram1287                   (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO3_dvde_test_mio3 <<BUS_STARTBIT) + 0x005D)
#define DVDE_MIO2_test_mio_ec_sram1286                   (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO2_dvde_test_mio2 <<BUS_STARTBIT) + 0x005D)
#define DVDE_MIO1_test_mio_ec_sram1285                   (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO1_dvde_test_mio1 <<BUS_STARTBIT) + 0x005D)
#define DVDE_MIO0_test_mio_ec_sram1284                   (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO0_dvde_test_mio0 <<BUS_STARTBIT) + 0x005D)

#define DVDE_MIO3_test_mio_ec_sram12811                  (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO3_dvde_test_mio3 <<BUS_STARTBIT) + 0x005E)
#define DVDE_MIO2_test_mio_ec_sram12810                  (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO2_dvde_test_mio2 <<BUS_STARTBIT) + 0x005E)
#define DVDE_MIO1_test_mio_ec_sram1289                   (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO1_dvde_test_mio1 <<BUS_STARTBIT) + 0x005E)
#define DVDE_MIO0_test_mio_ec_sram1288                   (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO0_dvde_test_mio0 <<BUS_STARTBIT) + 0x005E)

#define DVDE_MIO3_test_mio_ec_sram12815                  (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO3_dvde_test_mio3 <<BUS_STARTBIT) + 0x005F)
#define DVDE_MIO2_test_mio_ec_sram12814                  (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO2_dvde_test_mio2 <<BUS_STARTBIT) + 0x005F)
#define DVDE_MIO1_test_mio_ec_sram12813                  (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO1_dvde_test_mio1 <<BUS_STARTBIT) + 0x005F)
#define DVDE_MIO0_test_mio_ec_sram12812                  (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO0_dvde_test_mio0 <<BUS_STARTBIT) + 0x005F)

#define DVDE_MIO3_next_mlut_state_dvdeval1               (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO3_dvde_test_mio3 <<BUS_STARTBIT) + 0x0080)
#define DVDE_MIO2_next_mlut_state_dvdeval0               (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO2_dvde_test_mio2 <<BUS_STARTBIT) + 0x0080)
#define DVDE_MIO1_get_databyte_dvdeval1                  (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO1_dvde_test_mio1 <<BUS_STARTBIT) + 0x0080)
#define DVDE_MIO0_get_databyte_dvdeval0                  (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO0_dvde_test_mio0 <<BUS_STARTBIT) + 0x0080)

#define DVDE_MIO3_frame_cnt_eval3                        (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO3_dvde_test_mio3 <<BUS_STARTBIT) + 0x0081)
#define DVDE_MIO2_frame_cnt_eval2                        (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO2_dvde_test_mio2 <<BUS_STARTBIT) + 0x0081)
#define DVDE_MIO1_frame_cnt_eval1                        (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO1_dvde_test_mio1 <<BUS_STARTBIT) + 0x0081)
#define DVDE_MIO0_frame_cnt_eval0                        (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO0_dvde_test_mio0 <<BUS_STARTBIT) + 0x0081)

#define DVDE_MIO3_frame_cnt_eval4                        (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO3_dvde_test_mio3 <<BUS_STARTBIT) + 0x0082)
#define DVDE_MIO2_frame_cnt_eval3                        (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO2_dvde_test_mio2 <<BUS_STARTBIT) + 0x0082)
#define DVDE_MIO1_recording_block_done_eval              (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO1_dvde_test_mio1 <<BUS_STARTBIT) + 0x0082)
#define DVDE_MIO0_frame_done_dvdeval                     (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO0_dvde_test_mio0 <<BUS_STARTBIT) + 0x0082)

#define DVDE_MIO3_frame_cnt_pro3                         (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO3_dvde_test_mio3 <<BUS_STARTBIT) + 0x0083)
#define DVDE_MIO2_frame_cnt_pro2                         (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO2_dvde_test_mio2 <<BUS_STARTBIT) + 0x0083)
#define DVDE_MIO1_frame_cnt_pro1                         (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO1_dvde_test_mio1 <<BUS_STARTBIT) + 0x0083)
#define DVDE_MIO0_frame_cnt_pro0                         (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO0_dvde_test_mio0 <<BUS_STARTBIT) + 0x0083)

#define DVDE_MIO3_frame_cnt_pro4                         (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO3_dvde_test_mio3 <<BUS_STARTBIT) + 0x0084)
#define DVDE_MIO2_frame_cnt_pro3                         (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO2_dvde_test_mio2 <<BUS_STARTBIT) + 0x0084)
#define DVDE_MIO1_recording_block_done_pro               (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO1_dvde_test_mio1 <<BUS_STARTBIT) + 0x0084)
#define DVDE_MIO0_frame_done_dvdproc                     (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO0_dvde_test_mio0 <<BUS_STARTBIT) + 0x0084)

#define DVDE_MIO3_no_record_block_eval3                  (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO3_dvde_test_mio3 <<BUS_STARTBIT) + 0x0085)
#define DVDE_MIO2_no_record_block_eval2                  (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO2_dvde_test_mio2 <<BUS_STARTBIT) + 0x0085)
#define DVDE_MIO1_no_record_block_eval1                  (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO1_dvde_test_mio1 <<BUS_STARTBIT) + 0x0085)
#define DVDE_MIO0_no_record_block_eval0                  (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO0_dvde_test_mio0 <<BUS_STARTBIT) + 0x0085)

#define DVDE_MIO3_no_record_block_pro3                   (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO3_dvde_test_mio3 <<BUS_STARTBIT) + 0x0086)
#define DVDE_MIO2_no_record_block_pro2                   (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO2_dvde_test_mio2 <<BUS_STARTBIT) + 0x0086)
#define DVDE_MIO1_no_record_block_pro1                   (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO1_dvde_test_mio1 <<BUS_STARTBIT) + 0x0086)
#define DVDE_MIO0_no_record_block_pro0                   (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO0_dvde_test_mio0 <<BUS_STARTBIT) + 0x0086)

#define DVDE_MIO3_byte_cnt_eval_inc                      (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO3_dvde_test_mio3 <<BUS_STARTBIT) + 0x0087)
#define DVDE_MIO1_last_byte_eval                         (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO1_dvde_test_mio1 <<BUS_STARTBIT) + 0x0087)
#define DVDE_MIO0_byte_cnt_eval0                         (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO0_dvde_test_mio0 <<BUS_STARTBIT) + 0x0087)

#define DVDE_MIO3_byte_cnt_eval_inc_a                    (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO3_dvde_test_mio3 <<BUS_STARTBIT) + 0x0088)
#define DVDE_MIO2_byte_cnt_eval4                         (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO2_dvde_test_mio2 <<BUS_STARTBIT) + 0x0088)
#define DVDE_MIO1_byte_cnt_eval3                         (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO1_dvde_test_mio1 <<BUS_STARTBIT) + 0x0088)
#define DVDE_MIO0_byte_cnt_eval2                         (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO0_dvde_test_mio0 <<BUS_STARTBIT) + 0x0088)

#define DVDE_MIO3_byte_cnt_eval_inc_b                    (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO3_dvde_test_mio3 <<BUS_STARTBIT) + 0x0089)
#define DVDE_MIO2_byte_cnt_eval6                         (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO2_dvde_test_mio2 <<BUS_STARTBIT) + 0x0089)
#define DVDE_MIO1_byte_cnt_eval5                         (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO1_dvde_test_mio1 <<BUS_STARTBIT) + 0x0089)
#define DVDE_MIO0_byte_cnt_eval4                         (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO0_dvde_test_mio0 <<BUS_STARTBIT) + 0x0089)

#define DVDE_MIO3_byte_cnt_pro_inc                       (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO3_dvde_test_mio3 <<BUS_STARTBIT) + 0x008A)
#define DVDE_MIO1_last_byte_pro                          (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO1_dvde_test_mio1 <<BUS_STARTBIT) + 0x008A)
#define DVDE_MIO0_byte_cnt_pro0                          (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO0_dvde_test_mio0 <<BUS_STARTBIT) + 0x008A)

#define DVDE_MIO3_byte_cnt_pro_inc_a                     (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO3_dvde_test_mio3 <<BUS_STARTBIT) + 0x008B)
#define DVDE_MIO2_byte_cnt_pro4                          (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO2_dvde_test_mio2 <<BUS_STARTBIT) + 0x008B)
#define DVDE_MIO1_byte_cnt_pro3                          (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO1_dvde_test_mio1 <<BUS_STARTBIT) + 0x008B)
#define DVDE_MIO0_byte_cnt_pro2                          (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO0_dvde_test_mio0 <<BUS_STARTBIT) + 0x008B)

#define DVDE_MIO3_byte_cnt_pro_inc_b                     (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO3_dvde_test_mio3 <<BUS_STARTBIT) + 0x008C)
#define DVDE_MIO2_byte_cnt_pro6                          (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO2_dvde_test_mio2 <<BUS_STARTBIT) + 0x008C)
#define DVDE_MIO1_byte_cnt_pro5                          (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO1_dvde_test_mio1 <<BUS_STARTBIT) + 0x008C)
#define DVDE_MIO0_byte_cnt_pro4                          (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO0_dvde_test_mio0 <<BUS_STARTBIT) + 0x008C)

#define DVDE_MIO3_level_1_req_1                          (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO3_dvde_test_mio3 <<BUS_STARTBIT) + 0x008D)
#define DVDE_MIO2_level_2_req_1                          (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO2_dvde_test_mio2 <<BUS_STARTBIT) + 0x008D)
#define DVDE_MIO1_level_3_req_1                          (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO1_dvde_test_mio1 <<BUS_STARTBIT) + 0x008D)
#define DVDE_MIO0_burst_done_wclk                        (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO0_dvde_test_mio0 <<BUS_STARTBIT) + 0x008D)

#define DVDE_MIO3_level_1_req_2                          (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO3_dvde_test_mio3 <<BUS_STARTBIT) + 0x008E)
#define DVDE_MIO2_level_2_req_2                          (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO2_dvde_test_mio2 <<BUS_STARTBIT) + 0x008E)
#define DVDE_MIO1_level_3_req_3                          (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO1_dvde_test_mio1 <<BUS_STARTBIT) + 0x008E)
#define DVDE_MIO0_burst_done_wclk_a                      (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO0_dvde_test_mio0 <<BUS_STARTBIT) + 0x008E)

#define DVDE_MIO3_wrclkd4                                (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO3_dvde_test_mio3 <<BUS_STARTBIT) + 0x008F)
#define DVDE_MIO2_set_level_1_bypass_wclk                (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO2_dvde_test_mio2 <<BUS_STARTBIT) + 0x008F)
#define DVDE_MIO3_wrclkd4_a                              (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO3_dvde_test_mio3 <<BUS_STARTBIT) + 0x0090)
#define DVDE_MIO2_set_level_2_bypass_wclk                (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO2_dvde_test_mio2 <<BUS_STARTBIT) + 0x0090)
#define DVDE_MIO3_wrclkd4_b                              (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO3_dvde_test_mio3 <<BUS_STARTBIT) + 0x0091)
#define DVDE_MIO2_set_level_3_bypass_wclk                (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO2_dvde_test_mio2 <<BUS_STARTBIT) + 0x0091)
#define DVDE_MIO3_wrclkd4_c                              (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO3_dvde_test_mio3 <<BUS_STARTBIT) + 0x0092)
#define DVDE_MIO2_set_level_4_bypass_wclk                (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO2_dvde_test_mio2 <<BUS_STARTBIT) + 0x0092)
#define DVDE_MIO3_wrclkd4_d                              (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO3_dvde_test_mio3 <<BUS_STARTBIT) + 0x0093)
#define DVDE_MIO2_set_level_5_bypass_wclk                (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO2_dvde_test_mio2 <<BUS_STARTBIT) + 0x0093)
#define DVDE_MIO3_wrclkd4_e                              (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO3_dvde_test_mio3 <<BUS_STARTBIT) + 0x0094)
#define DVDE_MIO2_set_level_6_bypass_wclk                (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO2_dvde_test_mio2 <<BUS_STARTBIT) + 0x0094)
#define DVDE_MIO3_wrclkd4_f                              (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO3_dvde_test_mio3 <<BUS_STARTBIT) + 0x0095)
#define DVDE_MIO2_set_level_7_bypass_wclk                (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO2_dvde_test_mio2 <<BUS_STARTBIT) + 0x0095)
#define DVDE_MIO3_wrclkd4_g                              (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO3_dvde_test_mio3 <<BUS_STARTBIT) + 0x0096)
#define DVDE_MIO2_set_level_8_bypass_wclk                (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO2_dvde_test_mio2 <<BUS_STARTBIT) + 0x0096)

#define DVDE_MIO3_bit_match                              (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO3_dvde_test_mio3 <<BUS_STARTBIT) + 0x0097)
#define DVDE_MIO2_frame_match                            (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO2_dvde_test_mio2 <<BUS_STARTBIT) + 0x0097)
#define DVDE_MIO1_sector_match                           (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO1_dvde_test_mio1 <<BUS_STARTBIT) + 0x0097)
#define DVDE_MIO0_address_match                          (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO0_dvde_test_mio0 <<BUS_STARTBIT) + 0x0097)

#define DVDE_MIO3_ecc_data_rdy                           (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO3_dvde_test_mio3 <<BUS_STARTBIT) + 0x0098)
#define DVDE_MIO2_cur_state_dram_req2                    (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO2_dvde_test_mio2 <<BUS_STARTBIT) + 0x0098)
#define DVDE_MIO1_cur_state_dram_req1                    (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO1_dvde_test_mio1 <<BUS_STARTBIT) + 0x0098)
#define DVDE_MIO0_cur_state_dram_req0                    (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO0_dvde_test_mio0 <<BUS_STARTBIT) + 0x0098)

#define DVDE_MIO3_bf_ack_md                              (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO3_dvde_test_mio3 <<BUS_STARTBIT) + 0x0099)
#define DVDE_MIO2_cur_state_dram_add2                    (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO2_dvde_test_mio2 <<BUS_STARTBIT) + 0x0099)
#define DVDE_MIO1_cur_state_dram_add1                    (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO1_dvde_test_mio1 <<BUS_STARTBIT) + 0x0099)
#define DVDE_MIO0_cur_state_dram_add0                    (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO0_dvde_test_mio0 <<BUS_STARTBIT) + 0x0099)

#define DVDE_MIO3_md_burst3_a                            (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO3_dvde_test_mio3 <<BUS_STARTBIT) + 0x009A)
#define DVDE_MIO2_md_burst2_a                            (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO2_dvde_test_mio2 <<BUS_STARTBIT) + 0x009A)
#define DVDE_MIO1_md_burst1_a                            (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO1_dvde_test_mio1 <<BUS_STARTBIT) + 0x009A)
#define DVDE_MIO0_md_burst0_a                            (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO0_dvde_test_mio0 <<BUS_STARTBIT) + 0x009A)

#define DVDE_MIO3_cur_level_st2                          (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO3_dvde_test_mio3 <<BUS_STARTBIT) + 0x009B)
#define DVDE_MIO2_cur_level_st1                          (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO2_dvde_test_mio2 <<BUS_STARTBIT) + 0x009B)
#define DVDE_MIO1_cur_level_st0                          (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO1_dvde_test_mio1 <<BUS_STARTBIT) + 0x009B)
#define DVDE_MIO0_first_pass                             (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO0_dvde_test_mio0 <<BUS_STARTBIT) + 0x009B)

#define DVDE_MIO3_mod_cena_ram0                          (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO3_dvde_test_mio3 <<BUS_STARTBIT) + 0x009C)
#define DVDE_MIO2_mod_sram_wr_add2                       (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO2_dvde_test_mio2 <<BUS_STARTBIT) + 0x009C)
#define DVDE_MIO1_mod_sram_wr_add1                       (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO1_dvde_test_mio1 <<BUS_STARTBIT) + 0x009C)
#define DVDE_MIO0_mod_sram_wr_add0                       (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO0_dvde_test_mio0 <<BUS_STARTBIT) + 0x009C)

#define DVDE_MIO3_mod_cena_ram1                          (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO3_dvde_test_mio3 <<BUS_STARTBIT) + 0x009D)
#define DVDE_MIO2_mod_sram_wr_add2_a                     (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO2_dvde_test_mio2 <<BUS_STARTBIT) + 0x009D)
#define DVDE_MIO1_mod_sram_wr_add1_a                     (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO1_dvde_test_mio1 <<BUS_STARTBIT) + 0x009D)
#define DVDE_MIO0_mod_sram_wr_add0_a                     (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO0_dvde_test_mio0 <<BUS_STARTBIT) + 0x009D)

#define DVDE_MIO3_dvdeval_state3                         (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO3_dvde_test_mio3 <<BUS_STARTBIT) + 0x00A0)
#define DVDE_MIO2_dvdeval_state2                         (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO2_dvde_test_mio2 <<BUS_STARTBIT) + 0x00A0)
#define DVDE_MIO1_dvdeval_state1                         (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO1_dvde_test_mio1 <<BUS_STARTBIT) + 0x00A0)
#define DVDE_MIO0_dvdeval_state0                         (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO0_dvde_test_mio0 <<BUS_STARTBIT) + 0x00A0)

#define DVDE_MIO3_dvdproc_state3                         (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO3_dvde_test_mio3 <<BUS_STARTBIT) + 0x00A1)
#define DVDE_MIO2_dvdproc_state2                         (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO2_dvde_test_mio2 <<BUS_STARTBIT) + 0x00A1)
#define DVDE_MIO1_dvdproc_state1                         (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO1_dvde_test_mio1 <<BUS_STARTBIT) + 0x00A1)
#define DVDE_MIO0_dvdproc_state0                         (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO0_dvde_test_mio0 <<BUS_STARTBIT) + 0x00A1)

#define DVDE_MIO3_cur_state_ws_interf2                   (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO3_dvde_test_mio3 <<BUS_STARTBIT) + 0x00A2)
#define DVDE_MIO2_cur_state_ws_interf1                   (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO2_dvde_test_mio2 <<BUS_STARTBIT) + 0x00A2)
#define DVDE_MIO1_cur_state_ws_interf0                   (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO1_dvde_test_mio1 <<BUS_STARTBIT) + 0x00A2)
#define DVDE_MIO0_sy_write_gate                          (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO0_dvde_test_mio0 <<BUS_STARTBIT) + 0x00A2)

#define DVDE_MIO3_extra_data_cnt3                        (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO3_dvde_test_mio3 <<BUS_STARTBIT) + 0x00A3)
#define DVDE_MIO2_extra_data_cnt2                        (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO2_dvde_test_mio2 <<BUS_STARTBIT) + 0x00A3)
#define DVDE_MIO1_extra_data_cnt1                        (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO1_dvde_test_mio1 <<BUS_STARTBIT) + 0x00A3)
#define DVDE_MIO0_extra_data_cnt0                        (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO0_dvde_test_mio0 <<BUS_STARTBIT) + 0x00A3)

#define DVDE_MIO3_prefix_cnt2                            (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO3_dvde_test_mio3 <<BUS_STARTBIT) + 0x00A4)
#define DVDE_MIO2_prefix_cnt1                            (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO2_dvde_test_mio2 <<BUS_STARTBIT) + 0x00A4)
#define DVDE_MIO1_prefix_cnt0                            (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO1_dvde_test_mio1 <<BUS_STARTBIT) + 0x00A4)
#define DVDE_MIO0_check_exacwrite_dvdeval                (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO0_dvde_test_mio0 <<BUS_STARTBIT) + 0x00A4)

#define DVDE_MIO3_fifo_status2                           (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO3_dvde_test_mio3 <<BUS_STARTBIT) + 0x00A5)
#define DVDE_MIO2_fifo_status1                           (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO2_dvde_test_mio2 <<BUS_STARTBIT) + 0x00A5)
#define DVDE_MIO1_fifo_status0                           (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO1_dvde_test_mio1 <<BUS_STARTBIT) + 0x00A5)
#define DVDE_MIO0_ld_fifo_all_addrmatch_or_wsfifo_rd_inc (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO0_dvde_test_mio0 <<BUS_STARTBIT) + 0x00A5)

#define DVDE_MIO3_ws_data3                               (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO3_dvde_test_mio3 <<BUS_STARTBIT) + 0x00A6)
#define DVDE_MIO2_ws_data2                               (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO2_dvde_test_mio2 <<BUS_STARTBIT) + 0x00A6)
#define DVDE_MIO1_ws_data1                               (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO1_dvde_test_mio1 <<BUS_STARTBIT) + 0x00A6)
#define DVDE_MIO0_ws_data0                               (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO0_dvde_test_mio0 <<BUS_STARTBIT) + 0x00A6)

#define DVDE_MIO3_random_t_13                            (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO3_dvde_test_mio3 <<BUS_STARTBIT) + 0x00A7)
#define DVDE_MIO2_random_t_12                            (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO2_dvde_test_mio2 <<BUS_STARTBIT) + 0x00A7)
#define DVDE_MIO1_random_t_11                            (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO1_dvde_test_mio1 <<BUS_STARTBIT) + 0x00A7)
#define DVDE_MIO0_random_t_10                            (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO0_dvde_test_mio0 <<BUS_STARTBIT) + 0x00A7)

#define DVDE_MIO3_random_t_23                            (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO3_dvde_test_mio3 <<BUS_STARTBIT) + 0x00A8)
#define DVDE_MIO2_random_t_22                            (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO2_dvde_test_mio2 <<BUS_STARTBIT) + 0x00A8)
#define DVDE_MIO1_random_t_21                            (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO1_dvde_test_mio1 <<BUS_STARTBIT) + 0x00A8)
#define DVDE_MIO0_random_t_20                            (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO0_dvde_test_mio0 <<BUS_STARTBIT) + 0x00A8)

#define DVDE_MIO3_dsv_count11                            (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO3_dvde_test_mio3 <<BUS_STARTBIT) + 0x00A9)
#define DVDE_MIO2_dsv_count10                            (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO2_dvde_test_mio2 <<BUS_STARTBIT) + 0x00A9)
#define DVDE_MIO1_dsv_count9                             (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO1_dvde_test_mio1 <<BUS_STARTBIT) + 0x00A9)
#define DVDE_MIO0_dsv_count8                             (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO0_dvde_test_mio0 <<BUS_STARTBIT) + 0x00A9)

#define DVDE_MIO3_random_t_13_a                          (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO3_dvde_test_mio3 <<BUS_STARTBIT) + 0x00AA)
#define DVDE_MIO2_random_t_12_a                          (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO2_dvde_test_mio2 <<BUS_STARTBIT) + 0x00AA)
#define DVDE_MIO1_random_t_11_a                          (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO1_dvde_test_mio1 <<BUS_STARTBIT) + 0x00AA)
#define DVDE_MIO0_random_t_10_a                          (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO0_dvde_test_mio0 <<BUS_STARTBIT) + 0x00AA)

#define DVDE_MIO3_random_t_13_b                          (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO3_dvde_test_mio3 <<BUS_STARTBIT) + 0x00AB)
#define DVDE_MIO2_random_t_12_b                          (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO2_dvde_test_mio2 <<BUS_STARTBIT) + 0x00AB)
#define DVDE_MIO1_random_t_11_b                          (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO1_dvde_test_mio1 <<BUS_STARTBIT) + 0x00AB)
#define DVDE_MIO0_random_t_10_b                          (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO0_dvde_test_mio0 <<BUS_STARTBIT) + 0x00AB)

#define DVDE_MIO3_next_mark_length3                      (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO3_dvde_test_mio3 <<BUS_STARTBIT) + 0x00AC)
#define DVDE_MIO2_next_mark_length2                      (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO2_dvde_test_mio2 <<BUS_STARTBIT) + 0x00AC)
#define DVDE_MIO1_next_mark_length1                      (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO1_dvde_test_mio1 <<BUS_STARTBIT) + 0x00AC)
#define DVDE_MIO0_next_mark_length0                      (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO0_dvde_test_mio0 <<BUS_STARTBIT) + 0x00AC)

#define DVDE_MIO3_next_space_length3                     (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO3_dvde_test_mio3 <<BUS_STARTBIT) + 0x00AD)
#define DVDE_MIO2_next_space_length2                     (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO2_dvde_test_mio2 <<BUS_STARTBIT) + 0x00AD)
#define DVDE_MIO1_next_space_length1                     (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO1_dvde_test_mio1 <<BUS_STARTBIT) + 0x00AD)
#define DVDE_MIO0_next_space_length0                     (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO0_dvde_test_mio0 <<BUS_STARTBIT) + 0x00AD)

#define DVDE_MIO3_mark_bit_cnt3                          (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO3_dvde_test_mio3 <<BUS_STARTBIT) + 0x00AE)
#define DVDE_MIO2_mark_bit_cnt2                          (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO2_dvde_test_mio2 <<BUS_STARTBIT) + 0x00AE)
#define DVDE_MIO1_mark_bit_cnt1                          (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO1_dvde_test_mio1 <<BUS_STARTBIT) + 0x00AE)
#define DVDE_MIO0_mark_bit_cnt0                          (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO0_dvde_test_mio0 <<BUS_STARTBIT) + 0x00AE)

#define DVDE_MIO3_space_bit_cnt3                         (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO3_dvde_test_mio3 <<BUS_STARTBIT) + 0x00AF)
#define DVDE_MIO2_space_bit_cnt2                         (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO2_dvde_test_mio2 <<BUS_STARTBIT) + 0x00AF)
#define DVDE_MIO1_space_bit_cnt1                         (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO1_dvde_test_mio1 <<BUS_STARTBIT) + 0x00AF)
#define DVDE_MIO0_space_bit_cnt0                         (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO0_dvde_test_mio0 <<BUS_STARTBIT) + 0x00AF)

#define DVDE_MIO3_w4_random_g                            (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO3_dvde_test_mio3 <<BUS_STARTBIT) + 0x00B0)
#define DVDE_MIO2_random_t_state2                        (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO2_dvde_test_mio2 <<BUS_STARTBIT) + 0x00B0)
#define DVDE_MIO1_random_t_state1                        (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO1_dvde_test_mio1 <<BUS_STARTBIT) + 0x00B0)
#define DVDE_MIO0_random_t_state0                        (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO0_dvde_test_mio0 <<BUS_STARTBIT) + 0x00B0)

#define DVDE_MIO3_random_data_wsfifo3                    (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO3_dvde_test_mio3 <<BUS_STARTBIT) + 0x00B1)
#define DVDE_MIO2_random_data_wsfifo2                    (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO2_dvde_test_mio2 <<BUS_STARTBIT) + 0x00B1)
#define DVDE_MIO1_random_data_wsfifo1                    (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO1_dvde_test_mio1 <<BUS_STARTBIT) + 0x00B1)
#define DVDE_MIO0_random_data_wsfifo0                    (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO0_dvde_test_mio0 <<BUS_STARTBIT) + 0x00B1)

#define DVDE_MIO3_rand_nibble3                           (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO3_dvde_test_mio3 <<BUS_STARTBIT) + 0x00B2)
#define DVDE_MIO2_rand_nibble2                           (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO2_dvde_test_mio2 <<BUS_STARTBIT) + 0x00B2)
#define DVDE_MIO1_rand_nibble1                           (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO1_dvde_test_mio1 <<BUS_STARTBIT) + 0x00B2)
#define DVDE_MIO0_rand_nibble0                           (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO0_dvde_test_mio0 <<BUS_STARTBIT) + 0x00B2)

#define DVDE_MIO3_sync_lsb_high                          (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO3_dvde_test_mio3 <<BUS_STARTBIT) + 0x00B3)
#define DVDE_MIO2_data_lsb_high                          (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO2_dvde_test_mio2 <<BUS_STARTBIT) + 0x00B3)
#define DVDE_MIO1_l_pre_data_done                        (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO1_dvde_test_mio1 <<BUS_STARTBIT) + 0x00B3)
#define DVDE_MIO0_l_main_data_done                       (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO0_dvde_test_mio0 <<BUS_STARTBIT) + 0x00B3)

#define DVDE_MIO3_channel_8_bit_cnt3                     (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO3_dvde_test_mio3 <<BUS_STARTBIT) + 0x00B4)
#define DVDE_MIO2_channel_8_bit_cnt2                     (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO2_dvde_test_mio2 <<BUS_STARTBIT) + 0x00B4)
#define DVDE_MIO1_channel_8_bit_cnt1                     (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO1_dvde_test_mio1 <<BUS_STARTBIT) + 0x00B4)
#define DVDE_MIO0_channel_8_bit_cnt0                     (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO0_dvde_test_mio0 <<BUS_STARTBIT) + 0x00B4)

#define DVDE_MIO3_channel_8_bit_cnt7                     (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO3_dvde_test_mio3 <<BUS_STARTBIT) + 0x00B5)
#define DVDE_MIO2_channel_8_bit_cnt6                     (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO2_dvde_test_mio2 <<BUS_STARTBIT) + 0x00B5)
#define DVDE_MIO1_channel_8_bit_cnt5                     (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO1_dvde_test_mio1 <<BUS_STARTBIT) + 0x00B5)
#define DVDE_MIO0_channel_8_bit_cnt4                     (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO0_dvde_test_mio0 <<BUS_STARTBIT) + 0x00B5)

#define DVDE_MIO3_channel_8_bit_cnt11                    (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO3_dvde_test_mio3 <<BUS_STARTBIT) + 0x00B6)
#define DVDE_MIO2_channel_8_bit_cnt10                    (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO2_dvde_test_mio2 <<BUS_STARTBIT) + 0x00B6)
#define DVDE_MIO1_channel_8_bit_cnt9                     (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO1_dvde_test_mio1 <<BUS_STARTBIT) + 0x00B6)
#define DVDE_MIO0_channel_8_bit_cnt8                     (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO0_dvde_test_mio0 <<BUS_STARTBIT) + 0x00B6)

#define DVDE_MIO3_hdeval_state3                          (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO3_dvde_test_mio3 <<BUS_STARTBIT) + 0x00B7)
#define DVDE_MIO2_hdeval_state2                          (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO2_dvde_test_mio2 <<BUS_STARTBIT) + 0x00B7)
#define DVDE_MIO1_hdeval_state1                          (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO1_dvde_test_mio1 <<BUS_STARTBIT) + 0x00B7)
#define DVDE_MIO0_hdeval_state0                          (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO0_dvde_test_mio0 <<BUS_STARTBIT) + 0x00B7)

#define DVDE_MIO3_hdproc_state3                          (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO3_dvde_test_mio3 <<BUS_STARTBIT) + 0x00B8)
#define DVDE_MIO2_hdproc_state2                          (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO2_dvde_test_mio2 <<BUS_STARTBIT) + 0x00B8)
#define DVDE_MIO1_hdproc_state1                          (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO1_dvde_test_mio1 <<BUS_STARTBIT) + 0x00B8)
#define DVDE_MIO0_hdproc_state0                          (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO0_dvde_test_mio0 <<BUS_STARTBIT) + 0x00B8)

#define DVDE_MIO3_wrclkd2                                (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO3_dvde_test_mio3 <<BUS_STARTBIT) + 0x00C0)
#define DVDE_MIO2_sy_write_gate                          (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO2_dvde_test_mio2 <<BUS_STARTBIT) + 0x00C0)
#define DVDE_MIO1_dvd_block_addr_valid                   (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO1_dvde_test_mio1 <<BUS_STARTBIT) + 0x00C0)

#define DVDE_MIO3_wrclkd4_h                              (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO3_dvde_test_mio3 <<BUS_STARTBIT) + 0x00C1)
#define DVDE_MIO2_sync_state2                            (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO2_dvde_test_mio2 <<BUS_STARTBIT) + 0x00C1)
#define DVDE_MIO1_sync_state1                            (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO1_dvde_test_mio1 <<BUS_STARTBIT) + 0x00C1)
#define DVDE_MIO0_sync_state0                            (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO0_dvde_test_mio0 <<BUS_STARTBIT) + 0x00C1)

#define DVDE_MIO3_write_gate                             (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO3_dvde_test_mio3 <<BUS_STARTBIT) + 0x00C2)
#define DVDE_MIO2_sy_pre_extra_blk                       (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO2_dvde_test_mio2 <<BUS_STARTBIT) + 0x00C2)
#define DVDE_MIO1_addr_real_pre_tgt                      (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO1_dvde_test_mio1 <<BUS_STARTBIT) + 0x00C2)
#define DVDE_MIO0_addr_real_eqt_tgt                      (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO0_dvde_test_mio0 <<BUS_STARTBIT) + 0x00C2)

#define DVDE_MIO3_dvde_mrw                               (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO3_dvde_test_mio3 <<BUS_STARTBIT) + 0x00C3)
#define DVDE_MIO2_sy_start_error                         (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO2_dvde_test_mio2 <<BUS_STARTBIT) + 0x00C3)
#define DVDE_MIO1_sy_cond_stop                           (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO1_dvde_test_mio1 <<BUS_STARTBIT) + 0x00C3)
#define DVDE_MIO0_sy_normal_stop                         (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO0_dvde_test_mio0 <<BUS_STARTBIT) + 0x00C3)

#define DVDE_MIO3_sy_start_ok_p                          (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO3_dvde_test_mio3 <<BUS_STARTBIT) + 0x00C4)
#define DVDE_MIO2_sy_normal_stop_p                       (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO2_dvde_test_mio2 <<BUS_STARTBIT) + 0x00C4)
#define DVDE_MIO1_sy_start_error                         (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO1_dvde_test_mio1 <<BUS_STARTBIT) + 0x00C4)
#define DVDE_MIO0_sy_cond_stop_p                         (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO0_dvde_test_mio0 <<BUS_STARTBIT) + 0x00C4)

#define DVDE_MIO3_sy_xfr_int_p                           (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO3_dvde_test_mio3 <<BUS_STARTBIT) + 0x00C5)
#define DVDE_MIO2_sy_ba_int_p                            (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO2_dvde_test_mio2 <<BUS_STARTBIT) + 0x00C5)
#define DVDE_MIO1_sy_lb_int_p                            (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO1_dvde_test_mio1 <<BUS_STARTBIT) + 0x00C5)
#define DVDE_MIO0_0b                                     (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO0_dvde_test_mio0 <<BUS_STARTBIT) + 0x00C5)

#define DVDE_MIO3_sy_ecc_underrun_p                      (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO3_dvde_test_mio3 <<BUS_STARTBIT) + 0x00C6)
#define DVDE_MIO2_sy_md_underrun_p                       (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO2_dvde_test_mio2 <<BUS_STARTBIT) + 0x00C6)
#define DVDE_MIO1_sy_host_underrun_p                     (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO1_dvde_test_mio1 <<BUS_STARTBIT) + 0x00C6)
#define DVDE_MIO0_sy_tgt_lt_real_p                       (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO0_dvde_test_mio0 <<BUS_STARTBIT) + 0x00C6)

#define DVDE_MIO3_target_match                           (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO3_dvde_test_mio3 <<BUS_STARTBIT) + 0x00C7)
#define DVDE_MIO2_blk_sync                               (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO2_dvde_test_mio2 <<BUS_STARTBIT) + 0x00C7)
#define DVDE_MIO1_last_wr_bit                            (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO1_dvde_test_mio1 <<BUS_STARTBIT) + 0x00C7)
#define DVDE_MIO0_sy_servo_p                             (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO0_dvde_test_mio0 <<BUS_STARTBIT) + 0x00C7)

#define DVDE_MIO3_block_address_latch3                   (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO3_dvde_test_mio3 <<BUS_STARTBIT) + 0x00C9)
#define DVDE_MIO2_block_address_latch2                   (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO2_dvde_test_mio2 <<BUS_STARTBIT) + 0x00C9)
#define DVDE_MIO1_block_address_latch1                   (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO1_dvde_test_mio1 <<BUS_STARTBIT) + 0x00C9)
#define DVDE_MIO0_block_address_latch0                   (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO0_dvde_test_mio0 <<BUS_STARTBIT) + 0x00C9)

#define DVDE_MIO3_dvde_prw                               (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO3_dvde_test_mio3 <<BUS_STARTBIT) + 0x00CA)
#define DVDE_MIO1_w4_bsync_out_lock                      (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO1_dvde_test_mio1 <<BUS_STARTBIT) + 0x00CA)
#define DVDE_MIO0_w4_sync_lost                           (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO0_dvde_test_mio0 <<BUS_STARTBIT) + 0x00CA)

#define DVDE_MIO3_md_ws_data_rdy                         (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO3_dvde_test_mio3 <<BUS_STARTBIT) + 0x00CB)
#define DVDE_MIO2_md_buf_udrn                            (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO2_dvde_test_mio2 <<BUS_STARTBIT) + 0x00CB)
#define DVDE_MIO1_dis_enc_wr                             (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO1_dvde_test_mio1 <<BUS_STARTBIT) + 0x00CB)
#define DVDE_MIO0_dvdplnk                                (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO0_dvde_test_mio0 <<BUS_STARTBIT) + 0x00CB)

#define DVDE_MIO2_w4_address_out_lock                    (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO2_dvde_test_mio2 <<BUS_STARTBIT) + 0x00CC)
#define DVDE_MIO0_servo_event                            (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO0_dvde_test_mio0 <<BUS_STARTBIT) + 0x00CC)

#define DVDE_MIO3_nra                                    (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO3_dvde_test_mio3 <<BUS_STARTBIT) + 0x00CD)
#define DVDE_MIO2_nra_blk                                (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO2_dvde_test_mio2 <<BUS_STARTBIT) + 0x00CD)
#define DVDE_MIO1_nra_start                              (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO1_dvde_test_mio1 <<BUS_STARTBIT) + 0x00CD)
#define DVDE_MIO0_nra_end                                (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO0_dvde_test_mio0 <<BUS_STARTBIT) + 0x00CD)

#define DVDE_MIO3_w4_ecc_block_addr3                     (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO3_dvde_test_mio3 <<BUS_STARTBIT) + 0x00CE)
#define DVDE_MIO2_w4_ecc_block_addr2                     (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO2_dvde_test_mio2 <<BUS_STARTBIT) + 0x00CE)
#define DVDE_MIO1_w4_ecc_block_addr1                     (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO1_dvde_test_mio1 <<BUS_STARTBIT) + 0x00CE)
#define DVDE_MIO0_w4_ecc_block_addr0                     (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO0_dvde_test_mio0 <<BUS_STARTBIT) + 0x00CE)

#define DVDE_MIO3_w4_id_sector_cnt3                      (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO3_dvde_test_mio3 <<BUS_STARTBIT) + 0x00CF)
#define DVDE_MIO2_w4_id_sector_cnt2                      (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO2_dvde_test_mio2 <<BUS_STARTBIT) + 0x00CF)
#define DVDE_MIO1_w4_id_sector_cnt1                      (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO1_dvde_test_mio1 <<BUS_STARTBIT) + 0x00CF)
#define DVDE_MIO0_w4_id_sector_cnt0                      (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO0_dvde_test_mio0 <<BUS_STARTBIT) + 0x00CF)

#define DVDE_MIO3_w4_id_sector_t3                        (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO3_dvde_test_mio3 <<BUS_STARTBIT) + 0x00D0)
#define DVDE_MIO2_w4_id_sector_t2                        (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO2_dvde_test_mio2 <<BUS_STARTBIT) + 0x00D0)
#define DVDE_MIO1_w4_id_sector_t1                        (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO1_dvde_test_mio1 <<BUS_STARTBIT) + 0x00D0)
#define DVDE_MIO0_w4_id_sector_t0                        (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO0_dvde_test_mio0 <<BUS_STARTBIT) + 0x00D0)

#define DVDE_MIO3_wr_addr3                               (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO3_dvde_test_mio3 <<BUS_STARTBIT) + 0x00D1)
#define DVDE_MIO2_wr_addr2                               (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO2_dvde_test_mio2 <<BUS_STARTBIT) + 0x00D1)
#define DVDE_MIO1_wr_addr1                               (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO1_dvde_test_mio1 <<BUS_STARTBIT) + 0x00D1)
#define DVDE_MIO0_wr_addr0                               (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO0_dvde_test_mio0 <<BUS_STARTBIT) + 0x00D1)

#define DVDE_MIO3_wr_sect3                               (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO3_dvde_test_mio3 <<BUS_STARTBIT) + 0x00D2)
#define DVDE_MIO2_wr_sect2                               (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO2_dvde_test_mio2 <<BUS_STARTBIT) + 0x00D2)
#define DVDE_MIO1_wr_sect1                               (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO1_dvde_test_mio1 <<BUS_STARTBIT) + 0x00D2)
#define DVDE_MIO0_wr_sect0                               (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO0_dvde_test_mio0 <<BUS_STARTBIT) + 0x00D2)

#define DVDE_MIO3_wr_frame3                              (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO3_dvde_test_mio3 <<BUS_STARTBIT) + 0x00D3)
#define DVDE_MIO2_wr_frame2                              (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO2_dvde_test_mio2 <<BUS_STARTBIT) + 0x00D3)
#define DVDE_MIO1_wr_frame1                              (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO1_dvde_test_mio1 <<BUS_STARTBIT) + 0x00D3)
#define DVDE_MIO0_wr_frame0                              (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO0_dvde_test_mio0 <<BUS_STARTBIT) + 0x00D3)

#define DVDE_MIO3_wr_bit3                                (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO3_dvde_test_mio3 <<BUS_STARTBIT) + 0x00D4)
#define DVDE_MIO2_wr_bit2                                (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO2_dvde_test_mio2 <<BUS_STARTBIT) + 0x00D4)
#define DVDE_MIO1_wr_bit1                                (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO1_dvde_test_mio1 <<BUS_STARTBIT) + 0x00D4)
#define DVDE_MIO0_wr_bit0                                (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO0_dvde_test_mio0 <<BUS_STARTBIT) + 0x00D4)

#define DVDE_MIO3_sy_cur_addr_sect7                      (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO3_dvde_test_mio3 <<BUS_STARTBIT) + 0x00D5)
#define DVDE_MIO2_sy_cur_addr_sect6                      (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO2_dvde_test_mio2 <<BUS_STARTBIT) + 0x00D5)
#define DVDE_MIO1_sy_cur_addr_sect5                      (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO1_dvde_test_mio1 <<BUS_STARTBIT) + 0x00D5)
#define DVDE_MIO0_sy_cur_addr_sect4                      (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO0_dvde_test_mio0 <<BUS_STARTBIT) + 0x00D5)
#define DVDE_MIO3_sy_cur_addr_sect3                      (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO3_dvde_test_mio3 <<BUS_STARTBIT) + 0x00D6)
#define DVDE_MIO2_sy_cur_addr_sect2                      (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO2_dvde_test_mio2 <<BUS_STARTBIT) + 0x00D6)
#define DVDE_MIO1_sy_cur_addr_sect1                      (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO1_dvde_test_mio1 <<BUS_STARTBIT) + 0x00D6)
#define DVDE_MIO0_sy_cur_addr_sect0                      (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO0_dvde_test_mio0 <<BUS_STARTBIT) + 0x00D6)

#define DVDE_MIO3_sy_cur_frame3                          (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO3_dvde_test_mio3 <<BUS_STARTBIT) + 0x00D7)
#define DVDE_MIO2_sy_cur_frame2                          (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO2_dvde_test_mio2 <<BUS_STARTBIT) + 0x00D7)
#define DVDE_MIO1_sy_cur_frame1                          (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO1_dvde_test_mio1 <<BUS_STARTBIT) + 0x00D7)
#define DVDE_MIO0_sy_cur_frame0                          (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO0_dvde_test_mio0 <<BUS_STARTBIT) + 0x00D7)

#define DVDE_MIO3_sy_cur_bit3                            (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO3_dvde_test_mio3 <<BUS_STARTBIT) + 0x00D8)
#define DVDE_MIO2_sy_cur_bit2                            (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO2_dvde_test_mio2 <<BUS_STARTBIT) + 0x00D8)
#define DVDE_MIO1_sy_cur_bit1                            (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO1_dvde_test_mio1 <<BUS_STARTBIT) + 0x00D8)
#define DVDE_MIO0_sy_cur_bit0                            (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO0_dvde_test_mio0 <<BUS_STARTBIT) + 0x00D8)

#define DVDE_MIO3_sy_xfr_cnt3                            (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO3_dvde_test_mio3 <<BUS_STARTBIT) + 0x00D9)
#define DVDE_MIO2_sy_xfr_cnt2                            (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO2_dvde_test_mio2 <<BUS_STARTBIT) + 0x00D9)
#define DVDE_MIO1_sy_xfr_cnt1                            (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO1_dvde_test_mio1 <<BUS_STARTBIT) + 0x00D9)
#define DVDE_MIO0_sy_xfr_cnt0                            (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO0_dvde_test_mio0 <<BUS_STARTBIT) + 0x00D9)

#define DVDE_MIO3_sy_xfr_done_cnt3                       (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO3_dvde_test_mio3 <<BUS_STARTBIT) + 0x00DA)
#define DVDE_MIO2_sy_xfr_done_cnt2                       (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO2_dvde_test_mio2 <<BUS_STARTBIT) + 0x00DA)
#define DVDE_MIO1_sy_xfr_done_cnt1                       (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO1_dvde_test_mio1 <<BUS_STARTBIT) + 0x00DA)
#define DVDE_MIO0_sy_xfr_done_cnt0                       (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO0_dvde_test_mio0 <<BUS_STARTBIT) + 0x00DA)

#define DVDE_MIO3_w4_seek_match                          (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO3_dvde_test_mio3 <<BUS_STARTBIT) + 0x00DB)
#define DVDE_MIO2_w4_prewr_skew_match                    (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO2_dvde_test_mio2 <<BUS_STARTBIT) + 0x00DB)
#define DVDE_MIO1_w4_prewr_match                         (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO1_dvde_test_mio1 <<BUS_STARTBIT) + 0x00DB)
#define DVDE_MIO0_w4_dvdram_seek_match                   (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO0_dvde_test_mio0 <<BUS_STARTBIT) + 0x00DB)

#define DVDE_MIO3_sy_write_gate                          (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO3_dvde_test_mio3 <<BUS_STARTBIT) + 0x00DC)
#define DVDE_MIO2_sy_write_cutoff                        (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO2_dvde_test_mio2 <<BUS_STARTBIT) + 0x00DC)
#define DVDE_MIO1_start_skew_match                       (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO1_dvde_test_mio1 <<BUS_STARTBIT) + 0x00DC)
#define DVDE_MIO0_w4_gate_end_match                      (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO0_dvde_test_mio0 <<BUS_STARTBIT) + 0x00DC)

#define DVDE_MIO3_addr_valid_offset3                     (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO3_dvde_test_mio3 <<BUS_STARTBIT) + 0x00DE)
#define DVDE_MIO2_addr_valid_offset2                     (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO2_dvde_test_mio2 <<BUS_STARTBIT) + 0x00DE)
#define DVDE_MIO1_addr_valid_offset1                     (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO1_dvde_test_mio1 <<BUS_STARTBIT) + 0x00DE)
#define DVDE_MIO0_addr_valid_offset0                     (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO0_dvde_test_mio0 <<BUS_STARTBIT) + 0x00DE)

#define DVDE_MIO3_addr_remainder1                        (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO3_dvde_test_mio3 <<BUS_STARTBIT) + 0x00E0)
#define DVDE_MIO2_addr_remainder0                        (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO2_dvde_test_mio2 <<BUS_STARTBIT) + 0x00E0)

#define DVDE_MIO3_write_start_phase3                     (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO3_dvde_test_mio3 <<BUS_STARTBIT) + 0x00E1)
#define DVDE_MIO2_write_start_phase2                     (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO2_dvde_test_mio2 <<BUS_STARTBIT) + 0x00E1)
#define DVDE_MIO1_write_start_phase1                     (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO1_dvde_test_mio1 <<BUS_STARTBIT) + 0x00E1)
#define DVDE_MIO0_write_start_phase0                     (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO0_dvde_test_mio0 <<BUS_STARTBIT) + 0x00E1)

#define DVDE_MIO3_sy_write_end_phase3                    (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO3_dvde_test_mio3 <<BUS_STARTBIT) + 0x00E2)
#define DVDE_MIO2_sy_write_end_phase2                    (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO2_dvde_test_mio2 <<BUS_STARTBIT) + 0x00E2)
#define DVDE_MIO1_sy_write_end_phase1                    (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO1_dvde_test_mio1 <<BUS_STARTBIT) + 0x00E2)
#define DVDE_MIO0_sy_write_end_phase0                    (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO0_dvde_test_mio0 <<BUS_STARTBIT) + 0x00E2)

#define DVDE_MIO3_sy_nra_cnt3                            (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO3_dvde_test_mio3 <<BUS_STARTBIT) + 0x00E3)
#define DVDE_MIO2_sy_nra_cnt2                            (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO2_dvde_test_mio2 <<BUS_STARTBIT) + 0x00E3)
#define DVDE_MIO1_sy_nra_cnt1                            (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO1_dvde_test_mio1 <<BUS_STARTBIT) + 0x00E3)
#define DVDE_MIO0_sy_nra_cnt0                            (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO0_dvde_test_mio0 <<BUS_STARTBIT) + 0x00E3)

#define DVDE_MIO3_sy_strtsta3                            (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO3_dvde_test_mio3 <<BUS_STARTBIT) + 0x00E4)
#define DVDE_MIO2_sy_strtsta2                            (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO2_dvde_test_mio2 <<BUS_STARTBIT) + 0x00E4)
#define DVDE_MIO1_sy_strtsta1                            (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO1_dvde_test_mio1 <<BUS_STARTBIT) + 0x00E4)
#define DVDE_MIO0_sy_strtsta0                            (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO0_dvde_test_mio0 <<BUS_STARTBIT) + 0x00E4)

#define DVDE_MIO3_sy_strtsta7                            (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO3_dvde_test_mio3 <<BUS_STARTBIT) + 0x00E5)
#define DVDE_MIO2_sy_strtsta6                            (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO2_dvde_test_mio2 <<BUS_STARTBIT) + 0x00E5)
#define DVDE_MIO1_sy_strtsta5                            (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO1_dvde_test_mio1 <<BUS_STARTBIT) + 0x00E5)
#define DVDE_MIO0_sy_strtsta4                            (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO0_dvde_test_mio0 <<BUS_STARTBIT) + 0x00E5)

#define DVDE_MIO3_sy_stpsta3                             (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO3_dvde_test_mio3 <<BUS_STARTBIT) + 0x00E6)
#define DVDE_MIO2_sy_stpsta2                             (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO2_dvde_test_mio2 <<BUS_STARTBIT) + 0x00E6)
#define DVDE_MIO1_sy_stpsta1                             (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO1_dvde_test_mio1 <<BUS_STARTBIT) + 0x00E6)
#define DVDE_MIO0_sy_stpsta0                             (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO0_dvde_test_mio0 <<BUS_STARTBIT) + 0x00E6)

#define DVDE_MIO3_sy_stpsta7                             (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO3_dvde_test_mio3 <<BUS_STARTBIT) + 0x00E7)
#define DVDE_MIO2_sy_stpsta6                             (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO2_dvde_test_mio2 <<BUS_STARTBIT) + 0x00E7)
#define DVDE_MIO1_sy_stpsta5                             (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO1_dvde_test_mio1 <<BUS_STARTBIT) + 0x00E7)
#define DVDE_MIO0_sy_stpsta4                             (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO0_dvde_test_mio0 <<BUS_STARTBIT) + 0x00E7)

#define DVDE_MIO3_sy_stpsta11                            (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO3_dvde_test_mio3 <<BUS_STARTBIT) + 0x00E8)
#define DVDE_MIO2_sy_stpsta10                            (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO2_dvde_test_mio2 <<BUS_STARTBIT) + 0x00E8)
#define DVDE_MIO1_sy_stpsta9                             (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO1_dvde_test_mio1 <<BUS_STARTBIT) + 0x00E8)
#define DVDE_MIO0_sy_stpsta8                             (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO0_dvde_test_mio0 <<BUS_STARTBIT) + 0x00E8)

#define DVDE_MIO3_sy_stpsta15                            (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO3_dvde_test_mio3 <<BUS_STARTBIT) + 0x00E9)
#define DVDE_MIO2_sy_stpsta14                            (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO2_dvde_test_mio2 <<BUS_STARTBIT) + 0x00E9)
#define DVDE_MIO1_sy_stpsta13                            (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO1_dvde_test_mio1 <<BUS_STARTBIT) + 0x00E9)
#define DVDE_MIO0_sy_stpsta12                            (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO0_dvde_test_mio0 <<BUS_STARTBIT) + 0x00E9)

#define DVDE_MIO1_w4_addr_valid                          (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO1_dvde_test_mio1 <<BUS_STARTBIT) + 0x00EA)
#define DVDE_MIO1_w4_addr_valid_a                        (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO1_dvde_test_mio1 <<BUS_STARTBIT) + 0x00EB)
#define DVDE_MIO0_wrclkd4                                (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO0_dvde_test_mio0 <<BUS_STARTBIT) + 0x00EB)
#define DVDE_MIO1_dvd_block_addr_valid_a                 (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO1_dvde_test_mio1 <<BUS_STARTBIT) + 0x00EC)
#define DVDE_MIO0_wrclkd2                                (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO0_dvde_test_mio0 <<BUS_STARTBIT) + 0x00EC)

#define DVDE_MIO3_dvdram_sy_write_gate                   (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO3_dvde_test_mio3 <<BUS_STARTBIT) + 0x00ED)
#define DVDE_MIO2_sy_write_gate_a                        (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO2_dvde_test_mio2 <<BUS_STARTBIT) + 0x00ED)
#define DVDE_MIO1_w4_dvdram_seek_match                   (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO1_dvde_test_mio1 <<BUS_STARTBIT) + 0x00ED)
#define DVDE_MIO0_l_w4_dvdram_slip                       (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO0_dvde_test_mio0 <<BUS_STARTBIT) + 0x00ED)

#define DVDE_MIO3_sy_write_gate_a                        (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO3_dvde_test_mio3 <<BUS_STARTBIT) + 0x00EE)
#define DVDE_MIO2_dvdram_sync_state2                     (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO2_dvde_test_mio2 <<BUS_STARTBIT) + 0x00EE)
#define DVDE_MIO1_dvdram_sync_state1                     (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO1_dvde_test_mio1 <<BUS_STARTBIT) + 0x00EE)
#define DVDE_MIO0_dvdram_sync_state0                     (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO0_dvde_test_mio0 <<BUS_STARTBIT) + 0x00EE)

#define DVDE_MIO3_dvdram_sy_write_gate_a                 (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO3_dvde_test_mio3 <<BUS_STARTBIT) + 0x00EF)
#define DVDE_MIO2_nxt_dvdram_sync_state2                 (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO2_dvde_test_mio2 <<BUS_STARTBIT) + 0x00EF)
#define DVDE_MIO1_nxt_dvdram_sync_state1                 (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO1_dvde_test_mio1 <<BUS_STARTBIT) + 0x00EF)
#define DVDE_MIO0_nxt_dvdram_sync_state0                 (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO0_dvde_test_mio0 <<BUS_STARTBIT) + 0x00EF)

#define DVDE_MIO3_dvdram_sector_addr_valid_offset3       (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO3_dvde_test_mio3 <<BUS_STARTBIT) + 0x00F0)
#define DVDE_MIO2_dvdram_sector_addr_valid_offset2       (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO2_dvde_test_mio2 <<BUS_STARTBIT) + 0x00F0)
#define DVDE_MIO1_dvdram_sector_addr_valid_offset1       (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO1_dvde_test_mio1 <<BUS_STARTBIT) + 0x00F0)
#define DVDE_MIO0_dvdram_sector_addr_valid_offset0       (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO0_dvde_test_mio0 <<BUS_STARTBIT) + 0x00F0)

#define DVDE_MIO3_dvdram_sy_write_gate_b                 (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO3_dvde_test_mio3 <<BUS_STARTBIT) + 0x00F1)
#define DVDE_MIO2_dvdram_sy_write_gate                   (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO2_dvde_test_mio2 <<BUS_STARTBIT) + 0x00F1)
#define DVDE_MIO1_l_w2_dvdram_header_window_front        (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO1_dvde_test_mio1 <<BUS_STARTBIT) + 0x00F1)
#define DVDE_MIO0_w2_dvdram_header_window_front          (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO0_dvde_test_mio0 <<BUS_STARTBIT) + 0x00F1)

#define DVDE_MIO3_l_dvdram_sy_write_gate_clr             (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO3_dvde_test_mio3 <<BUS_STARTBIT) + 0x00F2)
#define DVDE_MIO2_dvdram_sy_write_gate_clr               (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO2_dvde_test_mio2 <<BUS_STARTBIT) + 0x00F2)
#define DVDE_MIO1_dvdram_header_window_front_offset      (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO1_dvde_test_mio1 <<BUS_STARTBIT) + 0x00F2)
#define DVDE_MIO0_dvdram_sector_addr_valid               (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO0_dvde_test_mio0 <<BUS_STARTBIT) + 0x00F2)

#define DVDE_MIO3_w4_dvdram_sector_addr3                 (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO3_dvde_test_mio3 <<BUS_STARTBIT) + 0x00F3)
#define DVDE_MIO2_w4_dvdram_sector_addr2                 (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO2_dvde_test_mio2 <<BUS_STARTBIT) + 0x00F3)
#define DVDE_MIO1_w4_dvdram_sector_addr1                 (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO1_dvde_test_mio1 <<BUS_STARTBIT) + 0x00F3)
#define DVDE_MIO0_w4_dvdram_sector_addr0                 (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO0_dvde_test_mio0 <<BUS_STARTBIT) + 0x00F3)

#define DVDE_MIO3_w4_dvdram_sector_t3                    (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO3_dvde_test_mio3 <<BUS_STARTBIT) + 0x00F4)
#define DVDE_MIO2_w4_dvdram_sector_t2                    (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO2_dvde_test_mio2 <<BUS_STARTBIT) + 0x00F4)
#define DVDE_MIO1_w4_dvdram_sector_t1                    (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO1_dvde_test_mio1 <<BUS_STARTBIT) + 0x00F4)
#define DVDE_MIO0_w4_dvdram_sector_t0                    (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO0_dvde_test_mio0 <<BUS_STARTBIT) + 0x00F4)

#define DVDE_MIO3_w4_dvdram_wr_bit3                      (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO3_dvde_test_mio3 <<BUS_STARTBIT) + 0x00F5)
#define DVDE_MIO2_w4_dvdram_wr_bit2                      (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO2_dvde_test_mio2 <<BUS_STARTBIT) + 0x00F5)
#define DVDE_MIO1_w4_dvdram_wr_bit1                      (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO1_dvde_test_mio1 <<BUS_STARTBIT) + 0x00F5)
#define DVDE_MIO0_w4_dvdram_wr_bit0                      (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO0_dvde_test_mio0 <<BUS_STARTBIT) + 0x00F5)

#define DVDE_MIO3_dvdram_sector_wr_cnt3                  (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO3_dvde_test_mio3 <<BUS_STARTBIT) + 0x00F6)
#define DVDE_MIO2_dvdram_sector_wr_cnt2                  (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO2_dvde_test_mio2 <<BUS_STARTBIT) + 0x00F6)
#define DVDE_MIO1_dvdram_sector_wr_cnt1                  (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO1_dvde_test_mio1 <<BUS_STARTBIT) + 0x00F6)
#define DVDE_MIO0_dvdram_sector_wr_cnt0                  (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO0_dvde_test_mio0 <<BUS_STARTBIT) + 0x00F6)

#define DVDE_MIO3_dvdram_write_start_phase3              (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO3_dvde_test_mio3 <<BUS_STARTBIT) + 0x00F7)
#define DVDE_MIO2_dvdram_write_start_phase2              (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO2_dvde_test_mio2 <<BUS_STARTBIT) + 0x00F7)
#define DVDE_MIO1_dvdram_write_start_phase1              (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO1_dvde_test_mio1 <<BUS_STARTBIT) + 0x00F7)
#define DVDE_MIO0_dvdram_write_start_phase0              (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO0_dvde_test_mio0 <<BUS_STARTBIT) + 0x00F7)

#define DVDE_MIO3_dvdram_write_end_phase_d3              (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO3_dvde_test_mio3 <<BUS_STARTBIT) + 0x00F8)
#define DVDE_MIO2_dvdram_write_end_phase_d2              (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO2_dvde_test_mio2 <<BUS_STARTBIT) + 0x00F8)
#define DVDE_MIO1_dvdram_write_end_phase_d1              (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO1_dvde_test_mio1 <<BUS_STARTBIT) + 0x00F8)
#define DVDE_MIO0_dvdram_write_end_phase_d0              (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO0_dvde_test_mio0 <<BUS_STARTBIT) + 0x00F8)

#define DVDE_MIO3_dvdram_write_end_phase3                (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO3_dvde_test_mio3 <<BUS_STARTBIT) + 0x00F9)
#define DVDE_MIO2_dvdram_write_end_phase2                (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO2_dvde_test_mio2 <<BUS_STARTBIT) + 0x00F9)
#define DVDE_MIO1_dvdram_write_end_phase1                (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO1_dvde_test_mio1 <<BUS_STARTBIT) + 0x00F9)
#define DVDE_MIO0_dvdram_write_end_phase0                (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO0_dvde_test_mio0 <<BUS_STARTBIT) + 0x00F9)

#define DVDE_MIO3_dvdram_sector_addr_valid               (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO3_dvde_test_mio3 <<BUS_STARTBIT) + 0x00FA)
#define DVDE_MIO2_w4_dvdram_sector_addr_valid            (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO2_dvde_test_mio2 <<BUS_STARTBIT) + 0x00FA)
#define DVDE_MIO1_dvdhdram_slip                          (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO1_dvde_test_mio1 <<BUS_STARTBIT) + 0x00FA)
#define DVDE_MIO0_l_w4_dvdram_slip_a                     (DVDE_BLK + MIO32SEL + (halGLOBAL_MIO0_dvde_test_mio0 <<BUS_STARTBIT) + 0x00FA)


/****************************************************************************
* MIO32 BUS WS BLOCK
****************************************************************************/
//MIO0
#define WS_MIO0_smp1o                     (WS_BLK + MIO32SEL + (halGLOBAL_MIO0_ws_mio0<<BUS_STARTBIT) + 0x0000)
#define WS_MIO0_smp2o                     (WS_BLK + MIO32SEL + (halGLOBAL_MIO0_ws_mio0<<BUS_STARTBIT) + 0x0001)
#define WS_MIO0_smp3o                     (WS_BLK + MIO32SEL + (halGLOBAL_MIO0_ws_mio0<<BUS_STARTBIT) + 0x0002)
#define WS_MIO0_smp4o                     (WS_BLK + MIO32SEL + (halGLOBAL_MIO0_ws_mio0<<BUS_STARTBIT) + 0x0003)
#define WS_MIO0_smp5o                     (WS_BLK + MIO32SEL + (halGLOBAL_MIO0_ws_mio0<<BUS_STARTBIT) + 0x0004)
#define WS_MIO0_wgate_cd                  (WS_BLK + MIO32SEL + (halGLOBAL_MIO0_ws_mio0<<BUS_STARTBIT) + 0x0005)
#define WS_MIO0_wgate_cutoff_cd           (WS_BLK + MIO32SEL + (halGLOBAL_MIO0_ws_mio0<<BUS_STARTBIT) + 0x0006)
#define WS_MIO0_wgate_dvd                 (WS_BLK + MIO32SEL + (halGLOBAL_MIO0_ws_mio0<<BUS_STARTBIT) + 0x0007)
#define WS_MIO0_wgate_cutoff_dvd          (WS_BLK + MIO32SEL + (halGLOBAL_MIO0_ws_mio0<<BUS_STARTBIT) + 0x0008)
#define WS_MIO0_wgate_bd                  (WS_BLK + MIO32SEL + (halGLOBAL_MIO0_ws_mio0<<BUS_STARTBIT) + 0x0009)
#define WS_MIO0_wgate_cutoff_bd           (WS_BLK + MIO32SEL + (halGLOBAL_MIO0_ws_mio0<<BUS_STARTBIT) + 0x000A)
#define WS_MIO0_wgate_cus                 (WS_BLK + MIO32SEL + (halGLOBAL_MIO0_ws_mio0<<BUS_STARTBIT) + 0x000B)
#define WS_MIO0_wgate_out                 (WS_BLK + MIO32SEL + (halGLOBAL_MIO0_ws_mio0<<BUS_STARTBIT) + 0x000C)
#define WS_MIO0_wgate_delayed             (WS_BLK + MIO32SEL + (halGLOBAL_MIO0_ws_mio0<<BUS_STARTBIT) + 0x000D)
#define WS_MIO0_lswgate                   (WS_BLK + MIO32SEL + (halGLOBAL_MIO0_ws_mio0<<BUS_STARTBIT) + 0x000E)
#define WS_MIO0_reserved                  (WS_BLK + MIO32SEL + (halGLOBAL_MIO0_ws_mio0<<BUS_STARTBIT) + 0x000F)
#define WS_MIO0_slpdni_cus                (WS_BLK + MIO32SEL + (halGLOBAL_MIO0_ws_mio0<<BUS_STARTBIT) + 0x0010)
#define WS_MIO0_slpupi_cus                (WS_BLK + MIO32SEL + (halGLOBAL_MIO0_ws_mio0<<BUS_STARTBIT) + 0x0011)
#define WS_MIO0_slipa_out                 (WS_BLK + MIO32SEL + (halGLOBAL_MIO0_ws_mio0<<BUS_STARTBIT) + 0x0012)
#define WS_MIO0_slipb_out                 (WS_BLK + MIO32SEL + (halGLOBAL_MIO0_ws_mio0<<BUS_STARTBIT) + 0x0013)
#define WS_MIO0_slipc_out                 (WS_BLK + MIO32SEL + (halGLOBAL_MIO0_ws_mio0<<BUS_STARTBIT) + 0x0014)
#define WS_MIO0_slipd_out                 (WS_BLK + MIO32SEL + (halGLOBAL_MIO0_ws_mio0<<BUS_STARTBIT) + 0x0015)
#define WS_MIO0_trerr                     (WS_BLK + MIO32SEL + (halGLOBAL_MIO0_ws_mio0<<BUS_STARTBIT) + 0x0016)
//MIO1
#define WS_MIO1_smp1o                     (WS_BLK + MIO32SEL + (halGLOBAL_MIO1_ws_mio1<<BUS_STARTBIT) + 0x0000)
#define WS_MIO1_smp2o                     (WS_BLK + MIO32SEL + (halGLOBAL_MIO1_ws_mio1<<BUS_STARTBIT) + 0x0001)
#define WS_MIO1_smp3o                     (WS_BLK + MIO32SEL + (halGLOBAL_MIO1_ws_mio1<<BUS_STARTBIT) + 0x0002)
#define WS_MIO1_smp4o                     (WS_BLK + MIO32SEL + (halGLOBAL_MIO1_ws_mio1<<BUS_STARTBIT) + 0x0003)
#define WS_MIO1_smp5o                     (WS_BLK + MIO32SEL + (halGLOBAL_MIO1_ws_mio1<<BUS_STARTBIT) + 0x0004)
#define WS_MIO1_wgate_cd                  (WS_BLK + MIO32SEL + (halGLOBAL_MIO1_ws_mio1<<BUS_STARTBIT) + 0x0005)
#define WS_MIO1_wgate_cutoff_cd           (WS_BLK + MIO32SEL + (halGLOBAL_MIO1_ws_mio1<<BUS_STARTBIT) + 0x0006)
#define WS_MIO1_wgate_dvd                 (WS_BLK + MIO32SEL + (halGLOBAL_MIO1_ws_mio1<<BUS_STARTBIT) + 0x0007)
#define WS_MIO1_wgate_cutoff_dvd          (WS_BLK + MIO32SEL + (halGLOBAL_MIO1_ws_mio1<<BUS_STARTBIT) + 0x0008)
#define WS_MIO1_wgate_bd                  (WS_BLK + MIO32SEL + (halGLOBAL_MIO1_ws_mio1<<BUS_STARTBIT) + 0x0009)
#define WS_MIO1_wgate_cutoff_bd           (WS_BLK + MIO32SEL + (halGLOBAL_MIO1_ws_mio1<<BUS_STARTBIT) + 0x000A)
#define WS_MIO1_wgate_cus                 (WS_BLK + MIO32SEL + (halGLOBAL_MIO1_ws_mio1<<BUS_STARTBIT) + 0x000B)
#define WS_MIO1_wgate_out                 (WS_BLK + MIO32SEL + (halGLOBAL_MIO1_ws_mio1<<BUS_STARTBIT) + 0x000C)
#define WS_MIO1_wgate_delayed             (WS_BLK + MIO32SEL + (halGLOBAL_MIO1_ws_mio1<<BUS_STARTBIT) + 0x000D)
#define WS_MIO1_lswgate                   (WS_BLK + MIO32SEL + (halGLOBAL_MIO1_ws_mio1<<BUS_STARTBIT) + 0x000E)
#define WS_MIO1_reserved                  (WS_BLK + MIO32SEL + (halGLOBAL_MIO1_ws_mio1<<BUS_STARTBIT) + 0x000F)
#define WS_MIO1_slpdni_cus                (WS_BLK + MIO32SEL + (halGLOBAL_MIO1_ws_mio1<<BUS_STARTBIT) + 0x0010)
#define WS_MIO1_slpupi_cus                (WS_BLK + MIO32SEL + (halGLOBAL_MIO1_ws_mio1<<BUS_STARTBIT) + 0x0011)
#define WS_MIO1_slipa_out                 (WS_BLK + MIO32SEL + (halGLOBAL_MIO1_ws_mio1<<BUS_STARTBIT) + 0x0012)
#define WS_MIO1_slipb_out                 (WS_BLK + MIO32SEL + (halGLOBAL_MIO1_ws_mio1<<BUS_STARTBIT) + 0x0013)
#define WS_MIO1_slipc_out                 (WS_BLK + MIO32SEL + (halGLOBAL_MIO1_ws_mio1<<BUS_STARTBIT) + 0x0014)
#define WS_MIO1_slipd_out                 (WS_BLK + MIO32SEL + (halGLOBAL_MIO1_ws_mio1<<BUS_STARTBIT) + 0x0015)
#define WS_MIO1_trerr                     (WS_BLK + MIO32SEL + (halGLOBAL_MIO1_ws_mio1<<BUS_STARTBIT) + 0x0016)
//MIO2
#define WS_MIO2_smp1o                     (WS_BLK + MIO32SEL + (halGLOBAL_MIO2_ws_mio2<<BUS_STARTBIT) + 0x0000)
#define WS_MIO2_smp2o                     (WS_BLK + MIO32SEL + (halGLOBAL_MIO2_ws_mio2<<BUS_STARTBIT) + 0x0001)
#define WS_MIO2_smp3o                     (WS_BLK + MIO32SEL + (halGLOBAL_MIO2_ws_mio2<<BUS_STARTBIT) + 0x0002)
#define WS_MIO2_smp4o                     (WS_BLK + MIO32SEL + (halGLOBAL_MIO2_ws_mio2<<BUS_STARTBIT) + 0x0003)
#define WS_MIO2_smp5o                     (WS_BLK + MIO32SEL + (halGLOBAL_MIO2_ws_mio2<<BUS_STARTBIT) + 0x0004)
#define WS_MIO2_wgate_cd                  (WS_BLK + MIO32SEL + (halGLOBAL_MIO2_ws_mio2<<BUS_STARTBIT) + 0x0005)
#define WS_MIO2_wgate_cutoff_cd           (WS_BLK + MIO32SEL + (halGLOBAL_MIO2_ws_mio2<<BUS_STARTBIT) + 0x0006)
#define WS_MIO2_wgate_dvd                 (WS_BLK + MIO32SEL + (halGLOBAL_MIO2_ws_mio2<<BUS_STARTBIT) + 0x0007)
#define WS_MIO2_wgate_cutoff_dvd          (WS_BLK + MIO32SEL + (halGLOBAL_MIO2_ws_mio2<<BUS_STARTBIT) + 0x0008)
#define WS_MIO2_wgate_bd                  (WS_BLK + MIO32SEL + (halGLOBAL_MIO2_ws_mio2<<BUS_STARTBIT) + 0x0009)
#define WS_MIO2_wgate_cutoff_bd           (WS_BLK + MIO32SEL + (halGLOBAL_MIO2_ws_mio2<<BUS_STARTBIT) + 0x000A)
#define WS_MIO2_wgate_cus                 (WS_BLK + MIO32SEL + (halGLOBAL_MIO2_ws_mio2<<BUS_STARTBIT) + 0x000B)
#define WS_MIO2_wgate_out                 (WS_BLK + MIO32SEL + (halGLOBAL_MIO2_ws_mio2<<BUS_STARTBIT) + 0x000C)
#define WS_MIO2_wgate_delayed             (WS_BLK + MIO32SEL + (halGLOBAL_MIO2_ws_mio2<<BUS_STARTBIT) + 0x000D)
#define WS_MIO2_lswgate                   (WS_BLK + MIO32SEL + (halGLOBAL_MIO2_ws_mio2<<BUS_STARTBIT) + 0x000E)
#define WS_MIO2_reserved                  (WS_BLK + MIO32SEL + (halGLOBAL_MIO2_ws_mio2<<BUS_STARTBIT) + 0x000F)
#define WS_MIO2_slpdni_cus                (WS_BLK + MIO32SEL + (halGLOBAL_MIO2_ws_mio2<<BUS_STARTBIT) + 0x0010)
#define WS_MIO2_slpupi_cus                (WS_BLK + MIO32SEL + (halGLOBAL_MIO2_ws_mio2<<BUS_STARTBIT) + 0x0011)
#define WS_MIO2_slipa_out                 (WS_BLK + MIO32SEL + (halGLOBAL_MIO2_ws_mio2<<BUS_STARTBIT) + 0x0012)
#define WS_MIO2_slipb_out                 (WS_BLK + MIO32SEL + (halGLOBAL_MIO2_ws_mio2<<BUS_STARTBIT) + 0x0013)
#define WS_MIO2_slipc_out                 (WS_BLK + MIO32SEL + (halGLOBAL_MIO2_ws_mio2<<BUS_STARTBIT) + 0x0014)
#define WS_MIO2_slipd_out                 (WS_BLK + MIO32SEL + (halGLOBAL_MIO2_ws_mio2<<BUS_STARTBIT) + 0x0015)
#define WS_MIO2_trerr                     (WS_BLK + MIO32SEL + (halGLOBAL_MIO2_ws_mio2<<BUS_STARTBIT) + 0x0016)
//MIO3
#define WS_MIO3_smp1o                     (WS_BLK + MIO32SEL + (halGLOBAL_MIO3_ws_mio3<<BUS_STARTBIT) + 0x0000)
#define WS_MIO3_smp2o                     (WS_BLK + MIO32SEL + (halGLOBAL_MIO3_ws_mio3<<BUS_STARTBIT) + 0x0001)
#define WS_MIO3_smp3o                     (WS_BLK + MIO32SEL + (halGLOBAL_MIO3_ws_mio3<<BUS_STARTBIT) + 0x0002)
#define WS_MIO3_smp4o                     (WS_BLK + MIO32SEL + (halGLOBAL_MIO3_ws_mio3<<BUS_STARTBIT) + 0x0003)
#define WS_MIO3_smp5o                     (WS_BLK + MIO32SEL + (halGLOBAL_MIO3_ws_mio3<<BUS_STARTBIT) + 0x0004)
#define WS_MIO3_wgate_cd                  (WS_BLK + MIO32SEL + (halGLOBAL_MIO3_ws_mio3<<BUS_STARTBIT) + 0x0005)
#define WS_MIO3_wgate_cutoff_cd           (WS_BLK + MIO32SEL + (halGLOBAL_MIO3_ws_mio3<<BUS_STARTBIT) + 0x0006)
#define WS_MIO3_wgate_dvd                 (WS_BLK + MIO32SEL + (halGLOBAL_MIO3_ws_mio3<<BUS_STARTBIT) + 0x0007)
#define WS_MIO3_wgate_cutoff_dvd          (WS_BLK + MIO32SEL + (halGLOBAL_MIO3_ws_mio3<<BUS_STARTBIT) + 0x0008)
#define WS_MIO3_wgate_bd                  (WS_BLK + MIO32SEL + (halGLOBAL_MIO3_ws_mio3<<BUS_STARTBIT) + 0x0009)
#define WS_MIO3_wgate_cutoff_bd           (WS_BLK + MIO32SEL + (halGLOBAL_MIO3_ws_mio3<<BUS_STARTBIT) + 0x000A)
#define WS_MIO3_wgate_cus                 (WS_BLK + MIO32SEL + (halGLOBAL_MIO3_ws_mio3<<BUS_STARTBIT) + 0x000B)
#define WS_MIO3_wgate_out                 (WS_BLK + MIO32SEL + (halGLOBAL_MIO3_ws_mio3<<BUS_STARTBIT) + 0x000C)
#define WS_MIO3_wgate_delayed             (WS_BLK + MIO32SEL + (halGLOBAL_MIO3_ws_mio3<<BUS_STARTBIT) + 0x000D)
#define WS_MIO3_lswgate                   (WS_BLK + MIO32SEL + (halGLOBAL_MIO3_ws_mio3<<BUS_STARTBIT) + 0x000E)
#define WS_MIO3_reserved                  (WS_BLK + MIO32SEL + (halGLOBAL_MIO3_ws_mio3<<BUS_STARTBIT) + 0x000F)
#define WS_MIO3_slpdni_cus                (WS_BLK + MIO32SEL + (halGLOBAL_MIO3_ws_mio3<<BUS_STARTBIT) + 0x0010)
#define WS_MIO3_slpupi_cus                (WS_BLK + MIO32SEL + (halGLOBAL_MIO3_ws_mio3<<BUS_STARTBIT) + 0x0011)
#define WS_MIO3_slipa_out                 (WS_BLK + MIO32SEL + (halGLOBAL_MIO3_ws_mio3<<BUS_STARTBIT) + 0x0012)
#define WS_MIO3_slipb_out                 (WS_BLK + MIO32SEL + (halGLOBAL_MIO3_ws_mio3<<BUS_STARTBIT) + 0x0013)
#define WS_MIO3_slipc_out                 (WS_BLK + MIO32SEL + (halGLOBAL_MIO3_ws_mio3<<BUS_STARTBIT) + 0x0014)
#define WS_MIO3_slipd_out                 (WS_BLK + MIO32SEL + (halGLOBAL_MIO3_ws_mio3<<BUS_STARTBIT) + 0x0015)
#define WS_MIO3_trerr                     (WS_BLK + MIO32SEL + (halGLOBAL_MIO3_ws_mio3<<BUS_STARTBIT) + 0x0016)

/****************************************************************************
* MIO32 BUS LS BLOCK
****************************************************************************/
//MIO0
#define LS_MIO0_write_bit_toggle           (LS_BLK + MIO32SEL + (halGLOBAL_MIO0_lsmio <<BUS_STARTBIT) + 0x0000)
#define LS_MIO0_ls_spoke_sysclk            (LS_BLK + MIO32SEL + (halGLOBAL_MIO0_lsmio <<BUS_STARTBIT) + 0x0001)
#define LS_MIO0_ls_wgate                   (LS_BLK + MIO32SEL + (halGLOBAL_MIO0_lsmio <<BUS_STARTBIT) + 0x0002)
#define LS_MIO0_trig_spoke_int             (LS_BLK + MIO32SEL + (halGLOBAL_MIO0_lsmio <<BUS_STARTBIT) + 0x0003)
#define LS_MIO0_trig_sawtooth_int          (LS_BLK + MIO32SEL + (halGLOBAL_MIO0_lsmio <<BUS_STARTBIT) + 0x0004)
#define LS_MIO0_idxmiss                    (LS_BLK + MIO32SEL + (halGLOBAL_MIO0_lsmio <<BUS_STARTBIT) + 0x0005)
#define LS_MIO0_curbit0                    (LS_BLK + MIO32SEL + (halGLOBAL_MIO0_lsmio <<BUS_STARTBIT) + 0x0006)
#define LS_MIO0_spokecnt0                  (LS_BLK + MIO32SEL + (halGLOBAL_MIO0_lsmio <<BUS_STARTBIT) + 0x0007)
#define LS_MIO0_sawtcnt0                   (LS_BLK + MIO32SEL + (halGLOBAL_MIO0_lsmio <<BUS_STARTBIT) + 0x0008)
#define LS_MIO0_state_idx0                 (LS_BLK + MIO32SEL + (halGLOBAL_MIO0_lsmio <<BUS_STARTBIT) + 0x0009)
#define LS_MIO0_state_wr0                  (LS_BLK + MIO32SEL + (halGLOBAL_MIO0_lsmio <<BUS_STARTBIT) + 0x000A)
#define LS_MIO0_mem_req                    (LS_BLK + MIO32SEL + (halGLOBAL_MIO0_lsmio <<BUS_STARTBIT) + 0x000B)
#define LS_MIO0_sram_enable                (LS_BLK + MIO32SEL + (halGLOBAL_MIO0_lsmio <<BUS_STARTBIT) + 0x000C)
#define LS_MIO0_pre_prim_index_found       (LS_BLK + MIO32SEL + (halGLOBAL_MIO0_lsmio <<BUS_STARTBIT) + 0x000D)
#define LS_MIO0_mid_read                   (LS_BLK + MIO32SEL + (halGLOBAL_MIO0_lsmio <<BUS_STARTBIT) + 0x000E)
//MIO1
#define LS_MIO1_lsdata                     (LS_BLK + MIO32SEL + (halGLOBAL_MIO1_lsmio <<BUS_STARTBIT) + 0x0000)
#define LS_MIO1_lsspoke                    (LS_BLK + MIO32SEL + (halGLOBAL_MIO1_lsmio <<BUS_STARTBIT) + 0x0001)
#define LS_MIO1_ls_wrdata                  (LS_BLK + MIO32SEL + (halGLOBAL_MIO1_lsmio <<BUS_STARTBIT) + 0x0002)
#define LS_MIO1_trig_spoke0_int            (LS_BLK + MIO32SEL + (halGLOBAL_MIO1_lsmio <<BUS_STARTBIT) + 0x0003)
#define LS_MIO1_trig_idxmark_int           (LS_BLK + MIO32SEL + (halGLOBAL_MIO1_lsmio <<BUS_STARTBIT) + 0x0004)
#define LS_MIO1_idx2miss                   (LS_BLK + MIO32SEL + (halGLOBAL_MIO1_lsmio <<BUS_STARTBIT) + 0x0005)
#define LS_MIO1_curbit1                    (LS_BLK + MIO32SEL + (halGLOBAL_MIO1_lsmio <<BUS_STARTBIT) + 0x0006)
#define LS_MIO1_spokecnt1                  (LS_BLK + MIO32SEL + (halGLOBAL_MIO1_lsmio <<BUS_STARTBIT) + 0x0007)
#define LS_MIO1_sawtcnt1                   (LS_BLK + MIO32SEL + (halGLOBAL_MIO1_lsmio <<BUS_STARTBIT) + 0x0008)
#define LS_MIO1_state_idx1                 (LS_BLK + MIO32SEL + (halGLOBAL_MIO1_lsmio <<BUS_STARTBIT) + 0x0009)
#define LS_MIO1_state_wr1                  (LS_BLK + MIO32SEL + (halGLOBAL_MIO1_lsmio <<BUS_STARTBIT) + 0x000A)
#define LS_MIO1_mem_ack                    (LS_BLK + MIO32SEL + (halGLOBAL_MIO1_lsmio <<BUS_STARTBIT) + 0x000B)
#define LS_MIO1_sram_wen                   (LS_BLK + MIO32SEL + (halGLOBAL_MIO1_lsmio <<BUS_STARTBIT) + 0x000C)
#define LS_MIO1_prim_index_found           (LS_BLK + MIO32SEL + (halGLOBAL_MIO1_lsmio <<BUS_STARTBIT) + 0x000D)
#define LS_MIO1_midx_check                 (LS_BLK + MIO32SEL + (halGLOBAL_MIO1_lsmio <<BUS_STARTBIT) + 0x000E)
//MIO2
#define LS_MIO2_lsspoke                    (LS_BLK + MIO32SEL + (halGLOBAL_MIO2_lsmio <<BUS_STARTBIT) + 0x0000)
#define LS_MIO2_ls_data_sysclk             (LS_BLK + MIO32SEL + (halGLOBAL_MIO2_lsmio <<BUS_STARTBIT) + 0x0001)
#define LS_MIO2_wrclk_p                    (LS_BLK + MIO32SEL + (halGLOBAL_MIO2_lsmio <<BUS_STARTBIT) + 0x0002)
#define LS_MIO2_trig_midcmp_int            (LS_BLK + MIO32SEL + (halGLOBAL_MIO2_lsmio <<BUS_STARTBIT) + 0x0003)
#define LS_MIO2_trig_lswrerr_int           (LS_BLK + MIO32SEL + (halGLOBAL_MIO2_lsmio <<BUS_STARTBIT) + 0x0004)
#define LS_MIO2_stabslip                   (LS_BLK + MIO32SEL + (halGLOBAL_MIO2_lsmio <<BUS_STARTBIT) + 0x0005)
#define LS_MIO2_curbit2                    (LS_BLK + MIO32SEL + (halGLOBAL_MIO2_lsmio <<BUS_STARTBIT) + 0x0006)
#define LS_MIO2_spokecnt2                  (LS_BLK + MIO32SEL + (halGLOBAL_MIO2_lsmio <<BUS_STARTBIT) + 0x0007)
#define LS_MIO2_sawtcnt2                   (LS_BLK + MIO32SEL + (halGLOBAL_MIO2_lsmio <<BUS_STARTBIT) + 0x0008)
#define LS_MIO2_state_idx2                 (LS_BLK + MIO32SEL + (halGLOBAL_MIO2_lsmio <<BUS_STARTBIT) + 0x0009)
#define LS_MIO2_spokecnt799                (LS_BLK + MIO32SEL + (halGLOBAL_MIO2_lsmio <<BUS_STARTBIT) + 0x000A)
#define LS_MIO2_mem_rdata0                 (LS_BLK + MIO32SEL + (halGLOBAL_MIO2_lsmio <<BUS_STARTBIT) + 0x000B)
#define LS_MIO2_sram_addr0                 (LS_BLK + MIO32SEL + (halGLOBAL_MIO2_lsmio <<BUS_STARTBIT) + 0x000C)
#define LS_MIO2_pre_second_index_found     (LS_BLK + MIO32SEL + (halGLOBAL_MIO2_lsmio <<BUS_STARTBIT) + 0x000D)
#define LS_MIO2_sawtcnt_sel                (LS_BLK + MIO32SEL + (halGLOBAL_MIO2_lsmio <<BUS_STARTBIT) + 0x000E)
//MIO3
#define LS_MIO3_spoke_count_zero           (LS_BLK + MIO32SEL + (halGLOBAL_MIO3_lsmio <<BUS_STARTBIT) + 0x0000)
#define LS_MIO3_lsdata                     (LS_BLK + MIO32SEL + (halGLOBAL_MIO3_lsmio <<BUS_STARTBIT) + 0x0001)
#define LS_MIO3_wrclk_p_match_cnt0         (LS_BLK + MIO32SEL + (halGLOBAL_MIO3_lsmio <<BUS_STARTBIT) + 0x0002)
#define LS_MIO3_trig_trkcmp_int            (LS_BLK + MIO32SEL + (halGLOBAL_MIO3_lsmio <<BUS_STARTBIT) + 0x0003)
#define LS_MIO3_trig_lswrstrt_int          (LS_BLK + MIO32SEL + (halGLOBAL_MIO3_lsmio <<BUS_STARTBIT) + 0x0004)
#define LS_MIO3_lstbslip                   (LS_BLK + MIO32SEL + (halGLOBAL_MIO3_lsmio <<BUS_STARTBIT) + 0x0005)
#define LS_MIO3_curbit3                    (LS_BLK + MIO32SEL + (halGLOBAL_MIO3_lsmio <<BUS_STARTBIT) + 0x0006)
#define LS_MIO3_spokecnt3                  (LS_BLK + MIO32SEL + (halGLOBAL_MIO3_lsmio <<BUS_STARTBIT) + 0x0007)
#define LS_MIO3_sawtcnt3                   (LS_BLK + MIO32SEL + (halGLOBAL_MIO3_lsmio <<BUS_STARTBIT) + 0x0008)
#define LS_MIO3_trkptr                     (LS_BLK + MIO32SEL + (halGLOBAL_MIO3_lsmio <<BUS_STARTBIT) + 0x0009)
#define LS_MIO3_spoke_p                    (LS_BLK + MIO32SEL + (halGLOBAL_MIO3_lsmio <<BUS_STARTBIT) + 0x000A)
#define LS_MIO3_mem_rdata1                 (LS_BLK + MIO32SEL + (halGLOBAL_MIO3_lsmio <<BUS_STARTBIT) + 0x000B)
#define LS_MIO3_sram_wdata0                (LS_BLK + MIO32SEL + (halGLOBAL_MIO3_lsmio <<BUS_STARTBIT) + 0x000C)
#define LS_MIO3_second_index_found         (LS_BLK + MIO32SEL + (halGLOBAL_MIO3_lsmio <<BUS_STARTBIT) + 0x000D)
#define LS_MIO3_lswrmiss                   (LS_BLK + MIO32SEL + (halGLOBAL_MIO3_lsmio <<BUS_STARTBIT) + 0x000E)

/****************************************************************************
* MIO32 BUS CDD BLOCK
****************************************************************************/
//This part is empty

/****************************************************************************
* MIO32 BUS CDE BLOCK
****************************************************************************/
//This part is empty

/****************************************************************************
* MIO32 BUS OPC BLOCK
****************************************************************************/
#define OPC_MIO0_WSTRT_opc_td_opc_samp          (OPC_BLK + MIO32SEL + (halGLOBAL_MIO0_opc_mio0 <<BUS_STARTBIT) + 0x0000)
#define OPC_MIO1_WSTRT_opc_tc_opc_td            (OPC_BLK + MIO32SEL + (halGLOBAL_MIO1_opc_mio1 <<BUS_STARTBIT) + 0x0000)
#define OPC_MIO2_WSTRT_opc_tr_opc_tc            (OPC_BLK + MIO32SEL + (halGLOBAL_MIO2_opc_mio2 <<BUS_STARTBIT) + 0x0000)
#define OPC_MIO3_WSTRT_wobble_opc_pulse         (OPC_BLK + MIO32SEL + (halGLOBAL_MIO3_opc_mio3 <<BUS_STARTBIT) + 0x0000)
#define OPC_MIO0_WBLSTM_opc_start_opc_samp      (OPC_BLK + MIO32SEL + (halGLOBAL_MIO0_opc_mio0 <<BUS_STARTBIT) + 0x0001)
#define OPC_MIO1_WBLSTM_opc_samp_opc_adcld      (OPC_BLK + MIO32SEL + (halGLOBAL_MIO1_opc_mio1 <<BUS_STARTBIT) + 0x0001)
#define OPC_MIO2_WBLSTM_opc_stop_sram_wr        (OPC_BLK + MIO32SEL + (halGLOBAL_MIO2_opc_mio2 <<BUS_STARTBIT) + 0x0001)
#define OPC_MIO3_WBLSTM_srv_stm_d_opc_opc_samp  (OPC_BLK + MIO32SEL + (halGLOBAL_MIO3_opc_mio3 <<BUS_STARTBIT) + 0x0001)

/****************************************************************************
* MIO32 BUS HOST BLOCK
****************************************************************************/
//halHST_SATADBG_DLXSMa
#define HOST_MIO0_dbg_dlxsm0                    (HOST_BLK + MIO32SEL + (halGLOBAL_MIO0_sata_dbg0 <<BUS_STARTBIT) + (0 <<MUX_STARTBIT) + halHST_SATADBG_DLXSMa)
#define HOST_MIO1_dbg_dlxsm1                    (HOST_BLK + MIO32SEL + (halGLOBAL_MIO1_sata_dbg1 <<BUS_STARTBIT) + (0 <<MUX_STARTBIT) + halHST_SATADBG_DLXSMa)
#define HOST_MIO2_dbg_dlxsm2                    (HOST_BLK + MIO32SEL + (halGLOBAL_MIO2_sata_dbg2 <<BUS_STARTBIT) + (0 <<MUX_STARTBIT) + halHST_SATADBG_DLXSMa)
#define HOST_MIO3_dbg_dlxsm3                    (HOST_BLK + MIO32SEL + (halGLOBAL_MIO3_sata_dbg3 <<BUS_STARTBIT) + (0 <<MUX_STARTBIT) + halHST_SATADBG_DLXSMa)
#define HOST_MIO0_dbg_dlxsm4                    (HOST_BLK + MIO32SEL + (halGLOBAL_MIO0_sata_dbg0 <<BUS_STARTBIT) + (1 <<MUX_STARTBIT) + halHST_SATADBG_DLXSMa)
#define HOST_MIO1_dbg_dlxsm5                    (HOST_BLK + MIO32SEL + (halGLOBAL_MIO1_sata_dbg1 <<BUS_STARTBIT) + (1 <<MUX_STARTBIT) + halHST_SATADBG_DLXSMa)
#define HOST_MIO2_dbg_dlxsm6                    (HOST_BLK + MIO32SEL + (halGLOBAL_MIO2_sata_dbg2 <<BUS_STARTBIT) + (1 <<MUX_STARTBIT) + halHST_SATADBG_DLXSMa)
#define HOST_MIO3_dbg_align_rst                 (HOST_BLK + MIO32SEL + (halGLOBAL_MIO3_sata_dbg3 <<BUS_STARTBIT) + (1 <<MUX_STARTBIT) + halHST_SATADBG_DLXSMa)
//halHST_SATADBG_DLXSMb
#define HOST_MIO0_dbg_dlxsm7                    (HOST_BLK + MIO32SEL + (halGLOBAL_MIO0_sata_dbg0 <<BUS_STARTBIT) + (0 <<MUX_STARTBIT) + halHST_SATADBG_DLXSMb)
#define HOST_MIO1_dbg_dlxsm8                    (HOST_BLK + MIO32SEL + (halGLOBAL_MIO1_sata_dbg1 <<BUS_STARTBIT) + (0 <<MUX_STARTBIT) + halHST_SATADBG_DLXSMb)
#define HOST_MIO2_dbg_dlxsm9                    (HOST_BLK + MIO32SEL + (halGLOBAL_MIO2_sata_dbg2 <<BUS_STARTBIT) + (0 <<MUX_STARTBIT) + halHST_SATADBG_DLXSMb)
#define HOST_MIO3_dbg_dlxsm10                   (HOST_BLK + MIO32SEL + (halGLOBAL_MIO3_sata_dbg3 <<BUS_STARTBIT) + (0 <<MUX_STARTBIT) + halHST_SATADBG_DLXSMb)
#define HOST_MIO0_dbg_dlxsm11                   (HOST_BLK + MIO32SEL + (halGLOBAL_MIO0_sata_dbg0 <<BUS_STARTBIT) + (1 <<MUX_STARTBIT) + halHST_SATADBG_DLXSMb)
#define HOST_MIO1_dbg_dlxsm12                   (HOST_BLK + MIO32SEL + (halGLOBAL_MIO1_sata_dbg1 <<BUS_STARTBIT) + (1 <<MUX_STARTBIT) + halHST_SATADBG_DLXSMb)
#define HOST_MIO2_dbg_dlxsm13                   (HOST_BLK + MIO32SEL + (halGLOBAL_MIO2_sata_dbg2 <<BUS_STARTBIT) + (1 <<MUX_STARTBIT) + halHST_SATADBG_DLXSMb)
#define HOST_MIO3_dbg_dlxsm14                   (HOST_BLK + MIO32SEL + (halGLOBAL_MIO3_sata_dbg3 <<BUS_STARTBIT) + (1 <<MUX_STARTBIT) + halHST_SATADBG_DLXSMb)
//halHST_SATADBG_DLRSMa
#define HOST_MIO0_dbg_dlrsm0                    (HOST_BLK + MIO32SEL + (halGLOBAL_MIO0_sata_dbg0 <<BUS_STARTBIT) + (0 <<MUX_STARTBIT) + halHST_SATADBG_DLRSMa)
#define HOST_MIO1_dbg_dlrsm1                    (HOST_BLK + MIO32SEL + (halGLOBAL_MIO1_sata_dbg1 <<BUS_STARTBIT) + (0 <<MUX_STARTBIT) + halHST_SATADBG_DLRSMa)
#define HOST_MIO2_dbg_dlrsm2                    (HOST_BLK + MIO32SEL + (halGLOBAL_MIO2_sata_dbg2 <<BUS_STARTBIT) + (0 <<MUX_STARTBIT) + halHST_SATADBG_DLRSMa)
#define HOST_MIO3_dbg_dlrsm3                    (HOST_BLK + MIO32SEL + (halGLOBAL_MIO3_sata_dbg3 <<BUS_STARTBIT) + (0 <<MUX_STARTBIT) + halHST_SATADBG_DLRSMa)
//halHST_SATADBG_DLRSMb
#define HOST_MIO0_dbg_dlrsm4                    (HOST_BLK + MIO32SEL + (halGLOBAL_MIO0_sata_dbg0 <<BUS_STARTBIT) + (0 <<MUX_STARTBIT) + halHST_SATADBG_DLRSMb)
#define HOST_MIO1_dbg_dlrsm5                    (HOST_BLK + MIO32SEL + (halGLOBAL_MIO1_sata_dbg1 <<BUS_STARTBIT) + (0 <<MUX_STARTBIT) + halHST_SATADBG_DLRSMb)
#define HOST_MIO2_dbg_dlrsm6                    (HOST_BLK + MIO32SEL + (halGLOBAL_MIO2_sata_dbg2 <<BUS_STARTBIT) + (0 <<MUX_STARTBIT) + halHST_SATADBG_DLRSMb)
#define HOST_MIO3_dbg_dlrsm7                    (HOST_BLK + MIO32SEL + (halGLOBAL_MIO3_sata_dbg3 <<BUS_STARTBIT) + (0 <<MUX_STARTBIT) + halHST_SATADBG_DLRSMb)
#define HOST_MIO0_dbg_dlrsm8                    (HOST_BLK + MIO32SEL + (halGLOBAL_MIO0_sata_dbg0 <<BUS_STARTBIT) + (1 <<MUX_STARTBIT) + halHST_SATADBG_DLRSMb)
#define HOST_MIO1_dbg_dlrsm9                    (HOST_BLK + MIO32SEL + (halGLOBAL_MIO1_sata_dbg1 <<BUS_STARTBIT) + (1 <<MUX_STARTBIT) + halHST_SATADBG_DLRSMb)
#define HOST_MIO2_dbg_dlrsm10                   (HOST_BLK + MIO32SEL + (halGLOBAL_MIO2_sata_dbg2 <<BUS_STARTBIT) + (1 <<MUX_STARTBIT) + halHST_SATADBG_DLRSMb)
//halHST_SATADBG_DSM
#define HOST_MIO0_dbg_dsm0                      (HOST_BLK + MIO32SEL + (halGLOBAL_MIO0_sata_dbg0 <<BUS_STARTBIT) + (0 <<MUX_STARTBIT) + halHST_SATADBG_DSM)
#define HOST_MIO1_dbg_dsm1                      (HOST_BLK + MIO32SEL + (halGLOBAL_MIO1_sata_dbg1 <<BUS_STARTBIT) + (0 <<MUX_STARTBIT) + halHST_SATADBG_DSM)
#define HOST_MIO2_dbg_dsm2                      (HOST_BLK + MIO32SEL + (halGLOBAL_MIO2_sata_dbg2 <<BUS_STARTBIT) + (0 <<MUX_STARTBIT) + halHST_SATADBG_DSM)
#define HOST_MIO3_dbg_dsm3                      (HOST_BLK + MIO32SEL + (halGLOBAL_MIO3_sata_dbg3 <<BUS_STARTBIT) + (0 <<MUX_STARTBIT) + halHST_SATADBG_DSM)
#define HOST_MIO0_dbg_dsm4                      (HOST_BLK + MIO32SEL + (halGLOBAL_MIO0_sata_dbg0 <<BUS_STARTBIT) + (1 <<MUX_STARTBIT) + halHST_SATADBG_DSM)
#define HOST_MIO1_dbg_dsm5                      (HOST_BLK + MIO32SEL + (halGLOBAL_MIO1_sata_dbg1 <<BUS_STARTBIT) + (1 <<MUX_STARTBIT) + halHST_SATADBG_DSM)
#define HOST_MIO2_dbg_dsm6                      (HOST_BLK + MIO32SEL + (halGLOBAL_MIO2_sata_dbg2 <<BUS_STARTBIT) + (1 <<MUX_STARTBIT) + halHST_SATADBG_DSM)
#define HOST_MIO3_dbg_dsm7                      (HOST_BLK + MIO32SEL + (halGLOBAL_MIO3_sata_dbg3 <<BUS_STARTBIT) + (1 <<MUX_STARTBIT) + halHST_SATADBG_DSM)
//halHST_SATADBG_LNK_XRDY
#define HOST_MIO0_dbg_lnk_tx_fis                (HOST_BLK + MIO32SEL + (halGLOBAL_MIO0_sata_dbg0 <<BUS_STARTBIT) + (0 <<MUX_STARTBIT) + halHST_SATADBG_LNK_XRDY)
#define HOST_MIO1_dbg_t0_txrok                  (HOST_BLK + MIO32SEL + (halGLOBAL_MIO1_sata_dbg1 <<BUS_STARTBIT) + (0 <<MUX_STARTBIT) + halHST_SATADBG_LNK_XRDY)
#define HOST_MIO2_dbg_tx_datafis                (HOST_BLK + MIO32SEL + (halGLOBAL_MIO2_sata_dbg2 <<BUS_STARTBIT) + (0 <<MUX_STARTBIT) + halHST_SATADBG_LNK_XRDY)
#define HOST_MIO3_dbg_tx_ndatafis               (HOST_BLK + MIO32SEL + (halGLOBAL_MIO3_sata_dbg3 <<BUS_STARTBIT) + (0 <<MUX_STARTBIT) + halHST_SATADBG_LNK_XRDY)
#define HOST_MIO0_dbg_t0_txndatafislat          (HOST_BLK + MIO32SEL + (halGLOBAL_MIO0_sata_dbg0 <<BUS_STARTBIT) + (1 <<MUX_STARTBIT) + halHST_SATADBG_LNK_XRDY)
#define HOST_MIO1_dbg_t0_srst                   (HOST_BLK + MIO32SEL + (halGLOBAL_MIO1_sata_dbg1 <<BUS_STARTBIT) + (1 <<MUX_STARTBIT) + halHST_SATADBG_LNK_XRDY)
//halHST_SATADBG_DCSM
#define HOST_MIO0_dbg_dcsm0                     (HOST_BLK + MIO32SEL + (halGLOBAL_MIO0_sata_dbg0 <<BUS_STARTBIT) + (0 <<MUX_STARTBIT) + halHST_SATADBG_DCSM)
#define HOST_MIO1_dbg_dcsm1                     (HOST_BLK + MIO32SEL + (halGLOBAL_MIO1_sata_dbg1 <<BUS_STARTBIT) + (0 <<MUX_STARTBIT) + halHST_SATADBG_DCSM)
#define HOST_MIO2_dbg_dcsm2                     (HOST_BLK + MIO32SEL + (halGLOBAL_MIO2_sata_dbg2 <<BUS_STARTBIT) + (0 <<MUX_STARTBIT) + halHST_SATADBG_DCSM)
#define HOST_MIO3_dbg_dcsm3                     (HOST_BLK + MIO32SEL + (halGLOBAL_MIO3_sata_dbg3 <<BUS_STARTBIT) + (0 <<MUX_STARTBIT) + halHST_SATADBG_DCSM)
#define HOST_MIO0_dbg_dcsm4                     (HOST_BLK + MIO32SEL + (halGLOBAL_MIO0_sata_dbg0 <<BUS_STARTBIT) + (1 <<MUX_STARTBIT) + halHST_SATADBG_DCSM)
#define HOST_MIO1_dbg_dcsm5                     (HOST_BLK + MIO32SEL + (halGLOBAL_MIO1_sata_dbg1 <<BUS_STARTBIT) + (1 <<MUX_STARTBIT) + halHST_SATADBG_DCSM)
//halHST_SATADBG_PM
#define HOST_MIO0_dbg_pm_state0                 (HOST_BLK + MIO32SEL + (halGLOBAL_MIO0_sata_dbg0 <<BUS_STARTBIT) + (0 <<MUX_STARTBIT) + halHST_SATADBG_PM)
#define HOST_MIO1_dbg_pm_state1                 (HOST_BLK + MIO32SEL + (halGLOBAL_MIO1_sata_dbg1 <<BUS_STARTBIT) + (0 <<MUX_STARTBIT) + halHST_SATADBG_PM)
#define HOST_MIO2_dbg_pm_state2                 (HOST_BLK + MIO32SEL + (halGLOBAL_MIO2_sata_dbg2 <<BUS_STARTBIT) + (0 <<MUX_STARTBIT) + halHST_SATADBG_PM)
#define HOST_MIO3_dbg_pm_state3                 (HOST_BLK + MIO32SEL + (halGLOBAL_MIO3_sata_dbg3 <<BUS_STARTBIT) + (0 <<MUX_STARTBIT) + halHST_SATADBG_PM)
#define HOST_MIO0_dbg_phy_cr                    (HOST_BLK + MIO32SEL + (halGLOBAL_MIO0_sata_dbg0 <<BUS_STARTBIT) + (1 <<MUX_STARTBIT) + halHST_SATADBG_PM)
#define HOST_MIO1_dbg_phy_cw                    (HOST_BLK + MIO32SEL + (halGLOBAL_MIO1_sata_dbg1 <<BUS_STARTBIT) + (1 <<MUX_STARTBIT) + halHST_SATADBG_PM)
//halHST_SATADBG_SATA_SYNC
#define HOST_MIO0_dbg_phy_rx0                   (HOST_BLK + MIO32SEL + (halGLOBAL_MIO0_sata_dbg0 <<BUS_STARTBIT) + (0 <<MUX_STARTBIT) + halHST_SATADBG_SATA_SYNC)
#define HOST_MIO1_dbg_phy_rx1                   (HOST_BLK + MIO32SEL + (halGLOBAL_MIO1_sata_dbg1 <<BUS_STARTBIT) + (0 <<MUX_STARTBIT) + halHST_SATADBG_SATA_SYNC)
#define HOST_MIO2_dbg_phy_rx2                   (HOST_BLK + MIO32SEL + (halGLOBAL_MIO2_sata_dbg2 <<BUS_STARTBIT) + (0 <<MUX_STARTBIT) + halHST_SATADBG_SATA_SYNC)
#define HOST_MIO3_dbg_phy_rx3                   (HOST_BLK + MIO32SEL + (halGLOBAL_MIO3_sata_dbg3 <<BUS_STARTBIT) + (0 <<MUX_STARTBIT) + halHST_SATADBG_SATA_SYNC)
#define HOST_MIO0_dbg_phy_tx0                   (HOST_BLK + MIO32SEL + (halGLOBAL_MIO0_sata_dbg0 <<BUS_STARTBIT) + (1 <<MUX_STARTBIT) + halHST_SATADBG_SATA_SYNC)
#define HOST_MIO1_dbg_phy_tx1                   (HOST_BLK + MIO32SEL + (halGLOBAL_MIO1_sata_dbg1 <<BUS_STARTBIT) + (1 <<MUX_STARTBIT) + halHST_SATADBG_SATA_SYNC)
#define HOST_MIO2_dbg_phy_tx2                   (HOST_BLK + MIO32SEL + (halGLOBAL_MIO2_sata_dbg2 <<BUS_STARTBIT) + (1 <<MUX_STARTBIT) + halHST_SATADBG_SATA_SYNC)
#define HOST_MIO3_dbg_phy_tx3                   (HOST_BLK + MIO32SEL + (halGLOBAL_MIO3_sata_dbg3 <<BUS_STARTBIT) + (1 <<MUX_STARTBIT) + halHST_SATADBG_SATA_SYNC)
//halHST_SATADBG_SATA_GBL1
#define HOST_MIO0_dbg_sata_comreset_n           (HOST_BLK + MIO32SEL + (halGLOBAL_MIO0_sata_dbg0 <<BUS_STARTBIT) + (0 <<MUX_STARTBIT) + halHST_SATADBG_SATA_GBL1)
#define HOST_MIO1_dbg_sata_phyrdy               (HOST_BLK + MIO32SEL + (halGLOBAL_MIO1_sata_dbg1 <<BUS_STARTBIT) + (0 <<MUX_STARTBIT) + halHST_SATADBG_SATA_GBL1)
#define HOST_MIO2_dbg_sata_dwclkon              (HOST_BLK + MIO32SEL + (halGLOBAL_MIO2_sata_dbg2 <<BUS_STARTBIT) + (0 <<MUX_STARTBIT) + halHST_SATADBG_SATA_GBL1)
#define HOST_MIO3_dbg_sata_linkrdy              (HOST_BLK + MIO32SEL + (halGLOBAL_MIO3_sata_dbg3 <<BUS_STARTBIT) + (0 <<MUX_STARTBIT) + halHST_SATADBG_SATA_GBL1)
#define HOST_MIO0_dbg_txreq_wakeupreq           (HOST_BLK + MIO32SEL + (halGLOBAL_MIO0_sata_dbg0 <<BUS_STARTBIT) + (1 <<MUX_STARTBIT) + halHST_SATADBG_SATA_GBL1)
#define HOST_MIO1_dbg_partial                   (HOST_BLK + MIO32SEL + (halGLOBAL_MIO1_sata_dbg1 <<BUS_STARTBIT) + (1 <<MUX_STARTBIT) + halHST_SATADBG_SATA_GBL1)
#define HOST_MIO2_dbg_slumber                   (HOST_BLK + MIO32SEL + (halGLOBAL_MIO2_sata_dbg2 <<BUS_STARTBIT) + (1 <<MUX_STARTBIT) + halHST_SATADBG_SATA_GBL1)
//halHST_SATADBG_SATA_GBL2
#define HOST_MIO0_dbg_sata_rxfifo_empty         (HOST_BLK + MIO32SEL + (halGLOBAL_MIO0_sata_dbg0 <<BUS_STARTBIT) + (0 <<MUX_STARTBIT) + halHST_SATADBG_SATA_GBL2)
#define HOST_MIO1_dbg_sata_txfifo_empty         (HOST_BLK + MIO32SEL + (halGLOBAL_MIO1_sata_dbg1 <<BUS_STARTBIT) + (0 <<MUX_STARTBIT) + halHST_SATADBG_SATA_GBL2)
#define HOST_MIO2_dbg_rx_fis_err                (HOST_BLK + MIO32SEL + (halGLOBAL_MIO2_sata_dbg2 <<BUS_STARTBIT) + (0 <<MUX_STARTBIT) + halHST_SATADBG_SATA_GBL2)
#define HOST_MIO3_dbg_rx_fis_ok                 (HOST_BLK + MIO32SEL + (halGLOBAL_MIO3_sata_dbg3 <<BUS_STARTBIT) + (0 <<MUX_STARTBIT) + halHST_SATADBG_SATA_GBL2)
#define HOST_MIO0_dbg_tx_fis_err                (HOST_BLK + MIO32SEL + (halGLOBAL_MIO0_sata_dbg0 <<BUS_STARTBIT) + (1 <<MUX_STARTBIT) + halHST_SATADBG_SATA_GBL2)
#define HOST_MIO1_dbg_tx_fis_ok                 (HOST_BLK + MIO32SEL + (halGLOBAL_MIO1_sata_dbg1 <<BUS_STARTBIT) + (1 <<MUX_STARTBIT) + halHST_SATADBG_SATA_GBL2)
//halHST_SATADBG_SATA_CLK
#define HOST_MIO0_dbg_sata_dword_clock_on       (HOST_BLK + MIO32SEL + (halGLOBAL_MIO0_sata_dbg0 <<BUS_STARTBIT) + (0 <<MUX_STARTBIT) + halHST_SATADBG_SATA_CLK)
#define HOST_MIO2_dbg_sata_dword_sleep_clock_on (HOST_BLK + MIO32SEL + (halGLOBAL_MIO1_sata_dbg1 <<BUS_STARTBIT) + (0 <<MUX_STARTBIT) + halHST_SATADBG_SATA_CLK)
#define HOST_MIO3_dbg_hif_clock_on              (HOST_BLK + MIO32SEL + (halGLOBAL_MIO2_sata_dbg2 <<BUS_STARTBIT) + (0 <<MUX_STARTBIT) + halHST_SATADBG_SATA_CLK)


/****************************************************************************
* MIO32 BUS BVCI BLOCK
****************************************************************************/
//This part is empty

/****************************************************************************
* MIO32 BUS SERVO BLOCK
****************************************************************************/
//MIO0
#define SERVO_MIO0_tezc                    (SERVO_BLK + MIO32SEL + (halGLOBAL_MIO0_sv_mio0<<BUS_STARTBIT) + 0x0000)
#define SERVO_MIO0_foonb                   (SERVO_BLK + MIO32SEL + (halGLOBAL_MIO0_sv_mio0<<BUS_STARTBIT) + 0x0001)
#define SERVO_MIO0_fokb                    (SERVO_BLK + MIO32SEL + (halGLOBAL_MIO0_sv_mio0<<BUS_STARTBIT) + 0x0002)
#define SERVO_MIO0_rfzc                    (SERVO_BLK + MIO32SEL + (halGLOBAL_MIO0_sv_mio0<<BUS_STARTBIT) + 0x0003)
#define SERVO_MIO0_ssk_pulse               (SERVO_BLK + MIO32SEL + (halGLOBAL_MIO0_sv_mio0<<BUS_STARTBIT) + 0x0004)
#define SERVO_MIO0_apc_reference           (SERVO_BLK + MIO32SEL + (halGLOBAL_MIO0_sv_mio0<<BUS_STARTBIT) + 0x0005)
//MIO1
#define SERVO_MIO1_stk_dfctb               (SERVO_BLK + MIO32SEL + (halGLOBAL_MIO1_sv_mio1<<BUS_STARTBIT) + 0x0000)
#define SERVO_MIO1_foonb                   (SERVO_BLK + MIO32SEL + (halGLOBAL_MIO1_sv_mio1<<BUS_STARTBIT) + 0x0001)
#define SERVO_MIO1_fmonb                   (SERVO_BLK + MIO32SEL + (halGLOBAL_MIO1_sv_mio1<<BUS_STARTBIT) + 0x0002)
#define SERVO_MIO1_rfzc                    (SERVO_BLK + MIO32SEL + (halGLOBAL_MIO1_sv_mio1<<BUS_STARTBIT) + 0x0003)
#define SERVO_MIO1_ssk_dir                 (SERVO_BLK + MIO32SEL + (halGLOBAL_MIO1_sv_mio1<<BUS_STARTBIT) + 0x0004)
#define SERVO_MIO1_apc_feedback            (SERVO_BLK + MIO32SEL + (halGLOBAL_MIO1_sv_mio1<<BUS_STARTBIT) + 0x0005)
#define SERVO_MIO1_sct_teup                (SERVO_BLK + MIO32SEL + (halGLOBAL_MIO1_sv_mio1<<BUS_STARTBIT) + 0x0006)
//MIO2
#define SERVO_MIO2_tronb                   (SERVO_BLK + MIO32SEL + (halGLOBAL_MIO2_sv_mio2<<BUS_STARTBIT) + 0x0000)
#define SERVO_MIO2_trsrb                   (SERVO_BLK + MIO32SEL + (halGLOBAL_MIO2_sv_mio2<<BUS_STARTBIT) + 0x0001)
#define SERVO_MIO2_fokb                    (SERVO_BLK + MIO32SEL + (halGLOBAL_MIO2_sv_mio2<<BUS_STARTBIT) + 0x0002)
#define SERVO_MIO2_srchb                   (SERVO_BLK + MIO32SEL + (halGLOBAL_MIO2_sv_mio2<<BUS_STARTBIT) + 0x0003)
#define SERVO_MIO2_ssk_fines               (SERVO_BLK + MIO32SEL + (halGLOBAL_MIO2_sv_mio2<<BUS_STARTBIT) + 0x0004)
#define SERVO_MIO2_apc_diff_phase          (SERVO_BLK + MIO32SEL + (halGLOBAL_MIO2_sv_mio2<<BUS_STARTBIT) + 0x0005)
#define SERVO_MIO2_s_defect2afe            (SERVO_BLK + MIO32SEL + (halGLOBAL_MIO2_sv_mio2<<BUS_STARTBIT) + 0x0006)
//MIO3
#define SERVO_MIO3_saj_mask                (SERVO_BLK + MIO32SEL + (halGLOBAL_MIO3_sv_mio3<<BUS_STARTBIT) + 0x0000)
#define SERVO_MIO3_dmonb                   (SERVO_BLK + MIO32SEL + (halGLOBAL_MIO3_sv_mio3<<BUS_STARTBIT) + 0x0001)
#define SERVO_MIO3_hysb                    (SERVO_BLK + MIO32SEL + (halGLOBAL_MIO3_sv_mio3<<BUS_STARTBIT) + 0x0002)
#define SERVO_MIO3_stk_shcb                (SERVO_BLK + MIO32SEL + (halGLOBAL_MIO3_sv_mio3<<BUS_STARTBIT) + 0x0003)
#define SERVO_MIO3_ssk_tgup                (SERVO_BLK + MIO32SEL + (halGLOBAL_MIO3_sv_mio3<<BUS_STARTBIT) + 0x0004)
#define SERVO_MIO3_s_dfct                  (SERVO_BLK + MIO32SEL + (halGLOBAL_MIO3_sv_mio3<<BUS_STARTBIT) + 0x0005)



//DBG64 BUS to MIO (only applicable to C0 !!)
    #if (CHIP_REV >= 0xC0)

/****************************************************************************
* DGB64 BUS AHB BLOCK
****************************************************************************/
//AHB bus1
#define AHB_BUS1_HRDATA7                    (AHB_BLK + DBG64SEL + (0<<BUS_STARTBIT) + 0x003F)
#define AHB_BUS1_HRDATA6                    (AHB_BLK + DBG64SEL + (0<<BUS_STARTBIT) + 0x003E)
#define AHB_BUS1_HRDATA5                    (AHB_BLK + DBG64SEL + (0<<BUS_STARTBIT) + 0x003D)
#define AHB_BUS1_HRDATA4                    (AHB_BLK + DBG64SEL + (0<<BUS_STARTBIT) + 0x003C)
#define AHB_BUS1_HRDATA3                    (AHB_BLK + DBG64SEL + (0<<BUS_STARTBIT) + 0x003B)
#define AHB_BUS1_HRDATA2                    (AHB_BLK + DBG64SEL + (0<<BUS_STARTBIT) + 0x003A)
#define AHB_BUS1_HRDATA1                    (AHB_BLK + DBG64SEL + (0<<BUS_STARTBIT) + 0x0039)
#define AHB_BUS1_HRDATA0                    (AHB_BLK + DBG64SEL + (0<<BUS_STARTBIT) + 0x0038)
#define AHB_BUS1_HWDATA7                    (AHB_BLK + DBG64SEL + (0<<BUS_STARTBIT) + 0x0037)
#define AHB_BUS1_HWDATA6                    (AHB_BLK + DBG64SEL + (0<<BUS_STARTBIT) + 0x0036)
#define AHB_BUS1_HWDATA5                    (AHB_BLK + DBG64SEL + (0<<BUS_STARTBIT) + 0x0035)
#define AHB_BUS1_HWDATA4                    (AHB_BLK + DBG64SEL + (0<<BUS_STARTBIT) + 0x0034)
#define AHB_BUS1_HWDATA3                    (AHB_BLK + DBG64SEL + (0<<BUS_STARTBIT) + 0x0033)
#define AHB_BUS1_HWDATA2                    (AHB_BLK + DBG64SEL + (0<<BUS_STARTBIT) + 0x0032)
#define AHB_BUS1_HWDATA1                    (AHB_BLK + DBG64SEL + (0<<BUS_STARTBIT) + 0x0031)
#define AHB_BUS1_HWDATA0                    (AHB_BLK + DBG64SEL + (0<<BUS_STARTBIT) + 0x0030)
#define AHB_BUS1_HADDR31                    (AHB_BLK + DBG64SEL + (0<<BUS_STARTBIT) + 0x002F)
#define AHB_BUS1_HADDR30                    (AHB_BLK + DBG64SEL + (0<<BUS_STARTBIT) + 0x002E)
#define AHB_BUS1_HADDR29                    (AHB_BLK + DBG64SEL + (0<<BUS_STARTBIT) + 0x002D)
#define AHB_BUS1_HADDR28                    (AHB_BLK + DBG64SEL + (0<<BUS_STARTBIT) + 0x002C)
#define AHB_BUS1_HADDR27                    (AHB_BLK + DBG64SEL + (0<<BUS_STARTBIT) + 0x002B)
#define AHB_BUS1_HADDR26                    (AHB_BLK + DBG64SEL + (0<<BUS_STARTBIT) + 0x002A)
#define AHB_BUS1_HADDR25                    (AHB_BLK + DBG64SEL + (0<<BUS_STARTBIT) + 0x0029)
#define AHB_BUS1_HADDR24                    (AHB_BLK + DBG64SEL + (0<<BUS_STARTBIT) + 0x0028)
#define AHB_BUS1_HADDR23                    (AHB_BLK + DBG64SEL + (0<<BUS_STARTBIT) + 0x0027)
#define AHB_BUS1_HADDR22                    (AHB_BLK + DBG64SEL + (0<<BUS_STARTBIT) + 0x0026)
#define AHB_BUS1_HADDR21                    (AHB_BLK + DBG64SEL + (0<<BUS_STARTBIT) + 0x0025)
#define AHB_BUS1_HADDR20                    (AHB_BLK + DBG64SEL + (0<<BUS_STARTBIT) + 0x0024)
#define AHB_BUS1_HADDR19                    (AHB_BLK + DBG64SEL + (0<<BUS_STARTBIT) + 0x0023)
#define AHB_BUS1_HADDR18                    (AHB_BLK + DBG64SEL + (0<<BUS_STARTBIT) + 0x0022)
#define AHB_BUS1_HADDR17                    (AHB_BLK + DBG64SEL + (0<<BUS_STARTBIT) + 0x0021)
#define AHB_BUS1_HADDR16                    (AHB_BLK + DBG64SEL + (0<<BUS_STARTBIT) + 0x0020)
#define AHB_BUS1_HADDR15                    (AHB_BLK + DBG64SEL + (0<<BUS_STARTBIT) + 0x001F)
#define AHB_BUS1_HADDR14                    (AHB_BLK + DBG64SEL + (0<<BUS_STARTBIT) + 0x001E)
#define AHB_BUS1_HADDR13                    (AHB_BLK + DBG64SEL + (0<<BUS_STARTBIT) + 0x001D)
#define AHB_BUS1_HADDR12                    (AHB_BLK + DBG64SEL + (0<<BUS_STARTBIT) + 0x001C)
#define AHB_BUS1_HADDR11                    (AHB_BLK + DBG64SEL + (0<<BUS_STARTBIT) + 0x001B)
#define AHB_BUS1_HADDR10                    (AHB_BLK + DBG64SEL + (0<<BUS_STARTBIT) + 0x001A)
#define AHB_BUS1_HADDR9                     (AHB_BLK + DBG64SEL + (0<<BUS_STARTBIT) + 0x0019)
#define AHB_BUS1_HADDR8                     (AHB_BLK + DBG64SEL + (0<<BUS_STARTBIT) + 0x0018)
#define AHB_BUS1_HADDR7                     (AHB_BLK + DBG64SEL + (0<<BUS_STARTBIT) + 0x0017)
#define AHB_BUS1_HADDR6                     (AHB_BLK + DBG64SEL + (0<<BUS_STARTBIT) + 0x0016)
#define AHB_BUS1_HADDR5                     (AHB_BLK + DBG64SEL + (0<<BUS_STARTBIT) + 0x0015)
#define AHB_BUS1_HADDR4                     (AHB_BLK + DBG64SEL + (0<<BUS_STARTBIT) + 0x0014)
#define AHB_BUS1_HADDR3                     (AHB_BLK + DBG64SEL + (0<<BUS_STARTBIT) + 0x0013)
#define AHB_BUS1_HADDR2                     (AHB_BLK + DBG64SEL + (0<<BUS_STARTBIT) + 0x0012)
#define AHB_BUS1_HADDR1                     (AHB_BLK + DBG64SEL + (0<<BUS_STARTBIT) + 0x0011)
#define AHB_BUS1_HADDR0                     (AHB_BLK + DBG64SEL + (0<<BUS_STARTBIT) + 0x0010)
#define AHB_BUS1_HSELS_Servo                (AHB_BLK + DBG64SEL + (0<<BUS_STARTBIT) + 0x000F)
#define AHB_BUS1_HSELS_WBL                  (AHB_BLK + DBG64SEL + (0<<BUS_STARTBIT) + 0x000E)
#define AHB_BUS1_HSELS_DFE                  (AHB_BLK + DBG64SEL + (0<<BUS_STARTBIT) + 0x000D)
#define AHB_BUS1_HSELS_BD                   (AHB_BLK + DBG64SEL + (0<<BUS_STARTBIT) + 0x000C)
#define AHB_BUS1_HSELS_Demod                (AHB_BLK + DBG64SEL + (0<<BUS_STARTBIT) + 0x000B)
#define AHB_BUS1_cg_armclk                  (AHB_BLK + DBG64SEL + (0<<BUS_STARTBIT) + 0x000A)
#define AHB_BUS1_cache_monitor2             (AHB_BLK + DBG64SEL + (0<<BUS_STARTBIT) + 0x0009)
#define AHB_BUS1_cache_monitor1             (AHB_BLK + DBG64SEL + (0<<BUS_STARTBIT) + 0x0008)
#define AHB_BUS1_cache_monitor0             (AHB_BLK + DBG64SEL + (0<<BUS_STARTBIT) + 0x0007)
#define AHB_BUS1_HSIZE2                     (AHB_BLK + DBG64SEL + (0<<BUS_STARTBIT) + 0x0006)
#define AHB_BUS1_HSIZE1                     (AHB_BLK + DBG64SEL + (0<<BUS_STARTBIT) + 0x0005)
#define AHB_BUS1_HSIZE0                     (AHB_BLK + DBG64SEL + (0<<BUS_STARTBIT) + 0x0004)
#define AHB_BUS1_HWRITE                     (AHB_BLK + DBG64SEL + (0<<BUS_STARTBIT) + 0x0003)
#define AHB_BUS1_HTRANS1                    (AHB_BLK + DBG64SEL + (0<<BUS_STARTBIT) + 0x0002)
#define AHB_BUS1_HTRANS0                    (AHB_BLK + DBG64SEL + (0<<BUS_STARTBIT) + 0x0001)
#define AHB_BUS1_HREADY                     (AHB_BLK + DBG64SEL + (0<<BUS_STARTBIT) + 0x0000)
//AHB bus2A
#define AHB_BUS2A_HSELS_Servo_DSP           (AHB_BLK + DBG64SEL + (1<<BUS_STARTBIT) + 0x0220)
#define AHB_BUS2A_HADDR15                   (AHB_BLK + DBG64SEL + (1<<BUS_STARTBIT) + 0x021F)
#define AHB_BUS2A_HADDR14                   (AHB_BLK + DBG64SEL + (1<<BUS_STARTBIT) + 0x021E)
#define AHB_BUS2A_HADDR13                   (AHB_BLK + DBG64SEL + (1<<BUS_STARTBIT) + 0x021D)
#define AHB_BUS2A_HADDR12                   (AHB_BLK + DBG64SEL + (1<<BUS_STARTBIT) + 0x021C)
#define AHB_BUS2A_HADDR11                   (AHB_BLK + DBG64SEL + (1<<BUS_STARTBIT) + 0x021B)
#define AHB_BUS2A_HADDR10                   (AHB_BLK + DBG64SEL + (1<<BUS_STARTBIT) + 0x021A)
#define AHB_BUS2A_HADDR9                    (AHB_BLK + DBG64SEL + (1<<BUS_STARTBIT) + 0x0219)
#define AHB_BUS2A_HADDR8                    (AHB_BLK + DBG64SEL + (1<<BUS_STARTBIT) + 0x0218)
#define AHB_BUS2A_HADDR7                    (AHB_BLK + DBG64SEL + (1<<BUS_STARTBIT) + 0x0217)
#define AHB_BUS2A_HADDR6                    (AHB_BLK + DBG64SEL + (1<<BUS_STARTBIT) + 0x0216)
#define AHB_BUS2A_HADDR5                    (AHB_BLK + DBG64SEL + (1<<BUS_STARTBIT) + 0x0215)
#define AHB_BUS2A_HADDR4                    (AHB_BLK + DBG64SEL + (1<<BUS_STARTBIT) + 0x0214)
#define AHB_BUS2A_HADDR3                    (AHB_BLK + DBG64SEL + (1<<BUS_STARTBIT) + 0x0213)
#define AHB_BUS2A_HADDR2                    (AHB_BLK + DBG64SEL + (1<<BUS_STARTBIT) + 0x0212)
#define AHB_BUS2A_HADDR1                    (AHB_BLK + DBG64SEL + (1<<BUS_STARTBIT) + 0x0211)
#define AHB_BUS2A_HADDR0                    (AHB_BLK + DBG64SEL + (1<<BUS_STARTBIT) + 0x0210)
#define AHB_BUS2A_HSELS_Servo               (AHB_BLK + DBG64SEL + (1<<BUS_STARTBIT) + 0x020F)
#define AHB_BUS2A_HSELS_WBL                 (AHB_BLK + DBG64SEL + (1<<BUS_STARTBIT) + 0x020E)
#define AHB_BUS2A_HSELS_DFE                 (AHB_BLK + DBG64SEL + (1<<BUS_STARTBIT) + 0x020D)
#define AHB_BUS2A_HSELS_BD                  (AHB_BLK + DBG64SEL + (1<<BUS_STARTBIT) + 0x020C)
#define AHB_BUS2A_HSELS_Demod               (AHB_BLK + DBG64SEL + (1<<BUS_STARTBIT) + 0x020B)
#define AHB_BUS2A_cg_armclk                 (AHB_BLK + DBG64SEL + (1<<BUS_STARTBIT) + 0x020A)
#define AHB_BUS2A_cache_monitor2            (AHB_BLK + DBG64SEL + (1<<BUS_STARTBIT) + 0x0209)
#define AHB_BUS2A_cache_monitor1            (AHB_BLK + DBG64SEL + (1<<BUS_STARTBIT) + 0x0208)
#define AHB_BUS2A_cache_monitor0            (AHB_BLK + DBG64SEL + (1<<BUS_STARTBIT) + 0x0207)
#define AHB_BUS2A_HSIZE2                    (AHB_BLK + DBG64SEL + (1<<BUS_STARTBIT) + 0x0206)
#define AHB_BUS2A_HSIZE1                    (AHB_BLK + DBG64SEL + (1<<BUS_STARTBIT) + 0x0205)
#define AHB_BUS2A_HSIZE0                    (AHB_BLK + DBG64SEL + (1<<BUS_STARTBIT) + 0x0204)
#define AHB_BUS2A_HWRITE                    (AHB_BLK + DBG64SEL + (1<<BUS_STARTBIT) + 0x0203)
#define AHB_BUS2A_HTRANS1                   (AHB_BLK + DBG64SEL + (1<<BUS_STARTBIT) + 0x0202)
#define AHB_BUS2A_HTRANS0                   (AHB_BLK + DBG64SEL + (1<<BUS_STARTBIT) + 0x0201)
#define AHB_BUS2A_HREADY                    (AHB_BLK + DBG64SEL + (1<<BUS_STARTBIT) + 0x0200)
//AHB bus2B
#define AHB_BUS2B_HSELS_Servo_DSP           (AHB_BLK + DBG64SEL + (1<<BUS_STARTBIT) + 0x0320)
#define AHB_BUS2B_HADDR31                   (AHB_BLK + DBG64SEL + (1<<BUS_STARTBIT) + 0x031F)
#define AHB_BUS2B_HADDR30                   (AHB_BLK + DBG64SEL + (1<<BUS_STARTBIT) + 0x031E)
#define AHB_BUS2B_HADDR29                   (AHB_BLK + DBG64SEL + (1<<BUS_STARTBIT) + 0x031D)
#define AHB_BUS2B_HADDR28                   (AHB_BLK + DBG64SEL + (1<<BUS_STARTBIT) + 0x031C)
#define AHB_BUS2B_HADDR27                   (AHB_BLK + DBG64SEL + (1<<BUS_STARTBIT) + 0x031B)
#define AHB_BUS2B_HADDR26                   (AHB_BLK + DBG64SEL + (1<<BUS_STARTBIT) + 0x031A)
#define AHB_BUS2B_HADDR25                   (AHB_BLK + DBG64SEL + (1<<BUS_STARTBIT) + 0x0319)
#define AHB_BUS2B_HADDR24                   (AHB_BLK + DBG64SEL + (1<<BUS_STARTBIT) + 0x0318)
#define AHB_BUS2B_HADDR23                   (AHB_BLK + DBG64SEL + (1<<BUS_STARTBIT) + 0x0317)
#define AHB_BUS2B_HADDR22                   (AHB_BLK + DBG64SEL + (1<<BUS_STARTBIT) + 0x0316)
#define AHB_BUS2B_HADDR21                   (AHB_BLK + DBG64SEL + (1<<BUS_STARTBIT) + 0x0315)
#define AHB_BUS2B_HADDR20                   (AHB_BLK + DBG64SEL + (1<<BUS_STARTBIT) + 0x0314)
#define AHB_BUS2B_HADDR19                   (AHB_BLK + DBG64SEL + (1<<BUS_STARTBIT) + 0x0313)
#define AHB_BUS2B_HADDR18                   (AHB_BLK + DBG64SEL + (1<<BUS_STARTBIT) + 0x0312)
#define AHB_BUS2B_HADDR17                   (AHB_BLK + DBG64SEL + (1<<BUS_STARTBIT) + 0x0311)
#define AHB_BUS2B_HADDR16                   (AHB_BLK + DBG64SEL + (1<<BUS_STARTBIT) + 0x0310)
#define AHB_BUS2B_HSELS_Servo               (AHB_BLK + DBG64SEL + (1<<BUS_STARTBIT) + 0x030F)
#define AHB_BUS2B_HSELS_WBL                 (AHB_BLK + DBG64SEL + (1<<BUS_STARTBIT) + 0x030E)
#define AHB_BUS2B_HSELS_DFE                 (AHB_BLK + DBG64SEL + (1<<BUS_STARTBIT) + 0x030D)
#define AHB_BUS2B_HSELS_BD                  (AHB_BLK + DBG64SEL + (1<<BUS_STARTBIT) + 0x030C)
#define AHB_BUS2B_HSELS_Demod               (AHB_BLK + DBG64SEL + (1<<BUS_STARTBIT) + 0x030B)
#define AHB_BUS2B_cg_armclk                 (AHB_BLK + DBG64SEL + (1<<BUS_STARTBIT) + 0x030A)
#define AHB_BUS2B_cache_monitor2            (AHB_BLK + DBG64SEL + (1<<BUS_STARTBIT) + 0x0309)
#define AHB_BUS2B_cache_monitor1            (AHB_BLK + DBG64SEL + (1<<BUS_STARTBIT) + 0x0308)
#define AHB_BUS2B_cache_monitor0            (AHB_BLK + DBG64SEL + (1<<BUS_STARTBIT) + 0x0307)
#define AHB_BUS2B_HSIZE2                    (AHB_BLK + DBG64SEL + (1<<BUS_STARTBIT) + 0x0306)
#define AHB_BUS2B_HSIZE1                    (AHB_BLK + DBG64SEL + (1<<BUS_STARTBIT) + 0x0305)
#define AHB_BUS2B_HSIZE0                    (AHB_BLK + DBG64SEL + (1<<BUS_STARTBIT) + 0x0304)
#define AHB_BUS2B_HWRITE                    (AHB_BLK + DBG64SEL + (1<<BUS_STARTBIT) + 0x0303)
#define AHB_BUS2B_HTRANS1                   (AHB_BLK + DBG64SEL + (1<<BUS_STARTBIT) + 0x0302)
#define AHB_BUS2B_HTRANS0                   (AHB_BLK + DBG64SEL + (1<<BUS_STARTBIT) + 0x0301)
#define AHB_BUS2B_HREADY                    (AHB_BLK + DBG64SEL + (1<<BUS_STARTBIT) + 0x0300)
//AHB bus2C
#define AHB_BUS2C_HSELS_Servo_DSP           (AHB_BLK + DBG64SEL + (1<<BUS_STARTBIT) + 0x0420)
#define AHB_BUS2C_HWDATA15                  (AHB_BLK + DBG64SEL + (1<<BUS_STARTBIT) + 0x041F)
#define AHB_BUS2C_HWDATA14                  (AHB_BLK + DBG64SEL + (1<<BUS_STARTBIT) + 0x041E)
#define AHB_BUS2C_HWDATA13                  (AHB_BLK + DBG64SEL + (1<<BUS_STARTBIT) + 0x041D)
#define AHB_BUS2C_HWDATA12                  (AHB_BLK + DBG64SEL + (1<<BUS_STARTBIT) + 0x041C)
#define AHB_BUS2C_HWDATA11                  (AHB_BLK + DBG64SEL + (1<<BUS_STARTBIT) + 0x041B)
#define AHB_BUS2C_HWDATA10                  (AHB_BLK + DBG64SEL + (1<<BUS_STARTBIT) + 0x041A)
#define AHB_BUS2C_HWDATA9                   (AHB_BLK + DBG64SEL + (1<<BUS_STARTBIT) + 0x0419)
#define AHB_BUS2C_HWDATA8                   (AHB_BLK + DBG64SEL + (1<<BUS_STARTBIT) + 0x0418)
#define AHB_BUS2C_HWDATA7                   (AHB_BLK + DBG64SEL + (1<<BUS_STARTBIT) + 0x0417)
#define AHB_BUS2C_HWDATA6                   (AHB_BLK + DBG64SEL + (1<<BUS_STARTBIT) + 0x0416)
#define AHB_BUS2C_HWDATA5                   (AHB_BLK + DBG64SEL + (1<<BUS_STARTBIT) + 0x0415)
#define AHB_BUS2C_HWDATA4                   (AHB_BLK + DBG64SEL + (1<<BUS_STARTBIT) + 0x0414)
#define AHB_BUS2C_HWDATA3                   (AHB_BLK + DBG64SEL + (1<<BUS_STARTBIT) + 0x0413)
#define AHB_BUS2C_HWDATA2                   (AHB_BLK + DBG64SEL + (1<<BUS_STARTBIT) + 0x0412)
#define AHB_BUS2C_HWDATA1                   (AHB_BLK + DBG64SEL + (1<<BUS_STARTBIT) + 0x0411)
#define AHB_BUS2C_HWDATA0                   (AHB_BLK + DBG64SEL + (1<<BUS_STARTBIT) + 0x0410)
#define AHB_BUS2C_HSELS_Servo               (AHB_BLK + DBG64SEL + (1<<BUS_STARTBIT) + 0x040F)
#define AHB_BUS2C_HSELS_WBL                 (AHB_BLK + DBG64SEL + (1<<BUS_STARTBIT) + 0x040E)
#define AHB_BUS2C_HSELS_DFE                 (AHB_BLK + DBG64SEL + (1<<BUS_STARTBIT) + 0x040D)
#define AHB_BUS2C_HSELS_BD                  (AHB_BLK + DBG64SEL + (1<<BUS_STARTBIT) + 0x040C)
#define AHB_BUS2C_HSELS_Demod               (AHB_BLK + DBG64SEL + (1<<BUS_STARTBIT) + 0x040B)
#define AHB_BUS2C_cg_armclk                 (AHB_BLK + DBG64SEL + (1<<BUS_STARTBIT) + 0x040A)
#define AHB_BUS2C_cache_monitor2            (AHB_BLK + DBG64SEL + (1<<BUS_STARTBIT) + 0x0409)
#define AHB_BUS2C_cache_monitor1            (AHB_BLK + DBG64SEL + (1<<BUS_STARTBIT) + 0x0408)
#define AHB_BUS2C_cache_monitor0            (AHB_BLK + DBG64SEL + (1<<BUS_STARTBIT) + 0x0407)
#define AHB_BUS2C_HSIZE2                    (AHB_BLK + DBG64SEL + (1<<BUS_STARTBIT) + 0x0406)
#define AHB_BUS2C_HSIZE1                    (AHB_BLK + DBG64SEL + (1<<BUS_STARTBIT) + 0x0405)
#define AHB_BUS2C_HSIZE0                    (AHB_BLK + DBG64SEL + (1<<BUS_STARTBIT) + 0x0404)
#define AHB_BUS2C_HWRITE                    (AHB_BLK + DBG64SEL + (1<<BUS_STARTBIT) + 0x0403)
#define AHB_BUS2C_HTRANS1                   (AHB_BLK + DBG64SEL + (1<<BUS_STARTBIT) + 0x0402)
#define AHB_BUS2C_HTRANS0                   (AHB_BLK + DBG64SEL + (1<<BUS_STARTBIT) + 0x0401)
#define AHB_BUS2C_HREADY                    (AHB_BLK + DBG64SEL + (1<<BUS_STARTBIT) + 0x0400)
//AHB bus2D
#define AHB_BUS2D_HSELS_Servo_DSP           (AHB_BLK + DBG64SEL + (1<<BUS_STARTBIT) + 0x0520)
#define AHB_BUS2D_HWDATA31                  (AHB_BLK + DBG64SEL + (1<<BUS_STARTBIT) + 0x051F)
#define AHB_BUS2D_HWDATA30                  (AHB_BLK + DBG64SEL + (1<<BUS_STARTBIT) + 0x051E)
#define AHB_BUS2D_HWDATA29                  (AHB_BLK + DBG64SEL + (1<<BUS_STARTBIT) + 0x051D)
#define AHB_BUS2D_HWDATA28                  (AHB_BLK + DBG64SEL + (1<<BUS_STARTBIT) + 0x051C)
#define AHB_BUS2D_HWDATA27                  (AHB_BLK + DBG64SEL + (1<<BUS_STARTBIT) + 0x051B)
#define AHB_BUS2D_HWDATA26                  (AHB_BLK + DBG64SEL + (1<<BUS_STARTBIT) + 0x051A)
#define AHB_BUS2D_HWDATA25                  (AHB_BLK + DBG64SEL + (1<<BUS_STARTBIT) + 0x0519)
#define AHB_BUS2D_HWDATA24                  (AHB_BLK + DBG64SEL + (1<<BUS_STARTBIT) + 0x0518)
#define AHB_BUS2D_HWDATA23                  (AHB_BLK + DBG64SEL + (1<<BUS_STARTBIT) + 0x0517)
#define AHB_BUS2D_HWDATA22                  (AHB_BLK + DBG64SEL + (1<<BUS_STARTBIT) + 0x0516)
#define AHB_BUS2D_HWDATA21                  (AHB_BLK + DBG64SEL + (1<<BUS_STARTBIT) + 0x0515)
#define AHB_BUS2D_HWDATA20                  (AHB_BLK + DBG64SEL + (1<<BUS_STARTBIT) + 0x0514)
#define AHB_BUS2D_HWDATA19                  (AHB_BLK + DBG64SEL + (1<<BUS_STARTBIT) + 0x0513)
#define AHB_BUS2D_HWDATA18                  (AHB_BLK + DBG64SEL + (1<<BUS_STARTBIT) + 0x0512)
#define AHB_BUS2D_HWDATA17                  (AHB_BLK + DBG64SEL + (1<<BUS_STARTBIT) + 0x0511)
#define AHB_BUS2D_HWDATA16                  (AHB_BLK + DBG64SEL + (1<<BUS_STARTBIT) + 0x0510)
#define AHB_BUS2D_HSELS_Servo               (AHB_BLK + DBG64SEL + (1<<BUS_STARTBIT) + 0x050F)
#define AHB_BUS2D_HSELS_WBL                 (AHB_BLK + DBG64SEL + (1<<BUS_STARTBIT) + 0x050E)
#define AHB_BUS2D_HSELS_DFE                 (AHB_BLK + DBG64SEL + (1<<BUS_STARTBIT) + 0x050D)
#define AHB_BUS2D_HSELS_BD                  (AHB_BLK + DBG64SEL + (1<<BUS_STARTBIT) + 0x050C)
#define AHB_BUS2D_HSELS_Demod               (AHB_BLK + DBG64SEL + (1<<BUS_STARTBIT) + 0x050B)
#define AHB_BUS2D_cg_armclk                 (AHB_BLK + DBG64SEL + (1<<BUS_STARTBIT) + 0x050A)
#define AHB_BUS2D_cache_monitor2            (AHB_BLK + DBG64SEL + (1<<BUS_STARTBIT) + 0x0509)
#define AHB_BUS2D_cache_monitor1            (AHB_BLK + DBG64SEL + (1<<BUS_STARTBIT) + 0x0508)
#define AHB_BUS2D_cache_monitor0            (AHB_BLK + DBG64SEL + (1<<BUS_STARTBIT) + 0x0507)
#define AHB_BUS2D_HSIZE2                    (AHB_BLK + DBG64SEL + (1<<BUS_STARTBIT) + 0x0506)
#define AHB_BUS2D_HSIZE1                    (AHB_BLK + DBG64SEL + (1<<BUS_STARTBIT) + 0x0505)
#define AHB_BUS2D_HSIZE0                    (AHB_BLK + DBG64SEL + (1<<BUS_STARTBIT) + 0x0504)
#define AHB_BUS2D_HWRITE                    (AHB_BLK + DBG64SEL + (1<<BUS_STARTBIT) + 0x0503)
#define AHB_BUS2D_HTRANS1                   (AHB_BLK + DBG64SEL + (1<<BUS_STARTBIT) + 0x0502)
#define AHB_BUS2D_HTRANS0                   (AHB_BLK + DBG64SEL + (1<<BUS_STARTBIT) + 0x0501)
#define AHB_BUS2D_HREADY                    (AHB_BLK + DBG64SEL + (1<<BUS_STARTBIT) + 0x0500)
//AHB bus2E
#define AHB_BUS2E_HSELS_Servo_DSP           (AHB_BLK + DBG64SEL + (1<<BUS_STARTBIT) + 0x0620)
#define AHB_BUS2E_HRDATA15                  (AHB_BLK + DBG64SEL + (1<<BUS_STARTBIT) + 0x061F)
#define AHB_BUS2E_HRDATA14                  (AHB_BLK + DBG64SEL + (1<<BUS_STARTBIT) + 0x061E)
#define AHB_BUS2E_HRDATA13                  (AHB_BLK + DBG64SEL + (1<<BUS_STARTBIT) + 0x061D)
#define AHB_BUS2E_HRDATA12                  (AHB_BLK + DBG64SEL + (1<<BUS_STARTBIT) + 0x061C)
#define AHB_BUS2E_HRDATA11                  (AHB_BLK + DBG64SEL + (1<<BUS_STARTBIT) + 0x061B)
#define AHB_BUS2E_HRDATA10                  (AHB_BLK + DBG64SEL + (1<<BUS_STARTBIT) + 0x061A)
#define AHB_BUS2E_HRDATA9                   (AHB_BLK + DBG64SEL + (1<<BUS_STARTBIT) + 0x0619)
#define AHB_BUS2E_HRDATA8                   (AHB_BLK + DBG64SEL + (1<<BUS_STARTBIT) + 0x0618)
#define AHB_BUS2E_HRDATA7                   (AHB_BLK + DBG64SEL + (1<<BUS_STARTBIT) + 0x0617)
#define AHB_BUS2E_HRDATA6                   (AHB_BLK + DBG64SEL + (1<<BUS_STARTBIT) + 0x0616)
#define AHB_BUS2E_HRDATA5                   (AHB_BLK + DBG64SEL + (1<<BUS_STARTBIT) + 0x0615)
#define AHB_BUS2E_HRDATA4                   (AHB_BLK + DBG64SEL + (1<<BUS_STARTBIT) + 0x0614)
#define AHB_BUS2E_HRDATA3                   (AHB_BLK + DBG64SEL + (1<<BUS_STARTBIT) + 0x0613)
#define AHB_BUS2E_HRDATA2                   (AHB_BLK + DBG64SEL + (1<<BUS_STARTBIT) + 0x0612)
#define AHB_BUS2E_HRDATA1                   (AHB_BLK + DBG64SEL + (1<<BUS_STARTBIT) + 0x0611)
#define AHB_BUS2E_HRDATA0                   (AHB_BLK + DBG64SEL + (1<<BUS_STARTBIT) + 0x0610)
#define AHB_BUS2E_HSELS_Servo               (AHB_BLK + DBG64SEL + (1<<BUS_STARTBIT) + 0x060F)
#define AHB_BUS2E_HSELS_WBL                 (AHB_BLK + DBG64SEL + (1<<BUS_STARTBIT) + 0x060E)
#define AHB_BUS2E_HSELS_DFE                 (AHB_BLK + DBG64SEL + (1<<BUS_STARTBIT) + 0x060D)
#define AHB_BUS2E_HSELS_BD                  (AHB_BLK + DBG64SEL + (1<<BUS_STARTBIT) + 0x060C)
#define AHB_BUS2E_HSELS_Demod               (AHB_BLK + DBG64SEL + (1<<BUS_STARTBIT) + 0x060B)
#define AHB_BUS2E_cg_armclk                 (AHB_BLK + DBG64SEL + (1<<BUS_STARTBIT) + 0x060A)
#define AHB_BUS2E_cache_monitor2            (AHB_BLK + DBG64SEL + (1<<BUS_STARTBIT) + 0x0609)
#define AHB_BUS2E_cache_monitor1            (AHB_BLK + DBG64SEL + (1<<BUS_STARTBIT) + 0x0608)
#define AHB_BUS2E_cache_monitor0            (AHB_BLK + DBG64SEL + (1<<BUS_STARTBIT) + 0x0607)
#define AHB_BUS2E_HSIZE2                    (AHB_BLK + DBG64SEL + (1<<BUS_STARTBIT) + 0x0606)
#define AHB_BUS2E_HSIZE1                    (AHB_BLK + DBG64SEL + (1<<BUS_STARTBIT) + 0x0605)
#define AHB_BUS2E_HSIZE0                    (AHB_BLK + DBG64SEL + (1<<BUS_STARTBIT) + 0x0604)
#define AHB_BUS2E_HWRITE                    (AHB_BLK + DBG64SEL + (1<<BUS_STARTBIT) + 0x0603)
#define AHB_BUS2E_HTRANS1                   (AHB_BLK + DBG64SEL + (1<<BUS_STARTBIT) + 0x0602)
#define AHB_BUS2E_HTRANS0                   (AHB_BLK + DBG64SEL + (1<<BUS_STARTBIT) + 0x0601)
#define AHB_BUS2E_HREADY                    (AHB_BLK + DBG64SEL + (1<<BUS_STARTBIT) + 0x0600)
//AHB bus2F
#define AHB_BUS2F_HSELS_Servo_DSP           (AHB_BLK + DBG64SEL + (1<<BUS_STARTBIT) + 0x0720)
#define AHB_BUS2F_HRDATA31                  (AHB_BLK + DBG64SEL + (1<<BUS_STARTBIT) + 0x071F)
#define AHB_BUS2F_HRDATA30                  (AHB_BLK + DBG64SEL + (1<<BUS_STARTBIT) + 0x071E)
#define AHB_BUS2F_HRDATA29                  (AHB_BLK + DBG64SEL + (1<<BUS_STARTBIT) + 0x071D)
#define AHB_BUS2F_HRDATA28                  (AHB_BLK + DBG64SEL + (1<<BUS_STARTBIT) + 0x071C)
#define AHB_BUS2F_HRDATA27                  (AHB_BLK + DBG64SEL + (1<<BUS_STARTBIT) + 0x071B)
#define AHB_BUS2F_HRDATA26                  (AHB_BLK + DBG64SEL + (1<<BUS_STARTBIT) + 0x071A)
#define AHB_BUS2F_HRDATA25                  (AHB_BLK + DBG64SEL + (1<<BUS_STARTBIT) + 0x0719)
#define AHB_BUS2F_HRDATA24                  (AHB_BLK + DBG64SEL + (1<<BUS_STARTBIT) + 0x0718)
#define AHB_BUS2F_HRDATA23                  (AHB_BLK + DBG64SEL + (1<<BUS_STARTBIT) + 0x0717)
#define AHB_BUS2F_HRDATA22                  (AHB_BLK + DBG64SEL + (1<<BUS_STARTBIT) + 0x0716)
#define AHB_BUS2F_HRDATA21                  (AHB_BLK + DBG64SEL + (1<<BUS_STARTBIT) + 0x0715)
#define AHB_BUS2F_HRDATA20                  (AHB_BLK + DBG64SEL + (1<<BUS_STARTBIT) + 0x0714)
#define AHB_BUS2F_HRDATA19                  (AHB_BLK + DBG64SEL + (1<<BUS_STARTBIT) + 0x0713)
#define AHB_BUS2F_HRDATA18                  (AHB_BLK + DBG64SEL + (1<<BUS_STARTBIT) + 0x0712)
#define AHB_BUS2F_HRDATA17                  (AHB_BLK + DBG64SEL + (1<<BUS_STARTBIT) + 0x0711)
#define AHB_BUS2F_HRDATA16                  (AHB_BLK + DBG64SEL + (1<<BUS_STARTBIT) + 0x0710)
#define AHB_BUS2F_HSELS_Servo               (AHB_BLK + DBG64SEL + (1<<BUS_STARTBIT) + 0x070F)
#define AHB_BUS2F_HSELS_WBL                 (AHB_BLK + DBG64SEL + (1<<BUS_STARTBIT) + 0x070E)
#define AHB_BUS2F_HSELS_DFE                 (AHB_BLK + DBG64SEL + (1<<BUS_STARTBIT) + 0x070D)
#define AHB_BUS2F_HSELS_BD                  (AHB_BLK + DBG64SEL + (1<<BUS_STARTBIT) + 0x070C)
#define AHB_BUS2F_HSELS_Demod               (AHB_BLK + DBG64SEL + (1<<BUS_STARTBIT) + 0x070B)
#define AHB_BUS2F_cg_armclk                 (AHB_BLK + DBG64SEL + (1<<BUS_STARTBIT) + 0x070A)
#define AHB_BUS2F_cache_monitor2            (AHB_BLK + DBG64SEL + (1<<BUS_STARTBIT) + 0x0709)
#define AHB_BUS2F_cache_monitor1            (AHB_BLK + DBG64SEL + (1<<BUS_STARTBIT) + 0x0708)
#define AHB_BUS2F_cache_monitor0            (AHB_BLK + DBG64SEL + (1<<BUS_STARTBIT) + 0x0707)
#define AHB_BUS2F_HSIZE2                    (AHB_BLK + DBG64SEL + (1<<BUS_STARTBIT) + 0x0706)
#define AHB_BUS2F_HSIZE1                    (AHB_BLK + DBG64SEL + (1<<BUS_STARTBIT) + 0x0705)
#define AHB_BUS2F_HSIZE0                    (AHB_BLK + DBG64SEL + (1<<BUS_STARTBIT) + 0x0704)
#define AHB_BUS2F_HWRITE                    (AHB_BLK + DBG64SEL + (1<<BUS_STARTBIT) + 0x0703)
#define AHB_BUS2F_HTRANS1                   (AHB_BLK + DBG64SEL + (1<<BUS_STARTBIT) + 0x0702)
#define AHB_BUS2F_HTRANS0                   (AHB_BLK + DBG64SEL + (1<<BUS_STARTBIT) + 0x0701)
#define AHB_BUS2F_HREADY                    (AHB_BLK + DBG64SEL + (1<<BUS_STARTBIT) + 0x0700)

/****************************************************************************
* DGB64 BUS BD CODEC BLOCK
****************************************************************************/
//BVCI_interface SLOT0
#define BD_BVCI_SLOT0_bvci_address_int0                     (BD_BLK + DBG64SEL + ((halBDC_BVCI_interface + 0)<<BUS_STARTBIT) + 0x0100)
#define BD_BVCI_SLOT0_bvci_address_int1                     (BD_BLK + DBG64SEL + ((halBDC_BVCI_interface + 0)<<BUS_STARTBIT) + 0x0101)
#define BD_BVCI_SLOT0_bvci_address_int2                     (BD_BLK + DBG64SEL + ((halBDC_BVCI_interface + 0)<<BUS_STARTBIT) + 0x0102)
#define BD_BVCI_SLOT0_bvci_address_int3                     (BD_BLK + DBG64SEL + ((halBDC_BVCI_interface + 0)<<BUS_STARTBIT) + 0x0103)
#define BD_BVCI_SLOT0_bvci_address_int4                     (BD_BLK + DBG64SEL + ((halBDC_BVCI_interface + 0)<<BUS_STARTBIT) + 0x0104)
#define BD_BVCI_SLOT0_bvci_address_int5                     (BD_BLK + DBG64SEL + ((halBDC_BVCI_interface + 0)<<BUS_STARTBIT) + 0x0105)
#define BD_BVCI_SLOT0_bvci_address_int6                     (BD_BLK + DBG64SEL + ((halBDC_BVCI_interface + 0)<<BUS_STARTBIT) + 0x0106)
#define BD_BVCI_SLOT0_bvci_address_int7                     (BD_BLK + DBG64SEL + ((halBDC_BVCI_interface + 0)<<BUS_STARTBIT) + 0x0107)
#define BD_BVCI_SLOT0_bvci_rspval                           (BD_BLK + DBG64SEL + ((halBDC_BVCI_interface + 0)<<BUS_STARTBIT) + 0x0108)
#define BD_BVCI_SLOT0_bvci_be_int0                          (BD_BLK + DBG64SEL + ((halBDC_BVCI_interface + 0)<<BUS_STARTBIT) + 0x0109)
#define BD_BVCI_SLOT0_bvci_be_int1                          (BD_BLK + DBG64SEL + ((halBDC_BVCI_interface + 0)<<BUS_STARTBIT) + 0x010A)
#define BD_BVCI_SLOT0_bvci_be_int2                          (BD_BLK + DBG64SEL + ((halBDC_BVCI_interface + 0)<<BUS_STARTBIT) + 0x010B)
#define BD_BVCI_SLOT0_bvci_be_int3                          (BD_BLK + DBG64SEL + ((halBDC_BVCI_interface + 0)<<BUS_STARTBIT) + 0x010C)
#define BD_BVCI_SLOT0_bvci_cmd_int0                         (BD_BLK + DBG64SEL + ((halBDC_BVCI_interface + 0)<<BUS_STARTBIT) + 0x010D)
#define BD_BVCI_SLOT0_bvci_cmdval_int                       (BD_BLK + DBG64SEL + ((halBDC_BVCI_interface + 0)<<BUS_STARTBIT) + 0x010E)
#define BD_BVCI_SLOT0_bvci_clk_scan                         (BD_BLK + DBG64SEL + ((halBDC_BVCI_interface + 0)<<BUS_STARTBIT) + 0x010F)
//BVCI_interface SLOT1
#define BD_BVCI_SLOT1_bvci_address_int8                     (BD_BLK + DBG64SEL + ((halBDC_BVCI_interface + 16*1)<<BUS_STARTBIT) + 0x0100)
#define BD_BVCI_SLOT1_bvci_address_int9                     (BD_BLK + DBG64SEL + ((halBDC_BVCI_interface + 16*1)<<BUS_STARTBIT) + 0x0101)
#define BD_BVCI_SLOT1_bvci_address_int10                    (BD_BLK + DBG64SEL + ((halBDC_BVCI_interface + 16*1)<<BUS_STARTBIT) + 0x0102)
#define BD_BVCI_SLOT1_bvci_address_int11                    (BD_BLK + DBG64SEL + ((halBDC_BVCI_interface + 16*1)<<BUS_STARTBIT) + 0x0103)
#define BD_BVCI_SLOT1_bvci_address_int12                    (BD_BLK + DBG64SEL + ((halBDC_BVCI_interface + 16*1)<<BUS_STARTBIT) + 0x0104)
#define BD_BVCI_SLOT1_bvci_address_int13                    (BD_BLK + DBG64SEL + ((halBDC_BVCI_interface + 16*1)<<BUS_STARTBIT) + 0x0105)
#define BD_BVCI_SLOT1_bvci_address_int14                    (BD_BLK + DBG64SEL + ((halBDC_BVCI_interface + 16*1)<<BUS_STARTBIT) + 0x0106)
#define BD_BVCI_SLOT1_bvci_address_int15                    (BD_BLK + DBG64SEL + ((halBDC_BVCI_interface + 16*1)<<BUS_STARTBIT) + 0x0107)
#define BD_BVCI_SLOT1_bvci_address_int16                    (BD_BLK + DBG64SEL + ((halBDC_BVCI_interface + 16*1)<<BUS_STARTBIT) + 0x0108)
#define BD_BVCI_SLOT1_bvci_address_int17                    (BD_BLK + DBG64SEL + ((halBDC_BVCI_interface + 16*1)<<BUS_STARTBIT) + 0x0109)
#define BD_BVCI_SLOT1_bvci_address_int18                    (BD_BLK + DBG64SEL + ((halBDC_BVCI_interface + 16*1)<<BUS_STARTBIT) + 0x010A)
#define BD_BVCI_SLOT1_bvci_address_int19                    (BD_BLK + DBG64SEL + ((halBDC_BVCI_interface + 16*1)<<BUS_STARTBIT) + 0x010B)
#define BD_BVCI_SLOT1_bvci_address_int20                    (BD_BLK + DBG64SEL + ((halBDC_BVCI_interface + 16*1)<<BUS_STARTBIT) + 0x010C)
#define BD_BVCI_SLOT1_bvci_address_int21                    (BD_BLK + DBG64SEL + ((halBDC_BVCI_interface + 16*1)<<BUS_STARTBIT) + 0x010D)
#define BD_BVCI_SLOT1_bvci_address_int22                    (BD_BLK + DBG64SEL + ((halBDC_BVCI_interface + 16*1)<<BUS_STARTBIT) + 0x010E)
#define BD_BVCI_SLOT1_bvci_address_int23                    (BD_BLK + DBG64SEL + ((halBDC_BVCI_interface + 16*1)<<BUS_STARTBIT) + 0x010F)
//BVCI_interface SLOT2
#define BD_BVCI_SLOT2_bvci_wdata_int16                      (BD_BLK + DBG64SEL + ((halBDC_BVCI_interface + 16*2)<<BUS_STARTBIT) + 0x0100)
#define BD_BVCI_SLOT2_bvci_wdata_int17                      (BD_BLK + DBG64SEL + ((halBDC_BVCI_interface + 16*2)<<BUS_STARTBIT) + 0x0101)
#define BD_BVCI_SLOT2_bvci_wdata_int18                      (BD_BLK + DBG64SEL + ((halBDC_BVCI_interface + 16*2)<<BUS_STARTBIT) + 0x0102)
#define BD_BVCI_SLOT2_bvci_wdata_int19                      (BD_BLK + DBG64SEL + ((halBDC_BVCI_interface + 16*2)<<BUS_STARTBIT) + 0x0103)
#define BD_BVCI_SLOT2_bvci_wdata_int20                      (BD_BLK + DBG64SEL + ((halBDC_BVCI_interface + 16*2)<<BUS_STARTBIT) + 0x0104)
#define BD_BVCI_SLOT2_bvci_wdata_int21                      (BD_BLK + DBG64SEL + ((halBDC_BVCI_interface + 16*2)<<BUS_STARTBIT) + 0x0105)
#define BD_BVCI_SLOT2_bvci_wdata_int22                      (BD_BLK + DBG64SEL + ((halBDC_BVCI_interface + 16*2)<<BUS_STARTBIT) + 0x0106)
#define BD_BVCI_SLOT2_bvci_wdata_int23                      (BD_BLK + DBG64SEL + ((halBDC_BVCI_interface + 16*2)<<BUS_STARTBIT) + 0x0107)
#define BD_BVCI_SLOT2_bvci_wdata_int24                      (BD_BLK + DBG64SEL + ((halBDC_BVCI_interface + 16*2)<<BUS_STARTBIT) + 0x0108)
#define BD_BVCI_SLOT2_bvci_wdata_int25                      (BD_BLK + DBG64SEL + ((halBDC_BVCI_interface + 16*2)<<BUS_STARTBIT) + 0x0109)
#define BD_BVCI_SLOT2_bvci_wdata_int26                      (BD_BLK + DBG64SEL + ((halBDC_BVCI_interface + 16*2)<<BUS_STARTBIT) + 0x010A)
#define BD_BVCI_SLOT2_bvci_wdata_int27                      (BD_BLK + DBG64SEL + ((halBDC_BVCI_interface + 16*2)<<BUS_STARTBIT) + 0x010B)
#define BD_BVCI_SLOT2_bvci_wdata_int28                      (BD_BLK + DBG64SEL + ((halBDC_BVCI_interface + 16*2)<<BUS_STARTBIT) + 0x010C)
#define BD_BVCI_SLOT2_bvci_wdata_int29                      (BD_BLK + DBG64SEL + ((halBDC_BVCI_interface + 16*2)<<BUS_STARTBIT) + 0x010D)
#define BD_BVCI_SLOT2_bvci_wdata_int30                      (BD_BLK + DBG64SEL + ((halBDC_BVCI_interface + 16*2)<<BUS_STARTBIT) + 0x010E)
#define BD_BVCI_SLOT2_bvci_wdata_int31                      (BD_BLK + DBG64SEL + ((halBDC_BVCI_interface + 16*2)<<BUS_STARTBIT) + 0x010F)
//BVCI_interface SLOT3
#define BD_BVCI_SLOT3_bvci_wdata_int0                       (BD_BLK + DBG64SEL + ((halBDC_BVCI_interface + 16*3)<<BUS_STARTBIT) + 0x0100)
#define BD_BVCI_SLOT3_bvci_wdata_int1                       (BD_BLK + DBG64SEL + ((halBDC_BVCI_interface + 16*3)<<BUS_STARTBIT) + 0x0101)
#define BD_BVCI_SLOT3_bvci_wdata_int2                       (BD_BLK + DBG64SEL + ((halBDC_BVCI_interface + 16*3)<<BUS_STARTBIT) + 0x0102)
#define BD_BVCI_SLOT3_bvci_wdata_int3                       (BD_BLK + DBG64SEL + ((halBDC_BVCI_interface + 16*3)<<BUS_STARTBIT) + 0x0103)
#define BD_BVCI_SLOT3_bvci_wdata_int4                       (BD_BLK + DBG64SEL + ((halBDC_BVCI_interface + 16*3)<<BUS_STARTBIT) + 0x0104)
#define BD_BVCI_SLOT3_bvci_wdata_int5                       (BD_BLK + DBG64SEL + ((halBDC_BVCI_interface + 16*3)<<BUS_STARTBIT) + 0x0105)
#define BD_BVCI_SLOT3_bvci_wdata_int6                       (BD_BLK + DBG64SEL + ((halBDC_BVCI_interface + 16*3)<<BUS_STARTBIT) + 0x0106)
#define BD_BVCI_SLOT3_bvci_wdata_int7                       (BD_BLK + DBG64SEL + ((halBDC_BVCI_interface + 16*3)<<BUS_STARTBIT) + 0x0107)
#define BD_BVCI_SLOT3_bvci_wdata_int8                       (BD_BLK + DBG64SEL + ((halBDC_BVCI_interface + 16*3)<<BUS_STARTBIT) + 0x0108)
#define BD_BVCI_SLOT3_bvci_wdata_int9                       (BD_BLK + DBG64SEL + ((halBDC_BVCI_interface + 16*3)<<BUS_STARTBIT) + 0x0109)
#define BD_BVCI_SLOT3_bvci_wdata_int10                      (BD_BLK + DBG64SEL + ((halBDC_BVCI_interface + 16*3)<<BUS_STARTBIT) + 0x010A)
#define BD_BVCI_SLOT3_bvci_wdata_int11                      (BD_BLK + DBG64SEL + ((halBDC_BVCI_interface + 16*3)<<BUS_STARTBIT) + 0x010B)
#define BD_BVCI_SLOT3_bvci_wdata_int12                      (BD_BLK + DBG64SEL + ((halBDC_BVCI_interface + 16*3)<<BUS_STARTBIT) + 0x010C)
#define BD_BVCI_SLOT3_bvci_wdata_int13                      (BD_BLK + DBG64SEL + ((halBDC_BVCI_interface + 16*3)<<BUS_STARTBIT) + 0x010D)
#define BD_BVCI_SLOT3_bvci_wdata_int14                      (BD_BLK + DBG64SEL + ((halBDC_BVCI_interface + 16*3)<<BUS_STARTBIT) + 0x010E)
#define BD_BVCI_SLOT3_bvci_wdata_int15                      (BD_BLK + DBG64SEL + ((halBDC_BVCI_interface + 16*3)<<BUS_STARTBIT) + 0x010F)
//BVCI_interface SLOT4
#define BD_BVCI_SLOT4_bvci_rdata16                          (BD_BLK + DBG64SEL + ((halBDC_BVCI_interface + 16*4)<<BUS_STARTBIT) + 0x0100)
#define BD_BVCI_SLOT4_bvci_rdata17                          (BD_BLK + DBG64SEL + ((halBDC_BVCI_interface + 16*4)<<BUS_STARTBIT) + 0x0101)
#define BD_BVCI_SLOT4_bvci_rdata18                          (BD_BLK + DBG64SEL + ((halBDC_BVCI_interface + 16*4)<<BUS_STARTBIT) + 0x0102)
#define BD_BVCI_SLOT4_bvci_rdata19                          (BD_BLK + DBG64SEL + ((halBDC_BVCI_interface + 16*4)<<BUS_STARTBIT) + 0x0103)
#define BD_BVCI_SLOT4_bvci_rdata20                          (BD_BLK + DBG64SEL + ((halBDC_BVCI_interface + 16*4)<<BUS_STARTBIT) + 0x0104)
#define BD_BVCI_SLOT4_bvci_rdata21                          (BD_BLK + DBG64SEL + ((halBDC_BVCI_interface + 16*4)<<BUS_STARTBIT) + 0x0105)
#define BD_BVCI_SLOT4_bvci_rdata22                          (BD_BLK + DBG64SEL + ((halBDC_BVCI_interface + 16*4)<<BUS_STARTBIT) + 0x0106)
#define BD_BVCI_SLOT4_bvci_rdata23                          (BD_BLK + DBG64SEL + ((halBDC_BVCI_interface + 16*4)<<BUS_STARTBIT) + 0x0107)
#define BD_BVCI_SLOT4_bvci_rdata24                          (BD_BLK + DBG64SEL + ((halBDC_BVCI_interface + 16*4)<<BUS_STARTBIT) + 0x0108)
#define BD_BVCI_SLOT4_bvci_rdata25                          (BD_BLK + DBG64SEL + ((halBDC_BVCI_interface + 16*4)<<BUS_STARTBIT) + 0x0109)
#define BD_BVCI_SLOT4_bvci_rdata26                          (BD_BLK + DBG64SEL + ((halBDC_BVCI_interface + 16*4)<<BUS_STARTBIT) + 0x010A)
#define BD_BVCI_SLOT4_bvci_rdata27                          (BD_BLK + DBG64SEL + ((halBDC_BVCI_interface + 16*4)<<BUS_STARTBIT) + 0x010B)
#define BD_BVCI_SLOT4_bvci_rdata28                          (BD_BLK + DBG64SEL + ((halBDC_BVCI_interface + 16*4)<<BUS_STARTBIT) + 0x010C)
#define BD_BVCI_SLOT4_bvci_rdata29                          (BD_BLK + DBG64SEL + ((halBDC_BVCI_interface + 16*4)<<BUS_STARTBIT) + 0x010D)
#define BD_BVCI_SLOT4_bvci_rdata30                          (BD_BLK + DBG64SEL + ((halBDC_BVCI_interface + 16*4)<<BUS_STARTBIT) + 0x010E)
#define BD_BVCI_SLOT4_bvci_rdata31                          (BD_BLK + DBG64SEL + ((halBDC_BVCI_interface + 16*4)<<BUS_STARTBIT) + 0x010F)
//BVCI_interface SLOT5
#define BD_BVCI_SLOT5_bvci_rdata0                           (BD_BLK + DBG64SEL + ((halBDC_BVCI_interface + 16*5)<<BUS_STARTBIT) + 0x0100)
#define BD_BVCI_SLOT5_bvci_rdata1                           (BD_BLK + DBG64SEL + ((halBDC_BVCI_interface + 16*5)<<BUS_STARTBIT) + 0x0101)
#define BD_BVCI_SLOT5_bvci_rdata2                           (BD_BLK + DBG64SEL + ((halBDC_BVCI_interface + 16*5)<<BUS_STARTBIT) + 0x0102)
#define BD_BVCI_SLOT5_bvci_rdata3                           (BD_BLK + DBG64SEL + ((halBDC_BVCI_interface + 16*5)<<BUS_STARTBIT) + 0x0103)
#define BD_BVCI_SLOT5_bvci_rdata4                           (BD_BLK + DBG64SEL + ((halBDC_BVCI_interface + 16*5)<<BUS_STARTBIT) + 0x0104)
#define BD_BVCI_SLOT5_bvci_rdata5                           (BD_BLK + DBG64SEL + ((halBDC_BVCI_interface + 16*5)<<BUS_STARTBIT) + 0x0105)
#define BD_BVCI_SLOT5_bvci_rdata6                           (BD_BLK + DBG64SEL + ((halBDC_BVCI_interface + 16*5)<<BUS_STARTBIT) + 0x0106)
#define BD_BVCI_SLOT5_bvci_rdata7                           (BD_BLK + DBG64SEL + ((halBDC_BVCI_interface + 16*5)<<BUS_STARTBIT) + 0x0107)
#define BD_BVCI_SLOT5_bvci_rdata8                           (BD_BLK + DBG64SEL + ((halBDC_BVCI_interface + 16*5)<<BUS_STARTBIT) + 0x0108)
#define BD_BVCI_SLOT5_bvci_rdata9                           (BD_BLK + DBG64SEL + ((halBDC_BVCI_interface + 16*5)<<BUS_STARTBIT) + 0x0109)
#define BD_BVCI_SLOT5_bvci_rdata10                          (BD_BLK + DBG64SEL + ((halBDC_BVCI_interface + 16*5)<<BUS_STARTBIT) + 0x010A)
#define BD_BVCI_SLOT5_bvci_rdata11                          (BD_BLK + DBG64SEL + ((halBDC_BVCI_interface + 16*5)<<BUS_STARTBIT) + 0x010B)
#define BD_BVCI_SLOT5_bvci_rdata12                          (BD_BLK + DBG64SEL + ((halBDC_BVCI_interface + 16*5)<<BUS_STARTBIT) + 0x010C)
#define BD_BVCI_SLOT5_bvci_rdata13                          (BD_BLK + DBG64SEL + ((halBDC_BVCI_interface + 16*5)<<BUS_STARTBIT) + 0x010D)
#define BD_BVCI_SLOT5_bvci_rdata14                          (BD_BLK + DBG64SEL + ((halBDC_BVCI_interface + 16*5)<<BUS_STARTBIT) + 0x010E)
#define BD_BVCI_SLOT5_bvci_rdata15                          (BD_BLK + DBG64SEL + ((halBDC_BVCI_interface + 16*5)<<BUS_STARTBIT) + 0x010F)
//BVCI_interface SLOT6
#define BD_BVCI_SLOT6_bvci_rspval                           (BD_BLK + DBG64SEL + ((halBDC_BVCI_interface + 16*6)<<BUS_STARTBIT) + 0x0100)
#define BD_BVCI_SLOT6_bvci_eop_int                          (BD_BLK + DBG64SEL + ((halBDC_BVCI_interface + 16*6)<<BUS_STARTBIT) + 0x0101)
#define BD_BVCI_SLOT6_bvci_be_int0                          (BD_BLK + DBG64SEL + ((halBDC_BVCI_interface + 16*6)<<BUS_STARTBIT) + 0x0102)
#define BD_BVCI_SLOT6_bvci_be_int1                          (BD_BLK + DBG64SEL + ((halBDC_BVCI_interface + 16*6)<<BUS_STARTBIT) + 0x0103)
#define BD_BVCI_SLOT6_bvci_be_int2                          (BD_BLK + DBG64SEL + ((halBDC_BVCI_interface + 16*6)<<BUS_STARTBIT) + 0x0104)
#define BD_BVCI_SLOT6_bvci_be_int3                          (BD_BLK + DBG64SEL + ((halBDC_BVCI_interface + 16*6)<<BUS_STARTBIT) + 0x0105)
#define BD_BVCI_SLOT6_bvci_cmd_int0                         (BD_BLK + DBG64SEL + ((halBDC_BVCI_interface + 16*6)<<BUS_STARTBIT) + 0x0106)
#define BD_BVCI_SLOT6_bvci_cmd_int1                         (BD_BLK + DBG64SEL + ((halBDC_BVCI_interface + 16*6)<<BUS_STARTBIT) + 0x0107)
#define BD_BVCI_SLOT6_bvci_cmdval_int                       (BD_BLK + DBG64SEL + ((halBDC_BVCI_interface + 16*6)<<BUS_STARTBIT) + 0x0108)
#define BD_BVCI_SLOT6_bvci_cmdack                           (BD_BLK + DBG64SEL + ((halBDC_BVCI_interface + 16*6)<<BUS_STARTBIT) + 0x0109)
#define BD_BVCI_SLOT6_bvci_clk_scan                         (BD_BLK + DBG64SEL + ((halBDC_BVCI_interface + 16*6)<<BUS_STARTBIT) + 0x010A)
#define BD_BVCI_SLOT6_bvci_address_int0                     (BD_BLK + DBG64SEL + ((halBDC_BVCI_interface + 16*6)<<BUS_STARTBIT) + 0x010B)
#define BD_BVCI_SLOT6_bvci_address_int1                     (BD_BLK + DBG64SEL + ((halBDC_BVCI_interface + 16*6)<<BUS_STARTBIT) + 0x010C)
#define BD_BVCI_SLOT6_bvci_address_int2                     (BD_BLK + DBG64SEL + ((halBDC_BVCI_interface + 16*6)<<BUS_STARTBIT) + 0x010D)
#define BD_BVCI_SLOT6_bvci_address_int3                     (BD_BLK + DBG64SEL + ((halBDC_BVCI_interface + 16*6)<<BUS_STARTBIT) + 0x010E)
#define BD_BVCI_SLOT6_bvci_address_int4                     (BD_BLK + DBG64SEL + ((halBDC_BVCI_interface + 16*6)<<BUS_STARTBIT) + 0x010F)

//Full_SRAM SLOT0
#define BD_FSRAM_SLOT0_bd_full_sram_port1_add_int0          (BD_BLK + DBG64SEL + ((halBDC_Full_SRAM + 0)<<BUS_STARTBIT) + 0x0100)
#define BD_FSRAM_SLOT0_bd_full_sram_port1_add_int1          (BD_BLK + DBG64SEL + ((halBDC_Full_SRAM + 0)<<BUS_STARTBIT) + 0x0101)
#define BD_FSRAM_SLOT0_bd_full_sram_port1_add_int2          (BD_BLK + DBG64SEL + ((halBDC_Full_SRAM + 0)<<BUS_STARTBIT) + 0x0102)
#define BD_FSRAM_SLOT0_bd_full_sram_port1_add_int3          (BD_BLK + DBG64SEL + ((halBDC_Full_SRAM + 0)<<BUS_STARTBIT) + 0x0103)
#define BD_FSRAM_SLOT0_bd_full_sram_port1_add_int4          (BD_BLK + DBG64SEL + ((halBDC_Full_SRAM + 0)<<BUS_STARTBIT) + 0x0104)
#define BD_FSRAM_SLOT0_bd_full_sram_port1_add_int5          (BD_BLK + DBG64SEL + ((halBDC_Full_SRAM + 0)<<BUS_STARTBIT) + 0x0105)
#define BD_FSRAM_SLOT0_bd_full_sram_port1_add_int6          (BD_BLK + DBG64SEL + ((halBDC_Full_SRAM + 0)<<BUS_STARTBIT) + 0x0106)
#define BD_FSRAM_SLOT0_bd_full_sram_port1_add_int7          (BD_BLK + DBG64SEL + ((halBDC_Full_SRAM + 0)<<BUS_STARTBIT) + 0x0107)
#define BD_FSRAM_SLOT0_bd_full_sram_port1_add_int8          (BD_BLK + DBG64SEL + ((halBDC_Full_SRAM + 0)<<BUS_STARTBIT) + 0x0108)
#define BD_FSRAM_SLOT0_bd_full_sram_port1_wrn_int           (BD_BLK + DBG64SEL + ((halBDC_Full_SRAM + 0)<<BUS_STARTBIT) + 0x0109)
#define BD_FSRAM_SLOT0_bvci_clk_scan                        (BD_BLK + DBG64SEL + ((halBDC_Full_SRAM + 0)<<BUS_STARTBIT) + 0x010A)
#define BD_FSRAM_SLOT0_bd_full_sram_port1_byte_en_n_int0    (BD_BLK + DBG64SEL + ((halBDC_Full_SRAM + 0)<<BUS_STARTBIT) + 0x010B)
#define BD_FSRAM_SLOT0_bd_full_sram_port1_byte_en_n_int1    (BD_BLK + DBG64SEL + ((halBDC_Full_SRAM + 0)<<BUS_STARTBIT) + 0x010C)
#define BD_FSRAM_SLOT0_bd_full_sram_port1_byte_en_n_int2    (BD_BLK + DBG64SEL + ((halBDC_Full_SRAM + 0)<<BUS_STARTBIT) + 0x010D)
#define BD_FSRAM_SLOT0_bd_full_sram_port1_byte_en_n_int3    (BD_BLK + DBG64SEL + ((halBDC_Full_SRAM + 0)<<BUS_STARTBIT) + 0x010E)
#define BD_FSRAM_SLOT0_bd_full_sram_port1_byte_en_n_int4    (BD_BLK + DBG64SEL + ((halBDC_Full_SRAM + 0)<<BUS_STARTBIT) + 0x010F)
//Full_SRAM SLOT1
#define BD_FSRAM_SLOT1_bd_full_sram_port1_wr_data_int0      (BD_BLK + DBG64SEL + ((halBDC_Full_SRAM + 16*1)<<BUS_STARTBIT) + 0x0100)
#define BD_FSRAM_SLOT1_bd_full_sram_port1_wr_data_int1      (BD_BLK + DBG64SEL + ((halBDC_Full_SRAM + 16*1)<<BUS_STARTBIT) + 0x0101)
#define BD_FSRAM_SLOT1_bd_full_sram_port1_wr_data_int2      (BD_BLK + DBG64SEL + ((halBDC_Full_SRAM + 16*1)<<BUS_STARTBIT) + 0x0102)
#define BD_FSRAM_SLOT1_bd_full_sram_port1_wr_data_int3      (BD_BLK + DBG64SEL + ((halBDC_Full_SRAM + 16*1)<<BUS_STARTBIT) + 0x0103)
#define BD_FSRAM_SLOT1_bd_full_sram_port1_wr_data_int4      (BD_BLK + DBG64SEL + ((halBDC_Full_SRAM + 16*1)<<BUS_STARTBIT) + 0x0104)
#define BD_FSRAM_SLOT1_bd_full_sram_port1_wr_data_int5      (BD_BLK + DBG64SEL + ((halBDC_Full_SRAM + 16*1)<<BUS_STARTBIT) + 0x0105)
#define BD_FSRAM_SLOT1_bd_full_sram_port1_wr_data_int6      (BD_BLK + DBG64SEL + ((halBDC_Full_SRAM + 16*1)<<BUS_STARTBIT) + 0x0106)
#define BD_FSRAM_SLOT1_bd_full_sram_port1_wr_data_int7      (BD_BLK + DBG64SEL + ((halBDC_Full_SRAM + 16*1)<<BUS_STARTBIT) + 0x0107)
#define BD_FSRAM_SLOT1_bd_full_sram_port1_wr_data_int8      (BD_BLK + DBG64SEL + ((halBDC_Full_SRAM + 16*1)<<BUS_STARTBIT) + 0x0108)
#define BD_FSRAM_SLOT1_bd_full_sram_port1_wr_data_int9      (BD_BLK + DBG64SEL + ((halBDC_Full_SRAM + 16*1)<<BUS_STARTBIT) + 0x0109)
#define BD_FSRAM_SLOT1_bd_full_sram_port1_wr_data_int10     (BD_BLK + DBG64SEL + ((halBDC_Full_SRAM + 16*1)<<BUS_STARTBIT) + 0x010A)
#define BD_FSRAM_SLOT1_bd_full_sram_port1_wr_data_int11     (BD_BLK + DBG64SEL + ((halBDC_Full_SRAM + 16*1)<<BUS_STARTBIT) + 0x010B)
#define BD_FSRAM_SLOT1_bd_full_sram_port1_wr_data_int12     (BD_BLK + DBG64SEL + ((halBDC_Full_SRAM + 16*1)<<BUS_STARTBIT) + 0x010C)
#define BD_FSRAM_SLOT1_bd_full_sram_port1_wr_data_int13     (BD_BLK + DBG64SEL + ((halBDC_Full_SRAM + 16*1)<<BUS_STARTBIT) + 0x010D)
#define BD_FSRAM_SLOT1_bd_full_sram_port1_wr_data_int14     (BD_BLK + DBG64SEL + ((halBDC_Full_SRAM + 16*1)<<BUS_STARTBIT) + 0x010E)
#define BD_FSRAM_SLOT1_bd_full_sram_port1_wr_data_int15     (BD_BLK + DBG64SEL + ((halBDC_Full_SRAM + 16*1)<<BUS_STARTBIT) + 0x010F)
//Full_SRAM SLOT2
#define BD_FSRAM_SLOT2_bd_full_sram_port1_wr_data_int16     (BD_BLK + DBG64SEL + ((halBDC_Full_SRAM + 16*2)<<BUS_STARTBIT) + 0x0100)
#define BD_FSRAM_SLOT2_bd_full_sram_port1_wr_data_int17     (BD_BLK + DBG64SEL + ((halBDC_Full_SRAM + 16*2)<<BUS_STARTBIT) + 0x0101)
#define BD_FSRAM_SLOT2_bd_full_sram_port1_wr_data_int18     (BD_BLK + DBG64SEL + ((halBDC_Full_SRAM + 16*2)<<BUS_STARTBIT) + 0x0102)
#define BD_FSRAM_SLOT2_bd_full_sram_port1_wr_data_int19     (BD_BLK + DBG64SEL + ((halBDC_Full_SRAM + 16*2)<<BUS_STARTBIT) + 0x0103)
#define BD_FSRAM_SLOT2_bd_full_sram_port1_wr_data_int20     (BD_BLK + DBG64SEL + ((halBDC_Full_SRAM + 16*2)<<BUS_STARTBIT) + 0x0104)
#define BD_FSRAM_SLOT2_bd_full_sram_port1_wr_data_int21     (BD_BLK + DBG64SEL + ((halBDC_Full_SRAM + 16*2)<<BUS_STARTBIT) + 0x0105)
#define BD_FSRAM_SLOT2_bd_full_sram_port1_wr_data_int22     (BD_BLK + DBG64SEL + ((halBDC_Full_SRAM + 16*2)<<BUS_STARTBIT) + 0x0106)
#define BD_FSRAM_SLOT2_bd_full_sram_port1_wr_data_int23     (BD_BLK + DBG64SEL + ((halBDC_Full_SRAM + 16*2)<<BUS_STARTBIT) + 0x0107)
#define BD_FSRAM_SLOT2_bd_full_sram_port1_wr_data_int24     (BD_BLK + DBG64SEL + ((halBDC_Full_SRAM + 16*2)<<BUS_STARTBIT) + 0x0108)
#define BD_FSRAM_SLOT2_bd_full_sram_port1_wr_data_int25     (BD_BLK + DBG64SEL + ((halBDC_Full_SRAM + 16*2)<<BUS_STARTBIT) + 0x0109)
#define BD_FSRAM_SLOT2_bd_full_sram_port1_wr_data_int26     (BD_BLK + DBG64SEL + ((halBDC_Full_SRAM + 16*2)<<BUS_STARTBIT) + 0x010A)
#define BD_FSRAM_SLOT2_bd_full_sram_port1_wr_data_int27     (BD_BLK + DBG64SEL + ((halBDC_Full_SRAM + 16*2)<<BUS_STARTBIT) + 0x010B)
#define BD_FSRAM_SLOT2_bd_full_sram_port1_wr_data_int28     (BD_BLK + DBG64SEL + ((halBDC_Full_SRAM + 16*2)<<BUS_STARTBIT) + 0x010C)
#define BD_FSRAM_SLOT2_bd_full_sram_port1_wr_data_int29     (BD_BLK + DBG64SEL + ((halBDC_Full_SRAM + 16*2)<<BUS_STARTBIT) + 0x010D)
#define BD_FSRAM_SLOT2_bd_full_sram_port1_wr_data_int30     (BD_BLK + DBG64SEL + ((halBDC_Full_SRAM + 16*2)<<BUS_STARTBIT) + 0x010E)
#define BD_FSRAM_SLOT2_bd_full_sram_port1_wr_data_int31     (BD_BLK + DBG64SEL + ((halBDC_Full_SRAM + 16*2)<<BUS_STARTBIT) + 0x010F)
//Full_SRAM SLOT3
#define BD_FSRAM_SLOT3_bd_full_sram_port1_wr_data_int32     (BD_BLK + DBG64SEL + ((halBDC_Full_SRAM + 16*3)<<BUS_STARTBIT) + 0x0100)
#define BD_FSRAM_SLOT3_bd_full_sram_port1_wr_data_int33     (BD_BLK + DBG64SEL + ((halBDC_Full_SRAM + 16*3)<<BUS_STARTBIT) + 0x0101)
#define BD_FSRAM_SLOT3_bd_full_sram_port1_wr_data_int34     (BD_BLK + DBG64SEL + ((halBDC_Full_SRAM + 16*3)<<BUS_STARTBIT) + 0x0102)
#define BD_FSRAM_SLOT3_bd_full_sram_port1_wr_data_int35     (BD_BLK + DBG64SEL + ((halBDC_Full_SRAM + 16*3)<<BUS_STARTBIT) + 0x0103)
#define BD_FSRAM_SLOT3_bd_full_sram_port1_wr_data_int36     (BD_BLK + DBG64SEL + ((halBDC_Full_SRAM + 16*3)<<BUS_STARTBIT) + 0x0104)
#define BD_FSRAM_SLOT3_bd_full_sram_port1_wr_data_int37     (BD_BLK + DBG64SEL + ((halBDC_Full_SRAM + 16*3)<<BUS_STARTBIT) + 0x0105)
#define BD_FSRAM_SLOT3_bd_full_sram_port1_wr_data_int38     (BD_BLK + DBG64SEL + ((halBDC_Full_SRAM + 16*3)<<BUS_STARTBIT) + 0x0106)
#define BD_FSRAM_SLOT3_bd_full_sram_port1_wr_data_int39     (BD_BLK + DBG64SEL + ((halBDC_Full_SRAM + 16*3)<<BUS_STARTBIT) + 0x0107)
#define BD_FSRAM_SLOT3_bd_full_sram_port1_wr_data_int40     (BD_BLK + DBG64SEL + ((halBDC_Full_SRAM + 16*3)<<BUS_STARTBIT) + 0x0108)
#define BD_FSRAM_SLOT3_bd_full_sram_port1_wr_data_int41     (BD_BLK + DBG64SEL + ((halBDC_Full_SRAM + 16*3)<<BUS_STARTBIT) + 0x0109)
#define BD_FSRAM_SLOT3_bd_full_sram_port1_wr_data_int42     (BD_BLK + DBG64SEL + ((halBDC_Full_SRAM + 16*3)<<BUS_STARTBIT) + 0x010A)
#define BD_FSRAM_SLOT3_bd_full_sram_port1_wr_data_int43     (BD_BLK + DBG64SEL + ((halBDC_Full_SRAM + 16*3)<<BUS_STARTBIT) + 0x010B)
#define BD_FSRAM_SLOT3_bd_full_sram_port1_wr_data_int44     (BD_BLK + DBG64SEL + ((halBDC_Full_SRAM + 16*3)<<BUS_STARTBIT) + 0x010C)
#define BD_FSRAM_SLOT3_bd_full_sram_port1_wr_data_int45     (BD_BLK + DBG64SEL + ((halBDC_Full_SRAM + 16*3)<<BUS_STARTBIT) + 0x010D)
#define BD_FSRAM_SLOT3_bd_full_sram_port1_wr_data_int46     (BD_BLK + DBG64SEL + ((halBDC_Full_SRAM + 16*3)<<BUS_STARTBIT) + 0x010E)
#define BD_FSRAM_SLOT3_bd_full_sram_port1_wr_data_int47     (BD_BLK + DBG64SEL + ((halBDC_Full_SRAM + 16*3)<<BUS_STARTBIT) + 0x010F)
//Full_SRAM SLOT4
#define BD_FSRAM_SLOT4_bd_full_sram_port1_wr_data_int48     (BD_BLK + DBG64SEL + ((halBDC_Full_SRAM + 16*4)<<BUS_STARTBIT) + 0x0100)
#define BD_FSRAM_SLOT4_bd_full_sram_port1_wr_data_int49     (BD_BLK + DBG64SEL + ((halBDC_Full_SRAM + 16*4)<<BUS_STARTBIT) + 0x0101)
#define BD_FSRAM_SLOT4_bd_full_sram_port1_wr_data_int50     (BD_BLK + DBG64SEL + ((halBDC_Full_SRAM + 16*4)<<BUS_STARTBIT) + 0x0102)
#define BD_FSRAM_SLOT4_bd_full_sram_port1_wr_data_int51     (BD_BLK + DBG64SEL + ((halBDC_Full_SRAM + 16*4)<<BUS_STARTBIT) + 0x0103)
#define BD_FSRAM_SLOT4_bd_full_sram_port1_wr_data_int52     (BD_BLK + DBG64SEL + ((halBDC_Full_SRAM + 16*4)<<BUS_STARTBIT) + 0x0104)
#define BD_FSRAM_SLOT4_bd_full_sram_port1_wr_data_int53     (BD_BLK + DBG64SEL + ((halBDC_Full_SRAM + 16*4)<<BUS_STARTBIT) + 0x0105)
#define BD_FSRAM_SLOT4_bd_full_sram_port1_wr_data_int54     (BD_BLK + DBG64SEL + ((halBDC_Full_SRAM + 16*4)<<BUS_STARTBIT) + 0x0106)
#define BD_FSRAM_SLOT4_bd_full_sram_port1_wr_data_int55     (BD_BLK + DBG64SEL + ((halBDC_Full_SRAM + 16*4)<<BUS_STARTBIT) + 0x0107)
#define BD_FSRAM_SLOT4_bd_full_sram_port1_wr_data_int56     (BD_BLK + DBG64SEL + ((halBDC_Full_SRAM + 16*4)<<BUS_STARTBIT) + 0x0108)
#define BD_FSRAM_SLOT4_bd_full_sram_port1_wr_data_int57     (BD_BLK + DBG64SEL + ((halBDC_Full_SRAM + 16*4)<<BUS_STARTBIT) + 0x0109)
#define BD_FSRAM_SLOT4_bd_full_sram_port1_wr_data_int58     (BD_BLK + DBG64SEL + ((halBDC_Full_SRAM + 16*4)<<BUS_STARTBIT) + 0x010A)
#define BD_FSRAM_SLOT4_bd_full_sram_port1_wr_data_int59     (BD_BLK + DBG64SEL + ((halBDC_Full_SRAM + 16*4)<<BUS_STARTBIT) + 0x010B)
#define BD_FSRAM_SLOT4_bd_full_sram_port1_wr_data_int60     (BD_BLK + DBG64SEL + ((halBDC_Full_SRAM + 16*4)<<BUS_STARTBIT) + 0x010C)
#define BD_FSRAM_SLOT4_bd_full_sram_port1_wr_data_int61     (BD_BLK + DBG64SEL + ((halBDC_Full_SRAM + 16*4)<<BUS_STARTBIT) + 0x010D)
#define BD_FSRAM_SLOT4_bd_full_sram_port1_wr_data_int62     (BD_BLK + DBG64SEL + ((halBDC_Full_SRAM + 16*4)<<BUS_STARTBIT) + 0x010E)
#define BD_FSRAM_SLOT4_bd_full_sram_port1_wr_data_int63     (BD_BLK + DBG64SEL + ((halBDC_Full_SRAM + 16*4)<<BUS_STARTBIT) + 0x010F)
//Full_SRAM SLOT5
#define BD_FSRAM_SLOT5_bd_full_sram_port1_rd_data0          (BD_BLK + DBG64SEL + ((halBDC_Full_SRAM + 16*5)<<BUS_STARTBIT) + 0x0100)
#define BD_FSRAM_SLOT5_bd_full_sram_port1_rd_data1          (BD_BLK + DBG64SEL + ((halBDC_Full_SRAM + 16*5)<<BUS_STARTBIT) + 0x0101)
#define BD_FSRAM_SLOT5_bd_full_sram_port1_rd_data2          (BD_BLK + DBG64SEL + ((halBDC_Full_SRAM + 16*5)<<BUS_STARTBIT) + 0x0102)
#define BD_FSRAM_SLOT5_bd_full_sram_port1_rd_data3          (BD_BLK + DBG64SEL + ((halBDC_Full_SRAM + 16*5)<<BUS_STARTBIT) + 0x0103)
#define BD_FSRAM_SLOT5_bd_full_sram_port1_rd_data4          (BD_BLK + DBG64SEL + ((halBDC_Full_SRAM + 16*5)<<BUS_STARTBIT) + 0x0104)
#define BD_FSRAM_SLOT5_bd_full_sram_port1_rd_data5          (BD_BLK + DBG64SEL + ((halBDC_Full_SRAM + 16*5)<<BUS_STARTBIT) + 0x0105)
#define BD_FSRAM_SLOT5_bd_full_sram_port1_rd_data6          (BD_BLK + DBG64SEL + ((halBDC_Full_SRAM + 16*5)<<BUS_STARTBIT) + 0x0106)
#define BD_FSRAM_SLOT5_bd_full_sram_port1_rd_data7          (BD_BLK + DBG64SEL + ((halBDC_Full_SRAM + 16*5)<<BUS_STARTBIT) + 0x0107)
#define BD_FSRAM_SLOT5_bd_full_sram_port1_rd_data8          (BD_BLK + DBG64SEL + ((halBDC_Full_SRAM + 16*5)<<BUS_STARTBIT) + 0x0108)
#define BD_FSRAM_SLOT5_bd_full_sram_port1_rd_data9          (BD_BLK + DBG64SEL + ((halBDC_Full_SRAM + 16*5)<<BUS_STARTBIT) + 0x0109)
#define BD_FSRAM_SLOT5_bd_full_sram_port1_rd_data10         (BD_BLK + DBG64SEL + ((halBDC_Full_SRAM + 16*5)<<BUS_STARTBIT) + 0x010A)
#define BD_FSRAM_SLOT5_bd_full_sram_port1_rd_data11         (BD_BLK + DBG64SEL + ((halBDC_Full_SRAM + 16*5)<<BUS_STARTBIT) + 0x010B)
#define BD_FSRAM_SLOT5_bd_full_sram_port1_rd_data12         (BD_BLK + DBG64SEL + ((halBDC_Full_SRAM + 16*5)<<BUS_STARTBIT) + 0x010C)
#define BD_FSRAM_SLOT5_bd_full_sram_port1_rd_data13         (BD_BLK + DBG64SEL + ((halBDC_Full_SRAM + 16*5)<<BUS_STARTBIT) + 0x010D)
#define BD_FSRAM_SLOT5_bd_full_sram_port1_rd_data14         (BD_BLK + DBG64SEL + ((halBDC_Full_SRAM + 16*5)<<BUS_STARTBIT) + 0x010E)
#define BD_FSRAM_SLOT5_bd_full_sram_port1_rd_data15         (BD_BLK + DBG64SEL + ((halBDC_Full_SRAM + 16*5)<<BUS_STARTBIT) + 0x010F)
//Full_SRAM SLOT6
#define BD_FSRAM_SLOT6_bd_full_sram_port1_rd_data16         (BD_BLK + DBG64SEL + ((halBDC_Full_SRAM + 16*6)<<BUS_STARTBIT) + 0x0100)
#define BD_FSRAM_SLOT6_bd_full_sram_port1_rd_data17         (BD_BLK + DBG64SEL + ((halBDC_Full_SRAM + 16*6)<<BUS_STARTBIT) + 0x0101)
#define BD_FSRAM_SLOT6_bd_full_sram_port1_rd_data18         (BD_BLK + DBG64SEL + ((halBDC_Full_SRAM + 16*6)<<BUS_STARTBIT) + 0x0102)
#define BD_FSRAM_SLOT6_bd_full_sram_port1_rd_data19         (BD_BLK + DBG64SEL + ((halBDC_Full_SRAM + 16*6)<<BUS_STARTBIT) + 0x0103)
#define BD_FSRAM_SLOT6_bd_full_sram_port1_rd_data20         (BD_BLK + DBG64SEL + ((halBDC_Full_SRAM + 16*6)<<BUS_STARTBIT) + 0x0104)
#define BD_FSRAM_SLOT6_bd_full_sram_port1_rd_data21         (BD_BLK + DBG64SEL + ((halBDC_Full_SRAM + 16*6)<<BUS_STARTBIT) + 0x0105)
#define BD_FSRAM_SLOT6_bd_full_sram_port1_rd_data22         (BD_BLK + DBG64SEL + ((halBDC_Full_SRAM + 16*6)<<BUS_STARTBIT) + 0x0106)
#define BD_FSRAM_SLOT6_bd_full_sram_port1_rd_data23         (BD_BLK + DBG64SEL + ((halBDC_Full_SRAM + 16*6)<<BUS_STARTBIT) + 0x0107)
#define BD_FSRAM_SLOT6_bd_full_sram_port1_rd_data24         (BD_BLK + DBG64SEL + ((halBDC_Full_SRAM + 16*6)<<BUS_STARTBIT) + 0x0108)
#define BD_FSRAM_SLOT6_bd_full_sram_port1_rd_data25         (BD_BLK + DBG64SEL + ((halBDC_Full_SRAM + 16*6)<<BUS_STARTBIT) + 0x0109)
#define BD_FSRAM_SLOT6_bd_full_sram_port1_rd_data26         (BD_BLK + DBG64SEL + ((halBDC_Full_SRAM + 16*6)<<BUS_STARTBIT) + 0x010A)
#define BD_FSRAM_SLOT6_bd_full_sram_port1_rd_data27         (BD_BLK + DBG64SEL + ((halBDC_Full_SRAM + 16*6)<<BUS_STARTBIT) + 0x010B)
#define BD_FSRAM_SLOT6_bd_full_sram_port1_rd_data28         (BD_BLK + DBG64SEL + ((halBDC_Full_SRAM + 16*6)<<BUS_STARTBIT) + 0x010C)
#define BD_FSRAM_SLOT6_bd_full_sram_port1_rd_data29         (BD_BLK + DBG64SEL + ((halBDC_Full_SRAM + 16*6)<<BUS_STARTBIT) + 0x010D)
#define BD_FSRAM_SLOT6_bd_full_sram_port1_rd_data30         (BD_BLK + DBG64SEL + ((halBDC_Full_SRAM + 16*6)<<BUS_STARTBIT) + 0x010E)
#define BD_FSRAM_SLOT6_bd_full_sram_port1_rd_data31         (BD_BLK + DBG64SEL + ((halBDC_Full_SRAM + 16*6)<<BUS_STARTBIT) + 0x010F)
//Full_SRAM SLOT7
#define BD_FSRAM_SLOT7_bd_full_sram_port1_rd_data32         (BD_BLK + DBG64SEL + ((halBDC_Full_SRAM + 16*7)<<BUS_STARTBIT) + 0x0100)
#define BD_FSRAM_SLOT7_bd_full_sram_port1_rd_data33         (BD_BLK + DBG64SEL + ((halBDC_Full_SRAM + 16*7)<<BUS_STARTBIT) + 0x0101)
#define BD_FSRAM_SLOT7_bd_full_sram_port1_rd_data34         (BD_BLK + DBG64SEL + ((halBDC_Full_SRAM + 16*7)<<BUS_STARTBIT) + 0x0102)
#define BD_FSRAM_SLOT7_bd_full_sram_port1_rd_data35         (BD_BLK + DBG64SEL + ((halBDC_Full_SRAM + 16*7)<<BUS_STARTBIT) + 0x0103)
#define BD_FSRAM_SLOT7_bd_full_sram_port1_rd_data36         (BD_BLK + DBG64SEL + ((halBDC_Full_SRAM + 16*7)<<BUS_STARTBIT) + 0x0104)
#define BD_FSRAM_SLOT7_bd_full_sram_port1_rd_data37         (BD_BLK + DBG64SEL + ((halBDC_Full_SRAM + 16*7)<<BUS_STARTBIT) + 0x0105)
#define BD_FSRAM_SLOT7_bd_full_sram_port1_rd_data38         (BD_BLK + DBG64SEL + ((halBDC_Full_SRAM + 16*7)<<BUS_STARTBIT) + 0x0106)
#define BD_FSRAM_SLOT7_bd_full_sram_port1_rd_data39         (BD_BLK + DBG64SEL + ((halBDC_Full_SRAM + 16*7)<<BUS_STARTBIT) + 0x0107)
#define BD_FSRAM_SLOT7_bd_full_sram_port1_rd_data40         (BD_BLK + DBG64SEL + ((halBDC_Full_SRAM + 16*7)<<BUS_STARTBIT) + 0x0108)
#define BD_FSRAM_SLOT7_bd_full_sram_port1_rd_data41         (BD_BLK + DBG64SEL + ((halBDC_Full_SRAM + 16*7)<<BUS_STARTBIT) + 0x0109)
#define BD_FSRAM_SLOT7_bd_full_sram_port1_rd_data42         (BD_BLK + DBG64SEL + ((halBDC_Full_SRAM + 16*7)<<BUS_STARTBIT) + 0x010A)
#define BD_FSRAM_SLOT7_bd_full_sram_port1_rd_data43         (BD_BLK + DBG64SEL + ((halBDC_Full_SRAM + 16*7)<<BUS_STARTBIT) + 0x010B)
#define BD_FSRAM_SLOT7_bd_full_sram_port1_rd_data44         (BD_BLK + DBG64SEL + ((halBDC_Full_SRAM + 16*7)<<BUS_STARTBIT) + 0x010C)
#define BD_FSRAM_SLOT7_bd_full_sram_port1_rd_data45         (BD_BLK + DBG64SEL + ((halBDC_Full_SRAM + 16*7)<<BUS_STARTBIT) + 0x010D)
#define BD_FSRAM_SLOT7_bd_full_sram_port1_rd_data46         (BD_BLK + DBG64SEL + ((halBDC_Full_SRAM + 16*7)<<BUS_STARTBIT) + 0x010E)
#define BD_FSRAM_SLOT7_bd_full_sram_port1_rd_data47         (BD_BLK + DBG64SEL + ((halBDC_Full_SRAM + 16*7)<<BUS_STARTBIT) + 0x010F)
//Full_SRAM SLOT8
#define BD_FSRAM_SLOT8_bd_full_sram_port1_rd_data48         (BD_BLK + DBG64SEL + ((halBDC_Full_SRAM + 16*8)<<BUS_STARTBIT) + 0x0100)
#define BD_FSRAM_SLOT8_bd_full_sram_port1_rd_data49         (BD_BLK + DBG64SEL + ((halBDC_Full_SRAM + 16*8)<<BUS_STARTBIT) + 0x0101)
#define BD_FSRAM_SLOT8_bd_full_sram_port1_rd_data50         (BD_BLK + DBG64SEL + ((halBDC_Full_SRAM + 16*8)<<BUS_STARTBIT) + 0x0102)
#define BD_FSRAM_SLOT8_bd_full_sram_port1_rd_data51         (BD_BLK + DBG64SEL + ((halBDC_Full_SRAM + 16*8)<<BUS_STARTBIT) + 0x0103)
#define BD_FSRAM_SLOT8_bd_full_sram_port1_rd_data52         (BD_BLK + DBG64SEL + ((halBDC_Full_SRAM + 16*8)<<BUS_STARTBIT) + 0x0104)
#define BD_FSRAM_SLOT8_bd_full_sram_port1_rd_data53         (BD_BLK + DBG64SEL + ((halBDC_Full_SRAM + 16*8)<<BUS_STARTBIT) + 0x0105)
#define BD_FSRAM_SLOT8_bd_full_sram_port1_rd_data54         (BD_BLK + DBG64SEL + ((halBDC_Full_SRAM + 16*8)<<BUS_STARTBIT) + 0x0106)
#define BD_FSRAM_SLOT8_bd_full_sram_port1_rd_data55         (BD_BLK + DBG64SEL + ((halBDC_Full_SRAM + 16*8)<<BUS_STARTBIT) + 0x0107)
#define BD_FSRAM_SLOT8_bd_full_sram_port1_rd_data56         (BD_BLK + DBG64SEL + ((halBDC_Full_SRAM + 16*8)<<BUS_STARTBIT) + 0x0108)
#define BD_FSRAM_SLOT8_bd_full_sram_port1_rd_data57         (BD_BLK + DBG64SEL + ((halBDC_Full_SRAM + 16*8)<<BUS_STARTBIT) + 0x0109)
#define BD_FSRAM_SLOT8_bd_full_sram_port1_rd_data58         (BD_BLK + DBG64SEL + ((halBDC_Full_SRAM + 16*8)<<BUS_STARTBIT) + 0x010A)
#define BD_FSRAM_SLOT8_bd_full_sram_port1_rd_data59         (BD_BLK + DBG64SEL + ((halBDC_Full_SRAM + 16*8)<<BUS_STARTBIT) + 0x010B)
#define BD_FSRAM_SLOT8_bd_full_sram_port1_rd_data60         (BD_BLK + DBG64SEL + ((halBDC_Full_SRAM + 16*8)<<BUS_STARTBIT) + 0x010C)
#define BD_FSRAM_SLOT8_bd_full_sram_port1_rd_data61         (BD_BLK + DBG64SEL + ((halBDC_Full_SRAM + 16*8)<<BUS_STARTBIT) + 0x010D)
#define BD_FSRAM_SLOT8_bd_full_sram_port1_rd_data62         (BD_BLK + DBG64SEL + ((halBDC_Full_SRAM + 16*8)<<BUS_STARTBIT) + 0x010E)
#define BD_FSRAM_SLOT8_bd_full_sram_port1_rd_data63         (BD_BLK + DBG64SEL + ((halBDC_Full_SRAM + 16*8)<<BUS_STARTBIT) + 0x010F)
//Full_SRAM SLOT9
#define BD_FSRAM_SLOT9_bd_full_sram_port1_add_int0          (BD_BLK + DBG64SEL + ((halBDC_Full_SRAM + 16*9)<<BUS_STARTBIT) + 0x0100)
#define BD_FSRAM_SLOT9_bd_full_sram_port1_add_int1          (BD_BLK + DBG64SEL + ((halBDC_Full_SRAM + 16*9)<<BUS_STARTBIT) + 0x0101)
#define BD_FSRAM_SLOT9_bd_full_sram_port1_add_int2          (BD_BLK + DBG64SEL + ((halBDC_Full_SRAM + 16*9)<<BUS_STARTBIT) + 0x0102)
#define BD_FSRAM_SLOT9_bd_full_sram_port1_add_int3          (BD_BLK + DBG64SEL + ((halBDC_Full_SRAM + 16*9)<<BUS_STARTBIT) + 0x0103)
#define BD_FSRAM_SLOT9_bd_full_sram_port1_add_int4          (BD_BLK + DBG64SEL + ((halBDC_Full_SRAM + 16*9)<<BUS_STARTBIT) + 0x0104)
#define BD_FSRAM_SLOT9_bd_full_sram_port1_add_int5          (BD_BLK + DBG64SEL + ((halBDC_Full_SRAM + 16*9)<<BUS_STARTBIT) + 0x0105)
#define BD_FSRAM_SLOT9_bd_full_sram_port1_add_int6          (BD_BLK + DBG64SEL + ((halBDC_Full_SRAM + 16*9)<<BUS_STARTBIT) + 0x0106)
#define BD_FSRAM_SLOT9_bd_full_sram_port1_byte_en_n_int0    (BD_BLK + DBG64SEL + ((halBDC_Full_SRAM + 16*9)<<BUS_STARTBIT) + 0x0107)
#define BD_FSRAM_SLOT9_bd_full_sram_port1_byte_en_n_int1    (BD_BLK + DBG64SEL + ((halBDC_Full_SRAM + 16*9)<<BUS_STARTBIT) + 0x0108)
#define BD_FSRAM_SLOT9_bd_full_sram_port1_byte_en_n_int2    (BD_BLK + DBG64SEL + ((halBDC_Full_SRAM + 16*9)<<BUS_STARTBIT) + 0x0109)
#define BD_FSRAM_SLOT9_bd_full_sram_port1_byte_en_n_int3    (BD_BLK + DBG64SEL + ((halBDC_Full_SRAM + 16*9)<<BUS_STARTBIT) + 0x010A)
#define BD_FSRAM_SLOT9_bd_full_sram_port1_byte_en_n_int4    (BD_BLK + DBG64SEL + ((halBDC_Full_SRAM + 16*9)<<BUS_STARTBIT) + 0x010B)
#define BD_FSRAM_SLOT9_bd_full_sram_port1_byte_en_n_int5    (BD_BLK + DBG64SEL + ((halBDC_Full_SRAM + 16*9)<<BUS_STARTBIT) + 0x010C)
#define BD_FSRAM_SLOT9_bd_full_sram_port1_byte_en_n_int6    (BD_BLK + DBG64SEL + ((halBDC_Full_SRAM + 16*9)<<BUS_STARTBIT) + 0x010D)
#define BD_FSRAM_SLOT9_bd_full_sram_port1_byte_en_n_int7    (BD_BLK + DBG64SEL + ((halBDC_Full_SRAM + 16*9)<<BUS_STARTBIT) + 0x010E)
#define BD_FSRAM_SLOT9_bvci_clk_scan                        (BD_BLK + DBG64SEL + ((halBDC_Full_SRAM + 16*9)<<BUS_STARTBIT) + 0x010F)

//Small_SRAM SLOT0
#define BD_SLSRAM_SLOT0_bd_small_sram_port2_add_int0        (BD_BLK + DBG64SEL + ((halBDC_Small_SRAM + 0)<<BUS_STARTBIT) + 0x0100)
#define BD_SLSRAM_SLOT0_bd_small_sram_port2_add_int1        (BD_BLK + DBG64SEL + ((halBDC_Small_SRAM + 0)<<BUS_STARTBIT) + 0x0101)
#define BD_SLSRAM_SLOT0_bd_small_sram_port2_add_int2        (BD_BLK + DBG64SEL + ((halBDC_Small_SRAM + 0)<<BUS_STARTBIT) + 0x0102)
#define BD_SLSRAM_SLOT0_bd_small_sram_port2_add_int3        (BD_BLK + DBG64SEL + ((halBDC_Small_SRAM + 0)<<BUS_STARTBIT) + 0x0103)
#define BD_SLSRAM_SLOT0_bd_small_sram_port2_add_int4        (BD_BLK + DBG64SEL + ((halBDC_Small_SRAM + 0)<<BUS_STARTBIT) + 0x0104)
#define BD_SLSRAM_SLOT0_bd_small_sram_port2_add_int5        (BD_BLK + DBG64SEL + ((halBDC_Small_SRAM + 0)<<BUS_STARTBIT) + 0x0105)
#define BD_SLSRAM_SLOT0_bd_small_sram_port2_add_int6        (BD_BLK + DBG64SEL + ((halBDC_Small_SRAM + 0)<<BUS_STARTBIT) + 0x0106)
#define BD_SLSRAM_SLOT0_bd_small_sram_port2_add_int7        (BD_BLK + DBG64SEL + ((halBDC_Small_SRAM + 0)<<BUS_STARTBIT) + 0x0107)
#define BD_SLSRAM_SLOT0_bd_small_sram_port2_add_int8        (BD_BLK + DBG64SEL + ((halBDC_Small_SRAM + 0)<<BUS_STARTBIT) + 0x0108)
#define BD_SLSRAM_SLOT0_bd_small_sram_port2_add_int9        (BD_BLK + DBG64SEL + ((halBDC_Small_SRAM + 0)<<BUS_STARTBIT) + 0x0109)
#define BD_SLSRAM_SLOT0_bd_small_sram_port2_add_int10       (BD_BLK + DBG64SEL + ((halBDC_Small_SRAM + 0)<<BUS_STARTBIT) + 0x010A)
#define BD_SLSRAM_SLOT0_bd_small_sram_port2_wrn_int         (BD_BLK + DBG64SEL + ((halBDC_Small_SRAM + 0)<<BUS_STARTBIT) + 0x010B)
#define BD_SLSRAM_SLOT0_bd_codec_clk_scan                   (BD_BLK + DBG64SEL + ((halBDC_Small_SRAM + 0)<<BUS_STARTBIT) + 0x010C)
#define BD_SLSRAM_SLOT0_0a                                  (BD_BLK + DBG64SEL + ((halBDC_Small_SRAM + 0)<<BUS_STARTBIT) + 0x010D)
#define BD_SLSRAM_SLOT0_0b                                  (BD_BLK + DBG64SEL + ((halBDC_Small_SRAM + 0)<<BUS_STARTBIT) + 0x010E)
#define BD_SLSRAM_SLOT0_0c                                  (BD_BLK + DBG64SEL + ((halBDC_Small_SRAM + 0)<<BUS_STARTBIT) + 0x010F)
//Small_SRAM SLOT1
#define BD_SLSRAM_SLOT1_bd_small_sram_port2_wr_data_int0    (BD_BLK + DBG64SEL + ((halBDC_Small_SRAM + 16*1)<<BUS_STARTBIT) + 0x0100)
#define BD_SLSRAM_SLOT1_bd_small_sram_port2_wr_data_int1    (BD_BLK + DBG64SEL + ((halBDC_Small_SRAM + 16*1)<<BUS_STARTBIT) + 0x0101)
#define BD_SLSRAM_SLOT1_bd_small_sram_port2_wr_data_int2    (BD_BLK + DBG64SEL + ((halBDC_Small_SRAM + 16*1)<<BUS_STARTBIT) + 0x0102)
#define BD_SLSRAM_SLOT1_bd_small_sram_port2_wr_data_int3    (BD_BLK + DBG64SEL + ((halBDC_Small_SRAM + 16*1)<<BUS_STARTBIT) + 0x0103)
#define BD_SLSRAM_SLOT1_bd_small_sram_port2_wr_data_int4    (BD_BLK + DBG64SEL + ((halBDC_Small_SRAM + 16*1)<<BUS_STARTBIT) + 0x0104)
#define BD_SLSRAM_SLOT1_bd_small_sram_port2_wr_data_int5    (BD_BLK + DBG64SEL + ((halBDC_Small_SRAM + 16*1)<<BUS_STARTBIT) + 0x0105)
#define BD_SLSRAM_SLOT1_bd_small_sram_port2_wr_data_int6    (BD_BLK + DBG64SEL + ((halBDC_Small_SRAM + 16*1)<<BUS_STARTBIT) + 0x0106)
#define BD_SLSRAM_SLOT1_bd_small_sram_port2_wr_data_int7    (BD_BLK + DBG64SEL + ((halBDC_Small_SRAM + 16*1)<<BUS_STARTBIT) + 0x0107)
#define BD_SLSRAM_SLOT1_bd_small_sram_port2_rd_data0        (BD_BLK + DBG64SEL + ((halBDC_Small_SRAM + 16*1)<<BUS_STARTBIT) + 0x0108)
#define BD_SLSRAM_SLOT1_bd_small_sram_port2_rd_data1        (BD_BLK + DBG64SEL + ((halBDC_Small_SRAM + 16*1)<<BUS_STARTBIT) + 0x0109)
#define BD_SLSRAM_SLOT1_bd_small_sram_port2_rd_data2        (BD_BLK + DBG64SEL + ((halBDC_Small_SRAM + 16*1)<<BUS_STARTBIT) + 0x010A)
#define BD_SLSRAM_SLOT1_bd_small_sram_port2_rd_data3        (BD_BLK + DBG64SEL + ((halBDC_Small_SRAM + 16*1)<<BUS_STARTBIT) + 0x010B)
#define BD_SLSRAM_SLOT1_bd_small_sram_port2_rd_data4        (BD_BLK + DBG64SEL + ((halBDC_Small_SRAM + 16*1)<<BUS_STARTBIT) + 0x010C)
#define BD_SLSRAM_SLOT1_bd_small_sram_port2_rd_data5        (BD_BLK + DBG64SEL + ((halBDC_Small_SRAM + 16*1)<<BUS_STARTBIT) + 0x010D)
#define BD_SLSRAM_SLOT1_bd_small_sram_port2_rd_data6        (BD_BLK + DBG64SEL + ((halBDC_Small_SRAM + 16*1)<<BUS_STARTBIT) + 0x010E)
#define BD_SLSRAM_SLOT1_bd_small_sram_port2_rd_data7        (BD_BLK + DBG64SEL + ((halBDC_Small_SRAM + 16*1)<<BUS_STARTBIT) + 0x010F)
//Small_SRAM SLOT2
#define BD_SLSRAM_SLOT2_bd_small_sram_port1_add_int0        (BD_BLK + DBG64SEL + ((halBDC_Small_SRAM + 16*2)<<BUS_STARTBIT) + 0x0100)
#define BD_SLSRAM_SLOT2_bd_small_sram_port1_add_int1        (BD_BLK + DBG64SEL + ((halBDC_Small_SRAM + 16*2)<<BUS_STARTBIT) + 0x0101)
#define BD_SLSRAM_SLOT2_bd_small_sram_port1_add_int2        (BD_BLK + DBG64SEL + ((halBDC_Small_SRAM + 16*2)<<BUS_STARTBIT) + 0x0102)
#define BD_SLSRAM_SLOT2_bd_small_sram_port1_add_int3        (BD_BLK + DBG64SEL + ((halBDC_Small_SRAM + 16*2)<<BUS_STARTBIT) + 0x0103)
#define BD_SLSRAM_SLOT2_bd_small_sram_port1_add_int4        (BD_BLK + DBG64SEL + ((halBDC_Small_SRAM + 16*2)<<BUS_STARTBIT) + 0x0104)
#define BD_SLSRAM_SLOT2_bd_small_sram_port1_add_int5        (BD_BLK + DBG64SEL + ((halBDC_Small_SRAM + 16*2)<<BUS_STARTBIT) + 0x0105)
#define BD_SLSRAM_SLOT2_bd_small_sram_port1_add_int6        (BD_BLK + DBG64SEL + ((halBDC_Small_SRAM + 16*2)<<BUS_STARTBIT) + 0x0106)
#define BD_SLSRAM_SLOT2_bd_small_sram_port1_add_int7        (BD_BLK + DBG64SEL + ((halBDC_Small_SRAM + 16*2)<<BUS_STARTBIT) + 0x0107)
#define BD_SLSRAM_SLOT2_bd_small_sram_port1_add_int8        (BD_BLK + DBG64SEL + ((halBDC_Small_SRAM + 16*2)<<BUS_STARTBIT) + 0x0108)
#define BD_SLSRAM_SLOT2_bd_small_sram_port1_add_int9        (BD_BLK + DBG64SEL + ((halBDC_Small_SRAM + 16*2)<<BUS_STARTBIT) + 0x0109)
#define BD_SLSRAM_SLOT2_bd_small_sram_port1_add_int10       (BD_BLK + DBG64SEL + ((halBDC_Small_SRAM + 16*2)<<BUS_STARTBIT) + 0x010A)
#define BD_SLSRAM_SLOT2_bd_small_sram_port1_wrn_int         (BD_BLK + DBG64SEL + ((halBDC_Small_SRAM + 16*2)<<BUS_STARTBIT) + 0x010B)
#define BD_SLSRAM_SLOT2_bvci_clk_scan                       (BD_BLK + DBG64SEL + ((halBDC_Small_SRAM + 16*2)<<BUS_STARTBIT) + 0x010C)
#define BD_SLSRAM_SLOT2_0a                                  (BD_BLK + DBG64SEL + ((halBDC_Small_SRAM + 16*2)<<BUS_STARTBIT) + 0x010D)
#define BD_SLSRAM_SLOT2_0b                                  (BD_BLK + DBG64SEL + ((halBDC_Small_SRAM + 16*2)<<BUS_STARTBIT) + 0x010E)
#define BD_SLSRAM_SLOT2_0c                                  (BD_BLK + DBG64SEL + ((halBDC_Small_SRAM + 16*2)<<BUS_STARTBIT) + 0x010F)
//Small_SRAM SLOT3
#define BD_SLSRAM_SLOT3_bd_small_sram_port1_wr_data_int16   (BD_BLK + DBG64SEL + ((halBDC_Small_SRAM + 16*3)<<BUS_STARTBIT) + 0x0100)
#define BD_SLSRAM_SLOT3_bd_small_sram_port1_wr_data_int17   (BD_BLK + DBG64SEL + ((halBDC_Small_SRAM + 16*3)<<BUS_STARTBIT) + 0x0101)
#define BD_SLSRAM_SLOT3_bd_small_sram_port1_wr_data_int18   (BD_BLK + DBG64SEL + ((halBDC_Small_SRAM + 16*3)<<BUS_STARTBIT) + 0x0102)
#define BD_SLSRAM_SLOT3_bd_small_sram_port1_wr_data_int19   (BD_BLK + DBG64SEL + ((halBDC_Small_SRAM + 16*3)<<BUS_STARTBIT) + 0x0103)
#define BD_SLSRAM_SLOT3_bd_small_sram_port1_wr_data_int20   (BD_BLK + DBG64SEL + ((halBDC_Small_SRAM + 16*3)<<BUS_STARTBIT) + 0x0104)
#define BD_SLSRAM_SLOT3_bd_small_sram_port1_wr_data_int21   (BD_BLK + DBG64SEL + ((halBDC_Small_SRAM + 16*3)<<BUS_STARTBIT) + 0x0105)
#define BD_SLSRAM_SLOT3_bd_small_sram_port1_wr_data_int22   (BD_BLK + DBG64SEL + ((halBDC_Small_SRAM + 16*3)<<BUS_STARTBIT) + 0x0106)
#define BD_SLSRAM_SLOT3_bd_small_sram_port1_wr_data_int23   (BD_BLK + DBG64SEL + ((halBDC_Small_SRAM + 16*3)<<BUS_STARTBIT) + 0x0107)
#define BD_SLSRAM_SLOT3_bd_small_sram_port1_wr_data_int24   (BD_BLK + DBG64SEL + ((halBDC_Small_SRAM + 16*3)<<BUS_STARTBIT) + 0x0108)
#define BD_SLSRAM_SLOT3_bd_small_sram_port1_wr_data_int25   (BD_BLK + DBG64SEL + ((halBDC_Small_SRAM + 16*3)<<BUS_STARTBIT) + 0x0109)
#define BD_SLSRAM_SLOT3_bd_small_sram_port1_wr_data_int26   (BD_BLK + DBG64SEL + ((halBDC_Small_SRAM + 16*3)<<BUS_STARTBIT) + 0x010A)
#define BD_SLSRAM_SLOT3_bd_small_sram_port1_wr_data_int27   (BD_BLK + DBG64SEL + ((halBDC_Small_SRAM + 16*3)<<BUS_STARTBIT) + 0x010B)
#define BD_SLSRAM_SLOT3_bd_small_sram_port1_wr_data_int28   (BD_BLK + DBG64SEL + ((halBDC_Small_SRAM + 16*3)<<BUS_STARTBIT) + 0x010C)
#define BD_SLSRAM_SLOT3_bd_small_sram_port1_wr_data_int29   (BD_BLK + DBG64SEL + ((halBDC_Small_SRAM + 16*3)<<BUS_STARTBIT) + 0x010D)
#define BD_SLSRAM_SLOT3_bd_small_sram_port1_wr_data_int30   (BD_BLK + DBG64SEL + ((halBDC_Small_SRAM + 16*3)<<BUS_STARTBIT) + 0x010E)
#define BD_SLSRAM_SLOT3_bd_small_sram_port1_wr_data_int31   (BD_BLK + DBG64SEL + ((halBDC_Small_SRAM + 16*3)<<BUS_STARTBIT) + 0x010F)
//Small_SRAM SLOT4
#define BD_SLSRAM_SLOT4_bd_small_sram_port1_wr_data_int0    (BD_BLK + DBG64SEL + ((halBDC_Small_SRAM + 16*4)<<BUS_STARTBIT) + 0x0100)
#define BD_SLSRAM_SLOT4_bd_small_sram_port1_wr_data_int1    (BD_BLK + DBG64SEL + ((halBDC_Small_SRAM + 16*4)<<BUS_STARTBIT) + 0x0101)
#define BD_SLSRAM_SLOT4_bd_small_sram_port1_wr_data_int2    (BD_BLK + DBG64SEL + ((halBDC_Small_SRAM + 16*4)<<BUS_STARTBIT) + 0x0102)
#define BD_SLSRAM_SLOT4_bd_small_sram_port1_wr_data_int3    (BD_BLK + DBG64SEL + ((halBDC_Small_SRAM + 16*4)<<BUS_STARTBIT) + 0x0103)
#define BD_SLSRAM_SLOT4_bd_small_sram_port1_wr_data_int4    (BD_BLK + DBG64SEL + ((halBDC_Small_SRAM + 16*4)<<BUS_STARTBIT) + 0x0104)
#define BD_SLSRAM_SLOT4_bd_small_sram_port1_wr_data_int5    (BD_BLK + DBG64SEL + ((halBDC_Small_SRAM + 16*4)<<BUS_STARTBIT) + 0x0105)
#define BD_SLSRAM_SLOT4_bd_small_sram_port1_wr_data_int6    (BD_BLK + DBG64SEL + ((halBDC_Small_SRAM + 16*4)<<BUS_STARTBIT) + 0x0106)
#define BD_SLSRAM_SLOT4_bd_small_sram_port1_wr_data_int7    (BD_BLK + DBG64SEL + ((halBDC_Small_SRAM + 16*4)<<BUS_STARTBIT) + 0x0107)
#define BD_SLSRAM_SLOT4_bd_small_sram_port1_wr_data_int8    (BD_BLK + DBG64SEL + ((halBDC_Small_SRAM + 16*4)<<BUS_STARTBIT) + 0x0108)
#define BD_SLSRAM_SLOT4_bd_small_sram_port1_wr_data_int9    (BD_BLK + DBG64SEL + ((halBDC_Small_SRAM + 16*4)<<BUS_STARTBIT) + 0x0109)
#define BD_SLSRAM_SLOT4_bd_small_sram_port1_wr_data_int10   (BD_BLK + DBG64SEL + ((halBDC_Small_SRAM + 16*4)<<BUS_STARTBIT) + 0x010A)
#define BD_SLSRAM_SLOT4_bd_small_sram_port1_wr_data_int11   (BD_BLK + DBG64SEL + ((halBDC_Small_SRAM + 16*4)<<BUS_STARTBIT) + 0x010B)
#define BD_SLSRAM_SLOT4_bd_small_sram_port1_wr_data_int12   (BD_BLK + DBG64SEL + ((halBDC_Small_SRAM + 16*4)<<BUS_STARTBIT) + 0x010C)
#define BD_SLSRAM_SLOT4_bd_small_sram_port1_wr_data_int13   (BD_BLK + DBG64SEL + ((halBDC_Small_SRAM + 16*4)<<BUS_STARTBIT) + 0x010D)
#define BD_SLSRAM_SLOT4_bd_small_sram_port1_wr_data_int14   (BD_BLK + DBG64SEL + ((halBDC_Small_SRAM + 16*4)<<BUS_STARTBIT) + 0x010E)
#define BD_SLSRAM_SLOT4_bd_small_sram_port1_wr_data_int15   (BD_BLK + DBG64SEL + ((halBDC_Small_SRAM + 16*4)<<BUS_STARTBIT) + 0x010F)
//Small_SRAM SLOT5
#define BD_SLSRAM_SLOT5_bd_small_sram_port1_rd_data16         (BD_BLK + DBG64SEL + ((halBDC_Small_SRAM + 16*5)<<BUS_STARTBIT) + 0x0100)
#define BD_SLSRAM_SLOT5_bd_small_sram_port1_rd_data17         (BD_BLK + DBG64SEL + ((halBDC_Small_SRAM + 16*5)<<BUS_STARTBIT) + 0x0101)
#define BD_SLSRAM_SLOT5_bd_small_sram_port1_rd_data18         (BD_BLK + DBG64SEL + ((halBDC_Small_SRAM + 16*5)<<BUS_STARTBIT) + 0x0102)
#define BD_SLSRAM_SLOT5_bd_small_sram_port1_rd_data19         (BD_BLK + DBG64SEL + ((halBDC_Small_SRAM + 16*5)<<BUS_STARTBIT) + 0x0103)
#define BD_SLSRAM_SLOT5_bd_small_sram_port1_rd_data20         (BD_BLK + DBG64SEL + ((halBDC_Small_SRAM + 16*5)<<BUS_STARTBIT) + 0x0104)
#define BD_SLSRAM_SLOT5_bd_small_sram_port1_rd_data21         (BD_BLK + DBG64SEL + ((halBDC_Small_SRAM + 16*5)<<BUS_STARTBIT) + 0x0105)
#define BD_SLSRAM_SLOT5_bd_small_sram_port1_rd_data22         (BD_BLK + DBG64SEL + ((halBDC_Small_SRAM + 16*5)<<BUS_STARTBIT) + 0x0106)
#define BD_SLSRAM_SLOT5_bd_small_sram_port1_rd_data23         (BD_BLK + DBG64SEL + ((halBDC_Small_SRAM + 16*5)<<BUS_STARTBIT) + 0x0107)
#define BD_SLSRAM_SLOT5_bd_small_sram_port1_rd_data24         (BD_BLK + DBG64SEL + ((halBDC_Small_SRAM + 16*5)<<BUS_STARTBIT) + 0x0108)
#define BD_SLSRAM_SLOT5_bd_small_sram_port1_rd_data25         (BD_BLK + DBG64SEL + ((halBDC_Small_SRAM + 16*5)<<BUS_STARTBIT) + 0x0109)
#define BD_SLSRAM_SLOT5_bd_small_sram_port1_rd_data26         (BD_BLK + DBG64SEL + ((halBDC_Small_SRAM + 16*5)<<BUS_STARTBIT) + 0x010A)
#define BD_SLSRAM_SLOT5_bd_small_sram_port1_rd_data27         (BD_BLK + DBG64SEL + ((halBDC_Small_SRAM + 16*5)<<BUS_STARTBIT) + 0x010B)
#define BD_SLSRAM_SLOT5_bd_small_sram_port1_rd_data28         (BD_BLK + DBG64SEL + ((halBDC_Small_SRAM + 16*5)<<BUS_STARTBIT) + 0x010C)
#define BD_SLSRAM_SLOT5_bd_small_sram_port1_rd_data29         (BD_BLK + DBG64SEL + ((halBDC_Small_SRAM + 16*5)<<BUS_STARTBIT) + 0x010D)
#define BD_SLSRAM_SLOT5_bd_small_sram_port1_rd_data30         (BD_BLK + DBG64SEL + ((halBDC_Small_SRAM + 16*5)<<BUS_STARTBIT) + 0x010E)
#define BD_SLSRAM_SLOT5_bd_small_sram_port1_rd_data31         (BD_BLK + DBG64SEL + ((halBDC_Small_SRAM + 16*5)<<BUS_STARTBIT) + 0x010F)
//Small_SRAM SLOT6
#define BD_SLSRAM_SLOT6_bd_small_sram_port1_rd_data0          (BD_BLK + DBG64SEL + ((halBDC_Small_SRAM + 16*6)<<BUS_STARTBIT) + 0x0100)
#define BD_SLSRAM_SLOT6_bd_small_sram_port1_rd_data1          (BD_BLK + DBG64SEL + ((halBDC_Small_SRAM + 16*6)<<BUS_STARTBIT) + 0x0101)
#define BD_SLSRAM_SLOT6_bd_small_sram_port1_rd_data2          (BD_BLK + DBG64SEL + ((halBDC_Small_SRAM + 16*6)<<BUS_STARTBIT) + 0x0102)
#define BD_SLSRAM_SLOT6_bd_small_sram_port1_rd_data3          (BD_BLK + DBG64SEL + ((halBDC_Small_SRAM + 16*6)<<BUS_STARTBIT) + 0x0103)
#define BD_SLSRAM_SLOT6_bd_small_sram_port1_rd_data4          (BD_BLK + DBG64SEL + ((halBDC_Small_SRAM + 16*6)<<BUS_STARTBIT) + 0x0104)
#define BD_SLSRAM_SLOT6_bd_small_sram_port1_rd_data5          (BD_BLK + DBG64SEL + ((halBDC_Small_SRAM + 16*6)<<BUS_STARTBIT) + 0x0105)
#define BD_SLSRAM_SLOT6_bd_small_sram_port1_rd_data6          (BD_BLK + DBG64SEL + ((halBDC_Small_SRAM + 16*6)<<BUS_STARTBIT) + 0x0106)
#define BD_SLSRAM_SLOT6_bd_small_sram_port1_rd_data7          (BD_BLK + DBG64SEL + ((halBDC_Small_SRAM + 16*6)<<BUS_STARTBIT) + 0x0107)
#define BD_SLSRAM_SLOT6_bd_small_sram_port1_rd_data8          (BD_BLK + DBG64SEL + ((halBDC_Small_SRAM + 16*6)<<BUS_STARTBIT) + 0x0108)
#define BD_SLSRAM_SLOT6_bd_small_sram_port1_rd_data9          (BD_BLK + DBG64SEL + ((halBDC_Small_SRAM + 16*6)<<BUS_STARTBIT) + 0x0109)
#define BD_SLSRAM_SLOT6_bd_small_sram_port1_rd_data10         (BD_BLK + DBG64SEL + ((halBDC_Small_SRAM + 16*6)<<BUS_STARTBIT) + 0x010A)
#define BD_SLSRAM_SLOT6_bd_small_sram_port1_rd_data11         (BD_BLK + DBG64SEL + ((halBDC_Small_SRAM + 16*6)<<BUS_STARTBIT) + 0x010B)
#define BD_SLSRAM_SLOT6_bd_small_sram_port1_rd_data12         (BD_BLK + DBG64SEL + ((halBDC_Small_SRAM + 16*6)<<BUS_STARTBIT) + 0x010C)
#define BD_SLSRAM_SLOT6_bd_small_sram_port1_rd_data13         (BD_BLK + DBG64SEL + ((halBDC_Small_SRAM + 16*6)<<BUS_STARTBIT) + 0x010D)
#define BD_SLSRAM_SLOT6_bd_small_sram_port1_rd_data14         (BD_BLK + DBG64SEL + ((halBDC_Small_SRAM + 16*6)<<BUS_STARTBIT) + 0x010E)
#define BD_SLSRAM_SLOT6_bd_small_sram_port1_rd_data15         (BD_BLK + DBG64SEL + ((halBDC_Small_SRAM + 16*6)<<BUS_STARTBIT) + 0x010F)
//Small_SRAM SLOT7
#define BD_SLSRAM_SLOT7_bd_small_sram_port2_add_int0          (BD_BLK + DBG64SEL + ((halBDC_Small_SRAM + 16*7)<<BUS_STARTBIT) + 0x0100)
#define BD_SLSRAM_SLOT7_bd_small_sram_port2_add_int1          (BD_BLK + DBG64SEL + ((halBDC_Small_SRAM + 16*7)<<BUS_STARTBIT) + 0x0101)
#define BD_SLSRAM_SLOT7_bd_small_sram_port2_add_int2          (BD_BLK + DBG64SEL + ((halBDC_Small_SRAM + 16*7)<<BUS_STARTBIT) + 0x0102)
#define BD_SLSRAM_SLOT7_bd_small_sram_port2_add_int3          (BD_BLK + DBG64SEL + ((halBDC_Small_SRAM + 16*7)<<BUS_STARTBIT) + 0x0103)
#define BD_SLSRAM_SLOT7_bd_small_sram_port2_add_int4          (BD_BLK + DBG64SEL + ((halBDC_Small_SRAM + 16*7)<<BUS_STARTBIT) + 0x0104)
#define BD_SLSRAM_SLOT7_bd_small_sram_port2_add_int5          (BD_BLK + DBG64SEL + ((halBDC_Small_SRAM + 16*7)<<BUS_STARTBIT) + 0x0105)
#define BD_SLSRAM_SLOT7_bd_small_sram_port2_add_int6          (BD_BLK + DBG64SEL + ((halBDC_Small_SRAM + 16*7)<<BUS_STARTBIT) + 0x0106)
#define BD_SLSRAM_SLOT7_bd_small_sram_port2_add_int7          (BD_BLK + DBG64SEL + ((halBDC_Small_SRAM + 16*7)<<BUS_STARTBIT) + 0x0107)
#define BD_SLSRAM_SLOT7_bd_small_sram_port2_add_int8          (BD_BLK + DBG64SEL + ((halBDC_Small_SRAM + 16*7)<<BUS_STARTBIT) + 0x0108)
#define BD_SLSRAM_SLOT7_bd_small_sram_port2_add_int9          (BD_BLK + DBG64SEL + ((halBDC_Small_SRAM + 16*7)<<BUS_STARTBIT) + 0x0109)
#define BD_SLSRAM_SLOT7_bd_small_sram_port2_add_int10         (BD_BLK + DBG64SEL + ((halBDC_Small_SRAM + 16*7)<<BUS_STARTBIT) + 0x010A)
#define BD_SLSRAM_SLOT7_bd_small_sram_port2_wrn_int           (BD_BLK + DBG64SEL + ((halBDC_Small_SRAM + 16*7)<<BUS_STARTBIT) + 0x010B)
#define BD_SLSRAM_SLOT7_bd_codec_clk_scan                     (BD_BLK + DBG64SEL + ((halBDC_Small_SRAM + 16*7)<<BUS_STARTBIT) + 0x010C)
#define BD_SLSRAM_SLOT7_0a                                    (BD_BLK + DBG64SEL + ((halBDC_Small_SRAM + 16*7)<<BUS_STARTBIT) + 0x010D)
#define BD_SLSRAM_SLOT7_0b                                    (BD_BLK + DBG64SEL + ((halBDC_Small_SRAM + 16*7)<<BUS_STARTBIT) + 0x010E)
#define BD_SLSRAM_SLOT7_0c                                    (BD_BLK + DBG64SEL + ((halBDC_Small_SRAM + 16*7)<<BUS_STARTBIT) + 0x010F)

//Full_SRAM_Erco SLOT0
#define BD_ERCO_SLOT0_bvci_address_int0                       (BD_BLK + DBG64SEL + ((halBDC_Full_SRAM_Erco + 0)<<BUS_STARTBIT) + 0x0100)
#define BD_ERCO_SLOT0_bvci_address_int1                       (BD_BLK + DBG64SEL + ((halBDC_Full_SRAM_Erco + 0)<<BUS_STARTBIT) + 0x0101)
#define BD_ERCO_SLOT0_bvci_address_int2                       (BD_BLK + DBG64SEL + ((halBDC_Full_SRAM_Erco + 0)<<BUS_STARTBIT) + 0x0102)
#define BD_ERCO_SLOT0_bvci_address_int3                       (BD_BLK + DBG64SEL + ((halBDC_Full_SRAM_Erco + 0)<<BUS_STARTBIT) + 0x0103)
#define BD_ERCO_SLOT0_bvci_address_int4                       (BD_BLK + DBG64SEL + ((halBDC_Full_SRAM_Erco + 0)<<BUS_STARTBIT) + 0x0104)
#define BD_ERCO_SLOT0_bvci_address_int5                       (BD_BLK + DBG64SEL + ((halBDC_Full_SRAM_Erco + 0)<<BUS_STARTBIT) + 0x0105)
#define BD_ERCO_SLOT0_bvci_address_int6                       (BD_BLK + DBG64SEL + ((halBDC_Full_SRAM_Erco + 0)<<BUS_STARTBIT) + 0x0106)
#define BD_ERCO_SLOT0_bvci_address_int7                       (BD_BLK + DBG64SEL + ((halBDC_Full_SRAM_Erco + 0)<<BUS_STARTBIT) + 0x0107)
#define BD_ERCO_SLOT0_bvci_rspval                             (BD_BLK + DBG64SEL + ((halBDC_Full_SRAM_Erco + 0)<<BUS_STARTBIT) + 0x0108)
#define BD_ERCO_SLOT0_bvci_be_int0                            (BD_BLK + DBG64SEL + ((halBDC_Full_SRAM_Erco + 0)<<BUS_STARTBIT) + 0x0109)
#define BD_ERCO_SLOT0_bvci_be_int1                            (BD_BLK + DBG64SEL + ((halBDC_Full_SRAM_Erco + 0)<<BUS_STARTBIT) + 0x010A)
#define BD_ERCO_SLOT0_bvci_be_int2                            (BD_BLK + DBG64SEL + ((halBDC_Full_SRAM_Erco + 0)<<BUS_STARTBIT) + 0x010B)
#define BD_ERCO_SLOT0_bvci_be_int3                            (BD_BLK + DBG64SEL + ((halBDC_Full_SRAM_Erco + 0)<<BUS_STARTBIT) + 0x010C)
#define BD_ERCO_SLOT0_bvci_cmd_int0                           (BD_BLK + DBG64SEL + ((halBDC_Full_SRAM_Erco + 0)<<BUS_STARTBIT) + 0x010D)
#define BD_ERCO_SLOT0_bvci_cmdval_int                         (BD_BLK + DBG64SEL + ((halBDC_Full_SRAM_Erco + 0)<<BUS_STARTBIT) + 0x010E)
#define BD_ERCO_SLOT0_bvci_clk_scan                           (BD_BLK + DBG64SEL + ((halBDC_Full_SRAM_Erco + 0)<<BUS_STARTBIT) + 0x010F)
//Full_SRAM_Erco SLOT1
#define BD_ERCO_SLOT1_erasure_location_10                     (BD_BLK + DBG64SEL + ((halBDC_Full_SRAM_Erco + 16*1)<<BUS_STARTBIT) + 0x0100)
#define BD_ERCO_SLOT1_erasure_location_11                     (BD_BLK + DBG64SEL + ((halBDC_Full_SRAM_Erco + 16*1)<<BUS_STARTBIT) + 0x0101)
#define BD_ERCO_SLOT1_erasure_location_12                     (BD_BLK + DBG64SEL + ((halBDC_Full_SRAM_Erco + 16*1)<<BUS_STARTBIT) + 0x0102)
#define BD_ERCO_SLOT1_erasure_location_13                     (BD_BLK + DBG64SEL + ((halBDC_Full_SRAM_Erco + 16*1)<<BUS_STARTBIT) + 0x0103)
#define BD_ERCO_SLOT1_erasure_location_14                     (BD_BLK + DBG64SEL + ((halBDC_Full_SRAM_Erco + 16*1)<<BUS_STARTBIT) + 0x0104)
#define BD_ERCO_SLOT1_erasure_location_15                     (BD_BLK + DBG64SEL + ((halBDC_Full_SRAM_Erco + 16*1)<<BUS_STARTBIT) + 0x0105)
#define BD_ERCO_SLOT1_erasure_location_16                     (BD_BLK + DBG64SEL + ((halBDC_Full_SRAM_Erco + 16*1)<<BUS_STARTBIT) + 0x0106)
#define BD_ERCO_SLOT1_erasure_location_17                     (BD_BLK + DBG64SEL + ((halBDC_Full_SRAM_Erco + 16*1)<<BUS_STARTBIT) + 0x0107)
#define BD_ERCO_SLOT1_erasure_location_00                     (BD_BLK + DBG64SEL + ((halBDC_Full_SRAM_Erco + 16*1)<<BUS_STARTBIT) + 0x0108)
#define BD_ERCO_SLOT1_erasure_location_01                     (BD_BLK + DBG64SEL + ((halBDC_Full_SRAM_Erco + 16*1)<<BUS_STARTBIT) + 0x0109)
#define BD_ERCO_SLOT1_erasure_location_02                     (BD_BLK + DBG64SEL + ((halBDC_Full_SRAM_Erco + 16*1)<<BUS_STARTBIT) + 0x010A)
#define BD_ERCO_SLOT1_erasure_location_03                     (BD_BLK + DBG64SEL + ((halBDC_Full_SRAM_Erco + 16*1)<<BUS_STARTBIT) + 0x010B)
#define BD_ERCO_SLOT1_erasure_location_04                     (BD_BLK + DBG64SEL + ((halBDC_Full_SRAM_Erco + 16*1)<<BUS_STARTBIT) + 0x010C)
#define BD_ERCO_SLOT1_erasure_location_05                     (BD_BLK + DBG64SEL + ((halBDC_Full_SRAM_Erco + 16*1)<<BUS_STARTBIT) + 0x010D)
#define BD_ERCO_SLOT1_erasure_location_06                     (BD_BLK + DBG64SEL + ((halBDC_Full_SRAM_Erco + 16*1)<<BUS_STARTBIT) + 0x010E)
#define BD_ERCO_SLOT1_erasure_location_07                     (BD_BLK + DBG64SEL + ((halBDC_Full_SRAM_Erco + 16*1)<<BUS_STARTBIT) + 0x010F)
//Full_SRAM_Erco SLOT2
#define BD_ERCO_SLOT2_erasure_count_10                        (BD_BLK + DBG64SEL + ((halBDC_Full_SRAM_Erco + 16*2)<<BUS_STARTBIT) + 0x0100)
#define BD_ERCO_SLOT2_erasure_count_11                        (BD_BLK + DBG64SEL + ((halBDC_Full_SRAM_Erco + 16*2)<<BUS_STARTBIT) + 0x0101)
#define BD_ERCO_SLOT2_erasure_count_12                        (BD_BLK + DBG64SEL + ((halBDC_Full_SRAM_Erco + 16*2)<<BUS_STARTBIT) + 0x0102)
#define BD_ERCO_SLOT2_erasure_count_00                        (BD_BLK + DBG64SEL + ((halBDC_Full_SRAM_Erco + 16*2)<<BUS_STARTBIT) + 0x0103)
#define BD_ERCO_SLOT2_erasure_count_01                        (BD_BLK + DBG64SEL + ((halBDC_Full_SRAM_Erco + 16*2)<<BUS_STARTBIT) + 0x0104)
#define BD_ERCO_SLOT2_erasure_count_02                        (BD_BLK + DBG64SEL + ((halBDC_Full_SRAM_Erco + 16*2)<<BUS_STARTBIT) + 0x0105)
#define BD_ERCO_SLOT2_erasure_count_03                        (BD_BLK + DBG64SEL + ((halBDC_Full_SRAM_Erco + 16*2)<<BUS_STARTBIT) + 0x0106)
#define BD_ERCO_SLOT2_erasure_count_04                        (BD_BLK + DBG64SEL + ((halBDC_Full_SRAM_Erco + 16*2)<<BUS_STARTBIT) + 0x0107)
#define BD_ERCO_SLOT2_erasure_count_05                        (BD_BLK + DBG64SEL + ((halBDC_Full_SRAM_Erco + 16*2)<<BUS_STARTBIT) + 0x0108)
#define BD_ERCO_SLOT2_decode_mode_00                          (BD_BLK + DBG64SEL + ((halBDC_Full_SRAM_Erco + 16*2)<<BUS_STARTBIT) + 0x0109)
#define BD_ERCO_SLOT2_decode_mode_01                          (BD_BLK + DBG64SEL + ((halBDC_Full_SRAM_Erco + 16*2)<<BUS_STARTBIT) + 0x010A)
#define BD_ERCO_SLOT2_decode_mode_02                          (BD_BLK + DBG64SEL + ((halBDC_Full_SRAM_Erco + 16*2)<<BUS_STARTBIT) + 0x010B)
#define BD_ERCO_SLOT2_decode_mode_03                          (BD_BLK + DBG64SEL + ((halBDC_Full_SRAM_Erco + 16*2)<<BUS_STARTBIT) + 0x010C)
#define BD_ERCO_SLOT2_0a                                      (BD_BLK + DBG64SEL + ((halBDC_Full_SRAM_Erco + 16*2)<<BUS_STARTBIT) + 0x010D)
#define BD_ERCO_SLOT2_0b                                      (BD_BLK + DBG64SEL + ((halBDC_Full_SRAM_Erco + 16*2)<<BUS_STARTBIT) + 0x010E)
#define BD_ERCO_SLOT2_0c                                      (BD_BLK + DBG64SEL + ((halBDC_Full_SRAM_Erco + 16*2)<<BUS_STARTBIT) + 0x010F)
//Full_SRAM_Erco SLOT3
#define BD_ERCO_SLOT3_syndrome_data_00                        (BD_BLK + DBG64SEL + ((halBDC_Full_SRAM_Erco + 16*3)<<BUS_STARTBIT) + 0x0100)
#define BD_ERCO_SLOT3_syndrome_data_01                        (BD_BLK + DBG64SEL + ((halBDC_Full_SRAM_Erco + 16*3)<<BUS_STARTBIT) + 0x0101)
#define BD_ERCO_SLOT3_syndrome_data_02                        (BD_BLK + DBG64SEL + ((halBDC_Full_SRAM_Erco + 16*3)<<BUS_STARTBIT) + 0x0102)
#define BD_ERCO_SLOT3_syndrome_data_03                        (BD_BLK + DBG64SEL + ((halBDC_Full_SRAM_Erco + 16*3)<<BUS_STARTBIT) + 0x0103)
#define BD_ERCO_SLOT3_syndrome_data_04                        (BD_BLK + DBG64SEL + ((halBDC_Full_SRAM_Erco + 16*3)<<BUS_STARTBIT) + 0x0104)
#define BD_ERCO_SLOT3_syndrome_data_05                        (BD_BLK + DBG64SEL + ((halBDC_Full_SRAM_Erco + 16*3)<<BUS_STARTBIT) + 0x0105)
#define BD_ERCO_SLOT3_syndrome_data_06                        (BD_BLK + DBG64SEL + ((halBDC_Full_SRAM_Erco + 16*3)<<BUS_STARTBIT) + 0x0106)
#define BD_ERCO_SLOT3_syndrome_data_07                        (BD_BLK + DBG64SEL + ((halBDC_Full_SRAM_Erco + 16*3)<<BUS_STARTBIT) + 0x0107)
#define BD_ERCO_SLOT3_syndrome_data_08                        (BD_BLK + DBG64SEL + ((halBDC_Full_SRAM_Erco + 16*3)<<BUS_STARTBIT) + 0x0108)
#define BD_ERCO_SLOT3_syndrome_data_09                        (BD_BLK + DBG64SEL + ((halBDC_Full_SRAM_Erco + 16*3)<<BUS_STARTBIT) + 0x0109)
#define BD_ERCO_SLOT3_syndrome_data_010                       (BD_BLK + DBG64SEL + ((halBDC_Full_SRAM_Erco + 16*3)<<BUS_STARTBIT) + 0x010A)
#define BD_ERCO_SLOT3_syndrome_data_011                       (BD_BLK + DBG64SEL + ((halBDC_Full_SRAM_Erco + 16*3)<<BUS_STARTBIT) + 0x010B)
#define BD_ERCO_SLOT3_syndrome_data_012                       (BD_BLK + DBG64SEL + ((halBDC_Full_SRAM_Erco + 16*3)<<BUS_STARTBIT) + 0x010C)
#define BD_ERCO_SLOT3_syndrome_data_013                       (BD_BLK + DBG64SEL + ((halBDC_Full_SRAM_Erco + 16*3)<<BUS_STARTBIT) + 0x010D)
#define BD_ERCO_SLOT3_syndrome_data_014                       (BD_BLK + DBG64SEL + ((halBDC_Full_SRAM_Erco + 16*3)<<BUS_STARTBIT) + 0x010E)
#define BD_ERCO_SLOT3_syndrome_data_015                       (BD_BLK + DBG64SEL + ((halBDC_Full_SRAM_Erco + 16*3)<<BUS_STARTBIT) + 0x010F)
//Full_SRAM_Erco SLOT4
#define BD_ERCO_SLOT4_syndrome_data_016                       (BD_BLK + DBG64SEL + ((halBDC_Full_SRAM_Erco + 16*4)<<BUS_STARTBIT) + 0x0100)
#define BD_ERCO_SLOT4_syndrome_data_017                       (BD_BLK + DBG64SEL + ((halBDC_Full_SRAM_Erco + 16*4)<<BUS_STARTBIT) + 0x0101)
#define BD_ERCO_SLOT4_syndrome_data_018                       (BD_BLK + DBG64SEL + ((halBDC_Full_SRAM_Erco + 16*4)<<BUS_STARTBIT) + 0x0102)
#define BD_ERCO_SLOT4_syndrome_data_019                       (BD_BLK + DBG64SEL + ((halBDC_Full_SRAM_Erco + 16*4)<<BUS_STARTBIT) + 0x0103)
#define BD_ERCO_SLOT4_syndrome_data_020                       (BD_BLK + DBG64SEL + ((halBDC_Full_SRAM_Erco + 16*4)<<BUS_STARTBIT) + 0x0104)
#define BD_ERCO_SLOT4_syndrome_data_021                       (BD_BLK + DBG64SEL + ((halBDC_Full_SRAM_Erco + 16*4)<<BUS_STARTBIT) + 0x0105)
#define BD_ERCO_SLOT4_syndrome_data_022                       (BD_BLK + DBG64SEL + ((halBDC_Full_SRAM_Erco + 16*4)<<BUS_STARTBIT) + 0x0106)
#define BD_ERCO_SLOT4_syndrome_data_023                       (BD_BLK + DBG64SEL + ((halBDC_Full_SRAM_Erco + 16*4)<<BUS_STARTBIT) + 0x0107)
#define BD_ERCO_SLOT4_syndrome_data_024                       (BD_BLK + DBG64SEL + ((halBDC_Full_SRAM_Erco + 16*4)<<BUS_STARTBIT) + 0x0108)
#define BD_ERCO_SLOT4_syndrome_data_025                       (BD_BLK + DBG64SEL + ((halBDC_Full_SRAM_Erco + 16*4)<<BUS_STARTBIT) + 0x0109)
#define BD_ERCO_SLOT4_syndrome_data_026                       (BD_BLK + DBG64SEL + ((halBDC_Full_SRAM_Erco + 16*4)<<BUS_STARTBIT) + 0x010A)
#define BD_ERCO_SLOT4_syndrome_data_027                       (BD_BLK + DBG64SEL + ((halBDC_Full_SRAM_Erco + 16*4)<<BUS_STARTBIT) + 0x010B)
#define BD_ERCO_SLOT4_syndrome_data_028                       (BD_BLK + DBG64SEL + ((halBDC_Full_SRAM_Erco + 16*4)<<BUS_STARTBIT) + 0x010C)
#define BD_ERCO_SLOT4_syndrome_data_029                       (BD_BLK + DBG64SEL + ((halBDC_Full_SRAM_Erco + 16*4)<<BUS_STARTBIT) + 0x010D)
#define BD_ERCO_SLOT4_syndrome_data_030                       (BD_BLK + DBG64SEL + ((halBDC_Full_SRAM_Erco + 16*4)<<BUS_STARTBIT) + 0x010E)
#define BD_ERCO_SLOT4_syndrome_data_031                       (BD_BLK + DBG64SEL + ((halBDC_Full_SRAM_Erco + 16*4)<<BUS_STARTBIT) + 0x010F)
//Full_SRAM_Erco SLOT5
#define BD_ERCO_SLOT5_syndrome_data_10                        (BD_BLK + DBG64SEL + ((halBDC_Full_SRAM_Erco + 16*5)<<BUS_STARTBIT) + 0x0100)
#define BD_ERCO_SLOT5_syndrome_data_11                        (BD_BLK + DBG64SEL + ((halBDC_Full_SRAM_Erco + 16*5)<<BUS_STARTBIT) + 0x0101)
#define BD_ERCO_SLOT5_syndrome_data_12                        (BD_BLK + DBG64SEL + ((halBDC_Full_SRAM_Erco + 16*5)<<BUS_STARTBIT) + 0x0102)
#define BD_ERCO_SLOT5_syndrome_data_13                        (BD_BLK + DBG64SEL + ((halBDC_Full_SRAM_Erco + 16*5)<<BUS_STARTBIT) + 0x0103)
#define BD_ERCO_SLOT5_syndrome_data_14                        (BD_BLK + DBG64SEL + ((halBDC_Full_SRAM_Erco + 16*5)<<BUS_STARTBIT) + 0x0104)
#define BD_ERCO_SLOT5_syndrome_data_15                        (BD_BLK + DBG64SEL + ((halBDC_Full_SRAM_Erco + 16*5)<<BUS_STARTBIT) + 0x0105)
#define BD_ERCO_SLOT5_syndrome_data_16                        (BD_BLK + DBG64SEL + ((halBDC_Full_SRAM_Erco + 16*5)<<BUS_STARTBIT) + 0x0106)
#define BD_ERCO_SLOT5_syndrome_data_17                        (BD_BLK + DBG64SEL + ((halBDC_Full_SRAM_Erco + 16*5)<<BUS_STARTBIT) + 0x0107)
#define BD_ERCO_SLOT5_syndrome_data_18                        (BD_BLK + DBG64SEL + ((halBDC_Full_SRAM_Erco + 16*5)<<BUS_STARTBIT) + 0x0108)
#define BD_ERCO_SLOT5_syndrome_data_19                        (BD_BLK + DBG64SEL + ((halBDC_Full_SRAM_Erco + 16*5)<<BUS_STARTBIT) + 0x0109)
#define BD_ERCO_SLOT5_syndrome_data_110                       (BD_BLK + DBG64SEL + ((halBDC_Full_SRAM_Erco + 16*5)<<BUS_STARTBIT) + 0x010A)
#define BD_ERCO_SLOT5_syndrome_data_111                       (BD_BLK + DBG64SEL + ((halBDC_Full_SRAM_Erco + 16*5)<<BUS_STARTBIT) + 0x010B)
#define BD_ERCO_SLOT5_syndrome_data_112                       (BD_BLK + DBG64SEL + ((halBDC_Full_SRAM_Erco + 16*5)<<BUS_STARTBIT) + 0x010C)
#define BD_ERCO_SLOT5_syndrome_data_113                       (BD_BLK + DBG64SEL + ((halBDC_Full_SRAM_Erco + 16*5)<<BUS_STARTBIT) + 0x010D)
#define BD_ERCO_SLOT5_syndrome_data_114                       (BD_BLK + DBG64SEL + ((halBDC_Full_SRAM_Erco + 16*5)<<BUS_STARTBIT) + 0x010E)
#define BD_ERCO_SLOT5_syndrome_data_115                       (BD_BLK + DBG64SEL + ((halBDC_Full_SRAM_Erco + 16*5)<<BUS_STARTBIT) + 0x010F)
//Full_SRAM_Erco SLOT6
#define BD_ERCO_SLOT6_syndrome_data_116                       (BD_BLK + DBG64SEL + ((halBDC_Full_SRAM_Erco + 16*6)<<BUS_STARTBIT) + 0x0100)
#define BD_ERCO_SLOT6_syndrome_data_117                       (BD_BLK + DBG64SEL + ((halBDC_Full_SRAM_Erco + 16*6)<<BUS_STARTBIT) + 0x0101)
#define BD_ERCO_SLOT6_syndrome_data_118                       (BD_BLK + DBG64SEL + ((halBDC_Full_SRAM_Erco + 16*6)<<BUS_STARTBIT) + 0x0102)
#define BD_ERCO_SLOT6_syndrome_data_119                       (BD_BLK + DBG64SEL + ((halBDC_Full_SRAM_Erco + 16*6)<<BUS_STARTBIT) + 0x0103)
#define BD_ERCO_SLOT6_syndrome_data_120                       (BD_BLK + DBG64SEL + ((halBDC_Full_SRAM_Erco + 16*6)<<BUS_STARTBIT) + 0x0104)
#define BD_ERCO_SLOT6_syndrome_data_121                       (BD_BLK + DBG64SEL + ((halBDC_Full_SRAM_Erco + 16*6)<<BUS_STARTBIT) + 0x0105)
#define BD_ERCO_SLOT6_syndrome_data_122                       (BD_BLK + DBG64SEL + ((halBDC_Full_SRAM_Erco + 16*6)<<BUS_STARTBIT) + 0x0106)
#define BD_ERCO_SLOT6_syndrome_data_123                       (BD_BLK + DBG64SEL + ((halBDC_Full_SRAM_Erco + 16*6)<<BUS_STARTBIT) + 0x0107)
#define BD_ERCO_SLOT6_syndrome_data_124                       (BD_BLK + DBG64SEL + ((halBDC_Full_SRAM_Erco + 16*6)<<BUS_STARTBIT) + 0x0108)
#define BD_ERCO_SLOT6_syndrome_data_125                       (BD_BLK + DBG64SEL + ((halBDC_Full_SRAM_Erco + 16*6)<<BUS_STARTBIT) + 0x0109)
#define BD_ERCO_SLOT6_syndrome_data_126                       (BD_BLK + DBG64SEL + ((halBDC_Full_SRAM_Erco + 16*6)<<BUS_STARTBIT) + 0x010A)
#define BD_ERCO_SLOT6_syndrome_data_127                       (BD_BLK + DBG64SEL + ((halBDC_Full_SRAM_Erco + 16*6)<<BUS_STARTBIT) + 0x010B)
#define BD_ERCO_SLOT6_syndrome_data_128                       (BD_BLK + DBG64SEL + ((halBDC_Full_SRAM_Erco + 16*6)<<BUS_STARTBIT) + 0x010C)
#define BD_ERCO_SLOT6_syndrome_data_129                       (BD_BLK + DBG64SEL + ((halBDC_Full_SRAM_Erco + 16*6)<<BUS_STARTBIT) + 0x010D)
#define BD_ERCO_SLOT6_syndrome_data_130                       (BD_BLK + DBG64SEL + ((halBDC_Full_SRAM_Erco + 16*6)<<BUS_STARTBIT) + 0x010E)
#define BD_ERCO_SLOT6_syndrome_data_131                       (BD_BLK + DBG64SEL + ((halBDC_Full_SRAM_Erco + 16*6)<<BUS_STARTBIT) + 0x010F)
//Full_SRAM_Erco SLOT7
#define BD_ERCO_SLOT7_errata_value0                           (BD_BLK + DBG64SEL + ((halBDC_Full_SRAM_Erco + 16*7)<<BUS_STARTBIT) + 0x0100)
#define BD_ERCO_SLOT7_errata_value1                           (BD_BLK + DBG64SEL + ((halBDC_Full_SRAM_Erco + 16*7)<<BUS_STARTBIT) + 0x0101)
#define BD_ERCO_SLOT7_errata_value2                           (BD_BLK + DBG64SEL + ((halBDC_Full_SRAM_Erco + 16*7)<<BUS_STARTBIT) + 0x0102)
#define BD_ERCO_SLOT7_errata_value3                           (BD_BLK + DBG64SEL + ((halBDC_Full_SRAM_Erco + 16*7)<<BUS_STARTBIT) + 0x0103)
#define BD_ERCO_SLOT7_errata_value4                           (BD_BLK + DBG64SEL + ((halBDC_Full_SRAM_Erco + 16*7)<<BUS_STARTBIT) + 0x0104)
#define BD_ERCO_SLOT7_errata_value5                           (BD_BLK + DBG64SEL + ((halBDC_Full_SRAM_Erco + 16*7)<<BUS_STARTBIT) + 0x0105)
#define BD_ERCO_SLOT7_errata_value6                           (BD_BLK + DBG64SEL + ((halBDC_Full_SRAM_Erco + 16*7)<<BUS_STARTBIT) + 0x0106)
#define BD_ERCO_SLOT7_errata_value7                           (BD_BLK + DBG64SEL + ((halBDC_Full_SRAM_Erco + 16*7)<<BUS_STARTBIT) + 0x0107)
#define BD_ERCO_SLOT7_errata_location0                        (BD_BLK + DBG64SEL + ((halBDC_Full_SRAM_Erco + 16*7)<<BUS_STARTBIT) + 0x0108)
#define BD_ERCO_SLOT7_errata_location1                        (BD_BLK + DBG64SEL + ((halBDC_Full_SRAM_Erco + 16*7)<<BUS_STARTBIT) + 0x0109)
#define BD_ERCO_SLOT7_errata_location2                        (BD_BLK + DBG64SEL + ((halBDC_Full_SRAM_Erco + 16*7)<<BUS_STARTBIT) + 0x010A)
#define BD_ERCO_SLOT7_errata_location3                        (BD_BLK + DBG64SEL + ((halBDC_Full_SRAM_Erco + 16*7)<<BUS_STARTBIT) + 0x010B)
#define BD_ERCO_SLOT7_errata_location4                        (BD_BLK + DBG64SEL + ((halBDC_Full_SRAM_Erco + 16*7)<<BUS_STARTBIT) + 0x010C)
#define BD_ERCO_SLOT7_errata_location5                        (BD_BLK + DBG64SEL + ((halBDC_Full_SRAM_Erco + 16*7)<<BUS_STARTBIT) + 0x010D)
#define BD_ERCO_SLOT7_errata_location6                        (BD_BLK + DBG64SEL + ((halBDC_Full_SRAM_Erco + 16*7)<<BUS_STARTBIT) + 0x010E)
#define BD_ERCO_SLOT7_errata_location7                        (BD_BLK + DBG64SEL + ((halBDC_Full_SRAM_Erco + 16*7)<<BUS_STARTBIT) + 0x010F)
//Encoder_init
#define BD_Encoder_init_bvci_clk_scan                         (BD_BLK + DBG64SEL + ((halBDC_Encoder_Init + 0)<<BUS_STARTBIT) + 0x0000)
#define BD_Encoder_init_bd_encod_clk_scan                     (BD_BLK + DBG64SEL + ((halBDC_Encoder_Init + 0)<<BUS_STARTBIT) + 0x0001)
#define BD_Encoder_init_bd_modclk_scan                        (BD_BLK + DBG64SEL + ((halBDC_Encoder_Init + 0)<<BUS_STARTBIT) + 0x0002)
#define BD_Encoder_init_init_encoder                          (BD_BLK + DBG64SEL + ((halBDC_Encoder_Init + 0)<<BUS_STARTBIT) + 0x0003)
#define BD_Encoder_init_encoder_ready                         (BD_BLK + DBG64SEL + ((halBDC_Encoder_Init + 0)<<BUS_STARTBIT) + 0x0004)
#define BD_Encoder_init_init_modulator                        (BD_BLK + DBG64SEL + ((halBDC_Encoder_Init + 0)<<BUS_STARTBIT) + 0x0005)
#define BD_Encoder_init_modulator_ready                       (BD_BLK + DBG64SEL + ((halBDC_Encoder_Init + 0)<<BUS_STARTBIT) + 0x0006)
#define BD_Encoder_init_init_small_int                        (BD_BLK + DBG64SEL + ((halBDC_Encoder_Init + 0)<<BUS_STARTBIT) + 0x0007)
#define BD_Encoder_init_small_int_ready                       (BD_BLK + DBG64SEL + ((halBDC_Encoder_Init + 0)<<BUS_STARTBIT) + 0x0008)
#define BD_Encoder_init_init_full_int                         (BD_BLK + DBG64SEL + ((halBDC_Encoder_Init + 0)<<BUS_STARTBIT) + 0x0009)
#define BD_Encoder_init_full_int_ready                        (BD_BLK + DBG64SEL + ((halBDC_Encoder_Init + 0)<<BUS_STARTBIT) + 0x000A)
#define BD_Encoder_init_bd_codec_encode_init_debug_bus0       (BD_BLK + DBG64SEL + ((halBDC_Encoder_Init + 0)<<BUS_STARTBIT) + 0x000B)
#define BD_Encoder_init_bd_codec_encode_init_debug_bus1       (BD_BLK + DBG64SEL + ((halBDC_Encoder_Init + 0)<<BUS_STARTBIT) + 0x000C)
//Full_Deinterleaver_FSM
#define BD_Full_Deint_FSM_bvci_clk_scan                       (BD_BLK + DBG64SEL + ((halBDC_Full_Deinterleaver_FSM + 0)<<BUS_STARTBIT) + 0x0000)
#define BD_Full_Deint_FSM_bd_codec_clk_scan                   (BD_BLK + DBG64SEL + ((halBDC_Full_Deinterleaver_FSM + 0)<<BUS_STARTBIT) + 0x0001)
#define BD_Full_Deint_FSM_port1_fsm_state_debug0              (BD_BLK + DBG64SEL + ((halBDC_Full_Deinterleaver_FSM + 0)<<BUS_STARTBIT) + 0x0002)
#define BD_Full_Deint_FSM_port1_fsm_state_debug1              (BD_BLK + DBG64SEL + ((halBDC_Full_Deinterleaver_FSM + 0)<<BUS_STARTBIT) + 0x0003)
#define BD_Full_Deint_FSM_port1_fsm_state_debug2              (BD_BLK + DBG64SEL + ((halBDC_Full_Deinterleaver_FSM + 0)<<BUS_STARTBIT) + 0x0004)
#define BD_Full_Deint_FSM_port1_fsm_state_debug3              (BD_BLK + DBG64SEL + ((halBDC_Full_Deinterleaver_FSM + 0)<<BUS_STARTBIT) + 0x0005)
#define BD_Full_Deint_FSM_port2_fsm_state_debug0              (BD_BLK + DBG64SEL + ((halBDC_Full_Deinterleaver_FSM + 0)<<BUS_STARTBIT) + 0x0006)
#define BD_Full_Deint_FSM_port2_fsm_state_debug1              (BD_BLK + DBG64SEL + ((halBDC_Full_Deinterleaver_FSM + 0)<<BUS_STARTBIT) + 0x0007)
#define BD_Full_Deint_FSM_port2_fsm_state_debug2              (BD_BLK + DBG64SEL + ((halBDC_Full_Deinterleaver_FSM + 0)<<BUS_STARTBIT) + 0x0008)
#define BD_Full_Deint_FSM_port2_fsm_state_debug3              (BD_BLK + DBG64SEL + ((halBDC_Full_Deinterleaver_FSM + 0)<<BUS_STARTBIT) + 0x0009)
#define BD_Full_Deint_FSM_decode_start_0                      (BD_BLK + DBG64SEL + ((halBDC_Full_Deinterleaver_FSM + 0)<<BUS_STARTBIT) + 0x000A)
#define BD_Full_Deint_FSM_syndrome_req_0                      (BD_BLK + DBG64SEL + ((halBDC_Full_Deinterleaver_FSM + 0)<<BUS_STARTBIT) + 0x000B)
#define BD_Full_Deint_FSM_erasure_req_0                       (BD_BLK + DBG64SEL + ((halBDC_Full_Deinterleaver_FSM + 0)<<BUS_STARTBIT) + 0x000C)
#define BD_Full_Deint_FSM_errata_req_0                        (BD_BLK + DBG64SEL + ((halBDC_Full_Deinterleaver_FSM + 0)<<BUS_STARTBIT) + 0x000D)
#define BD_Full_Deint_FSM_bad_edc                             (BD_BLK + DBG64SEL + ((halBDC_Full_Deinterleaver_FSM + 0)<<BUS_STARTBIT) + 0x000E)
//Modulator_Output
#define BD_ModulatorOut_bd_serclk_scan                        (BD_BLK + DBG64SEL + ((halBDC_Modulator_Output + 0)<<BUS_STARTBIT) + 0x0000)
#define BD_ModulatorOut_apc_field_sync_int                    (BD_BLK + DBG64SEL + ((halBDC_Modulator_Output + 0)<<BUS_STARTBIT) + 0x0001)
#define BD_ModulatorOut_im_cutoff_bd_int                      (BD_BLK + DBG64SEL + ((halBDC_Modulator_Output + 0)<<BUS_STARTBIT) + 0x0002)
#define BD_ModulatorOut_wgate_bd_int                          (BD_BLK + DBG64SEL + ((halBDC_Modulator_Output + 0)<<BUS_STARTBIT) + 0x0003)
#define BD_ModulatorOut_bd_data_int0                          (BD_BLK + DBG64SEL + ((halBDC_Modulator_Output + 0)<<BUS_STARTBIT) + 0x0004)
#define BD_ModulatorOut_bd_data_int1                          (BD_BLK + DBG64SEL + ((halBDC_Modulator_Output + 0)<<BUS_STARTBIT) + 0x0005)
#define BD_ModulatorOut_bd_data_int2                          (BD_BLK + DBG64SEL + ((halBDC_Modulator_Output + 0)<<BUS_STARTBIT) + 0x0006)
#define BD_ModulatorOut_bd_data_int3                          (BD_BLK + DBG64SEL + ((halBDC_Modulator_Output + 0)<<BUS_STARTBIT) + 0x0007)
#define BD_ModulatorOut_opc_start_enc_int                     (BD_BLK + DBG64SEL + ((halBDC_Modulator_Output + 0)<<BUS_STARTBIT) + 0x0008)
#define BD_ModulatorOut_bd_cluster_boundary_toggle_int        (BD_BLK + DBG64SEL + ((halBDC_Modulator_Output + 0)<<BUS_STARTBIT) + 0x0009)
//Decode_Input_interface
#define BD_Decode_Input_cluster_part_iced                     (BD_BLK + DBG64SEL + (halBDC_Decode_Input<<BUS_STARTBIT) + 0x0000)
#define BD_Decode_Input_cluster_full_iced                     (BD_BLK + DBG64SEL + (halBDC_Decode_Input<<BUS_STARTBIT) + 0x0001)
#define BD_Decode_Input_cluster_defect                        (BD_BLK + DBG64SEL + (halBDC_Decode_Input<<BUS_STARTBIT) + 0x0002)
#define BD_Decode_Input_bd_adip_flywheel_addr0                (BD_BLK + DBG64SEL + (halBDC_Decode_Input<<BUS_STARTBIT) + 0x0003)
#define BD_Decode_Input_bd_adip_flywheel_addr1                (BD_BLK + DBG64SEL + (halBDC_Decode_Input<<BUS_STARTBIT) + 0x0004)
#define BD_Decode_Input_bd_adip_flywheel_addr2                (BD_BLK + DBG64SEL + (halBDC_Decode_Input<<BUS_STARTBIT) + 0x0005)
#define BD_Decode_Input_bd_adip_flywheel_addr3                (BD_BLK + DBG64SEL + (halBDC_Decode_Input<<BUS_STARTBIT) + 0x0006)
#define BD_Decode_Input_bd_adip_flywheel_addr4                (BD_BLK + DBG64SEL + (halBDC_Decode_Input<<BUS_STARTBIT) + 0x0007)
#define BD_Decode_Input_bd_adip_flywheel_addr5                (BD_BLK + DBG64SEL + (halBDC_Decode_Input<<BUS_STARTBIT) + 0x0008)
#define BD_Decode_Input_bd_adip_flywheel_addr6                (BD_BLK + DBG64SEL + (halBDC_Decode_Input<<BUS_STARTBIT) + 0x0009)
#define BD_Decode_Input_bd_adip_flywheel_addr7                (BD_BLK + DBG64SEL + (halBDC_Decode_Input<<BUS_STARTBIT) + 0x000A)
#define BD_Decode_Input_bd_adip_flywheel_addr8                (BD_BLK + DBG64SEL + (halBDC_Decode_Input<<BUS_STARTBIT) + 0x000B)
#define BD_Decode_Input_bd_adip_flywheel_addr9                (BD_BLK + DBG64SEL + (halBDC_Decode_Input<<BUS_STARTBIT) + 0x000C)
#define BD_Decode_Input_bd_adip_flywheel_addr10               (BD_BLK + DBG64SEL + (halBDC_Decode_Input<<BUS_STARTBIT) + 0x000D)
#define BD_Decode_Input_bd_adip_flywheel_addr11               (BD_BLK + DBG64SEL + (halBDC_Decode_Input<<BUS_STARTBIT) + 0x000E)
#define BD_Decode_Input_bd_adip_flywheel_addr12               (BD_BLK + DBG64SEL + (halBDC_Decode_Input<<BUS_STARTBIT) + 0x000F)
#define BD_Decode_Input_bd_adip_flywheel_addr13               (BD_BLK + DBG64SEL + (halBDC_Decode_Input<<BUS_STARTBIT) + 0x0010)
#define BD_Decode_Input_bd_adip_flywheel_addr14               (BD_BLK + DBG64SEL + (halBDC_Decode_Input<<BUS_STARTBIT) + 0x0011)
#define BD_Decode_Input_bd_adip_flywheel_addr15               (BD_BLK + DBG64SEL + (halBDC_Decode_Input<<BUS_STARTBIT) + 0x0012)
#define BD_Decode_Input_bd_adip_flywheel_addr16               (BD_BLK + DBG64SEL + (halBDC_Decode_Input<<BUS_STARTBIT) + 0x0013)
#define BD_Decode_Input_bd_adip_flywheel_addr17               (BD_BLK + DBG64SEL + (halBDC_Decode_Input<<BUS_STARTBIT) + 0x0014)
#define BD_Decode_Input_bd_adip_flywheel_addr18               (BD_BLK + DBG64SEL + (halBDC_Decode_Input<<BUS_STARTBIT) + 0x0015)
#define BD_Decode_Input_bd_adip_flywheel_addr19               (BD_BLK + DBG64SEL + (halBDC_Decode_Input<<BUS_STARTBIT) + 0x0016)
#define BD_Decode_Input_bd_adip_flywheel_addr20               (BD_BLK + DBG64SEL + (halBDC_Decode_Input<<BUS_STARTBIT) + 0x0017)
#define BD_Decode_Input_bd_adip_flywheel_addr21               (BD_BLK + DBG64SEL + (halBDC_Decode_Input<<BUS_STARTBIT) + 0x0018)
#define BD_Decode_Input_bd_adip_flywheel_addr22               (BD_BLK + DBG64SEL + (halBDC_Decode_Input<<BUS_STARTBIT) + 0x0019)
#define BD_Decode_Input_bd_adip_flywheel_addr23               (BD_BLK + DBG64SEL + (halBDC_Decode_Input<<BUS_STARTBIT) + 0x001A)
#define BD_Decode_Input_bd_adip_flywheel_addr_toggle          (BD_BLK + DBG64SEL + (halBDC_Decode_Input<<BUS_STARTBIT) + 0x001B)
#define BD_Decode_Input_bd_adip_addr_lock                     (BD_BLK + DBG64SEL + (halBDC_Decode_Input<<BUS_STARTBIT) + 0x001C)
#define BD_Decode_Input_demod_data_valid                      (BD_BLK + DBG64SEL + (halBDC_Decode_Input<<BUS_STARTBIT) + 0x001D)
#define BD_Decode_Input_demod_data0                           (BD_BLK + DBG64SEL + (halBDC_Decode_Input<<BUS_STARTBIT) + 0x001E)
#define BD_Decode_Input_demod_data1                           (BD_BLK + DBG64SEL + (halBDC_Decode_Input<<BUS_STARTBIT) + 0x001F)
#define BD_Decode_Input_demod_data2                           (BD_BLK + DBG64SEL + (halBDC_Decode_Input<<BUS_STARTBIT) + 0x0020)
#define BD_Decode_Input_demod_data3                           (BD_BLK + DBG64SEL + (halBDC_Decode_Input<<BUS_STARTBIT) + 0x0021)
#define BD_Decode_Input_demod_data4                           (BD_BLK + DBG64SEL + (halBDC_Decode_Input<<BUS_STARTBIT) + 0x0022)
#define BD_Decode_Input_demod_data5                           (BD_BLK + DBG64SEL + (halBDC_Decode_Input<<BUS_STARTBIT) + 0x0023)
#define BD_Decode_Input_demod_data6                           (BD_BLK + DBG64SEL + (halBDC_Decode_Input<<BUS_STARTBIT) + 0x0024)
#define BD_Decode_Input_demod_data7                           (BD_BLK + DBG64SEL + (halBDC_Decode_Input<<BUS_STARTBIT) + 0x0025)
#define BD_Decode_Input_demod_frame_start                     (BD_BLK + DBG64SEL + (halBDC_Decode_Input<<BUS_STARTBIT) + 0x0026)
#define BD_Decode_Input_demod_sector_start                    (BD_BLK + DBG64SEL + (halBDC_Decode_Input<<BUS_STARTBIT) + 0x0027)
#define BD_Decode_Input_demod_erasure_flag                    (BD_BLK + DBG64SEL + (halBDC_Decode_Input<<BUS_STARTBIT) + 0x0028)
#define BD_Decode_Input_demod_frame_sync_flag                 (BD_BLK + DBG64SEL + (halBDC_Decode_Input<<BUS_STARTBIT) + 0x0029)
#define BD_Decode_Input_demod_frame_sync                      (BD_BLK + DBG64SEL + (halBDC_Decode_Input<<BUS_STARTBIT) + 0x002A)
#define BD_Decode_Input_demod_first_byte_of_cluster           (BD_BLK + DBG64SEL + (halBDC_Decode_Input<<BUS_STARTBIT) + 0x002B)
#define BD_Decode_Input_demod_last_byte_of_cluster            (BD_BLK + DBG64SEL + (halBDC_Decode_Input<<BUS_STARTBIT) + 0x002C)
#define BD_Decode_Input_demod_locked                          (BD_BLK + DBG64SEL + (halBDC_Decode_Input<<BUS_STARTBIT) + 0x002D)
#define BD_Decode_Input_bd_codec_clk_scan                     (BD_BLK + DBG64SEL + (halBDC_Decode_Input<<BUS_STARTBIT) + 0x002E)
#define BD_Decode_Input_host_hstpgcnt12                       (BD_BLK + DBG64SEL + (halBDC_Decode_Input<<BUS_STARTBIT) + 0x002F)
#define BD_Decode_Input_host_hstpgcnt11                       (BD_BLK + DBG64SEL + (halBDC_Decode_Input<<BUS_STARTBIT) + 0x0030)
#define BD_Decode_Input_host_hstpgcnt10                       (BD_BLK + DBG64SEL + (halBDC_Decode_Input<<BUS_STARTBIT) + 0x0031)
#define BD_Decode_Input_host_hstpgcnt9                        (BD_BLK + DBG64SEL + (halBDC_Decode_Input<<BUS_STARTBIT) + 0x0032)
#define BD_Decode_Input_host_hstpgcnt8                        (BD_BLK + DBG64SEL + (halBDC_Decode_Input<<BUS_STARTBIT) + 0x0033)
#define BD_Decode_Input_host_hstpgcnt7                        (BD_BLK + DBG64SEL + (halBDC_Decode_Input<<BUS_STARTBIT) + 0x0034)
#define BD_Decode_Input_host_hstpgcnt6                        (BD_BLK + DBG64SEL + (halBDC_Decode_Input<<BUS_STARTBIT) + 0x0035)
#define BD_Decode_Input_host_hstpgcnt5                        (BD_BLK + DBG64SEL + (halBDC_Decode_Input<<BUS_STARTBIT) + 0x0036)
#define BD_Decode_Input_host_hstpgcnt4                        (BD_BLK + DBG64SEL + (halBDC_Decode_Input<<BUS_STARTBIT) + 0x0037)
#define BD_Decode_Input_host_hstpgcnt3                        (BD_BLK + DBG64SEL + (halBDC_Decode_Input<<BUS_STARTBIT) + 0x0038)
#define BD_Decode_Input_host_hstpgcnt2                        (BD_BLK + DBG64SEL + (halBDC_Decode_Input<<BUS_STARTBIT) + 0x0039)
#define BD_Decode_Input_host_hstpgcnt1                        (BD_BLK + DBG64SEL + (halBDC_Decode_Input<<BUS_STARTBIT) + 0x003A)
#define BD_Decode_Input_host_hstpgcnt0                        (BD_BLK + DBG64SEL + (halBDC_Decode_Input<<BUS_STARTBIT) + 0x003B)
//Encode_Input_interface
#define BD_Encode_Input_bd_encod_clk_scan                     (BD_BLK + DBG64SEL + (halBDC_Encode_Input<<BUS_STARTBIT) + 0x0000)
#define BD_Encode_Input_bd_modclk_scan                        (BD_BLK + DBG64SEL + (halBDC_Encode_Input<<BUS_STARTBIT) + 0x0001)
#define BD_Encode_Input_bd_serclk_scan                        (BD_BLK + DBG64SEL + (halBDC_Encode_Input<<BUS_STARTBIT) + 0x0002)
#define BD_Encode_Input_bd_adip_address0                      (BD_BLK + DBG64SEL + (halBDC_Encode_Input<<BUS_STARTBIT) + 0x0003)
#define BD_Encode_Input_bd_adip_address1                      (BD_BLK + DBG64SEL + (halBDC_Encode_Input<<BUS_STARTBIT) + 0x0004)
#define BD_Encode_Input_bd_adip_address2                      (BD_BLK + DBG64SEL + (halBDC_Encode_Input<<BUS_STARTBIT) + 0x0005)
#define BD_Encode_Input_bd_adip_address3                      (BD_BLK + DBG64SEL + (halBDC_Encode_Input<<BUS_STARTBIT) + 0x0006)
#define BD_Encode_Input_bd_adip_address4                      (BD_BLK + DBG64SEL + (halBDC_Encode_Input<<BUS_STARTBIT) + 0x0007)
#define BD_Encode_Input_bd_adip_address5                      (BD_BLK + DBG64SEL + (halBDC_Encode_Input<<BUS_STARTBIT) + 0x0008)
#define BD_Encode_Input_bd_adip_address6                      (BD_BLK + DBG64SEL + (halBDC_Encode_Input<<BUS_STARTBIT) + 0x0009)
#define BD_Encode_Input_bd_adip_address7                      (BD_BLK + DBG64SEL + (halBDC_Encode_Input<<BUS_STARTBIT) + 0x000A)
#define BD_Encode_Input_bd_adip_address8                      (BD_BLK + DBG64SEL + (halBDC_Encode_Input<<BUS_STARTBIT) + 0x000B)
#define BD_Encode_Input_bd_adip_address9                      (BD_BLK + DBG64SEL + (halBDC_Encode_Input<<BUS_STARTBIT) + 0x000C)
#define BD_Encode_Input_bd_adip_address10                     (BD_BLK + DBG64SEL + (halBDC_Encode_Input<<BUS_STARTBIT) + 0x000D)
#define BD_Encode_Input_bd_adip_address11                     (BD_BLK + DBG64SEL + (halBDC_Encode_Input<<BUS_STARTBIT) + 0x000E)
#define BD_Encode_Input_bd_adip_address12                     (BD_BLK + DBG64SEL + (halBDC_Encode_Input<<BUS_STARTBIT) + 0x000F)
#define BD_Encode_Input_bd_adip_address13                     (BD_BLK + DBG64SEL + (halBDC_Encode_Input<<BUS_STARTBIT) + 0x0010)
#define BD_Encode_Input_bd_adip_address14                     (BD_BLK + DBG64SEL + (halBDC_Encode_Input<<BUS_STARTBIT) + 0x0011)
#define BD_Encode_Input_bd_adip_address15                     (BD_BLK + DBG64SEL + (halBDC_Encode_Input<<BUS_STARTBIT) + 0x0012)
#define BD_Encode_Input_bd_adip_address16                     (BD_BLK + DBG64SEL + (halBDC_Encode_Input<<BUS_STARTBIT) + 0x0013)
#define BD_Encode_Input_bd_adip_address17                     (BD_BLK + DBG64SEL + (halBDC_Encode_Input<<BUS_STARTBIT) + 0x0014)
#define BD_Encode_Input_bd_adip_address18                     (BD_BLK + DBG64SEL + (halBDC_Encode_Input<<BUS_STARTBIT) + 0x0015)
#define BD_Encode_Input_bd_adip_address19                     (BD_BLK + DBG64SEL + (halBDC_Encode_Input<<BUS_STARTBIT) + 0x0016)
#define BD_Encode_Input_bd_adip_address20                     (BD_BLK + DBG64SEL + (halBDC_Encode_Input<<BUS_STARTBIT) + 0x0017)
#define BD_Encode_Input_bd_adip_address21                     (BD_BLK + DBG64SEL + (halBDC_Encode_Input<<BUS_STARTBIT) + 0x0018)
#define BD_Encode_Input_bd_adip_address22                     (BD_BLK + DBG64SEL + (halBDC_Encode_Input<<BUS_STARTBIT) + 0x0019)
#define BD_Encode_Input_bd_adip_address23                     (BD_BLK + DBG64SEL + (halBDC_Encode_Input<<BUS_STARTBIT) + 0x001A)
#define BD_Encode_Input_bd_adip_address_valid                 (BD_BLK + DBG64SEL + (halBDC_Encode_Input<<BUS_STARTBIT) + 0x001B)
#define BD_Encode_Input_bd_bsync_out_lock                     (BD_BLK + DBG64SEL + (halBDC_Encode_Input<<BUS_STARTBIT) + 0x001C)
#define BD_Encode_Input_bd_wsync_out_lock                     (BD_BLK + DBG64SEL + (halBDC_Encode_Input<<BUS_STARTBIT) + 0x001D)
#define BD_Encode_Input_bd_address_out_lock                   (BD_BLK + DBG64SEL + (halBDC_Encode_Input<<BUS_STARTBIT) + 0x001E)
#define BD_Encode_Input_servo_panic                           (BD_BLK + DBG64SEL + (halBDC_Encode_Input<<BUS_STARTBIT) + 0x001F)
#define BD_Encode_Input_host_hstpgcnt12                       (BD_BLK + DBG64SEL + (halBDC_Encode_Input<<BUS_STARTBIT) + 0x0020)
#define BD_Encode_Input_host_hstpgcnt11                       (BD_BLK + DBG64SEL + (halBDC_Encode_Input<<BUS_STARTBIT) + 0x0021)
#define BD_Encode_Input_host_hstpgcnt10                       (BD_BLK + DBG64SEL + (halBDC_Encode_Input<<BUS_STARTBIT) + 0x0022)
#define BD_Encode_Input_host_hstpgcnt9                        (BD_BLK + DBG64SEL + (halBDC_Encode_Input<<BUS_STARTBIT) + 0x0023)
#define BD_Encode_Input_host_hstpgcnt8                        (BD_BLK + DBG64SEL + (halBDC_Encode_Input<<BUS_STARTBIT) + 0x0024)
#define BD_Encode_Input_host_hstpgcnt7                        (BD_BLK + DBG64SEL + (halBDC_Encode_Input<<BUS_STARTBIT) + 0x0025)
#define BD_Encode_Input_host_hstpgcnt6                        (BD_BLK + DBG64SEL + (halBDC_Encode_Input<<BUS_STARTBIT) + 0x0026)
#define BD_Encode_Input_host_hstpgcnt5                        (BD_BLK + DBG64SEL + (halBDC_Encode_Input<<BUS_STARTBIT) + 0x0027)
#define BD_Encode_Input_host_hstpgcnt4                        (BD_BLK + DBG64SEL + (halBDC_Encode_Input<<BUS_STARTBIT) + 0x0028)
#define BD_Encode_Input_host_hstpgcnt3                        (BD_BLK + DBG64SEL + (halBDC_Encode_Input<<BUS_STARTBIT) + 0x0029)
#define BD_Encode_Input_host_hstpgcnt2                        (BD_BLK + DBG64SEL + (halBDC_Encode_Input<<BUS_STARTBIT) + 0x002A)
#define BD_Encode_Input_host_hstpgcnt1                        (BD_BLK + DBG64SEL + (halBDC_Encode_Input<<BUS_STARTBIT) + 0x002B)
#define BD_Encode_Input_host_hstpgcnt0                        (BD_BLK + DBG64SEL + (halBDC_Encode_Input<<BUS_STARTBIT) + 0x002C)
//Modulator_interface
#define BD_Modulator_bd_modclk                                (BD_BLK + DBG64SEL + (halBDC_Modulator<<BUS_STARTBIT) + 0x0000)
#define BD_Modulator_init_modulator                           (BD_BLK + DBG64SEL + (halBDC_Modulator<<BUS_STARTBIT) + 0x0001)
#define BD_Modulator_modulator_ready_int                      (BD_BLK + DBG64SEL + (halBDC_Modulator<<BUS_STARTBIT) + 0x0002)
#define BD_Modulator_bits_from_encoder_req_int                (BD_BLK + DBG64SEL + (halBDC_Modulator<<BUS_STARTBIT) + 0x0003)
#define BD_Modulator_bits_from_encoder_ack_int                (BD_BLK + DBG64SEL + (halBDC_Modulator<<BUS_STARTBIT) + 0x0004)
#define BD_Modulator_bits_from_encoder_int0                   (BD_BLK + DBG64SEL + (halBDC_Modulator<<BUS_STARTBIT) + 0x0005)
#define BD_Modulator_bits_from_encoder_int1                   (BD_BLK + DBG64SEL + (halBDC_Modulator<<BUS_STARTBIT) + 0x0006)
#define BD_Modulator_bits_from_encoder_int2                   (BD_BLK + DBG64SEL + (halBDC_Modulator<<BUS_STARTBIT) + 0x0007)
#define BD_Modulator_bits_from_encoder_int3                   (BD_BLK + DBG64SEL + (halBDC_Modulator<<BUS_STARTBIT) + 0x0008)
#define BD_Modulator_bits_from_encoder_int4                   (BD_BLK + DBG64SEL + (halBDC_Modulator<<BUS_STARTBIT) + 0x0009)
#define BD_Modulator_bits_from_encoder_int5                   (BD_BLK + DBG64SEL + (halBDC_Modulator<<BUS_STARTBIT) + 0x000A)
#define BD_Modulator_bits_from_encoder_int6                   (BD_BLK + DBG64SEL + (halBDC_Modulator<<BUS_STARTBIT) + 0x000B)
#define BD_Modulator_bits_from_encoder_int7                   (BD_BLK + DBG64SEL + (halBDC_Modulator<<BUS_STARTBIT) + 0x000C)
#define BD_Modulator_last_frame_of_the_cluster                (BD_BLK + DBG64SEL + (halBDC_Modulator<<BUS_STARTBIT) + 0x000D)
#define BD_Modulator_current_zone_std0                        (BD_BLK + DBG64SEL + (halBDC_Modulator<<BUS_STARTBIT) + 0x000E)
#define BD_Modulator_current_zone_std1                        (BD_BLK + DBG64SEL + (halBDC_Modulator<<BUS_STARTBIT) + 0x000F)
#define BD_Modulator_runinout_data_req                        (BD_BLK + DBG64SEL + (halBDC_Modulator<<BUS_STARTBIT) + 0x0010)
#define BD_Modulator_runinout_data0                           (BD_BLK + DBG64SEL + (halBDC_Modulator<<BUS_STARTBIT) + 0x0011)
#define BD_Modulator_runinout_data1                           (BD_BLK + DBG64SEL + (halBDC_Modulator<<BUS_STARTBIT) + 0x0012)
#define BD_Modulator_runinout_data2                           (BD_BLK + DBG64SEL + (halBDC_Modulator<<BUS_STARTBIT) + 0x0013)
#define BD_Modulator_runinout_data3                           (BD_BLK + DBG64SEL + (halBDC_Modulator<<BUS_STARTBIT) + 0x0014)
#define BD_Modulator_runinout_data4                           (BD_BLK + DBG64SEL + (halBDC_Modulator<<BUS_STARTBIT) + 0x0015)
#define BD_Modulator_runinout_data5                           (BD_BLK + DBG64SEL + (halBDC_Modulator<<BUS_STARTBIT) + 0x0016)
#define BD_Modulator_cluster_data_req                         (BD_BLK + DBG64SEL + (halBDC_Modulator<<BUS_STARTBIT) + 0x0017)
#define BD_Modulator_cluster_data0                            (BD_BLK + DBG64SEL + (halBDC_Modulator<<BUS_STARTBIT) + 0x0018)
#define BD_Modulator_cluster_data1                            (BD_BLK + DBG64SEL + (halBDC_Modulator<<BUS_STARTBIT) + 0x0019)
#define BD_Modulator_cluster_data2                            (BD_BLK + DBG64SEL + (halBDC_Modulator<<BUS_STARTBIT) + 0x001A)
#define BD_Modulator_cluster_data3                            (BD_BLK + DBG64SEL + (halBDC_Modulator<<BUS_STARTBIT) + 0x001B)
#define BD_Modulator_cluster_data4                            (BD_BLK + DBG64SEL + (halBDC_Modulator<<BUS_STARTBIT) + 0x001C)
#define BD_Modulator_cluster_data5                            (BD_BLK + DBG64SEL + (halBDC_Modulator<<BUS_STARTBIT) + 0x001D)
#define BD_Modulator_last_cluster_resync                      (BD_BLK + DBG64SEL + (halBDC_Modulator<<BUS_STARTBIT) + 0x001E)
#define BD_Modulator_bd_serclk                                (BD_BLK + DBG64SEL + (halBDC_Modulator<<BUS_STARTBIT) + 0x001F)
#define BD_Modulator_laser_on                                 (BD_BLK + DBG64SEL + (halBDC_Modulator<<BUS_STARTBIT) + 0x0020)
#define BD_Modulator_serialiser_data0                         (BD_BLK + DBG64SEL + (halBDC_Modulator<<BUS_STARTBIT) + 0x0021)
#define BD_Modulator_serialiser_data1                         (BD_BLK + DBG64SEL + (halBDC_Modulator<<BUS_STARTBIT) + 0x0022)
#define BD_Modulator_serialiser_data2                         (BD_BLK + DBG64SEL + (halBDC_Modulator<<BUS_STARTBIT) + 0x0023)
#define BD_Modulator_serialiser_data3                         (BD_BLK + DBG64SEL + (halBDC_Modulator<<BUS_STARTBIT) + 0x0024)
#define BD_Modulator_opc_start_enc_int                        (BD_BLK + DBG64SEL + (halBDC_Modulator<<BUS_STARTBIT) + 0x0025)

/****************************************************************************
* DGB64 BUS DFE BLOCK
****************************************************************************/
//SlowPLLMode0
#define DFE_slowpll0_inclk                                  (DFE_BLK + DBG64SEL + (halDFE_SlowPLLMode0<<BUS_STARTBIT) + 0x0000)
#define DFE_slowpll0_bitclk                                 (DFE_BLK + DBG64SEL + (halDFE_SlowPLLMode0<<BUS_STARTBIT) + 0x0001)
#define DFE_slowpll0_hf_not_present_slicer_hold             (DFE_BLK + DBG64SEL + (halDFE_SlowPLLMode0<<BUS_STARTBIT) + 0x0002)
#define DFE_slowpll0_measure_lockaid_measure_front_lock     (DFE_BLK + DBG64SEL + (halDFE_SlowPLLMode0<<BUS_STARTBIT) + 0x0003)
#define DFE_slowpll0_measure_lockaid_measure_front_flock    (DFE_BLK + DBG64SEL + (halDFE_SlowPLLMode0<<BUS_STARTBIT) + 0x0004)
#define DFE_slowpll0_measure_lockaid_measure_synccoinc      (DFE_BLK + DBG64SEL + (halDFE_SlowPLLMode0<<BUS_STARTBIT) + 0x0005)
#define DFE_slowpll0_measure_lockaid_measure_sync           (DFE_BLK + DBG64SEL + (halDFE_SlowPLLMode0<<BUS_STARTBIT) + 0x0006)
#define DFE_slowpll0_measure_lockaid_measure_winsync        (DFE_BLK + DBG64SEL + (halDFE_SlowPLLMode0<<BUS_STARTBIT) + 0x0007)
#define DFE_slowpll0_config_dto_config_preset_integrator    (DFE_BLK + DBG64SEL + (halDFE_SlowPLLMode0<<BUS_STARTBIT) + 0x0008)
#define DFE_slowpll0_demod_syncpos_lock                     (DFE_BLK + DBG64SEL + (halDFE_SlowPLLMode0<<BUS_STARTBIT) + 0x0009)
#define DFE_slowpll0_fastpll_measure_jitter0                (DFE_BLK + DBG64SEL + (halDFE_SlowPLLMode0<<BUS_STARTBIT) + 0x000A)
#define DFE_slowpll0_fastpll_measure_jitter1                (DFE_BLK + DBG64SEL + (halDFE_SlowPLLMode0<<BUS_STARTBIT) + 0x000B)
#define DFE_slowpll0_fastpll_measure_jitter2                (DFE_BLK + DBG64SEL + (halDFE_SlowPLLMode0<<BUS_STARTBIT) + 0x000C)
#define DFE_slowpll0_fastpll_measure_jitter3                (DFE_BLK + DBG64SEL + (halDFE_SlowPLLMode0<<BUS_STARTBIT) + 0x000D)
#define DFE_slowpll0_fastpll_measure_jitter4                (DFE_BLK + DBG64SEL + (halDFE_SlowPLLMode0<<BUS_STARTBIT) + 0x000E)
#define DFE_slowpll0_fastpll_measure_jitter5                (DFE_BLK + DBG64SEL + (halDFE_SlowPLLMode0<<BUS_STARTBIT) + 0x000F)
//SlowPLLMode1
#define DFE_slowpll1_samples_from_prefront00                (DFE_BLK + DBG64SEL + (halDFE_SlowPLLMode2<<BUS_STARTBIT) + 0x0000)
#define DFE_slowpll1_samples_from_prefront01                (DFE_BLK + DBG64SEL + (halDFE_SlowPLLMode2<<BUS_STARTBIT) + 0x0001)
#define DFE_slowpll1_samples_from_prefront02                (DFE_BLK + DBG64SEL + (halDFE_SlowPLLMode2<<BUS_STARTBIT) + 0x0002)
#define DFE_slowpll1_samples_from_prefront03                (DFE_BLK + DBG64SEL + (halDFE_SlowPLLMode2<<BUS_STARTBIT) + 0x0003)
#define DFE_slowpll1_samples_from_prefront04                (DFE_BLK + DBG64SEL + (halDFE_SlowPLLMode2<<BUS_STARTBIT) + 0x0004)
#define DFE_slowpll1_samples_from_prefront05                (DFE_BLK + DBG64SEL + (halDFE_SlowPLLMode2<<BUS_STARTBIT) + 0x0005)
#define DFE_slowpll1_samples_from_prefront06                (DFE_BLK + DBG64SEL + (halDFE_SlowPLLMode2<<BUS_STARTBIT) + 0x0006)
#define DFE_slowpll1_samples_from_prefront07                (DFE_BLK + DBG64SEL + (halDFE_SlowPLLMode2<<BUS_STARTBIT) + 0x0007)
#define DFE_slowpll1_samples_from_prefront10                (DFE_BLK + DBG64SEL + (halDFE_SlowPLLMode2<<BUS_STARTBIT) + 0x0008)
#define DFE_slowpll1_samples_from_prefront11                (DFE_BLK + DBG64SEL + (halDFE_SlowPLLMode2<<BUS_STARTBIT) + 0x0009)
#define DFE_slowpll1_samples_from_prefront12                (DFE_BLK + DBG64SEL + (halDFE_SlowPLLMode2<<BUS_STARTBIT) + 0x000A)
#define DFE_slowpll1_samples_from_prefront13                (DFE_BLK + DBG64SEL + (halDFE_SlowPLLMode2<<BUS_STARTBIT) + 0x000B)
#define DFE_slowpll1_samples_from_prefront14                (DFE_BLK + DBG64SEL + (halDFE_SlowPLLMode2<<BUS_STARTBIT) + 0x000C)
#define DFE_slowpll1_samples_from_prefront15                (DFE_BLK + DBG64SEL + (halDFE_SlowPLLMode2<<BUS_STARTBIT) + 0x000D)
#define DFE_slowpll1_samples_from_prefront16                (DFE_BLK + DBG64SEL + (halDFE_SlowPLLMode2<<BUS_STARTBIT) + 0x000E)
#define DFE_slowpll1_samples_from_prefront17                (DFE_BLK + DBG64SEL + (halDFE_SlowPLLMode2<<BUS_STARTBIT) + 0x000F)
//SlowPLLMode2
#define DFE_slowpll2_samples_from_prefront00                (DFE_BLK + DBG64SEL + (halDFE_SlowPLLMode2<<BUS_STARTBIT) + 0x0000)
#define DFE_slowpll2_samples_from_prefront01                (DFE_BLK + DBG64SEL + (halDFE_SlowPLLMode2<<BUS_STARTBIT) + 0x0001)
#define DFE_slowpll2_samples_from_prefront02                (DFE_BLK + DBG64SEL + (halDFE_SlowPLLMode2<<BUS_STARTBIT) + 0x0002)
#define DFE_slowpll2_samples_from_prefront03                (DFE_BLK + DBG64SEL + (halDFE_SlowPLLMode2<<BUS_STARTBIT) + 0x0003)
#define DFE_slowpll2_samples_from_prefront04                (DFE_BLK + DBG64SEL + (halDFE_SlowPLLMode2<<BUS_STARTBIT) + 0x0004)
#define DFE_slowpll2_samples_from_prefront05                (DFE_BLK + DBG64SEL + (halDFE_SlowPLLMode2<<BUS_STARTBIT) + 0x0005)
#define DFE_slowpll2_samples_from_prefront06                (DFE_BLK + DBG64SEL + (halDFE_SlowPLLMode2<<BUS_STARTBIT) + 0x0006)
#define DFE_slowpll2_samples_from_prefront07                (DFE_BLK + DBG64SEL + (halDFE_SlowPLLMode2<<BUS_STARTBIT) + 0x0007)
#define DFE_slowpll2_samples_from_prefront10                (DFE_BLK + DBG64SEL + (halDFE_SlowPLLMode2<<BUS_STARTBIT) + 0x0008)
#define DFE_slowpll2_samples_from_prefront11                (DFE_BLK + DBG64SEL + (halDFE_SlowPLLMode2<<BUS_STARTBIT) + 0x0009)
#define DFE_slowpll2_samples_from_prefront12                (DFE_BLK + DBG64SEL + (halDFE_SlowPLLMode2<<BUS_STARTBIT) + 0x000A)
#define DFE_slowpll2_samples_from_prefront13                (DFE_BLK + DBG64SEL + (halDFE_SlowPLLMode2<<BUS_STARTBIT) + 0x000B)
#define DFE_slowpll2_samples_from_prefront14                (DFE_BLK + DBG64SEL + (halDFE_SlowPLLMode2<<BUS_STARTBIT) + 0x000C)
#define DFE_slowpll2_samples_from_prefront15                (DFE_BLK + DBG64SEL + (halDFE_SlowPLLMode2<<BUS_STARTBIT) + 0x000D)
#define DFE_slowpll2_samples_from_prefront16                (DFE_BLK + DBG64SEL + (halDFE_SlowPLLMode2<<BUS_STARTBIT) + 0x000E)
#define DFE_slowpll2_samples_from_prefront17                (DFE_BLK + DBG64SEL + (halDFE_SlowPLLMode2<<BUS_STARTBIT) + 0x000F)
//SlowPLLMode3
#define DFE_slowpll3_samples_from_prefront20                (DFE_BLK + DBG64SEL + (halDFE_SlowPLLMode3<<BUS_STARTBIT) + 0x0000)
#define DFE_slowpll3_samples_from_prefront21                (DFE_BLK + DBG64SEL + (halDFE_SlowPLLMode3<<BUS_STARTBIT) + 0x0001)
#define DFE_slowpll3_samples_from_prefront22                (DFE_BLK + DBG64SEL + (halDFE_SlowPLLMode3<<BUS_STARTBIT) + 0x0002)
#define DFE_slowpll3_samples_from_prefront23                (DFE_BLK + DBG64SEL + (halDFE_SlowPLLMode3<<BUS_STARTBIT) + 0x0003)
#define DFE_slowpll3_samples_from_prefront24                (DFE_BLK + DBG64SEL + (halDFE_SlowPLLMode3<<BUS_STARTBIT) + 0x0004)
#define DFE_slowpll3_samples_from_prefront25                (DFE_BLK + DBG64SEL + (halDFE_SlowPLLMode3<<BUS_STARTBIT) + 0x0005)
#define DFE_slowpll3_samples_from_prefront26                (DFE_BLK + DBG64SEL + (halDFE_SlowPLLMode3<<BUS_STARTBIT) + 0x0006)
#define DFE_slowpll3_samples_from_prefront27                (DFE_BLK + DBG64SEL + (halDFE_SlowPLLMode3<<BUS_STARTBIT) + 0x0007)
#define DFE_slowpll3_samples_from_prefront30                (DFE_BLK + DBG64SEL + (halDFE_SlowPLLMode3<<BUS_STARTBIT) + 0x0008)
#define DFE_slowpll3_samples_from_prefront31                (DFE_BLK + DBG64SEL + (halDFE_SlowPLLMode3<<BUS_STARTBIT) + 0x0009)
#define DFE_slowpll3_samples_from_prefront32                (DFE_BLK + DBG64SEL + (halDFE_SlowPLLMode3<<BUS_STARTBIT) + 0x000A)
#define DFE_slowpll3_samples_from_prefront33                (DFE_BLK + DBG64SEL + (halDFE_SlowPLLMode3<<BUS_STARTBIT) + 0x000B)
#define DFE_slowpll3_samples_from_prefront34                (DFE_BLK + DBG64SEL + (halDFE_SlowPLLMode3<<BUS_STARTBIT) + 0x000C)
#define DFE_slowpll3_samples_from_prefront35                (DFE_BLK + DBG64SEL + (halDFE_SlowPLLMode3<<BUS_STARTBIT) + 0x000D)
#define DFE_slowpll3_samples_from_prefront36                (DFE_BLK + DBG64SEL + (halDFE_SlowPLLMode3<<BUS_STARTBIT) + 0x000E)
#define DFE_slowpll3_samples_from_prefront37                (DFE_BLK + DBG64SEL + (halDFE_SlowPLLMode3<<BUS_STARTBIT) + 0x000F)
//BitclkMode0
#define DFE_bitclk0_inclk                                   (DFE_BLK + DBG64SEL + (halDFE_BitclkMode0<<BUS_STARTBIT) + 0x0000)
#define DFE_bitclk0_bitclk                                  (DFE_BLK + DBG64SEL + (halDFE_BitclkMode0<<BUS_STARTBIT) + 0x0001)
#define DFE_bitclk0_enable_int                              (DFE_BLK + DBG64SEL + (halDFE_BitclkMode0<<BUS_STARTBIT) + 0x0002)
#define DFE_bitclk0_bit_gating_enabled                      (DFE_BLK + DBG64SEL + (halDFE_BitclkMode0<<BUS_STARTBIT) + 0x0003)
#define DFE_bitclk0_samples_to_viterbi00                    (DFE_BLK + DBG64SEL + (halDFE_BitclkMode0<<BUS_STARTBIT) + 0x0004)
#define DFE_bitclk0_samples_to_viterbi01                    (DFE_BLK + DBG64SEL + (halDFE_BitclkMode0<<BUS_STARTBIT) + 0x0005)
#define DFE_bitclk0_samples_to_viterbi02                    (DFE_BLK + DBG64SEL + (halDFE_BitclkMode0<<BUS_STARTBIT) + 0x0006)
#define DFE_bitclk0_samples_to_viterbi03                    (DFE_BLK + DBG64SEL + (halDFE_BitclkMode0<<BUS_STARTBIT) + 0x0007)
#define DFE_bitclk0_samples_to_viterbi04                    (DFE_BLK + DBG64SEL + (halDFE_BitclkMode0<<BUS_STARTBIT) + 0x0008)
#define DFE_bitclk0_samples_to_viterbi05                    (DFE_BLK + DBG64SEL + (halDFE_BitclkMode0<<BUS_STARTBIT) + 0x0009)
#define DFE_bitclk0_samples_to_viterbi10                    (DFE_BLK + DBG64SEL + (halDFE_BitclkMode0<<BUS_STARTBIT) + 0x000A)
#define DFE_bitclk0_samples_to_viterbi11                    (DFE_BLK + DBG64SEL + (halDFE_BitclkMode0<<BUS_STARTBIT) + 0x000B)
#define DFE_bitclk0_samples_to_viterbi12                    (DFE_BLK + DBG64SEL + (halDFE_BitclkMode0<<BUS_STARTBIT) + 0x000C)
#define DFE_bitclk0_samples_to_viterbi13                    (DFE_BLK + DBG64SEL + (halDFE_BitclkMode0<<BUS_STARTBIT) + 0x000D)
#define DFE_bitclk0_samples_to_viterbi14                    (DFE_BLK + DBG64SEL + (halDFE_BitclkMode0<<BUS_STARTBIT) + 0x000E)
#define DFE_bitclk0_samples_to_viterbi15                    (DFE_BLK + DBG64SEL + (halDFE_BitclkMode0<<BUS_STARTBIT) + 0x000F)
//BitclkMode1
#define DFE_bitclk1_hf_not_present_slicer_hold              (DFE_BLK + DBG64SEL + (halDFE_BitclkMode1<<BUS_STARTBIT) + 0x0000)
#define DFE_bitclk1_demod_syncpos_lock                      (DFE_BLK + DBG64SEL + (halDFE_BitclkMode1<<BUS_STARTBIT) + 0x0001)
#define DFE_bitclk1_bits_to_viterbi0                        (DFE_BLK + DBG64SEL + (halDFE_BitclkMode1<<BUS_STARTBIT) + 0x0002)
#define DFE_bitclk1_bits_to_viterbi1                        (DFE_BLK + DBG64SEL + (halDFE_BitclkMode1<<BUS_STARTBIT) + 0x0003)
#define DFE_bitclk1_samples_to_viterbi20                    (DFE_BLK + DBG64SEL + (halDFE_BitclkMode1<<BUS_STARTBIT) + 0x0004)
#define DFE_bitclk1_samples_to_viterbi21                    (DFE_BLK + DBG64SEL + (halDFE_BitclkMode1<<BUS_STARTBIT) + 0x0005)
#define DFE_bitclk1_samples_to_viterbi22                    (DFE_BLK + DBG64SEL + (halDFE_BitclkMode1<<BUS_STARTBIT) + 0x0006)
#define DFE_bitclk1_samples_to_viterbi23                    (DFE_BLK + DBG64SEL + (halDFE_BitclkMode1<<BUS_STARTBIT) + 0x0007)
#define DFE_bitclk1_samples_to_viterbi24                    (DFE_BLK + DBG64SEL + (halDFE_BitclkMode1<<BUS_STARTBIT) + 0x0008)
#define DFE_bitclk1_samples_to_viterbi25                    (DFE_BLK + DBG64SEL + (halDFE_BitclkMode1<<BUS_STARTBIT) + 0x0009)
#define DFE_bitclk1_samples_to_viterbi30                    (DFE_BLK + DBG64SEL + (halDFE_BitclkMode1<<BUS_STARTBIT) + 0x000A)
#define DFE_bitclk1_samples_to_viterbi31                    (DFE_BLK + DBG64SEL + (halDFE_BitclkMode1<<BUS_STARTBIT) + 0x000B)
#define DFE_bitclk1_samples_to_viterbi32                    (DFE_BLK + DBG64SEL + (halDFE_BitclkMode1<<BUS_STARTBIT) + 0x000C)
#define DFE_bitclk1_samples_to_viterbi33                    (DFE_BLK + DBG64SEL + (halDFE_BitclkMode1<<BUS_STARTBIT) + 0x000D)
#define DFE_bitclk1_samples_to_viterbi34                    (DFE_BLK + DBG64SEL + (halDFE_BitclkMode1<<BUS_STARTBIT) + 0x000E)
#define DFE_bitclk1_samples_to_viterbi35                    (DFE_BLK + DBG64SEL + (halDFE_BitclkMode1<<BUS_STARTBIT) + 0x000F)
//BitclkMode2
#define DFE_bitclk2_bits_to_viterbi2                        (DFE_BLK + DBG64SEL + (halDFE_BitclkMode2<<BUS_STARTBIT) + 0x0000)
#define DFE_bitclk2_bits_to_viterbi3                        (DFE_BLK + DBG64SEL + (halDFE_BitclkMode2<<BUS_STARTBIT) + 0x0001)
#define DFE_bitclk2_bits_to_viterbi4                        (DFE_BLK + DBG64SEL + (halDFE_BitclkMode2<<BUS_STARTBIT) + 0x0002)
#define DFE_bitclk2_bits_to_viterbi5                        (DFE_BLK + DBG64SEL + (halDFE_BitclkMode2<<BUS_STARTBIT) + 0x0003)
#define DFE_bitclk2_samples_to_viterbi40                    (DFE_BLK + DBG64SEL + (halDFE_BitclkMode2<<BUS_STARTBIT) + 0x0004)
#define DFE_bitclk2_samples_to_viterbi41                    (DFE_BLK + DBG64SEL + (halDFE_BitclkMode2<<BUS_STARTBIT) + 0x0005)
#define DFE_bitclk2_samples_to_viterbi42                    (DFE_BLK + DBG64SEL + (halDFE_BitclkMode2<<BUS_STARTBIT) + 0x0006)
#define DFE_bitclk2_samples_to_viterbi43                    (DFE_BLK + DBG64SEL + (halDFE_BitclkMode2<<BUS_STARTBIT) + 0x0007)
#define DFE_bitclk2_samples_to_viterbi44                    (DFE_BLK + DBG64SEL + (halDFE_BitclkMode2<<BUS_STARTBIT) + 0x0008)
#define DFE_bitclk2_samples_to_viterbi45                    (DFE_BLK + DBG64SEL + (halDFE_BitclkMode2<<BUS_STARTBIT) + 0x0009)
#define DFE_bitclk2_samples_to_viterbi50                    (DFE_BLK + DBG64SEL + (halDFE_BitclkMode2<<BUS_STARTBIT) + 0x000A)
#define DFE_bitclk2_samples_to_viterbi51                    (DFE_BLK + DBG64SEL + (halDFE_BitclkMode2<<BUS_STARTBIT) + 0x000B)
#define DFE_bitclk2_samples_to_viterbi52                    (DFE_BLK + DBG64SEL + (halDFE_BitclkMode2<<BUS_STARTBIT) + 0x000C)
#define DFE_bitclk2_samples_to_viterbi53                    (DFE_BLK + DBG64SEL + (halDFE_BitclkMode2<<BUS_STARTBIT) + 0x000D)
#define DFE_bitclk2_samples_to_viterbi54                    (DFE_BLK + DBG64SEL + (halDFE_BitclkMode2<<BUS_STARTBIT) + 0x000E)
#define DFE_bitclk2_samples_to_viterbi55                    (DFE_BLK + DBG64SEL + (halDFE_BitclkMode2<<BUS_STARTBIT) + 0x000F)
//BitclkMode3
#define DFE_bitclk3_inclk                                   (DFE_BLK + DBG64SEL + (halDFE_BitclkMode3<<BUS_STARTBIT) + 0x0000)
#define DFE_bitclk3_bitclk                                  (DFE_BLK + DBG64SEL + (halDFE_BitclkMode3<<BUS_STARTBIT) + 0x0001)
#define DFE_bitclk3_enable_int                              (DFE_BLK + DBG64SEL + (halDFE_BitclkMode3<<BUS_STARTBIT) + 0x0002)
#define DFE_bitclk3_outclk                                  (DFE_BLK + DBG64SEL + (halDFE_BitclkMode3<<BUS_STARTBIT) + 0x0003)
#define DFE_bitclk3_sample_to_demod_pic_enable_int          (DFE_BLK + DBG64SEL + (halDFE_BitclkMode3<<BUS_STARTBIT) + 0x0004)
#define DFE_bitclk3_sample_to_demod_pic_int0                (DFE_BLK + DBG64SEL + (halDFE_BitclkMode3<<BUS_STARTBIT) + 0x0005)
#define DFE_bitclk3_sample_to_demod_pic_int1                (DFE_BLK + DBG64SEL + (halDFE_BitclkMode3<<BUS_STARTBIT) + 0x0006)
#define DFE_bitclk3_sample_to_demod_pic_int2                (DFE_BLK + DBG64SEL + (halDFE_BitclkMode3<<BUS_STARTBIT) + 0x0007)
#define DFE_bitclk3_sample_to_demod_pic_int3                (DFE_BLK + DBG64SEL + (halDFE_BitclkMode3<<BUS_STARTBIT) + 0x0008)
#define DFE_bitclk3_sample_to_demod_pic_int4                (DFE_BLK + DBG64SEL + (halDFE_BitclkMode3<<BUS_STARTBIT) + 0x0009)
#define DFE_bitclk3_sample_to_demod_pic_int5                (DFE_BLK + DBG64SEL + (halDFE_BitclkMode3<<BUS_STARTBIT) + 0x000A)
#define DFE_bitclk3_sample_to_demod_pic_int6                (DFE_BLK + DBG64SEL + (halDFE_BitclkMode3<<BUS_STARTBIT) + 0x000B)
#define DFE_bitclk3_sample_to_demod_pic_int7                (DFE_BLK + DBG64SEL + (halDFE_BitclkMode3<<BUS_STARTBIT) + 0x000C)
#define DFE_bitclk3_sample_to_demod_pic_int8                (DFE_BLK + DBG64SEL + (halDFE_BitclkMode3<<BUS_STARTBIT) + 0x000D)
#define DFE_bitclk3_sample_to_demod_pic_int9                (DFE_BLK + DBG64SEL + (halDFE_BitclkMode3<<BUS_STARTBIT) + 0x000E)
#define DFE_bitclk3_sample_to_demod_pic_int10               (DFE_BLK + DBG64SEL + (halDFE_BitclkMode3<<BUS_STARTBIT) + 0x000F)
//BitclkMode4
#define DFE_bitclk4_inclk                                   (DFE_BLK + DBG64SEL + (halDFE_BitclkMode4<<BUS_STARTBIT) + 0x0000)
#define DFE_bitclk4_bitclk                                  (DFE_BLK + DBG64SEL + (halDFE_BitclkMode4<<BUS_STARTBIT) + 0x0001)
#define DFE_bitclk4_hf_not_present_slicer_hold              (DFE_BLK + DBG64SEL + (halDFE_BitclkMode4<<BUS_STARTBIT) + 0x0002)
#define DFE_bitclk4_bits_to_demod_int0                      (DFE_BLK + DBG64SEL + (halDFE_BitclkMode4<<BUS_STARTBIT) + 0x0003)
#define DFE_bitclk4_bits_to_demod_int1                      (DFE_BLK + DBG64SEL + (halDFE_BitclkMode4<<BUS_STARTBIT) + 0x0004)
#define DFE_bitclk4_bits_to_demod_int2                      (DFE_BLK + DBG64SEL + (halDFE_BitclkMode4<<BUS_STARTBIT) + 0x0005)
#define DFE_bitclk4_bits_to_demod_int3                      (DFE_BLK + DBG64SEL + (halDFE_BitclkMode4<<BUS_STARTBIT) + 0x0006)
#define DFE_bitclk4_bits_to_demod_int4                      (DFE_BLK + DBG64SEL + (halDFE_BitclkMode4<<BUS_STARTBIT) + 0x0007)
#define DFE_bitclk4_bits_to_demod_int5                      (DFE_BLK + DBG64SEL + (halDFE_BitclkMode4<<BUS_STARTBIT) + 0x0008)
#define DFE_bitclk4_bits_to_demod_enable_int                (DFE_BLK + DBG64SEL + (halDFE_BitclkMode4<<BUS_STARTBIT) + 0x0009)
#define DFE_bitclk4_bits_to_viterbi0                        (DFE_BLK + DBG64SEL + (halDFE_BitclkMode4<<BUS_STARTBIT) + 0x000A)
#define DFE_bitclk4_bits_to_viterbi1                        (DFE_BLK + DBG64SEL + (halDFE_BitclkMode4<<BUS_STARTBIT) + 0x000B)
#define DFE_bitclk4_bits_to_viterbi2                        (DFE_BLK + DBG64SEL + (halDFE_BitclkMode4<<BUS_STARTBIT) + 0x000C)
#define DFE_bitclk4_bits_to_viterbi3                        (DFE_BLK + DBG64SEL + (halDFE_BitclkMode4<<BUS_STARTBIT) + 0x000D)
#define DFE_bitclk4_bits_to_viterbi4                        (DFE_BLK + DBG64SEL + (halDFE_BitclkMode4<<BUS_STARTBIT) + 0x000E)
#define DFE_bitclk4_bits_to_viterbi5                        (DFE_BLK + DBG64SEL + (halDFE_BitclkMode4<<BUS_STARTBIT) + 0x000F)
//BlankDefectMode0
#define DFE_blankdefect0_sysclk                             (DFE_BLK + DBG64SEL + (halDFE_BlankDefectMode0<<BUS_STARTBIT) + 0x0000)
#define DFE_blankdefect0_whitedot_detected                  (DFE_BLK + DBG64SEL + (halDFE_BlankDefectMode0<<BUS_STARTBIT) + 0x0001)
#define DFE_blankdefect0_blackdot_detected                  (DFE_BLK + DBG64SEL + (halDFE_BlankDefectMode0<<BUS_STARTBIT) + 0x0002)
#define DFE_blankdefect0_defect_detected                    (DFE_BLK + DBG64SEL + (halDFE_BlankDefectMode0<<BUS_STARTBIT) + 0x0003)
#define DFE_blankdefect0_blanksignal_detected               (DFE_BLK + DBG64SEL + (halDFE_BlankDefectMode0<<BUS_STARTBIT) + 0x0004)
#define DFE_blankdefect0_early_whitedot_detected            (DFE_BLK + DBG64SEL + (halDFE_BlankDefectMode0<<BUS_STARTBIT) + 0x0005)
#define DFE_blankdefect0_early_blackdot_detected            (DFE_BLK + DBG64SEL + (halDFE_BlankDefectMode0<<BUS_STARTBIT) + 0x0006)
#define DFE_blankdefect0_early_defect_detected              (DFE_BLK + DBG64SEL + (halDFE_BlankDefectMode0<<BUS_STARTBIT) + 0x0007)
#define DFE_blankdefect0_blanksignal_detector_meas0         (DFE_BLK + DBG64SEL + (halDFE_BlankDefectMode0<<BUS_STARTBIT) + 0x0008)
#define DFE_blankdefect0_blanksignal_detector_meas1         (DFE_BLK + DBG64SEL + (halDFE_BlankDefectMode0<<BUS_STARTBIT) + 0x0009)
#define DFE_blankdefect0_blanksignal_detector_meas2         (DFE_BLK + DBG64SEL + (halDFE_BlankDefectMode0<<BUS_STARTBIT) + 0x000A)
#define DFE_blankdefect0_blanksignal_detector_meas3         (DFE_BLK + DBG64SEL + (halDFE_BlankDefectMode0<<BUS_STARTBIT) + 0x000B)
#define DFE_blankdefect0_blanksignal_detector_meas4         (DFE_BLK + DBG64SEL + (halDFE_BlankDefectMode0<<BUS_STARTBIT) + 0x000C)
#define DFE_blankdefect0_blanksignal_detector_meas5         (DFE_BLK + DBG64SEL + (halDFE_BlankDefectMode0<<BUS_STARTBIT) + 0x000D)
#define DFE_blankdefect0_blanksignal_detector_meas6         (DFE_BLK + DBG64SEL + (halDFE_BlankDefectMode0<<BUS_STARTBIT) + 0x000E)
#define DFE_blankdefect0_blanksignal_detector_meas7         (DFE_BLK + DBG64SEL + (halDFE_BlankDefectMode0<<BUS_STARTBIT) + 0x000F)
//BlankDefectMode1
#define DFE_blankdefect1_whitedot_detector_meas0            (DFE_BLK + DBG64SEL + (halDFE_BlankDefectMode1<<BUS_STARTBIT) + 0x0000)
#define DFE_blankdefect1_whitedot_detector_meas1            (DFE_BLK + DBG64SEL + (halDFE_BlankDefectMode1<<BUS_STARTBIT) + 0x0001)
#define DFE_blankdefect1_whitedot_detector_meas2            (DFE_BLK + DBG64SEL + (halDFE_BlankDefectMode1<<BUS_STARTBIT) + 0x0002)
#define DFE_blankdefect1_whitedot_detector_meas3            (DFE_BLK + DBG64SEL + (halDFE_BlankDefectMode1<<BUS_STARTBIT) + 0x0003)
#define DFE_blankdefect1_whitedot_detector_meas4            (DFE_BLK + DBG64SEL + (halDFE_BlankDefectMode1<<BUS_STARTBIT) + 0x0004)
#define DFE_blankdefect1_whitedot_detector_meas5            (DFE_BLK + DBG64SEL + (halDFE_BlankDefectMode1<<BUS_STARTBIT) + 0x0005)
#define DFE_blankdefect1_whitedot_detector_meas6            (DFE_BLK + DBG64SEL + (halDFE_BlankDefectMode1<<BUS_STARTBIT) + 0x0006)
#define DFE_blankdefect1_whitedot_detector_meas7            (DFE_BLK + DBG64SEL + (halDFE_BlankDefectMode1<<BUS_STARTBIT) + 0x0007)
#define DFE_blankdefect1_blackdot_detector_meas0            (DFE_BLK + DBG64SEL + (halDFE_BlankDefectMode1<<BUS_STARTBIT) + 0x0008)
#define DFE_blankdefect1_blackdot_detector_meas1            (DFE_BLK + DBG64SEL + (halDFE_BlankDefectMode1<<BUS_STARTBIT) + 0x0009)
#define DFE_blankdefect1_blackdot_detector_meas2            (DFE_BLK + DBG64SEL + (halDFE_BlankDefectMode1<<BUS_STARTBIT) + 0x000A)
#define DFE_blankdefect1_blackdot_detector_meas3            (DFE_BLK + DBG64SEL + (halDFE_BlankDefectMode1<<BUS_STARTBIT) + 0x000B)
#define DFE_blankdefect1_blackdot_detector_meas4            (DFE_BLK + DBG64SEL + (halDFE_BlankDefectMode1<<BUS_STARTBIT) + 0x000C)
#define DFE_blankdefect1_blackdot_detector_meas5            (DFE_BLK + DBG64SEL + (halDFE_BlankDefectMode1<<BUS_STARTBIT) + 0x000D)
#define DFE_blankdefect1_blackdot_detector_meas6            (DFE_BLK + DBG64SEL + (halDFE_BlankDefectMode1<<BUS_STARTBIT) + 0x000E)
#define DFE_blankdefect1_blackdot_detector_meas7            (DFE_BLK + DBG64SEL + (halDFE_BlankDefectMode1<<BUS_STARTBIT) + 0x000F)
//BlankDefectMode2
#define DFE_blankdefect2_peakdet_min_in_black0              (DFE_BLK + DBG64SEL + (halDFE_BlankDefectMode2<<BUS_STARTBIT) + 0x0000)
#define DFE_blankdefect2_peakdet_min_in_black1              (DFE_BLK + DBG64SEL + (halDFE_BlankDefectMode2<<BUS_STARTBIT) + 0x0001)
#define DFE_blankdefect2_peakdet_min_in_black2              (DFE_BLK + DBG64SEL + (halDFE_BlankDefectMode2<<BUS_STARTBIT) + 0x0002)
#define DFE_blankdefect2_peakdet_min_in_black3              (DFE_BLK + DBG64SEL + (halDFE_BlankDefectMode2<<BUS_STARTBIT) + 0x0003)
#define DFE_blankdefect2_peakdet_min_in_black4              (DFE_BLK + DBG64SEL + (halDFE_BlankDefectMode2<<BUS_STARTBIT) + 0x0004)
#define DFE_blankdefect2_peakdet_min_in_black5              (DFE_BLK + DBG64SEL + (halDFE_BlankDefectMode2<<BUS_STARTBIT) + 0x0005)
#define DFE_blankdefect2_peakdet_min_in_black6              (DFE_BLK + DBG64SEL + (halDFE_BlankDefectMode2<<BUS_STARTBIT) + 0x0006)
#define DFE_blankdefect2_peakdet_min_in_black7              (DFE_BLK + DBG64SEL + (halDFE_BlankDefectMode2<<BUS_STARTBIT) + 0x0007)
#define DFE_blankdefect2_peakdet_max_in_black0              (DFE_BLK + DBG64SEL + (halDFE_BlankDefectMode2<<BUS_STARTBIT) + 0x0008)
#define DFE_blankdefect2_peakdet_max_in_black1              (DFE_BLK + DBG64SEL + (halDFE_BlankDefectMode2<<BUS_STARTBIT) + 0x0009)
#define DFE_blankdefect2_peakdet_max_in_black2              (DFE_BLK + DBG64SEL + (halDFE_BlankDefectMode2<<BUS_STARTBIT) + 0x000A)
#define DFE_blankdefect2_peakdet_max_in_black3              (DFE_BLK + DBG64SEL + (halDFE_BlankDefectMode2<<BUS_STARTBIT) + 0x000B)
#define DFE_blankdefect2_peakdet_max_in_black4              (DFE_BLK + DBG64SEL + (halDFE_BlankDefectMode2<<BUS_STARTBIT) + 0x000C)
#define DFE_blankdefect2_peakdet_max_in_black5              (DFE_BLK + DBG64SEL + (halDFE_BlankDefectMode2<<BUS_STARTBIT) + 0x000D)
#define DFE_blankdefect2_peakdet_max_in_black6              (DFE_BLK + DBG64SEL + (halDFE_BlankDefectMode2<<BUS_STARTBIT) + 0x000E)
#define DFE_blankdefect2_peakdet_max_in_black7              (DFE_BLK + DBG64SEL + (halDFE_BlankDefectMode2<<BUS_STARTBIT) + 0x000F)
//BlankDefectMode3
#define DFE_blankdefect3_noisefmin_to_peakdet0              (DFE_BLK + DBG64SEL + (halDFE_BlankDefectMode3<<BUS_STARTBIT) + 0x0000)
#define DFE_blankdefect3_noisefmin_to_peakdet1              (DFE_BLK + DBG64SEL + (halDFE_BlankDefectMode3<<BUS_STARTBIT) + 0x0001)
#define DFE_blankdefect3_noisefmin_to_peakdet2              (DFE_BLK + DBG64SEL + (halDFE_BlankDefectMode3<<BUS_STARTBIT) + 0x0002)
#define DFE_blankdefect3_noisefmin_to_peakdet3              (DFE_BLK + DBG64SEL + (halDFE_BlankDefectMode3<<BUS_STARTBIT) + 0x0003)
#define DFE_blankdefect3_noisefmin_to_peakdet4              (DFE_BLK + DBG64SEL + (halDFE_BlankDefectMode3<<BUS_STARTBIT) + 0x0004)
#define DFE_blankdefect3_noisefmin_to_peakdet5              (DFE_BLK + DBG64SEL + (halDFE_BlankDefectMode3<<BUS_STARTBIT) + 0x0005)
#define DFE_blankdefect3_noisefmin_to_peakdet6              (DFE_BLK + DBG64SEL + (halDFE_BlankDefectMode3<<BUS_STARTBIT) + 0x0006)
#define DFE_blankdefect3_noisefmin_to_peakdet7              (DFE_BLK + DBG64SEL + (halDFE_BlankDefectMode3<<BUS_STARTBIT) + 0x0007)
#define DFE_blankdefect3_noisefmax_to_peakdet0              (DFE_BLK + DBG64SEL + (halDFE_BlankDefectMode3<<BUS_STARTBIT) + 0x0008)
#define DFE_blankdefect3_noisefmax_to_peakdet1              (DFE_BLK + DBG64SEL + (halDFE_BlankDefectMode3<<BUS_STARTBIT) + 0x0009)
#define DFE_blankdefect3_noisefmax_to_peakdet2              (DFE_BLK + DBG64SEL + (halDFE_BlankDefectMode3<<BUS_STARTBIT) + 0x000A)
#define DFE_blankdefect3_noisefmax_to_peakdet3              (DFE_BLK + DBG64SEL + (halDFE_BlankDefectMode3<<BUS_STARTBIT) + 0x000B)
#define DFE_blankdefect3_noisefmax_to_peakdet4              (DFE_BLK + DBG64SEL + (halDFE_BlankDefectMode3<<BUS_STARTBIT) + 0x000C)
#define DFE_blankdefect3_noisefmax_to_peakdet5              (DFE_BLK + DBG64SEL + (halDFE_BlankDefectMode3<<BUS_STARTBIT) + 0x000D)
#define DFE_blankdefect3_noisefmax_to_peakdet6              (DFE_BLK + DBG64SEL + (halDFE_BlankDefectMode3<<BUS_STARTBIT) + 0x000E)
#define DFE_blankdefect3_noisefmax_to_peakdet7              (DFE_BLK + DBG64SEL + (halDFE_BlankDefectMode3<<BUS_STARTBIT) + 0x000F)
//DefectDetectorMode0
#define DFE_defectdetector0_sysclk                          (DFE_BLK + DBG64SEL + (halDFE_DefectDetectorMode0<<BUS_STARTBIT) + 0x0000)
#define DFE_defectdetector0_hold_comb_att                   (DFE_BLK + DBG64SEL + (halDFE_DefectDetectorMode0<<BUS_STARTBIT) + 0x0001)
#define DFE_defectdetector0_hold_prog_att                   (DFE_BLK + DBG64SEL + (halDFE_DefectDetectorMode0<<BUS_STARTBIT) + 0x0002)
#define DFE_defectdetector0_hold_imm_att                    (DFE_BLK + DBG64SEL + (halDFE_DefectDetectorMode0<<BUS_STARTBIT) + 0x0003)
#define DFE_defectdetector0_dvdram_ctrl_recfield            (DFE_BLK + DBG64SEL + (halDFE_DefectDetectorMode0<<BUS_STARTBIT) + 0x0004)
#define DFE_defectdetector0_dvdram_ctrl_header              (DFE_BLK + DBG64SEL + (halDFE_DefectDetectorMode0<<BUS_STARTBIT) + 0x0005)
#define DFE_defectdetector0_dvdram_ctrl_landnotgroove       (DFE_BLK + DBG64SEL + (halDFE_DefectDetectorMode0<<BUS_STARTBIT) + 0x0006)
#define DFE_defectdetector0_dvdram_ctrl_header_rise         (DFE_BLK + DBG64SEL + (halDFE_DefectDetectorMode0<<BUS_STARTBIT) + 0x0007)
#define DFE_defectdetector0_dvdram_ctrl_header_fall         (DFE_BLK + DBG64SEL + (halDFE_DefectDetectorMode0<<BUS_STARTBIT) + 0x0008)
#define DFE_defectdetector0_dvdram_ctrl_recfield_rise       (DFE_BLK + DBG64SEL + (halDFE_DefectDetectorMode0<<BUS_STARTBIT) + 0x0009)
#define DFE_defectdetector0_dvdram_ctrl_recfield_fall       (DFE_BLK + DBG64SEL + (halDFE_DefectDetectorMode0<<BUS_STARTBIT) + 0x000A)
#define DFE_defectdetector0_dvdram_ctrl_high_bw             (DFE_BLK + DBG64SEL + (halDFE_DefectDetectorMode0<<BUS_STARTBIT) + 0x000B)
#define DFE_defectdetector0_unused0                         (DFE_BLK + DBG64SEL + (halDFE_DefectDetectorMode0<<BUS_STARTBIT) + 0x000C)
#define DFE_defectdetector0_unused1                         (DFE_BLK + DBG64SEL + (halDFE_DefectDetectorMode0<<BUS_STARTBIT) + 0x000D)
#define DFE_defectdetector0_unused2                         (DFE_BLK + DBG64SEL + (halDFE_DefectDetectorMode0<<BUS_STARTBIT) + 0x000E)
#define DFE_defectdetector0_unused3                         (DFE_BLK + DBG64SEL + (halDFE_DefectDetectorMode0<<BUS_STARTBIT) + 0x000F)
//DefectDetectorMode1
#define DFE_defectdetector1_amplit_level_imm_att0           (DFE_BLK + DBG64SEL + (halDFE_DefectDetectorMode1<<BUS_STARTBIT) + 0x0000)
#define DFE_defectdetector1_amplit_level_imm_att1           (DFE_BLK + DBG64SEL + (halDFE_DefectDetectorMode1<<BUS_STARTBIT) + 0x0001)
#define DFE_defectdetector1_amplit_level_imm_att2           (DFE_BLK + DBG64SEL + (halDFE_DefectDetectorMode1<<BUS_STARTBIT) + 0x0002)
#define DFE_defectdetector1_amplit_level_imm_att3           (DFE_BLK + DBG64SEL + (halDFE_DefectDetectorMode1<<BUS_STARTBIT) + 0x0003)
#define DFE_defectdetector1_amplit_level_imm_att4           (DFE_BLK + DBG64SEL + (halDFE_DefectDetectorMode1<<BUS_STARTBIT) + 0x0004)
#define DFE_defectdetector1_amplit_level_imm_att5           (DFE_BLK + DBG64SEL + (halDFE_DefectDetectorMode1<<BUS_STARTBIT) + 0x0005)
#define DFE_defectdetector1_amplit_level_imm_att6           (DFE_BLK + DBG64SEL + (halDFE_DefectDetectorMode1<<BUS_STARTBIT) + 0x0006)
#define DFE_defectdetector1_amplit_level_imm_att7           (DFE_BLK + DBG64SEL + (halDFE_DefectDetectorMode1<<BUS_STARTBIT) + 0x0007)
#define DFE_defectdetector1_amplit_level_prog_att0          (DFE_BLK + DBG64SEL + (halDFE_DefectDetectorMode1<<BUS_STARTBIT) + 0x0008)
#define DFE_defectdetector1_amplit_level_prog_att1          (DFE_BLK + DBG64SEL + (halDFE_DefectDetectorMode1<<BUS_STARTBIT) + 0x0009)
#define DFE_defectdetector1_amplit_level_prog_att2          (DFE_BLK + DBG64SEL + (halDFE_DefectDetectorMode1<<BUS_STARTBIT) + 0x000A)
#define DFE_defectdetector1_amplit_level_prog_att3          (DFE_BLK + DBG64SEL + (halDFE_DefectDetectorMode1<<BUS_STARTBIT) + 0x000B)
#define DFE_defectdetector1_amplit_level_prog_att4          (DFE_BLK + DBG64SEL + (halDFE_DefectDetectorMode1<<BUS_STARTBIT) + 0x000C)
#define DFE_defectdetector1_amplit_level_prog_att5          (DFE_BLK + DBG64SEL + (halDFE_DefectDetectorMode1<<BUS_STARTBIT) + 0x000D)
#define DFE_defectdetector1_amplit_level_prog_att6          (DFE_BLK + DBG64SEL + (halDFE_DefectDetectorMode1<<BUS_STARTBIT) + 0x000E)
#define DFE_defectdetector1_amplit_level_prog_att7          (DFE_BLK + DBG64SEL + (halDFE_DefectDetectorMode1<<BUS_STARTBIT) + 0x000F)
//DefectDetectorMode2
#define DFE_defectdetector2_noisefmin_to_peakdet0           (DFE_BLK + DBG64SEL + (halDFE_DefectDetectorMode2<<BUS_STARTBIT) + 0x0000)
#define DFE_defectdetector2_noisefmin_to_peakdet1           (DFE_BLK + DBG64SEL + (halDFE_DefectDetectorMode2<<BUS_STARTBIT) + 0x0001)
#define DFE_defectdetector2_noisefmin_to_peakdet2           (DFE_BLK + DBG64SEL + (halDFE_DefectDetectorMode2<<BUS_STARTBIT) + 0x0002)
#define DFE_defectdetector2_noisefmin_to_peakdet3           (DFE_BLK + DBG64SEL + (halDFE_DefectDetectorMode2<<BUS_STARTBIT) + 0x0003)
#define DFE_defectdetector2_noisefmin_to_peakdet4           (DFE_BLK + DBG64SEL + (halDFE_DefectDetectorMode2<<BUS_STARTBIT) + 0x0004)
#define DFE_defectdetector2_noisefmin_to_peakdet5           (DFE_BLK + DBG64SEL + (halDFE_DefectDetectorMode2<<BUS_STARTBIT) + 0x0005)
#define DFE_defectdetector2_noisefmin_to_peakdet6           (DFE_BLK + DBG64SEL + (halDFE_DefectDetectorMode2<<BUS_STARTBIT) + 0x0006)
#define DFE_defectdetector2_noisefmin_to_peakdet7           (DFE_BLK + DBG64SEL + (halDFE_DefectDetectorMode2<<BUS_STARTBIT) + 0x0007)
#define DFE_defectdetector2_noisefmax_to_peakdet0           (DFE_BLK + DBG64SEL + (halDFE_DefectDetectorMode2<<BUS_STARTBIT) + 0x0008)
#define DFE_defectdetector2_noisefmax_to_peakdet1           (DFE_BLK + DBG64SEL + (halDFE_DefectDetectorMode2<<BUS_STARTBIT) + 0x0009)
#define DFE_defectdetector2_noisefmax_to_peakdet2           (DFE_BLK + DBG64SEL + (halDFE_DefectDetectorMode2<<BUS_STARTBIT) + 0x000A)
#define DFE_defectdetector2_noisefmax_to_peakdet3           (DFE_BLK + DBG64SEL + (halDFE_DefectDetectorMode2<<BUS_STARTBIT) + 0x000B)
#define DFE_defectdetector2_noisefmax_to_peakdet4           (DFE_BLK + DBG64SEL + (halDFE_DefectDetectorMode2<<BUS_STARTBIT) + 0x000C)
#define DFE_defectdetector2_noisefmax_to_peakdet5           (DFE_BLK + DBG64SEL + (halDFE_DefectDetectorMode2<<BUS_STARTBIT) + 0x000D)
#define DFE_defectdetector2_noisefmax_to_peakdet6           (DFE_BLK + DBG64SEL + (halDFE_DefectDetectorMode2<<BUS_STARTBIT) + 0x000E)
#define DFE_defectdetector2_noisefmax_to_peakdet7           (DFE_BLK + DBG64SEL + (halDFE_DefectDetectorMode2<<BUS_STARTBIT) + 0x000F)
//PrefrontInOutMode0
#define DFE_prefront0_sysclk                                (DFE_BLK + DBG64SEL + (halDFE_PrefrontInOutMode0<<BUS_STARTBIT) + 0x0000)
#define DFE_prefront0_resetn                                (DFE_BLK + DBG64SEL + (halDFE_PrefrontInOutMode0<<BUS_STARTBIT) + 0x0001)
#define DFE_prefront0_blank_int                             (DFE_BLK + DBG64SEL + (halDFE_PrefrontInOutMode0<<BUS_STARTBIT) + 0x0002)
#define DFE_prefront0_defect_in                             (DFE_BLK + DBG64SEL + (halDFE_PrefrontInOutMode0<<BUS_STARTBIT) + 0x0003)
#define DFE_prefront0_early_defect_int                      (DFE_BLK + DBG64SEL + (halDFE_PrefrontInOutMode0<<BUS_STARTBIT) + 0x0004)
#define DFE_prefront0_pll_in_lock_indication                (DFE_BLK + DBG64SEL + (halDFE_PrefrontInOutMode0<<BUS_STARTBIT) + 0x0005)
#define DFE_prefront0_hf_not_present_imm_att_int            (DFE_BLK + DBG64SEL + (halDFE_PrefrontInOutMode0<<BUS_STARTBIT) + 0x0006)
#define DFE_prefront0_hf_present_imm_att_int                (DFE_BLK + DBG64SEL + (halDFE_PrefrontInOutMode0<<BUS_STARTBIT) + 0x0007)
#define DFE_prefront0_hf_not_present_prog_att_int           (DFE_BLK + DBG64SEL + (halDFE_PrefrontInOutMode0<<BUS_STARTBIT) + 0x0008)
#define DFE_prefront0_hf_present_prog_att_int               (DFE_BLK + DBG64SEL + (halDFE_PrefrontInOutMode0<<BUS_STARTBIT) + 0x0009)
#define DFE_prefront0_unused0                               (DFE_BLK + DBG64SEL + (halDFE_PrefrontInOutMode0<<BUS_STARTBIT) + 0x000A)
#define DFE_prefront0_unused1                               (DFE_BLK + DBG64SEL + (halDFE_PrefrontInOutMode0<<BUS_STARTBIT) + 0x000B)
#define DFE_prefront0_unused2                               (DFE_BLK + DBG64SEL + (halDFE_PrefrontInOutMode0<<BUS_STARTBIT) + 0x000C)
#define DFE_prefront0_unused3                               (DFE_BLK + DBG64SEL + (halDFE_PrefrontInOutMode0<<BUS_STARTBIT) + 0x000D)
#define DFE_prefront0_unused4                               (DFE_BLK + DBG64SEL + (halDFE_PrefrontInOutMode0<<BUS_STARTBIT) + 0x000E)
#define DFE_prefront0_unused5                               (DFE_BLK + DBG64SEL + (halDFE_PrefrontInOutMode0<<BUS_STARTBIT) + 0x000F)
//PrefrontInOutMode1
#define DFE_prefront1_samples_to_front_int00                (DFE_BLK + DBG64SEL + (halDFE_PrefrontInOutMode1<<BUS_STARTBIT) + 0x0000)
#define DFE_prefront1_samples_to_front_int01                (DFE_BLK + DBG64SEL + (halDFE_PrefrontInOutMode1<<BUS_STARTBIT) + 0x0001)
#define DFE_prefront1_samples_to_front_int02                (DFE_BLK + DBG64SEL + (halDFE_PrefrontInOutMode1<<BUS_STARTBIT) + 0x0002)
#define DFE_prefront1_samples_to_front_int03                (DFE_BLK + DBG64SEL + (halDFE_PrefrontInOutMode1<<BUS_STARTBIT) + 0x0003)
#define DFE_prefront1_samples_to_front_int04                (DFE_BLK + DBG64SEL + (halDFE_PrefrontInOutMode1<<BUS_STARTBIT) + 0x0004)
#define DFE_prefront1_samples_to_front_int05                (DFE_BLK + DBG64SEL + (halDFE_PrefrontInOutMode1<<BUS_STARTBIT) + 0x0005)
#define DFE_prefront1_samples_to_front_int06                (DFE_BLK + DBG64SEL + (halDFE_PrefrontInOutMode1<<BUS_STARTBIT) + 0x0006)
#define DFE_prefront1_samples_to_front_int07                (DFE_BLK + DBG64SEL + (halDFE_PrefrontInOutMode1<<BUS_STARTBIT) + 0x0007)
#define DFE_prefront1_samples_to_front_int10                (DFE_BLK + DBG64SEL + (halDFE_PrefrontInOutMode1<<BUS_STARTBIT) + 0x0008)
#define DFE_prefront1_samples_to_front_int11                (DFE_BLK + DBG64SEL + (halDFE_PrefrontInOutMode1<<BUS_STARTBIT) + 0x0009)
#define DFE_prefront1_samples_to_front_int12                (DFE_BLK + DBG64SEL + (halDFE_PrefrontInOutMode1<<BUS_STARTBIT) + 0x000A)
#define DFE_prefront1_samples_to_front_int13                (DFE_BLK + DBG64SEL + (halDFE_PrefrontInOutMode1<<BUS_STARTBIT) + 0x000B)
#define DFE_prefront1_samples_to_front_int14                (DFE_BLK + DBG64SEL + (halDFE_PrefrontInOutMode1<<BUS_STARTBIT) + 0x000C)
#define DFE_prefront1_samples_to_front_int15                (DFE_BLK + DBG64SEL + (halDFE_PrefrontInOutMode1<<BUS_STARTBIT) + 0x000D)
#define DFE_prefront1_samples_to_front_int16                (DFE_BLK + DBG64SEL + (halDFE_PrefrontInOutMode1<<BUS_STARTBIT) + 0x000E)
#define DFE_prefront1_samples_to_front_int17                (DFE_BLK + DBG64SEL + (halDFE_PrefrontInOutMode1<<BUS_STARTBIT) + 0x000F)
//PrefrontInOutMode2
#define DFE_prefront2_samples_to_front_int20                (DFE_BLK + DBG64SEL + (halDFE_PrefrontInOutMode2<<BUS_STARTBIT) + 0x0000)
#define DFE_prefront2_samples_to_front_int21                (DFE_BLK + DBG64SEL + (halDFE_PrefrontInOutMode2<<BUS_STARTBIT) + 0x0001)
#define DFE_prefront2_samples_to_front_int22                (DFE_BLK + DBG64SEL + (halDFE_PrefrontInOutMode2<<BUS_STARTBIT) + 0x0002)
#define DFE_prefront2_samples_to_front_int23                (DFE_BLK + DBG64SEL + (halDFE_PrefrontInOutMode2<<BUS_STARTBIT) + 0x0003)
#define DFE_prefront2_samples_to_front_int24                (DFE_BLK + DBG64SEL + (halDFE_PrefrontInOutMode2<<BUS_STARTBIT) + 0x0004)
#define DFE_prefront2_samples_to_front_int25                (DFE_BLK + DBG64SEL + (halDFE_PrefrontInOutMode2<<BUS_STARTBIT) + 0x0005)
#define DFE_prefront2_samples_to_front_int26                (DFE_BLK + DBG64SEL + (halDFE_PrefrontInOutMode2<<BUS_STARTBIT) + 0x0006)
#define DFE_prefront2_samples_to_front_int27                (DFE_BLK + DBG64SEL + (halDFE_PrefrontInOutMode2<<BUS_STARTBIT) + 0x0007)
#define DFE_prefront2_samples_to_front_int30                (DFE_BLK + DBG64SEL + (halDFE_PrefrontInOutMode2<<BUS_STARTBIT) + 0x0008)
#define DFE_prefront2_samples_to_front_int31                (DFE_BLK + DBG64SEL + (halDFE_PrefrontInOutMode2<<BUS_STARTBIT) + 0x0009)
#define DFE_prefront2_samples_to_front_int32                (DFE_BLK + DBG64SEL + (halDFE_PrefrontInOutMode2<<BUS_STARTBIT) + 0x000A)
#define DFE_prefront2_samples_to_front_int33                (DFE_BLK + DBG64SEL + (halDFE_PrefrontInOutMode2<<BUS_STARTBIT) + 0x000B)
#define DFE_prefront2_samples_to_front_int34                (DFE_BLK + DBG64SEL + (halDFE_PrefrontInOutMode2<<BUS_STARTBIT) + 0x000C)
#define DFE_prefront2_samples_to_front_int35                (DFE_BLK + DBG64SEL + (halDFE_PrefrontInOutMode2<<BUS_STARTBIT) + 0x000D)
#define DFE_prefront2_samples_to_front_int36                (DFE_BLK + DBG64SEL + (halDFE_PrefrontInOutMode2<<BUS_STARTBIT) + 0x000E)
#define DFE_prefront2_samples_to_front_int37                (DFE_BLK + DBG64SEL + (halDFE_PrefrontInOutMode2<<BUS_STARTBIT) + 0x000F)
//PrefrontInOutMode3
#define DFE_prefront3_samples_from_adc_00                   (DFE_BLK + DBG64SEL + (halDFE_PrefrontInOutMode3<<BUS_STARTBIT) + 0x0000)
#define DFE_prefront3_samples_from_adc_01                   (DFE_BLK + DBG64SEL + (halDFE_PrefrontInOutMode3<<BUS_STARTBIT) + 0x0001)
#define DFE_prefront3_samples_from_adc_02                   (DFE_BLK + DBG64SEL + (halDFE_PrefrontInOutMode3<<BUS_STARTBIT) + 0x0002)
#define DFE_prefront3_samples_from_adc_03                   (DFE_BLK + DBG64SEL + (halDFE_PrefrontInOutMode3<<BUS_STARTBIT) + 0x0003)
#define DFE_prefront3_samples_from_adc_04                   (DFE_BLK + DBG64SEL + (halDFE_PrefrontInOutMode3<<BUS_STARTBIT) + 0x0004)
#define DFE_prefront3_samples_from_adc_05                   (DFE_BLK + DBG64SEL + (halDFE_PrefrontInOutMode3<<BUS_STARTBIT) + 0x0005)
#define DFE_prefront3_samples_from_adc_06                   (DFE_BLK + DBG64SEL + (halDFE_PrefrontInOutMode3<<BUS_STARTBIT) + 0x0006)
#define DFE_prefront3_samples_from_adc_07                   (DFE_BLK + DBG64SEL + (halDFE_PrefrontInOutMode3<<BUS_STARTBIT) + 0x0007)
#define DFE_prefront3_samples_from_adc_10                   (DFE_BLK + DBG64SEL + (halDFE_PrefrontInOutMode3<<BUS_STARTBIT) + 0x0008)
#define DFE_prefront3_samples_from_adc_11                   (DFE_BLK + DBG64SEL + (halDFE_PrefrontInOutMode3<<BUS_STARTBIT) + 0x0009)
#define DFE_prefront3_samples_from_adc_12                   (DFE_BLK + DBG64SEL + (halDFE_PrefrontInOutMode3<<BUS_STARTBIT) + 0x000A)
#define DFE_prefront3_samples_from_adc_13                   (DFE_BLK + DBG64SEL + (halDFE_PrefrontInOutMode3<<BUS_STARTBIT) + 0x000B)
#define DFE_prefront3_samples_from_adc_14                   (DFE_BLK + DBG64SEL + (halDFE_PrefrontInOutMode3<<BUS_STARTBIT) + 0x000C)
#define DFE_prefront3_samples_from_adc_15                   (DFE_BLK + DBG64SEL + (halDFE_PrefrontInOutMode3<<BUS_STARTBIT) + 0x000D)
#define DFE_prefront3_samples_from_adc_16                   (DFE_BLK + DBG64SEL + (halDFE_PrefrontInOutMode3<<BUS_STARTBIT) + 0x000E)
#define DFE_prefront3_samples_from_adc_17                   (DFE_BLK + DBG64SEL + (halDFE_PrefrontInOutMode3<<BUS_STARTBIT) + 0x000F)
//PrefrontInOutMode4
#define DFE_prefront4_samples_from_adc_20                   (DFE_BLK + DBG64SEL + (halDFE_PrefrontInOutMode4<<BUS_STARTBIT) + 0x0000)
#define DFE_prefront4_samples_from_adc_21                   (DFE_BLK + DBG64SEL + (halDFE_PrefrontInOutMode4<<BUS_STARTBIT) + 0x0001)
#define DFE_prefront4_samples_from_adc_22                   (DFE_BLK + DBG64SEL + (halDFE_PrefrontInOutMode4<<BUS_STARTBIT) + 0x0002)
#define DFE_prefront4_samples_from_adc_23                   (DFE_BLK + DBG64SEL + (halDFE_PrefrontInOutMode4<<BUS_STARTBIT) + 0x0003)
#define DFE_prefront4_samples_from_adc_24                   (DFE_BLK + DBG64SEL + (halDFE_PrefrontInOutMode4<<BUS_STARTBIT) + 0x0004)
#define DFE_prefront4_samples_from_adc_25                   (DFE_BLK + DBG64SEL + (halDFE_PrefrontInOutMode4<<BUS_STARTBIT) + 0x0005)
#define DFE_prefront4_samples_from_adc_26                   (DFE_BLK + DBG64SEL + (halDFE_PrefrontInOutMode4<<BUS_STARTBIT) + 0x0006)
#define DFE_prefront4_samples_from_adc_27                   (DFE_BLK + DBG64SEL + (halDFE_PrefrontInOutMode4<<BUS_STARTBIT) + 0x0007)
#define DFE_prefront4_samples_from_adc_30                   (DFE_BLK + DBG64SEL + (halDFE_PrefrontInOutMode4<<BUS_STARTBIT) + 0x0008)
#define DFE_prefront4_samples_from_adc_31                   (DFE_BLK + DBG64SEL + (halDFE_PrefrontInOutMode4<<BUS_STARTBIT) + 0x0009)
#define DFE_prefront4_samples_from_adc_32                   (DFE_BLK + DBG64SEL + (halDFE_PrefrontInOutMode4<<BUS_STARTBIT) + 0x000A)
#define DFE_prefront4_samples_from_adc_33                   (DFE_BLK + DBG64SEL + (halDFE_PrefrontInOutMode4<<BUS_STARTBIT) + 0x000B)
#define DFE_prefront4_samples_from_adc_34                   (DFE_BLK + DBG64SEL + (halDFE_PrefrontInOutMode4<<BUS_STARTBIT) + 0x000C)
#define DFE_prefront4_samples_from_adc_35                   (DFE_BLK + DBG64SEL + (halDFE_PrefrontInOutMode4<<BUS_STARTBIT) + 0x000D)
#define DFE_prefront4_samples_from_adc_36                   (DFE_BLK + DBG64SEL + (halDFE_PrefrontInOutMode4<<BUS_STARTBIT) + 0x000E)
#define DFE_prefront4_samples_from_adc_37                   (DFE_BLK + DBG64SEL + (halDFE_PrefrontInOutMode4<<BUS_STARTBIT) + 0x000F)
//AGCAOCMode0
#define DFE_agcaoc0_sysclk                                  (DFE_BLK + DBG64SEL + (halDFE_AGCAOCMode0<<BUS_STARTBIT) + 0x0000)
#define DFE_agcaoc0_agc_debugbus1                           (DFE_BLK + DBG64SEL + (halDFE_AGCAOCMode0<<BUS_STARTBIT) + 0x0001)
#define DFE_agcaoc0_agc_debugbus2                           (DFE_BLK + DBG64SEL + (halDFE_AGCAOCMode0<<BUS_STARTBIT) + 0x0002)
#define DFE_agcaoc0_agc_debugbus3                           (DFE_BLK + DBG64SEL + (halDFE_AGCAOCMode0<<BUS_STARTBIT) + 0x0003)
#define DFE_agcaoc0_agc_debugbus4                           (DFE_BLK + DBG64SEL + (halDFE_AGCAOCMode0<<BUS_STARTBIT) + 0x0004)
#define DFE_agcaoc0_agc_debugbus5                           (DFE_BLK + DBG64SEL + (halDFE_AGCAOCMode0<<BUS_STARTBIT) + 0x0005)
#define DFE_agcaoc0_agc_debugbus6                           (DFE_BLK + DBG64SEL + (halDFE_AGCAOCMode0<<BUS_STARTBIT) + 0x0006)
#define DFE_agcaoc0_agc_debugbus7                           (DFE_BLK + DBG64SEL + (halDFE_AGCAOCMode0<<BUS_STARTBIT) + 0x0007)
#define DFE_agcaoc0_agc_debugbus8                           (DFE_BLK + DBG64SEL + (halDFE_AGCAOCMode0<<BUS_STARTBIT) + 0x0008)
#define DFE_agcaoc0_agc_debugbus9                           (DFE_BLK + DBG64SEL + (halDFE_AGCAOCMode0<<BUS_STARTBIT) + 0x0009)
#define DFE_agcaoc0_agc_debugbus10                          (DFE_BLK + DBG64SEL + (halDFE_AGCAOCMode0<<BUS_STARTBIT) + 0x000A)
#define DFE_agcaoc0_agc_debugbus11                          (DFE_BLK + DBG64SEL + (halDFE_AGCAOCMode0<<BUS_STARTBIT) + 0x000B)
#define DFE_agcaoc0_agc_debugbus12                          (DFE_BLK + DBG64SEL + (halDFE_AGCAOCMode0<<BUS_STARTBIT) + 0x000C)
#define DFE_agcaoc0_agc_debugbus13                          (DFE_BLK + DBG64SEL + (halDFE_AGCAOCMode0<<BUS_STARTBIT) + 0x000D)
#define DFE_agcaoc0_agc_debugbus14                          (DFE_BLK + DBG64SEL + (halDFE_AGCAOCMode0<<BUS_STARTBIT) + 0x000E)
#define DFE_agcaoc0_agc_debugbus15                          (DFE_BLK + DBG64SEL + (halDFE_AGCAOCMode0<<BUS_STARTBIT) + 0x000F)
//AGCAOCMode1
#define DFE_agcaoc1_agc_debugbus16                          (DFE_BLK + DBG64SEL + (halDFE_AGCAOCMode1<<BUS_STARTBIT) + 0x0000)
#define DFE_agcaoc1_agc_debugbus17                          (DFE_BLK + DBG64SEL + (halDFE_AGCAOCMode1<<BUS_STARTBIT) + 0x0001)
#define DFE_agcaoc1_agc_debugbus18                          (DFE_BLK + DBG64SEL + (halDFE_AGCAOCMode1<<BUS_STARTBIT) + 0x0002)
#define DFE_agcaoc1_agc_debugbus19                          (DFE_BLK + DBG64SEL + (halDFE_AGCAOCMode1<<BUS_STARTBIT) + 0x0003)
#define DFE_agcaoc1_agc_debugbus20                          (DFE_BLK + DBG64SEL + (halDFE_AGCAOCMode1<<BUS_STARTBIT) + 0x0004)
#define DFE_agcaoc1_agc_debugbus21                          (DFE_BLK + DBG64SEL + (halDFE_AGCAOCMode1<<BUS_STARTBIT) + 0x0005)
#define DFE_agcaoc1_agc_debugbus22                          (DFE_BLK + DBG64SEL + (halDFE_AGCAOCMode1<<BUS_STARTBIT) + 0x0006)
#define DFE_agcaoc1_agc_debugbus23                          (DFE_BLK + DBG64SEL + (halDFE_AGCAOCMode1<<BUS_STARTBIT) + 0x0007)
#define DFE_agcaoc1_agc_debugbus24                          (DFE_BLK + DBG64SEL + (halDFE_AGCAOCMode1<<BUS_STARTBIT) + 0x0008)
#define DFE_agcaoc1_agc_debugbus25                          (DFE_BLK + DBG64SEL + (halDFE_AGCAOCMode1<<BUS_STARTBIT) + 0x0009)
#define DFE_agcaoc1_agc_debugbus26                          (DFE_BLK + DBG64SEL + (halDFE_AGCAOCMode1<<BUS_STARTBIT) + 0x000A)
#define DFE_agcaoc1_agc_debugbus27                          (DFE_BLK + DBG64SEL + (halDFE_AGCAOCMode1<<BUS_STARTBIT) + 0x000B)
#define DFE_agcaoc1_agc_debugbus28                          (DFE_BLK + DBG64SEL + (halDFE_AGCAOCMode1<<BUS_STARTBIT) + 0x000C)
#define DFE_agcaoc1_agc_debugbus29                          (DFE_BLK + DBG64SEL + (halDFE_AGCAOCMode1<<BUS_STARTBIT) + 0x000D)
#define DFE_agcaoc1_agc_debugbus30                          (DFE_BLK + DBG64SEL + (halDFE_AGCAOCMode1<<BUS_STARTBIT) + 0x000E)
#define DFE_agcaoc1_agc_debugbus31                          (DFE_BLK + DBG64SEL + (halDFE_AGCAOCMode1<<BUS_STARTBIT) + 0x000F)
//AGCAOCMode2
#define DFE_agcaoc2_sysclk                                  (DFE_BLK + DBG64SEL + (halDFE_AGCAOCMode2<<BUS_STARTBIT) + 0x0000)
#define DFE_agcaoc2_aoc_debugbus1                           (DFE_BLK + DBG64SEL + (halDFE_AGCAOCMode2<<BUS_STARTBIT) + 0x0001)
#define DFE_agcaoc2_aoc_debugbus2                           (DFE_BLK + DBG64SEL + (halDFE_AGCAOCMode2<<BUS_STARTBIT) + 0x0002)
#define DFE_agcaoc2_aoc_debugbus3                           (DFE_BLK + DBG64SEL + (halDFE_AGCAOCMode2<<BUS_STARTBIT) + 0x0003)
#define DFE_agcaoc2_aoc_debugbus4                           (DFE_BLK + DBG64SEL + (halDFE_AGCAOCMode2<<BUS_STARTBIT) + 0x0004)
#define DFE_agcaoc2_aoc_debugbus5                           (DFE_BLK + DBG64SEL + (halDFE_AGCAOCMode2<<BUS_STARTBIT) + 0x0005)
#define DFE_agcaoc2_aoc_debugbus6                           (DFE_BLK + DBG64SEL + (halDFE_AGCAOCMode2<<BUS_STARTBIT) + 0x0006)
#define DFE_agcaoc2_aoc_debugbus7                           (DFE_BLK + DBG64SEL + (halDFE_AGCAOCMode2<<BUS_STARTBIT) + 0x0007)
#define DFE_agcaoc2_aoc_debugbus8                           (DFE_BLK + DBG64SEL + (halDFE_AGCAOCMode2<<BUS_STARTBIT) + 0x0008)
#define DFE_agcaoc2_aoc_debugbus9                           (DFE_BLK + DBG64SEL + (halDFE_AGCAOCMode2<<BUS_STARTBIT) + 0x0009)
#define DFE_agcaoc2_aoc_debugbus10                          (DFE_BLK + DBG64SEL + (halDFE_AGCAOCMode2<<BUS_STARTBIT) + 0x000A)
#define DFE_agcaoc2_aoc_debugbus11                          (DFE_BLK + DBG64SEL + (halDFE_AGCAOCMode2<<BUS_STARTBIT) + 0x000B)
#define DFE_agcaoc2_aoc_debugbus12                          (DFE_BLK + DBG64SEL + (halDFE_AGCAOCMode2<<BUS_STARTBIT) + 0x000C)
#define DFE_agcaoc2_aoc_debugbus13                          (DFE_BLK + DBG64SEL + (halDFE_AGCAOCMode2<<BUS_STARTBIT) + 0x000D)
#define DFE_agcaoc2_aoc_debugbus14                          (DFE_BLK + DBG64SEL + (halDFE_AGCAOCMode2<<BUS_STARTBIT) + 0x000E)
#define DFE_agcaoc2_aoc_debugbus15                          (DFE_BLK + DBG64SEL + (halDFE_AGCAOCMode2<<BUS_STARTBIT) + 0x000F)
//AGCAOCMode3
#define DFE_agcaoc3_aoc_debugbus16                          (DFE_BLK + DBG64SEL + (halDFE_AGCAOCMode3<<BUS_STARTBIT) + 0x0000)
#define DFE_agcaoc3_aoc_debugbus17                          (DFE_BLK + DBG64SEL + (halDFE_AGCAOCMode3<<BUS_STARTBIT) + 0x0001)
#define DFE_agcaoc3_aoc_debugbus18                          (DFE_BLK + DBG64SEL + (halDFE_AGCAOCMode3<<BUS_STARTBIT) + 0x0002)
#define DFE_agcaoc3_aoc_debugbus19                          (DFE_BLK + DBG64SEL + (halDFE_AGCAOCMode3<<BUS_STARTBIT) + 0x0003)
#define DFE_agcaoc3_aoc_debugbus20                          (DFE_BLK + DBG64SEL + (halDFE_AGCAOCMode3<<BUS_STARTBIT) + 0x0004)
#define DFE_agcaoc3_aoc_debugbus21                          (DFE_BLK + DBG64SEL + (halDFE_AGCAOCMode3<<BUS_STARTBIT) + 0x0005)
#define DFE_agcaoc3_aoc_debugbus22                          (DFE_BLK + DBG64SEL + (halDFE_AGCAOCMode3<<BUS_STARTBIT) + 0x0006)
#define DFE_agcaoc3_aoc_debugbus23                          (DFE_BLK + DBG64SEL + (halDFE_AGCAOCMode3<<BUS_STARTBIT) + 0x0007)
#define DFE_agcaoc3_aoc_debugbus24                          (DFE_BLK + DBG64SEL + (halDFE_AGCAOCMode3<<BUS_STARTBIT) + 0x0008)
#define DFE_agcaoc3_aoc_debugbus25                          (DFE_BLK + DBG64SEL + (halDFE_AGCAOCMode3<<BUS_STARTBIT) + 0x0009)
#define DFE_agcaoc3_aoc_debugbus26                          (DFE_BLK + DBG64SEL + (halDFE_AGCAOCMode3<<BUS_STARTBIT) + 0x000A)
#define DFE_agcaoc3_aoc_debugbus27                          (DFE_BLK + DBG64SEL + (halDFE_AGCAOCMode3<<BUS_STARTBIT) + 0x000B)
#define DFE_agcaoc3_aoc_debugbus28                          (DFE_BLK + DBG64SEL + (halDFE_AGCAOCMode3<<BUS_STARTBIT) + 0x000C)
#define DFE_agcaoc3_aoc_debugbus29                          (DFE_BLK + DBG64SEL + (halDFE_AGCAOCMode3<<BUS_STARTBIT) + 0x000D)
#define DFE_agcaoc3_aoc_debugbus30                          (DFE_BLK + DBG64SEL + (halDFE_AGCAOCMode3<<BUS_STARTBIT) + 0x000E)
#define DFE_agcaoc3_aoc_debugbus31                          (DFE_BLK + DBG64SEL + (halDFE_AGCAOCMode3<<BUS_STARTBIT) + 0x000F)
//AGCAOCMode4
#define DFE_agcaoc4_noisefmin_to_peakdet0                   (DFE_BLK + DBG64SEL + (halDFE_AGCAOCMode4<<BUS_STARTBIT) + 0x0000)
#define DFE_agcaoc4_noisefmin_to_peakdet1                   (DFE_BLK + DBG64SEL + (halDFE_AGCAOCMode4<<BUS_STARTBIT) + 0x0001)
#define DFE_agcaoc4_noisefmin_to_peakdet2                   (DFE_BLK + DBG64SEL + (halDFE_AGCAOCMode4<<BUS_STARTBIT) + 0x0002)
#define DFE_agcaoc4_noisefmin_to_peakdet3                   (DFE_BLK + DBG64SEL + (halDFE_AGCAOCMode4<<BUS_STARTBIT) + 0x0003)
#define DFE_agcaoc4_noisefmin_to_peakdet4                   (DFE_BLK + DBG64SEL + (halDFE_AGCAOCMode4<<BUS_STARTBIT) + 0x0004)
#define DFE_agcaoc4_noisefmin_to_peakdet5                   (DFE_BLK + DBG64SEL + (halDFE_AGCAOCMode4<<BUS_STARTBIT) + 0x0005)
#define DFE_agcaoc4_noisefmin_to_peakdet6                   (DFE_BLK + DBG64SEL + (halDFE_AGCAOCMode4<<BUS_STARTBIT) + 0x0006)
#define DFE_agcaoc4_noisefmin_to_peakdet7                   (DFE_BLK + DBG64SEL + (halDFE_AGCAOCMode4<<BUS_STARTBIT) + 0x0007)
#define DFE_agcaoc4_noisefmax_to_peakdet0                   (DFE_BLK + DBG64SEL + (halDFE_AGCAOCMode4<<BUS_STARTBIT) + 0x0008)
#define DFE_agcaoc4_noisefmax_to_peakdet1                   (DFE_BLK + DBG64SEL + (halDFE_AGCAOCMode4<<BUS_STARTBIT) + 0x0009)
#define DFE_agcaoc4_noisefmax_to_peakdet2                   (DFE_BLK + DBG64SEL + (halDFE_AGCAOCMode4<<BUS_STARTBIT) + 0x000A)
#define DFE_agcaoc4_noisefmax_to_peakdet3                   (DFE_BLK + DBG64SEL + (halDFE_AGCAOCMode4<<BUS_STARTBIT) + 0x000B)
#define DFE_agcaoc4_noisefmax_to_peakdet4                   (DFE_BLK + DBG64SEL + (halDFE_AGCAOCMode4<<BUS_STARTBIT) + 0x000C)
#define DFE_agcaoc4_noisefmax_to_peakdet5                   (DFE_BLK + DBG64SEL + (halDFE_AGCAOCMode4<<BUS_STARTBIT) + 0x000D)
#define DFE_agcaoc4_noisefmax_to_peakdet6                   (DFE_BLK + DBG64SEL + (halDFE_AGCAOCMode4<<BUS_STARTBIT) + 0x000E)
#define DFE_agcaoc4_noisefmax_to_peakdet7                   (DFE_BLK + DBG64SEL + (halDFE_AGCAOCMode4<<BUS_STARTBIT) + 0x000F)
//IcedareaMode0
#define DFE_icedet0_sysclk                                  (DFE_BLK + DBG64SEL + (halDFE_IcedareaMode0<<BUS_STARTBIT) + 0x0000)
#define DFE_icedet0_hf_amplitude0                           (DFE_BLK + DBG64SEL + (halDFE_IcedareaMode0<<BUS_STARTBIT) + 0x0001)
#define DFE_icedet0_hf_amplitude1                           (DFE_BLK + DBG64SEL + (halDFE_IcedareaMode0<<BUS_STARTBIT) + 0x0002)
#define DFE_icedet0_hf_amplitude2                           (DFE_BLK + DBG64SEL + (halDFE_IcedareaMode0<<BUS_STARTBIT) + 0x0003)
#define DFE_icedet0_hf_amplitude3                           (DFE_BLK + DBG64SEL + (halDFE_IcedareaMode0<<BUS_STARTBIT) + 0x0004)
#define DFE_icedet0_hf_amplitude4                           (DFE_BLK + DBG64SEL + (halDFE_IcedareaMode0<<BUS_STARTBIT) + 0x0005)
#define DFE_icedet0_hf_amplitude5                           (DFE_BLK + DBG64SEL + (halDFE_IcedareaMode0<<BUS_STARTBIT) + 0x0006)
#define DFE_icedet0_wobble_amplitude0                       (DFE_BLK + DBG64SEL + (halDFE_IcedareaMode0<<BUS_STARTBIT) + 0x0007)
#define DFE_icedet0_wobble_amplitude1                       (DFE_BLK + DBG64SEL + (halDFE_IcedareaMode0<<BUS_STARTBIT) + 0x0008)
#define DFE_icedet0_wobble_amplitude2                       (DFE_BLK + DBG64SEL + (halDFE_IcedareaMode0<<BUS_STARTBIT) + 0x0009)
#define DFE_icedet0_wobble_amplitude3                       (DFE_BLK + DBG64SEL + (halDFE_IcedareaMode0<<BUS_STARTBIT) + 0x000A)
#define DFE_icedet0_wobble_amplitude4                       (DFE_BLK + DBG64SEL + (halDFE_IcedareaMode0<<BUS_STARTBIT) + 0x000B)
#define DFE_icedet0_wobble_amplitude5                       (DFE_BLK + DBG64SEL + (halDFE_IcedareaMode0<<BUS_STARTBIT) + 0x000C)
#define DFE_icedet0_hf_present                              (DFE_BLK + DBG64SEL + (halDFE_IcedareaMode0<<BUS_STARTBIT) + 0x000D)
#define DFE_icedet0_wobble_present                          (DFE_BLK + DBG64SEL + (halDFE_IcedareaMode0<<BUS_STARTBIT) + 0x000E)
#define DFE_icedet0_icedet_active                           (DFE_BLK + DBG64SEL + (halDFE_IcedareaMode0<<BUS_STARTBIT) + 0x000F)
//IcedareaMode1
#define DFE_icedet1_sysclk                                  (DFE_BLK + DBG64SEL + (halDFE_IcedareaMode1<<BUS_STARTBIT) + 0x0000)
#define DFE_icedet1_iced_area_mask                          (DFE_BLK + DBG64SEL + (halDFE_IcedareaMode1<<BUS_STARTBIT) + 0x0001)
#define DFE_icedet1_icedet_state0                           (DFE_BLK + DBG64SEL + (halDFE_IcedareaMode1<<BUS_STARTBIT) + 0x0002)
#define DFE_icedet1_icedet_state1                           (DFE_BLK + DBG64SEL + (halDFE_IcedareaMode1<<BUS_STARTBIT) + 0x0003)
#define DFE_icedet1_icedet_found_defect                     (DFE_BLK + DBG64SEL + (halDFE_IcedareaMode1<<BUS_STARTBIT) + 0x0004)
#define DFE_icedet1_icedet_found_iced                       (DFE_BLK + DBG64SEL + (halDFE_IcedareaMode1<<BUS_STARTBIT) + 0x0005)
#define DFE_icedet1_icedet_found_written                    (DFE_BLK + DBG64SEL + (halDFE_IcedareaMode1<<BUS_STARTBIT) + 0x0006)
#define DFE_icedet1_index0                                  (DFE_BLK + DBG64SEL + (halDFE_IcedareaMode1<<BUS_STARTBIT) + 0x0007)
#define DFE_icedet1_index1                                  (DFE_BLK + DBG64SEL + (halDFE_IcedareaMode1<<BUS_STARTBIT) + 0x0008)
#define DFE_icedet1_index2                                  (DFE_BLK + DBG64SEL + (halDFE_IcedareaMode1<<BUS_STARTBIT) + 0x0009)
#define DFE_icedet1_index3                                  (DFE_BLK + DBG64SEL + (halDFE_IcedareaMode1<<BUS_STARTBIT) + 0x000A)
#define DFE_icedet1_index4                                  (DFE_BLK + DBG64SEL + (halDFE_IcedareaMode1<<BUS_STARTBIT) + 0x000B)
#define DFE_icedet1_cluster_state0                          (DFE_BLK + DBG64SEL + (halDFE_IcedareaMode1<<BUS_STARTBIT) + 0x000C)
#define DFE_icedet1_cluster_state1                          (DFE_BLK + DBG64SEL + (halDFE_IcedareaMode1<<BUS_STARTBIT) + 0x000D)
#define DFE_icedet1_interrupt_reg                           (DFE_BLK + DBG64SEL + (halDFE_IcedareaMode1<<BUS_STARTBIT) + 0x000E)
#define DFE_icedet1_interrupt_int                           (DFE_BLK + DBG64SEL + (halDFE_IcedareaMode1<<BUS_STARTBIT) + 0x000F)
//IcedareaMode2
#define DFE_icedet2_block_address0                          (DFE_BLK + DBG64SEL + (halDFE_IcedareaMode2<<BUS_STARTBIT) + 0x0000)
#define DFE_icedet2_block_address1                          (DFE_BLK + DBG64SEL + (halDFE_IcedareaMode2<<BUS_STARTBIT) + 0x0001)
#define DFE_icedet2_block_address2                          (DFE_BLK + DBG64SEL + (halDFE_IcedareaMode2<<BUS_STARTBIT) + 0x0002)
#define DFE_icedet2_block_address3                          (DFE_BLK + DBG64SEL + (halDFE_IcedareaMode2<<BUS_STARTBIT) + 0x0003)
#define DFE_icedet2_block_address4                          (DFE_BLK + DBG64SEL + (halDFE_IcedareaMode2<<BUS_STARTBIT) + 0x0004)
#define DFE_icedet2_block_address5                          (DFE_BLK + DBG64SEL + (halDFE_IcedareaMode2<<BUS_STARTBIT) + 0x0005)
#define DFE_icedet2_block_address6                          (DFE_BLK + DBG64SEL + (halDFE_IcedareaMode2<<BUS_STARTBIT) + 0x0006)
#define DFE_icedet2_block_address7                          (DFE_BLK + DBG64SEL + (halDFE_IcedareaMode2<<BUS_STARTBIT) + 0x0007)
#define DFE_icedet2_block_address8                          (DFE_BLK + DBG64SEL + (halDFE_IcedareaMode2<<BUS_STARTBIT) + 0x0008)
#define DFE_icedet2_block_address9                          (DFE_BLK + DBG64SEL + (halDFE_IcedareaMode2<<BUS_STARTBIT) + 0x0009)
#define DFE_icedet2_block_address10                         (DFE_BLK + DBG64SEL + (halDFE_IcedareaMode2<<BUS_STARTBIT) + 0x000A)
#define DFE_icedet2_block_address11                         (DFE_BLK + DBG64SEL + (halDFE_IcedareaMode2<<BUS_STARTBIT) + 0x000B)
#define DFE_icedet2_block_address12                         (DFE_BLK + DBG64SEL + (halDFE_IcedareaMode2<<BUS_STARTBIT) + 0x000C)
#define DFE_icedet2_block_address13                         (DFE_BLK + DBG64SEL + (halDFE_IcedareaMode2<<BUS_STARTBIT) + 0x000D)
#define DFE_icedet2_block_address14                         (DFE_BLK + DBG64SEL + (halDFE_IcedareaMode2<<BUS_STARTBIT) + 0x000E)
#define DFE_icedet2_block_address15                         (DFE_BLK + DBG64SEL + (halDFE_IcedareaMode2<<BUS_STARTBIT) + 0x000F)
//IcedareaMode3
#define DFE_icedet3_block_address16                         (DFE_BLK + DBG64SEL + (halDFE_IcedareaMode3<<BUS_STARTBIT) + 0x0000)
#define DFE_icedet3_block_address17                         (DFE_BLK + DBG64SEL + (halDFE_IcedareaMode3<<BUS_STARTBIT) + 0x0001)
#define DFE_icedet3_block_address18                         (DFE_BLK + DBG64SEL + (halDFE_IcedareaMode3<<BUS_STARTBIT) + 0x0002)
#define DFE_icedet3_block_address19                         (DFE_BLK + DBG64SEL + (halDFE_IcedareaMode3<<BUS_STARTBIT) + 0x0003)
#define DFE_icedet3_block_address20                         (DFE_BLK + DBG64SEL + (halDFE_IcedareaMode3<<BUS_STARTBIT) + 0x0004)
#define DFE_icedet3_block_address21                         (DFE_BLK + DBG64SEL + (halDFE_IcedareaMode3<<BUS_STARTBIT) + 0x0005)
#define DFE_icedet3_block_address22                         (DFE_BLK + DBG64SEL + (halDFE_IcedareaMode3<<BUS_STARTBIT) + 0x0006)
#define DFE_icedet3_block_address23                         (DFE_BLK + DBG64SEL + (halDFE_IcedareaMode3<<BUS_STARTBIT) + 0x0007)
//WDDMode0
#define DFE_wdd0_sysclk                                     (DFE_BLK + DBG64SEL + (halDFE_WDDMode0<<BUS_STARTBIT) + 0x0000)
#define DFE_wdd0_timrwn                                     (DFE_BLK + DBG64SEL + (halDFE_WDDMode0<<BUS_STARTBIT) + 0x0001)
#define DFE_wdd0_hf_sample0                                 (DFE_BLK + DBG64SEL + (halDFE_WDDMode0<<BUS_STARTBIT) + 0x0002)
#define DFE_wdd0_hf_sample1                                 (DFE_BLK + DBG64SEL + (halDFE_WDDMode0<<BUS_STARTBIT) + 0x0003)
#define DFE_wdd0_hf_sample2                                 (DFE_BLK + DBG64SEL + (halDFE_WDDMode0<<BUS_STARTBIT) + 0x0004)
#define DFE_wdd0_hf_sample3                                 (DFE_BLK + DBG64SEL + (halDFE_WDDMode0<<BUS_STARTBIT) + 0x0005)
#define DFE_wdd0_hf_sample4                                 (DFE_BLK + DBG64SEL + (halDFE_WDDMode0<<BUS_STARTBIT) + 0x0006)
#define DFE_wdd0_hf_sample5                                 (DFE_BLK + DBG64SEL + (halDFE_WDDMode0<<BUS_STARTBIT) + 0x0007)
#define DFE_wdd0_hf_sample6                                 (DFE_BLK + DBG64SEL + (halDFE_WDDMode0<<BUS_STARTBIT) + 0x0008)
#define DFE_wdd0_hf_sample7                                 (DFE_BLK + DBG64SEL + (halDFE_WDDMode0<<BUS_STARTBIT) + 0x0009)
#define DFE_wdd0_hf_sample8                                 (DFE_BLK + DBG64SEL + (halDFE_WDDMode0<<BUS_STARTBIT) + 0x000A)
#define DFE_wdd0_hf_sample9                                 (DFE_BLK + DBG64SEL + (halDFE_WDDMode0<<BUS_STARTBIT) + 0x000B)
#define DFE_wdd0_wdd_masked_bd                              (DFE_BLK + DBG64SEL + (halDFE_WDDMode0<<BUS_STARTBIT) + 0x000C)
#define DFE_wdd0_write_defect_detected_bd                   (DFE_BLK + DBG64SEL + (halDFE_WDDMode0<<BUS_STARTBIT) + 0x000D)
#define DFE_wdd0_wdd_masked_wd                              (DFE_BLK + DBG64SEL + (halDFE_WDDMode0<<BUS_STARTBIT) + 0x000E)
#define DFE_wdd0_write_defect_detected_wd                   (DFE_BLK + DBG64SEL + (halDFE_WDDMode0<<BUS_STARTBIT) + 0x000F)
//WDDMode1
#define DFE_wdd1_sysclk                                     (DFE_BLK + DBG64SEL + (halDFE_WDDMode1<<BUS_STARTBIT) + 0x0000)
#define DFE_wdd1_timrwn                                     (DFE_BLK + DBG64SEL + (halDFE_WDDMode1<<BUS_STARTBIT) + 0x0001)
#define DFE_wdd1_wdd_interrupt                              (DFE_BLK + DBG64SEL + (halDFE_WDDMode1<<BUS_STARTBIT) + 0x0002)
#define DFE_wdd1_wdd_filter_output0                         (DFE_BLK + DBG64SEL + (halDFE_WDDMode1<<BUS_STARTBIT) + 0x0003)
#define DFE_wdd1_wdd_filter_output1                         (DFE_BLK + DBG64SEL + (halDFE_WDDMode1<<BUS_STARTBIT) + 0x0004)
#define DFE_wdd1_wdd_filter_output2                         (DFE_BLK + DBG64SEL + (halDFE_WDDMode1<<BUS_STARTBIT) + 0x0005)
#define DFE_wdd1_wdd_filter_output3                         (DFE_BLK + DBG64SEL + (halDFE_WDDMode1<<BUS_STARTBIT) + 0x0006)
#define DFE_wdd1_wdd_filter_output4                         (DFE_BLK + DBG64SEL + (halDFE_WDDMode1<<BUS_STARTBIT) + 0x0007)
#define DFE_wdd1_wdd_filter_output5                         (DFE_BLK + DBG64SEL + (halDFE_WDDMode1<<BUS_STARTBIT) + 0x0008)
#define DFE_wdd1_wdd_filter_output6                         (DFE_BLK + DBG64SEL + (halDFE_WDDMode1<<BUS_STARTBIT) + 0x0009)
#define DFE_wdd1_wdd_filter_output7                         (DFE_BLK + DBG64SEL + (halDFE_WDDMode1<<BUS_STARTBIT) + 0x000A)
#define DFE_wdd1_wdd_masked_bd                              (DFE_BLK + DBG64SEL + (halDFE_WDDMode1<<BUS_STARTBIT) + 0x000B)
#define DFE_wdd1_write_defect_detected_bd                   (DFE_BLK + DBG64SEL + (halDFE_WDDMode1<<BUS_STARTBIT) + 0x000C)
#define DFE_wdd1_wdd_masked_wd                              (DFE_BLK + DBG64SEL + (halDFE_WDDMode1<<BUS_STARTBIT) + 0x000D)
#define DFE_wdd1_write_defect_detected_wd                   (DFE_BLK + DBG64SEL + (halDFE_WDDMode1<<BUS_STARTBIT) + 0x000E)
#define DFE_wdd1_0                                          (DFE_BLK + DBG64SEL + (halDFE_WDDMode1<<BUS_STARTBIT) + 0x000F)
//WDDMode2
#define DFE_wdd2_current_address0                           (DFE_BLK + DBG64SEL + (halDFE_WDDMode2<<BUS_STARTBIT) + 0x0000)
#define DFE_wdd2_current_address1                           (DFE_BLK + DBG64SEL + (halDFE_WDDMode2<<BUS_STARTBIT) + 0x0001)
#define DFE_wdd2_current_address2                           (DFE_BLK + DBG64SEL + (halDFE_WDDMode2<<BUS_STARTBIT) + 0x0002)
#define DFE_wdd2_current_address3                           (DFE_BLK + DBG64SEL + (halDFE_WDDMode2<<BUS_STARTBIT) + 0x0003)
#define DFE_wdd2_current_address4                           (DFE_BLK + DBG64SEL + (halDFE_WDDMode2<<BUS_STARTBIT) + 0x0004)
#define DFE_wdd2_current_address5                           (DFE_BLK + DBG64SEL + (halDFE_WDDMode2<<BUS_STARTBIT) + 0x0005)
#define DFE_wdd2_current_address6                           (DFE_BLK + DBG64SEL + (halDFE_WDDMode2<<BUS_STARTBIT) + 0x0006)
#define DFE_wdd2_current_address7                           (DFE_BLK + DBG64SEL + (halDFE_WDDMode2<<BUS_STARTBIT) + 0x0007)
#define DFE_wdd2_current_address8                           (DFE_BLK + DBG64SEL + (halDFE_WDDMode2<<BUS_STARTBIT) + 0x0008)
#define DFE_wdd2_current_address9                           (DFE_BLK + DBG64SEL + (halDFE_WDDMode2<<BUS_STARTBIT) + 0x0009)
#define DFE_wdd2_current_address10                          (DFE_BLK + DBG64SEL + (halDFE_WDDMode2<<BUS_STARTBIT) + 0x000A)
#define DFE_wdd2_current_address11                          (DFE_BLK + DBG64SEL + (halDFE_WDDMode2<<BUS_STARTBIT) + 0x000B)
#define DFE_wdd2_current_address12                          (DFE_BLK + DBG64SEL + (halDFE_WDDMode2<<BUS_STARTBIT) + 0x000C)
#define DFE_wdd2_current_address13                          (DFE_BLK + DBG64SEL + (halDFE_WDDMode2<<BUS_STARTBIT) + 0x000D)
#define DFE_wdd2_current_address14                          (DFE_BLK + DBG64SEL + (halDFE_WDDMode2<<BUS_STARTBIT) + 0x000E)
#define DFE_wdd2_current_address15                          (DFE_BLK + DBG64SEL + (halDFE_WDDMode2<<BUS_STARTBIT) + 0x000F)
//WDDMode3
#define DFE_wdd3_current_address16                          (DFE_BLK + DBG64SEL + (halDFE_WDDMode3<<BUS_STARTBIT) + 0x0000)
#define DFE_wdd3_current_address17                          (DFE_BLK + DBG64SEL + (halDFE_WDDMode3<<BUS_STARTBIT) + 0x0001)
#define DFE_wdd3_current_address18                          (DFE_BLK + DBG64SEL + (halDFE_WDDMode3<<BUS_STARTBIT) + 0x0002)
#define DFE_wdd3_current_address19                          (DFE_BLK + DBG64SEL + (halDFE_WDDMode3<<BUS_STARTBIT) + 0x0003)
#define DFE_wdd3_current_address20                          (DFE_BLK + DBG64SEL + (halDFE_WDDMode3<<BUS_STARTBIT) + 0x0004)
#define DFE_wdd3_current_address21                          (DFE_BLK + DBG64SEL + (halDFE_WDDMode3<<BUS_STARTBIT) + 0x0005)
#define DFE_wdd3_current_address22                          (DFE_BLK + DBG64SEL + (halDFE_WDDMode3<<BUS_STARTBIT) + 0x0006)
#define DFE_wdd3_current_address23                          (DFE_BLK + DBG64SEL + (halDFE_WDDMode3<<BUS_STARTBIT) + 0x0007)
//MovAvHPFMode0
#define DFE_mahpf0_sysclk                                   (DFE_BLK + DBG64SEL + (halDFE_MovAvHPFMode0<<BUS_STARTBIT) + 0x0000)
#define DFE_mahpf0_start1_or_middle0                        (DFE_BLK + DBG64SEL + (halDFE_MovAvHPFMode0<<BUS_STARTBIT) + 0x0001)
#define DFE_mahpf0_window_size_select0                      (DFE_BLK + DBG64SEL + (halDFE_MovAvHPFMode0<<BUS_STARTBIT) + 0x0002)
#define DFE_mahpf0_window_size_select1                      (DFE_BLK + DBG64SEL + (halDFE_MovAvHPFMode0<<BUS_STARTBIT) + 0x0003)
#define DFE_mahpf0_window_size_select2                      (DFE_BLK + DBG64SEL + (halDFE_MovAvHPFMode0<<BUS_STARTBIT) + 0x0004)
#define DFE_mahpf0_start1_or_middle0_toggle                 (DFE_BLK + DBG64SEL + (halDFE_MovAvHPFMode0<<BUS_STARTBIT) + 0x0005)
#define DFE_mahpf0_window_size_select_pulse                 (DFE_BLK + DBG64SEL + (halDFE_MovAvHPFMode0<<BUS_STARTBIT) + 0x0006)
#define DFE_mahpf0_switch_window_off_header                 (DFE_BLK + DBG64SEL + (halDFE_MovAvHPFMode0<<BUS_STARTBIT) + 0x0007)
#define DFE_mahpf0_switch_toheadernotrec                    (DFE_BLK + DBG64SEL + (halDFE_MovAvHPFMode0<<BUS_STARTBIT) + 0x0008)
#define DFE_mahpf0_clear_window_pulse                       (DFE_BLK + DBG64SEL + (halDFE_MovAvHPFMode0<<BUS_STARTBIT) + 0x0009)
#define DFE_mahpf0_clear_window_pulse_dvdram_mode1          (DFE_BLK + DBG64SEL + (halDFE_MovAvHPFMode0<<BUS_STARTBIT) + 0x000A)
#define DFE_mahpf0_clear_window_pulse_dvdram_mode2          (DFE_BLK + DBG64SEL + (halDFE_MovAvHPFMode0<<BUS_STARTBIT) + 0x000B)
#define DFE_mahpf0_clear_window_pulse_dvdram_mode3          (DFE_BLK + DBG64SEL + (halDFE_MovAvHPFMode0<<BUS_STARTBIT) + 0x000C)
#define DFE_mahpf0_dvdram_setting0                          (DFE_BLK + DBG64SEL + (halDFE_MovAvHPFMode0<<BUS_STARTBIT) + 0x000D)
#define DFE_mahpf0_dvdram_setting1                          (DFE_BLK + DBG64SEL + (halDFE_MovAvHPFMode0<<BUS_STARTBIT) + 0x000E)
#define DFE_mahpf0_moving_avg_hpf_bypass                    (DFE_BLK + DBG64SEL + (halDFE_MovAvHPFMode0<<BUS_STARTBIT) + 0x000F)
//MovAvHPFMode1
#define DFE_mahpf1_sysclk                                   (DFE_BLK + DBG64SEL + (halDFE_MovAvHPFMode1<<BUS_STARTBIT) + 0x0000)
#define DFE_mahpf1_store_offset                             (DFE_BLK + DBG64SEL + (halDFE_MovAvHPFMode1<<BUS_STARTBIT) + 0x0001)
#define DFE_mahpf1_offset0                                  (DFE_BLK + DBG64SEL + (halDFE_MovAvHPFMode1<<BUS_STARTBIT) + 0x0002)
#define DFE_mahpf1_offset1                                  (DFE_BLK + DBG64SEL + (halDFE_MovAvHPFMode1<<BUS_STARTBIT) + 0x0003)
#define DFE_mahpf1_offset2                                  (DFE_BLK + DBG64SEL + (halDFE_MovAvHPFMode1<<BUS_STARTBIT) + 0x0004)
#define DFE_mahpf1_offset3                                  (DFE_BLK + DBG64SEL + (halDFE_MovAvHPFMode1<<BUS_STARTBIT) + 0x0005)
#define DFE_mahpf1_offset4                                  (DFE_BLK + DBG64SEL + (halDFE_MovAvHPFMode1<<BUS_STARTBIT) + 0x0006)
#define DFE_mahpf1_offset5                                  (DFE_BLK + DBG64SEL + (halDFE_MovAvHPFMode1<<BUS_STARTBIT) + 0x0007)
#define DFE_mahpf1_offset6                                  (DFE_BLK + DBG64SEL + (halDFE_MovAvHPFMode1<<BUS_STARTBIT) + 0x0008)
#define DFE_mahpf1_offset7                                  (DFE_BLK + DBG64SEL + (halDFE_MovAvHPFMode1<<BUS_STARTBIT) + 0x0009)
//MovAvHPFMode2
#define DFE_mahpf2_sysclk                                   (DFE_BLK + DBG64SEL + (halDFE_MovAvHPFMode2<<BUS_STARTBIT) + 0x0000)
#define DFE_mahpf2_clear_window_pulse                       (DFE_BLK + DBG64SEL + (halDFE_MovAvHPFMode2<<BUS_STARTBIT) + 0x0001)
#define DFE_mahpf2_clear_window_counter0                    (DFE_BLK + DBG64SEL + (halDFE_MovAvHPFMode2<<BUS_STARTBIT) + 0x0002)
#define DFE_mahpf2_clear_window_counter1                    (DFE_BLK + DBG64SEL + (halDFE_MovAvHPFMode2<<BUS_STARTBIT) + 0x0003)
#define DFE_mahpf2_clear_window_counter2                    (DFE_BLK + DBG64SEL + (halDFE_MovAvHPFMode2<<BUS_STARTBIT) + 0x0004)
#define DFE_mahpf2_clear_window_counter3                    (DFE_BLK + DBG64SEL + (halDFE_MovAvHPFMode2<<BUS_STARTBIT) + 0x0005)
#define DFE_mahpf2_clear_window_counter4                    (DFE_BLK + DBG64SEL + (halDFE_MovAvHPFMode2<<BUS_STARTBIT) + 0x0006)
#define DFE_mahpf2_clear_window_counter5                    (DFE_BLK + DBG64SEL + (halDFE_MovAvHPFMode2<<BUS_STARTBIT) + 0x0007)
#define DFE_mahpf2_clear_window_counter6                    (DFE_BLK + DBG64SEL + (halDFE_MovAvHPFMode2<<BUS_STARTBIT) + 0x0008)
#define DFE_mahpf2_clear_window_counter_dvdram0             (DFE_BLK + DBG64SEL + (halDFE_MovAvHPFMode2<<BUS_STARTBIT) + 0x0009)
#define DFE_mahpf2_clear_window_counter_dvdram1             (DFE_BLK + DBG64SEL + (halDFE_MovAvHPFMode2<<BUS_STARTBIT) + 0x000A)
#define DFE_mahpf2_clear_window_counter_dvdram2             (DFE_BLK + DBG64SEL + (halDFE_MovAvHPFMode2<<BUS_STARTBIT) + 0x000B)
#define DFE_mahpf2_clear_window_counter_dvdram3             (DFE_BLK + DBG64SEL + (halDFE_MovAvHPFMode2<<BUS_STARTBIT) + 0x000C)
#define DFE_mahpf2_clear_window_counter_dvdram4             (DFE_BLK + DBG64SEL + (halDFE_MovAvHPFMode2<<BUS_STARTBIT) + 0x000D)
#define DFE_mahpf2_clear_window_counter_dvdram5             (DFE_BLK + DBG64SEL + (halDFE_MovAvHPFMode2<<BUS_STARTBIT) + 0x000E)
#define DFE_mahpf2_clear_window_counter_dvdram6             (DFE_BLK + DBG64SEL + (halDFE_MovAvHPFMode2<<BUS_STARTBIT) + 0x000F)
//MovAvHPFMode3
#define DFE_mahpf3_output_samples_int00                     (DFE_BLK + DBG64SEL + (halDFE_MovAvHPFMode3<<BUS_STARTBIT) + 0x0000)
#define DFE_mahpf3_output_samples_int01                     (DFE_BLK + DBG64SEL + (halDFE_MovAvHPFMode3<<BUS_STARTBIT) + 0x0001)
#define DFE_mahpf3_output_samples_int02                     (DFE_BLK + DBG64SEL + (halDFE_MovAvHPFMode3<<BUS_STARTBIT) + 0x0002)
#define DFE_mahpf3_output_samples_int03                     (DFE_BLK + DBG64SEL + (halDFE_MovAvHPFMode3<<BUS_STARTBIT) + 0x0003)
#define DFE_mahpf3_output_samples_int04                     (DFE_BLK + DBG64SEL + (halDFE_MovAvHPFMode3<<BUS_STARTBIT) + 0x0004)
#define DFE_mahpf3_output_samples_int05                     (DFE_BLK + DBG64SEL + (halDFE_MovAvHPFMode3<<BUS_STARTBIT) + 0x0005)
#define DFE_mahpf3_output_samples_int06                     (DFE_BLK + DBG64SEL + (halDFE_MovAvHPFMode3<<BUS_STARTBIT) + 0x0006)
#define DFE_mahpf3_output_samples_int07                     (DFE_BLK + DBG64SEL + (halDFE_MovAvHPFMode3<<BUS_STARTBIT) + 0x0007)
#define DFE_mahpf3_output_samples_int10                     (DFE_BLK + DBG64SEL + (halDFE_MovAvHPFMode3<<BUS_STARTBIT) + 0x0008)
#define DFE_mahpf3_output_samples_int11                     (DFE_BLK + DBG64SEL + (halDFE_MovAvHPFMode3<<BUS_STARTBIT) + 0x0009)
#define DFE_mahpf3_output_samples_int12                     (DFE_BLK + DBG64SEL + (halDFE_MovAvHPFMode3<<BUS_STARTBIT) + 0x000A)
#define DFE_mahpf3_output_samples_int13                     (DFE_BLK + DBG64SEL + (halDFE_MovAvHPFMode3<<BUS_STARTBIT) + 0x000B)
#define DFE_mahpf3_output_samples_int14                     (DFE_BLK + DBG64SEL + (halDFE_MovAvHPFMode3<<BUS_STARTBIT) + 0x000C)
#define DFE_mahpf3_output_samples_int15                     (DFE_BLK + DBG64SEL + (halDFE_MovAvHPFMode3<<BUS_STARTBIT) + 0x000D)
#define DFE_mahpf3_output_samples_int16                     (DFE_BLK + DBG64SEL + (halDFE_MovAvHPFMode3<<BUS_STARTBIT) + 0x000E)
#define DFE_mahpf3_output_samples_int17                     (DFE_BLK + DBG64SEL + (halDFE_MovAvHPFMode3<<BUS_STARTBIT) + 0x000F)
//MovAvHPFMode4
#define DFE_mahpf4_output_samples_int20                     (DFE_BLK + DBG64SEL + (halDFE_MovAvHPFMode4<<BUS_STARTBIT) + 0x0000)
#define DFE_mahpf4_output_samples_int21                     (DFE_BLK + DBG64SEL + (halDFE_MovAvHPFMode4<<BUS_STARTBIT) + 0x0001)
#define DFE_mahpf4_output_samples_int22                     (DFE_BLK + DBG64SEL + (halDFE_MovAvHPFMode4<<BUS_STARTBIT) + 0x0002)
#define DFE_mahpf4_output_samples_int23                     (DFE_BLK + DBG64SEL + (halDFE_MovAvHPFMode4<<BUS_STARTBIT) + 0x0003)
#define DFE_mahpf4_output_samples_int24                     (DFE_BLK + DBG64SEL + (halDFE_MovAvHPFMode4<<BUS_STARTBIT) + 0x0004)
#define DFE_mahpf4_output_samples_int25                     (DFE_BLK + DBG64SEL + (halDFE_MovAvHPFMode4<<BUS_STARTBIT) + 0x0005)
#define DFE_mahpf4_output_samples_int26                     (DFE_BLK + DBG64SEL + (halDFE_MovAvHPFMode4<<BUS_STARTBIT) + 0x0006)
#define DFE_mahpf4_output_samples_int27                     (DFE_BLK + DBG64SEL + (halDFE_MovAvHPFMode4<<BUS_STARTBIT) + 0x0007)
#define DFE_mahpf4_output_samples_int30                     (DFE_BLK + DBG64SEL + (halDFE_MovAvHPFMode4<<BUS_STARTBIT) + 0x0008)
#define DFE_mahpf4_output_samples_int31                     (DFE_BLK + DBG64SEL + (halDFE_MovAvHPFMode4<<BUS_STARTBIT) + 0x0009)
#define DFE_mahpf4_output_samples_int32                     (DFE_BLK + DBG64SEL + (halDFE_MovAvHPFMode4<<BUS_STARTBIT) + 0x000A)
#define DFE_mahpf4_output_samples_int33                     (DFE_BLK + DBG64SEL + (halDFE_MovAvHPFMode4<<BUS_STARTBIT) + 0x000B)
#define DFE_mahpf4_output_samples_int34                     (DFE_BLK + DBG64SEL + (halDFE_MovAvHPFMode4<<BUS_STARTBIT) + 0x000C)
#define DFE_mahpf4_output_samples_int35                     (DFE_BLK + DBG64SEL + (halDFE_MovAvHPFMode4<<BUS_STARTBIT) + 0x000D)
#define DFE_mahpf4_output_samples_int36                     (DFE_BLK + DBG64SEL + (halDFE_MovAvHPFMode4<<BUS_STARTBIT) + 0x000E)
#define DFE_mahpf4_output_samples_int37                     (DFE_BLK + DBG64SEL + (halDFE_MovAvHPFMode4<<BUS_STARTBIT) + 0x000F)
//BcaMode0
#define DFE_bca0_bca_filter_debugbus0                       (DFE_BLK + DBG64SEL + (halDFE_BcaMode0<<BUS_STARTBIT) + 0x0000)
#define DFE_bca0_bca_filtered                               (DFE_BLK + DBG64SEL + (halDFE_BcaMode0<<BUS_STARTBIT) + 0x0001)
#define DFE_bca0_bca_data_val_int                           (DFE_BLK + DBG64SEL + (halDFE_BcaMode0<<BUS_STARTBIT) + 0x0002)
#define DFE_bca0_bca_sync_int                               (DFE_BLK + DBG64SEL + (halDFE_BcaMode0<<BUS_STARTBIT) + 0x0003)
#define DFE_bca0_bca_last_int                               (DFE_BLK + DBG64SEL + (halDFE_BcaMode0<<BUS_STARTBIT) + 0x0004)
#define DFE_bca0_bca_first_int                              (DFE_BLK + DBG64SEL + (halDFE_BcaMode0<<BUS_STARTBIT) + 0x0005)
#define DFE_bca0_bca_error_int                              (DFE_BLK + DBG64SEL + (halDFE_BcaMode0<<BUS_STARTBIT) + 0x0006)
#define DFE_bca0_bca_data_int0                              (DFE_BLK + DBG64SEL + (halDFE_BcaMode0<<BUS_STARTBIT) + 0x0007)
#define DFE_bca0_bca_data_int1                              (DFE_BLK + DBG64SEL + (halDFE_BcaMode0<<BUS_STARTBIT) + 0x0008)
#define DFE_bca0_bca_data_int2                              (DFE_BLK + DBG64SEL + (halDFE_BcaMode0<<BUS_STARTBIT) + 0x0009)
#define DFE_bca0_bca_data_int3                              (DFE_BLK + DBG64SEL + (halDFE_BcaMode0<<BUS_STARTBIT) + 0x000A)
#define DFE_bca0_bca_data_int4                              (DFE_BLK + DBG64SEL + (halDFE_BcaMode0<<BUS_STARTBIT) + 0x000B)
#define DFE_bca0_bca_data_int5                              (DFE_BLK + DBG64SEL + (halDFE_BcaMode0<<BUS_STARTBIT) + 0x000C)
#define DFE_bca0_bca_data_int6                              (DFE_BLK + DBG64SEL + (halDFE_BcaMode0<<BUS_STARTBIT) + 0x000D)
#define DFE_bca0_bca_data_int7                              (DFE_BLK + DBG64SEL + (halDFE_BcaMode0<<BUS_STARTBIT) + 0x000E)
#define DFE_bca0_0                                          (DFE_BLK + DBG64SEL + (halDFE_BcaMode0<<BUS_STARTBIT) + 0x000F)
//BcaMode1
#define DFE_bca1_bca_filter_debugbus1                       (DFE_BLK + DBG64SEL + (halDFE_BcaMode1<<BUS_STARTBIT) + 0x0000)
#define DFE_bca1_bca_filter_debugbus2                       (DFE_BLK + DBG64SEL + (halDFE_BcaMode1<<BUS_STARTBIT) + 0x0001)
#define DFE_bca1_bca_filter_debugbus3                       (DFE_BLK + DBG64SEL + (halDFE_BcaMode1<<BUS_STARTBIT) + 0x0002)
#define DFE_bca1_bca_filter_debugbus4                       (DFE_BLK + DBG64SEL + (halDFE_BcaMode1<<BUS_STARTBIT) + 0x0003)
#define DFE_bca1_bca_filter_debugbus5                       (DFE_BLK + DBG64SEL + (halDFE_BcaMode1<<BUS_STARTBIT) + 0x0004)
#define DFE_bca1_bca_filter_debugbus6                       (DFE_BLK + DBG64SEL + (halDFE_BcaMode1<<BUS_STARTBIT) + 0x0005)
#define DFE_bca1_bca_filter_debugbus7                       (DFE_BLK + DBG64SEL + (halDFE_BcaMode1<<BUS_STARTBIT) + 0x0006)
#define DFE_bca1_bca_filter_debugbus8                       (DFE_BLK + DBG64SEL + (halDFE_BcaMode1<<BUS_STARTBIT) + 0x0007)
#define DFE_bca1_bca_filter_debugbus9                       (DFE_BLK + DBG64SEL + (halDFE_BcaMode1<<BUS_STARTBIT) + 0x0008)
#define DFE_bca1_bca_filter_debugbus10                      (DFE_BLK + DBG64SEL + (halDFE_BcaMode1<<BUS_STARTBIT) + 0x0009)
#define DFE_bca1_bca_filter_debugbus11                      (DFE_BLK + DBG64SEL + (halDFE_BcaMode1<<BUS_STARTBIT) + 0x000A)
#define DFE_bca1_bca_filter_debugbus12                      (DFE_BLK + DBG64SEL + (halDFE_BcaMode1<<BUS_STARTBIT) + 0x000B)
#define DFE_bca1_bca_filter_debugbus13                      (DFE_BLK + DBG64SEL + (halDFE_BcaMode1<<BUS_STARTBIT) + 0x000C)
#define DFE_bca1_bca_filter_debugbus14                      (DFE_BLK + DBG64SEL + (halDFE_BcaMode1<<BUS_STARTBIT) + 0x000D)
#define DFE_bca1_bca_filter_debugbus15                      (DFE_BLK + DBG64SEL + (halDFE_BcaMode1<<BUS_STARTBIT) + 0x000E)
#define DFE_bca1_bca_filter_debugbus16                      (DFE_BLK + DBG64SEL + (halDFE_BcaMode1<<BUS_STARTBIT) + 0x000F)
//BcaMode2
#define DFE_bca2_bca_demod_debugbus0                        (DFE_BLK + DBG64SEL + (halDFE_BcaMode2<<BUS_STARTBIT) + 0x0000)
#define DFE_bca2_bca_demod_debugbus1                        (DFE_BLK + DBG64SEL + (halDFE_BcaMode2<<BUS_STARTBIT) + 0x0001)
#define DFE_bca2_bca_demod_debugbus2                        (DFE_BLK + DBG64SEL + (halDFE_BcaMode2<<BUS_STARTBIT) + 0x0002)
#define DFE_bca2_bca_demod_debugbus3                        (DFE_BLK + DBG64SEL + (halDFE_BcaMode2<<BUS_STARTBIT) + 0x0003)
#define DFE_bca2_bca_demod_debugbus4                        (DFE_BLK + DBG64SEL + (halDFE_BcaMode2<<BUS_STARTBIT) + 0x0004)
#define DFE_bca2_bca_demod_debugbus5                        (DFE_BLK + DBG64SEL + (halDFE_BcaMode2<<BUS_STARTBIT) + 0x0005)
#define DFE_bca2_bca_demod_debugbus6                        (DFE_BLK + DBG64SEL + (halDFE_BcaMode2<<BUS_STARTBIT) + 0x0006)
#define DFE_bca2_bca_demod_debugbus7                        (DFE_BLK + DBG64SEL + (halDFE_BcaMode2<<BUS_STARTBIT) + 0x0007)
#define DFE_bca2_bca_demod_debugbus8                        (DFE_BLK + DBG64SEL + (halDFE_BcaMode2<<BUS_STARTBIT) + 0x0008)
#define DFE_bca2_bca_demod_debugbus9                        (DFE_BLK + DBG64SEL + (halDFE_BcaMode2<<BUS_STARTBIT) + 0x0009)
#define DFE_bca2_bca_demod_debugbus10                       (DFE_BLK + DBG64SEL + (halDFE_BcaMode2<<BUS_STARTBIT) + 0x000A)
#define DFE_bca2_bca_demod_debugbus11                       (DFE_BLK + DBG64SEL + (halDFE_BcaMode2<<BUS_STARTBIT) + 0x000B)
#define DFE_bca2_bca_demod_debugbus12                       (DFE_BLK + DBG64SEL + (halDFE_BcaMode2<<BUS_STARTBIT) + 0x000C)
#define DFE_bca2_bca_demod_debugbus13                       (DFE_BLK + DBG64SEL + (halDFE_BcaMode2<<BUS_STARTBIT) + 0x000D)
#define DFE_bca2_bca_demod_debugbus14                       (DFE_BLK + DBG64SEL + (halDFE_BcaMode2<<BUS_STARTBIT) + 0x000E)
//BcaMode3
#define DFE_bca3_sysclk                                     (DFE_BLK + DBG64SEL + (halDFE_BcaMode3<<BUS_STARTBIT) + 0x0000)
#define DFE_bca3_bca_demod_debugbus21                       (DFE_BLK + DBG64SEL + (halDFE_BcaMode3<<BUS_STARTBIT) + 0x0001)
#define DFE_bca3_bca_demod_debugbus22                       (DFE_BLK + DBG64SEL + (halDFE_BcaMode3<<BUS_STARTBIT) + 0x0002)
#define DFE_bca3_bca_demod_debugbus15                       (DFE_BLK + DBG64SEL + (halDFE_BcaMode3<<BUS_STARTBIT) + 0x0003)
#define DFE_bca3_bca_demod_debugbus16                       (DFE_BLK + DBG64SEL + (halDFE_BcaMode3<<BUS_STARTBIT) + 0x0004)
#define DFE_bca3_bca_demod_debugbus17                       (DFE_BLK + DBG64SEL + (halDFE_BcaMode3<<BUS_STARTBIT) + 0x0005)
#define DFE_bca3_bca_demod_debugbus18                       (DFE_BLK + DBG64SEL + (halDFE_BcaMode3<<BUS_STARTBIT) + 0x0006)
#define DFE_bca3_bca_demod_debugbus19                       (DFE_BLK + DBG64SEL + (halDFE_BcaMode3<<BUS_STARTBIT) + 0x0007)
#define DFE_bca3_bca_demod_debugbus20                       (DFE_BLK + DBG64SEL + (halDFE_BcaMode3<<BUS_STARTBIT) + 0x0008)
//BlankEarlyDefectMode0
#define DFE_blankearly0_sysclk                              (DFE_BLK + DBG64SEL + (halDFE_BlankEarlyDefectMode0<<BUS_STARTBIT) + 0x0000)
#define DFE_blankearly0_whitedot_detected                   (DFE_BLK + DBG64SEL + (halDFE_BlankEarlyDefectMode0<<BUS_STARTBIT) + 0x0001)
#define DFE_blankearly0_blackdot_detected                   (DFE_BLK + DBG64SEL + (halDFE_BlankEarlyDefectMode0<<BUS_STARTBIT) + 0x0002)
#define DFE_blankearly0_defect_detected                     (DFE_BLK + DBG64SEL + (halDFE_BlankEarlyDefectMode0<<BUS_STARTBIT) + 0x0003)
#define DFE_blankearly0_blanksignal_detected                (DFE_BLK + DBG64SEL + (halDFE_BlankEarlyDefectMode0<<BUS_STARTBIT) + 0x0004)
#define DFE_blankearly0_early_whitedot_detected             (DFE_BLK + DBG64SEL + (halDFE_BlankEarlyDefectMode0<<BUS_STARTBIT) + 0x0005)
#define DFE_blankearly0_early_blackdot_detected             (DFE_BLK + DBG64SEL + (halDFE_BlankEarlyDefectMode0<<BUS_STARTBIT) + 0x0006)
#define DFE_blankearly0_early_defect_detected               (DFE_BLK + DBG64SEL + (halDFE_BlankEarlyDefectMode0<<BUS_STARTBIT) + 0x0007)
#define DFE_blankearly0_blanksignal_detector_meas0          (DFE_BLK + DBG64SEL + (halDFE_BlankEarlyDefectMode0<<BUS_STARTBIT) + 0x0008)
#define DFE_blankearly0_blanksignal_detector_meas1          (DFE_BLK + DBG64SEL + (halDFE_BlankEarlyDefectMode0<<BUS_STARTBIT) + 0x0009)
#define DFE_blankearly0_blanksignal_detector_meas2          (DFE_BLK + DBG64SEL + (halDFE_BlankEarlyDefectMode0<<BUS_STARTBIT) + 0x000A)
#define DFE_blankearly0_blanksignal_detector_meas3          (DFE_BLK + DBG64SEL + (halDFE_BlankEarlyDefectMode0<<BUS_STARTBIT) + 0x000B)
#define DFE_blankearly0_blanksignal_detector_meas4          (DFE_BLK + DBG64SEL + (halDFE_BlankEarlyDefectMode0<<BUS_STARTBIT) + 0x000C)
#define DFE_blankearly0_blanksignal_detector_meas5          (DFE_BLK + DBG64SEL + (halDFE_BlankEarlyDefectMode0<<BUS_STARTBIT) + 0x000D)
#define DFE_blankearly0_blanksignal_detector_meas6          (DFE_BLK + DBG64SEL + (halDFE_BlankEarlyDefectMode0<<BUS_STARTBIT) + 0x000E)
#define DFE_blankearly0_blanksignal_detector_meas7          (DFE_BLK + DBG64SEL + (halDFE_BlankEarlyDefectMode0<<BUS_STARTBIT) + 0x000F)
//BlankEarlyDefectMode1
#define DFE_blankearly1_early_whitedot_detector_meas0       (DFE_BLK + DBG64SEL + (halDFE_BlankEarlyDefectMode1<<BUS_STARTBIT) + 0x0000)
#define DFE_blankearly1_early_whitedot_detector_meas1       (DFE_BLK + DBG64SEL + (halDFE_BlankEarlyDefectMode1<<BUS_STARTBIT) + 0x0001)
#define DFE_blankearly1_early_whitedot_detector_meas2       (DFE_BLK + DBG64SEL + (halDFE_BlankEarlyDefectMode1<<BUS_STARTBIT) + 0x0002)
#define DFE_blankearly1_early_whitedot_detector_meas3       (DFE_BLK + DBG64SEL + (halDFE_BlankEarlyDefectMode1<<BUS_STARTBIT) + 0x0003)
#define DFE_blankearly1_early_whitedot_detector_meas4       (DFE_BLK + DBG64SEL + (halDFE_BlankEarlyDefectMode1<<BUS_STARTBIT) + 0x0004)
#define DFE_blankearly1_early_whitedot_detector_meas5       (DFE_BLK + DBG64SEL + (halDFE_BlankEarlyDefectMode1<<BUS_STARTBIT) + 0x0005)
#define DFE_blankearly1_early_whitedot_detector_meas6       (DFE_BLK + DBG64SEL + (halDFE_BlankEarlyDefectMode1<<BUS_STARTBIT) + 0x0006)
#define DFE_blankearly1_early_whitedot_detector_meas7       (DFE_BLK + DBG64SEL + (halDFE_BlankEarlyDefectMode1<<BUS_STARTBIT) + 0x0007)
#define DFE_blankearly1_early_blackdot_detector_meas0       (DFE_BLK + DBG64SEL + (halDFE_BlankEarlyDefectMode1<<BUS_STARTBIT) + 0x0008)
#define DFE_blankearly1_early_blackdot_detector_meas1       (DFE_BLK + DBG64SEL + (halDFE_BlankEarlyDefectMode1<<BUS_STARTBIT) + 0x0009)
#define DFE_blankearly1_early_blackdot_detector_meas2       (DFE_BLK + DBG64SEL + (halDFE_BlankEarlyDefectMode1<<BUS_STARTBIT) + 0x000A)
#define DFE_blankearly1_early_blackdot_detector_meas3       (DFE_BLK + DBG64SEL + (halDFE_BlankEarlyDefectMode1<<BUS_STARTBIT) + 0x000B)
#define DFE_blankearly1_early_blackdot_detector_meas4       (DFE_BLK + DBG64SEL + (halDFE_BlankEarlyDefectMode1<<BUS_STARTBIT) + 0x000C)
#define DFE_blankearly1_early_blackdot_detector_meas5       (DFE_BLK + DBG64SEL + (halDFE_BlankEarlyDefectMode1<<BUS_STARTBIT) + 0x000D)
#define DFE_blankearly1_early_blackdot_detector_meas6       (DFE_BLK + DBG64SEL + (halDFE_BlankEarlyDefectMode1<<BUS_STARTBIT) + 0x000E)
#define DFE_blankearly1_early_blackdot_detector_meas7       (DFE_BLK + DBG64SEL + (halDFE_BlankEarlyDefectMode1<<BUS_STARTBIT) + 0x000F)
//BlankEarlyDefectMode2
#define DFE_blankearly2_peakdet_min_in_black_early0         (DFE_BLK + DBG64SEL + (halDFE_BlankEarlyDefectMode2<<BUS_STARTBIT) + 0x0000)
#define DFE_blankearly2_peakdet_min_in_black_early1         (DFE_BLK + DBG64SEL + (halDFE_BlankEarlyDefectMode2<<BUS_STARTBIT) + 0x0001)
#define DFE_blankearly2_peakdet_min_in_black_early2         (DFE_BLK + DBG64SEL + (halDFE_BlankEarlyDefectMode2<<BUS_STARTBIT) + 0x0002)
#define DFE_blankearly2_peakdet_min_in_black_early3         (DFE_BLK + DBG64SEL + (halDFE_BlankEarlyDefectMode2<<BUS_STARTBIT) + 0x0003)
#define DFE_blankearly2_peakdet_min_in_black_early4         (DFE_BLK + DBG64SEL + (halDFE_BlankEarlyDefectMode2<<BUS_STARTBIT) + 0x0004)
#define DFE_blankearly2_peakdet_min_in_black_early5         (DFE_BLK + DBG64SEL + (halDFE_BlankEarlyDefectMode2<<BUS_STARTBIT) + 0x0005)
#define DFE_blankearly2_peakdet_min_in_black_early6         (DFE_BLK + DBG64SEL + (halDFE_BlankEarlyDefectMode2<<BUS_STARTBIT) + 0x0006)
#define DFE_blankearly2_peakdet_min_in_black_early7         (DFE_BLK + DBG64SEL + (halDFE_BlankEarlyDefectMode2<<BUS_STARTBIT) + 0x0007)
#define DFE_blankearly2_peakdet_max_in_black_early0         (DFE_BLK + DBG64SEL + (halDFE_BlankEarlyDefectMode2<<BUS_STARTBIT) + 0x0008)
#define DFE_blankearly2_peakdet_max_in_black_early1         (DFE_BLK + DBG64SEL + (halDFE_BlankEarlyDefectMode2<<BUS_STARTBIT) + 0x0009)
#define DFE_blankearly2_peakdet_max_in_black_early2         (DFE_BLK + DBG64SEL + (halDFE_BlankEarlyDefectMode2<<BUS_STARTBIT) + 0x000A)
#define DFE_blankearly2_peakdet_max_in_black_early3         (DFE_BLK + DBG64SEL + (halDFE_BlankEarlyDefectMode2<<BUS_STARTBIT) + 0x000B)
#define DFE_blankearly2_peakdet_max_in_black_early4         (DFE_BLK + DBG64SEL + (halDFE_BlankEarlyDefectMode2<<BUS_STARTBIT) + 0x000C)
#define DFE_blankearly2_peakdet_max_in_black_early5         (DFE_BLK + DBG64SEL + (halDFE_BlankEarlyDefectMode2<<BUS_STARTBIT) + 0x000D)
#define DFE_blankearly2_peakdet_max_in_black_early6         (DFE_BLK + DBG64SEL + (halDFE_BlankEarlyDefectMode2<<BUS_STARTBIT) + 0x000E)
#define DFE_blankearly2_peakdet_max_in_black_early7         (DFE_BLK + DBG64SEL + (halDFE_BlankEarlyDefectMode2<<BUS_STARTBIT) + 0x000F)
//BlankEarlyDefectMode3
#define DFE_blankearly3_noisefmin_to_peakdet0               (DFE_BLK + DBG64SEL + (halDFE_BlankEarlyDefectMode3<<BUS_STARTBIT) + 0x0000)
#define DFE_blankearly3_noisefmin_to_peakdet1               (DFE_BLK + DBG64SEL + (halDFE_BlankEarlyDefectMode3<<BUS_STARTBIT) + 0x0001)
#define DFE_blankearly3_noisefmin_to_peakdet2               (DFE_BLK + DBG64SEL + (halDFE_BlankEarlyDefectMode3<<BUS_STARTBIT) + 0x0002)
#define DFE_blankearly3_noisefmin_to_peakdet3               (DFE_BLK + DBG64SEL + (halDFE_BlankEarlyDefectMode3<<BUS_STARTBIT) + 0x0003)
#define DFE_blankearly3_noisefmin_to_peakdet4               (DFE_BLK + DBG64SEL + (halDFE_BlankEarlyDefectMode3<<BUS_STARTBIT) + 0x0004)
#define DFE_blankearly3_noisefmin_to_peakdet5               (DFE_BLK + DBG64SEL + (halDFE_BlankEarlyDefectMode3<<BUS_STARTBIT) + 0x0005)
#define DFE_blankearly3_noisefmin_to_peakdet6               (DFE_BLK + DBG64SEL + (halDFE_BlankEarlyDefectMode3<<BUS_STARTBIT) + 0x0006)
#define DFE_blankearly3_noisefmin_to_peakdet7               (DFE_BLK + DBG64SEL + (halDFE_BlankEarlyDefectMode3<<BUS_STARTBIT) + 0x0007)
#define DFE_blankearly3_noisefmax_to_peakdet0               (DFE_BLK + DBG64SEL + (halDFE_BlankEarlyDefectMode3<<BUS_STARTBIT) + 0x0008)
#define DFE_blankearly3_noisefmax_to_peakdet1               (DFE_BLK + DBG64SEL + (halDFE_BlankEarlyDefectMode3<<BUS_STARTBIT) + 0x0009)
#define DFE_blankearly3_noisefmax_to_peakdet2               (DFE_BLK + DBG64SEL + (halDFE_BlankEarlyDefectMode3<<BUS_STARTBIT) + 0x000A)
#define DFE_blankearly3_noisefmax_to_peakdet3               (DFE_BLK + DBG64SEL + (halDFE_BlankEarlyDefectMode3<<BUS_STARTBIT) + 0x000B)
#define DFE_blankearly3_noisefmax_to_peakdet4               (DFE_BLK + DBG64SEL + (halDFE_BlankEarlyDefectMode3<<BUS_STARTBIT) + 0x000C)
#define DFE_blankearly3_noisefmax_to_peakdet5               (DFE_BLK + DBG64SEL + (halDFE_BlankEarlyDefectMode3<<BUS_STARTBIT) + 0x000D)
#define DFE_blankearly3_noisefmax_to_peakdet6               (DFE_BLK + DBG64SEL + (halDFE_BlankEarlyDefectMode3<<BUS_STARTBIT) + 0x000E)
#define DFE_blankearly3_noisefmax_to_peakdet7               (DFE_BLK + DBG64SEL + (halDFE_BlankEarlyDefectMode3<<BUS_STARTBIT) + 0x000F)

/****************************************************************************
* DGB64 BUS WBL BLOCK
****************************************************************************/
//WobblePLLMode1
#define WBL_wobblepll1_sysclk                               (WBL_BLK + DBG64SEL + (halWBL_WobblePLLMode1<<BUS_STARTBIT) + 0x0000) //System clock
#define WBL_wobblepll1_wzerox_pulse_int                     (WBL_BLK + DBG64SEL + (halWBL_WobblePLLMode1<<BUS_STARTBIT) + 0x0001) //Pulse on zerocrossing ref. cosine
#define WBL_wobblepll1_debug_wobble_filtered                (WBL_BLK + DBG64SEL + (halWBL_WobblePLLMode1<<BUS_STARTBIT) + 0x0002) //Filtered wobble - input of the PLL
#define WBL_wobblepll1_debug_wobble_filtered1               (WBL_BLK + DBG64SEL + (halWBL_WobblePLLMode1<<BUS_STARTBIT) + 0x0003) //Filtered wobble - input of the PLL
#define WBL_wobblepll1_debug_wobble_filtered2               (WBL_BLK + DBG64SEL + (halWBL_WobblePLLMode1<<BUS_STARTBIT) + 0x0004) //Filtered wobble - input of the PLL
#define WBL_wobblepll1_debug_wobble_filtered3               (WBL_BLK + DBG64SEL + (halWBL_WobblePLLMode1<<BUS_STARTBIT) + 0x0005) //Filtered wobble - input of the PLL
#define WBL_wobblepll1_debug_wobble_filtered4               (WBL_BLK + DBG64SEL + (halWBL_WobblePLLMode1<<BUS_STARTBIT) + 0x0006) //Filtered wobble - input of the PLL
#define WBL_wobblepll1_debug_wobble_filtered5               (WBL_BLK + DBG64SEL + (halWBL_WobblePLLMode1<<BUS_STARTBIT) + 0x0007) //Filtered wobble - input of the PLL
#define WBL_wobblepll1_debug_wobble_filtered6               (WBL_BLK + DBG64SEL + (halWBL_WobblePLLMode1<<BUS_STARTBIT) + 0x0008) //Filtered wobble - input of the PLL
#define WBL_wobblepll1_debug_wobble_filtered7               (WBL_BLK + DBG64SEL + (halWBL_WobblePLLMode1<<BUS_STARTBIT) + 0x0009) //Filtered wobble - input of the PLL
#define WBL_wobblepll1_wobblepll_in_lock                    (WBL_BLK + DBG64SEL + (halWBL_WobblePLLMode1<<BUS_STARTBIT) + 0x000A) //lock aid lock flag wobble pll
#define WBL_wobblepll1_bd_adip_bit_la_lock_int              (WBL_BLK + DBG64SEL + (halWBL_WobblePLLMode1<<BUS_STARTBIT) + 0x000B) //lock aid lock flag bd adip
#define WBL_wobblepll1_hddvd_rw_wdu_sync_la_lock            (WBL_BLK + DBG64SEL + (halWBL_WobblePLLMode1<<BUS_STARTBIT) + 0x000C) //lock aid lock flag HDDVD rw
#define WBL_wobblepll1_hddvd_ram_wdu_sync_la_lock           (WBL_BLK + DBG64SEL + (halWBL_WobblePLLMode1<<BUS_STARTBIT) + 0x000D) //lock aid lock flag HDDVD ram
#define WBL_wobblepll1_dvd_adip_bsyncinlock_la              (WBL_BLK + DBG64SEL + (halWBL_WobblePLLMode1<<BUS_STARTBIT) + 0x000E) //lock aid lock flag dvd adip
#define WBL_wobblepll1_dvd_lpp_bsyncinlock_la               (WBL_BLK + DBG64SEL + (halWBL_WobblePLLMode1<<BUS_STARTBIT) + 0x000F) //lock aid lock flag dvd lpp
//WobblePLLMode2
#define WBL_wobblepll2_debug_pll_phase_error0               (WBL_BLK + DBG64SEL + (halWBL_WobblePLLMode2<<BUS_STARTBIT) + 0x0000) //phase error of the PLL 15 MSBs
#define WBL_wobblepll2_debug_pll_phase_error1               (WBL_BLK + DBG64SEL + (halWBL_WobblePLLMode2<<BUS_STARTBIT) + 0x0001) //phase error of the PLL 15 MSBs
#define WBL_wobblepll2_debug_pll_phase_error2               (WBL_BLK + DBG64SEL + (halWBL_WobblePLLMode2<<BUS_STARTBIT) + 0x0002) //phase error of the PLL 15 MSBs
#define WBL_wobblepll2_debug_pll_phase_error3               (WBL_BLK + DBG64SEL + (halWBL_WobblePLLMode2<<BUS_STARTBIT) + 0x0003) //phase error of the PLL 15 MSBs
#define WBL_wobblepll2_debug_pll_phase_error4               (WBL_BLK + DBG64SEL + (halWBL_WobblePLLMode2<<BUS_STARTBIT) + 0x0004) //phase error of the PLL 15 MSBs
#define WBL_wobblepll2_debug_pll_phase_error5               (WBL_BLK + DBG64SEL + (halWBL_WobblePLLMode2<<BUS_STARTBIT) + 0x0005) //phase error of the PLL 15 MSBs
#define WBL_wobblepll2_debug_pll_phase_error6               (WBL_BLK + DBG64SEL + (halWBL_WobblePLLMode2<<BUS_STARTBIT) + 0x0006) //phase error of the PLL 15 MSBs
#define WBL_wobblepll2_debug_pll_phase_error7               (WBL_BLK + DBG64SEL + (halWBL_WobblePLLMode2<<BUS_STARTBIT) + 0x0007) //phase error of the PLL 15 MSBs
#define WBL_wobblepll2_debug_pll_phase_error8               (WBL_BLK + DBG64SEL + (halWBL_WobblePLLMode2<<BUS_STARTBIT) + 0x0008) //phase error of the PLL 15 MSBs
#define WBL_wobblepll2_debug_pll_phase_error9               (WBL_BLK + DBG64SEL + (halWBL_WobblePLLMode2<<BUS_STARTBIT) + 0x0009) //phase error of the PLL 15 MSBs
#define WBL_wobblepll2_debug_pll_phase_error10              (WBL_BLK + DBG64SEL + (halWBL_WobblePLLMode2<<BUS_STARTBIT) + 0x000A) //phase error of the PLL 15 MSBs
#define WBL_wobblepll2_debug_pll_phase_error11              (WBL_BLK + DBG64SEL + (halWBL_WobblePLLMode2<<BUS_STARTBIT) + 0x000B) //phase error of the PLL 15 MSBs
#define WBL_wobblepll2_debug_pll_phase_error12              (WBL_BLK + DBG64SEL + (halWBL_WobblePLLMode2<<BUS_STARTBIT) + 0x000C) //phase error of the PLL 15 MSBs
#define WBL_wobblepll2_debug_pll_phase_error13              (WBL_BLK + DBG64SEL + (halWBL_WobblePLLMode2<<BUS_STARTBIT) + 0x000D) //phase error of the PLL 15 MSBs
#define WBL_wobblepll2_debug_pll_phase_error14              (WBL_BLK + DBG64SEL + (halWBL_WobblePLLMode2<<BUS_STARTBIT) + 0x000E) //phase error of the PLL 15 MSBs
#define WBL_wobblepll2_debug_pll_phase_error15              (WBL_BLK + DBG64SEL + (halWBL_WobblePLLMode2<<BUS_STARTBIT) + 0x000F) //phase error of the PLL 15 MSBs
//WobblePLLMode3
#define WBL_wobblepll3_sysclk                               (WBL_BLK + DBG64SEL + (halWBL_WobblePLLMode3<<BUS_STARTBIT) + 0x0000) //System clock
#define WBL_wobblepll3_freq_for_front_int1                  (WBL_BLK + DBG64SEL + (halWBL_WobblePLLMode3<<BUS_STARTBIT) + 0x0001) //freq for the front
#define WBL_wobblepll3_freq_for_front_int2                  (WBL_BLK + DBG64SEL + (halWBL_WobblePLLMode3<<BUS_STARTBIT) + 0x0002) //freq for the front
#define WBL_wobblepll3_freq_for_front_int3                  (WBL_BLK + DBG64SEL + (halWBL_WobblePLLMode3<<BUS_STARTBIT) + 0x0003) //freq for the front
#define WBL_wobblepll3_freq_for_front_int4                  (WBL_BLK + DBG64SEL + (halWBL_WobblePLLMode3<<BUS_STARTBIT) + 0x0004) //freq for the front
#define WBL_wobblepll3_freq_for_front_int5                  (WBL_BLK + DBG64SEL + (halWBL_WobblePLLMode3<<BUS_STARTBIT) + 0x0005) //freq for the front
#define WBL_wobblepll3_freq_for_front_int6                  (WBL_BLK + DBG64SEL + (halWBL_WobblePLLMode3<<BUS_STARTBIT) + 0x0006) //freq for the front
#define WBL_wobblepll3_freq_for_front_int7                  (WBL_BLK + DBG64SEL + (halWBL_WobblePLLMode3<<BUS_STARTBIT) + 0x0007) //freq for the front
#define WBL_wobblepll3_freq_for_front_int8                  (WBL_BLK + DBG64SEL + (halWBL_WobblePLLMode3<<BUS_STARTBIT) + 0x0008) //freq for the front
#define WBL_wobblepll3_freq_for_front_int9                  (WBL_BLK + DBG64SEL + (halWBL_WobblePLLMode3<<BUS_STARTBIT) + 0x0009) //freq for the front
#define WBL_wobblepll3_freq_for_front_int10                 (WBL_BLK + DBG64SEL + (halWBL_WobblePLLMode3<<BUS_STARTBIT) + 0x000A) //freq for the front
#define WBL_wobblepll3_freq_for_front_int11                 (WBL_BLK + DBG64SEL + (halWBL_WobblePLLMode3<<BUS_STARTBIT) + 0x000B) //freq for the front
#define WBL_wobblepll3_freq_for_front_int12                 (WBL_BLK + DBG64SEL + (halWBL_WobblePLLMode3<<BUS_STARTBIT) + 0x000C) //freq for the front
#define WBL_wobblepll3_freq_for_front_int13                 (WBL_BLK + DBG64SEL + (halWBL_WobblePLLMode3<<BUS_STARTBIT) + 0x000D) //freq for the front
#define WBL_wobblepll3_freq_for_front_int14                 (WBL_BLK + DBG64SEL + (halWBL_WobblePLLMode3<<BUS_STARTBIT) + 0x000E) //freq for the front
#define WBL_wobblepll3_freq_for_front_int15                 (WBL_BLK + DBG64SEL + (halWBL_WobblePLLMode3<<BUS_STARTBIT) + 0x000F) //freq for the front
//WobblePLLMode4
#define WBL_wobblepll4_sysclk                               (WBL_BLK + DBG64SEL + (halWBL_WobblePLLMode4<<BUS_STARTBIT) + 0x0000) //System clock
#define WBL_wobblepll4_freq_for_wclk_int1                   (WBL_BLK + DBG64SEL + (halWBL_WobblePLLMode4<<BUS_STARTBIT) + 0x0001) //freq for wclk gen
#define WBL_wobblepll4_freq_for_wclk_int2                   (WBL_BLK + DBG64SEL + (halWBL_WobblePLLMode4<<BUS_STARTBIT) + 0x0002) //freq for wclk gen
#define WBL_wobblepll4_freq_for_wclk_int3                   (WBL_BLK + DBG64SEL + (halWBL_WobblePLLMode4<<BUS_STARTBIT) + 0x0003) //freq for wclk gen
#define WBL_wobblepll4_freq_for_wclk_int4                   (WBL_BLK + DBG64SEL + (halWBL_WobblePLLMode4<<BUS_STARTBIT) + 0x0004) //freq for wclk gen
#define WBL_wobblepll4_freq_for_wclk_int5                   (WBL_BLK + DBG64SEL + (halWBL_WobblePLLMode4<<BUS_STARTBIT) + 0x0005) //freq for wclk gen
#define WBL_wobblepll4_freq_for_wclk_int6                   (WBL_BLK + DBG64SEL + (halWBL_WobblePLLMode4<<BUS_STARTBIT) + 0x0006) //freq for wclk gen
#define WBL_wobblepll4_freq_for_wclk_int7                   (WBL_BLK + DBG64SEL + (halWBL_WobblePLLMode4<<BUS_STARTBIT) + 0x0007) //freq for wclk gen
#define WBL_wobblepll4_freq_for_wclk_int8                   (WBL_BLK + DBG64SEL + (halWBL_WobblePLLMode4<<BUS_STARTBIT) + 0x0008) //freq for wclk gen
#define WBL_wobblepll4_freq_for_wclk_int9                   (WBL_BLK + DBG64SEL + (halWBL_WobblePLLMode4<<BUS_STARTBIT) + 0x0009) //freq for wclk gen
#define WBL_wobblepll4_freq_for_wclk_int10                  (WBL_BLK + DBG64SEL + (halWBL_WobblePLLMode4<<BUS_STARTBIT) + 0x000A) //freq for wclk gen
#define WBL_wobblepll4_freq_for_wclk_int11                  (WBL_BLK + DBG64SEL + (halWBL_WobblePLLMode4<<BUS_STARTBIT) + 0x000B) //freq for wclk gen
#define WBL_wobblepll4_freq_for_wclk_int12                  (WBL_BLK + DBG64SEL + (halWBL_WobblePLLMode4<<BUS_STARTBIT) + 0x000C) //freq for wclk gen
#define WBL_wobblepll4_freq_for_wclk_int13                  (WBL_BLK + DBG64SEL + (halWBL_WobblePLLMode4<<BUS_STARTBIT) + 0x000D) //freq for wclk gen
#define WBL_wobblepll4_freq_for_wclk_int14                  (WBL_BLK + DBG64SEL + (halWBL_WobblePLLMode4<<BUS_STARTBIT) + 0x000E) //freq for wclk gen
#define WBL_wobblepll4_freq_for_wclk_int15                  (WBL_BLK + DBG64SEL + (halWBL_WobblePLLMode4<<BUS_STARTBIT) + 0x000F) //freq for wclk gen
//WobblePLLMode5
#define WBL_wobblepll5_sysclk                               (WBL_BLK + DBG64SEL + (halWBL_WobblePLLMode5<<BUS_STARTBIT) + 0x0000) //System clock
#define WBL_wobblepll5_writeclk                             (WBL_BLK + DBG64SEL + (halWBL_WobblePLLMode5<<BUS_STARTBIT) + 0x0001) //Write clock
#define WBL_wobblepll5_freq_comp_phase_detect0              (WBL_BLK + DBG64SEL + (halWBL_WobblePLLMode5<<BUS_STARTBIT) + 0x0002) //outerloop error
#define WBL_wobblepll5_freq_comp_phase_detect1              (WBL_BLK + DBG64SEL + (halWBL_WobblePLLMode5<<BUS_STARTBIT) + 0x0003) //outerloop error
#define WBL_wobblepll5_freq_comp_phase_detect2              (WBL_BLK + DBG64SEL + (halWBL_WobblePLLMode5<<BUS_STARTBIT) + 0x0004) //outerloop error
#define WBL_wobblepll5_freq_comp_phase_detect3              (WBL_BLK + DBG64SEL + (halWBL_WobblePLLMode5<<BUS_STARTBIT) + 0x0005) //outerloop error
#define WBL_wobblepll5_freq_comp_phase_detect4              (WBL_BLK + DBG64SEL + (halWBL_WobblePLLMode5<<BUS_STARTBIT) + 0x0006) //outerloop error
#define WBL_wobblepll5_freq_comp_phase_detect5              (WBL_BLK + DBG64SEL + (halWBL_WobblePLLMode5<<BUS_STARTBIT) + 0x0007) //outerloop error
#define WBL_wobblepll5_freq_comp_phase_detect6              (WBL_BLK + DBG64SEL + (halWBL_WobblePLLMode5<<BUS_STARTBIT) + 0x0008) //outerloop error
#define WBL_wobblepll5_writeclk_div32or186or69or93_int      (WBL_BLK + DBG64SEL + (halWBL_WobblePLLMode5<<BUS_STARTBIT) + 0x0009) //for outerloop testing - locked to wobble
#define WBL_wobblepll5_freq_compensation0                   (WBL_BLK + DBG64SEL + (halWBL_WobblePLLMode5<<BUS_STARTBIT) + 0x000A) //freq for the outerloop
#define WBL_wobblepll5_freq_compensation1                   (WBL_BLK + DBG64SEL + (halWBL_WobblePLLMode5<<BUS_STARTBIT) + 0x000B) //freq for the outerloop
#define WBL_wobblepll5_freq_compensation2                   (WBL_BLK + DBG64SEL + (halWBL_WobblePLLMode5<<BUS_STARTBIT) + 0x000C) //freq for the outerloop
#define WBL_wobblepll5_freq_compensation3                   (WBL_BLK + DBG64SEL + (halWBL_WobblePLLMode5<<BUS_STARTBIT) + 0x000D) //freq for the outerloop
#define WBL_wobblepll5_freq_compensation4                   (WBL_BLK + DBG64SEL + (halWBL_WobblePLLMode5<<BUS_STARTBIT) + 0x000E) //freq for the outerloop
#define WBL_wobblepll5_freq_compensation5                   (WBL_BLK + DBG64SEL + (halWBL_WobblePLLMode5<<BUS_STARTBIT) + 0x000F) //freq for the outerloop
//WobbleBeatMode1
#define WBL_wobblebeat1_sysclk                              (WBL_BLK + DBG64SEL + (halWBL_WobbleBeatMode1<<BUS_STARTBIT) + 0x0000) //System clock
#define WBL_wobblebeat1_bd_freeze_flywheel                  (WBL_BLK + DBG64SEL + (halWBL_WobbleBeatMode1<<BUS_STARTBIT) + 0x0001) //freeze flywheel based on probabilities
#define WBL_wobblebeat1_debug_bitsync_dev0                  (WBL_BLK + DBG64SEL + (halWBL_WobbleBeatMode1<<BUS_STARTBIT) + 0x0002) //distance deviation of the bitsync
#define WBL_wobblebeat1_debug_bitsync_dev1                  (WBL_BLK + DBG64SEL + (halWBL_WobbleBeatMode1<<BUS_STARTBIT) + 0x0003) //distance deviation of the bitsync
#define WBL_wobblebeat1_debug_bitsync_dev2                  (WBL_BLK + DBG64SEL + (halWBL_WobbleBeatMode1<<BUS_STARTBIT) + 0x0004) //distance deviation of the bitsync
#define WBL_wobblebeat1_debug_bitsync_dev3                  (WBL_BLK + DBG64SEL + (halWBL_WobbleBeatMode1<<BUS_STARTBIT) + 0x0005) //distance deviation of the bitsync
#define WBL_wobblebeat1_debug_bitsync_dev4                  (WBL_BLK + DBG64SEL + (halWBL_WobbleBeatMode1<<BUS_STARTBIT) + 0x0006) //distance deviation of the bitsync
#define WBL_wobblebeat1_debug_bitsync_dev5                  (WBL_BLK + DBG64SEL + (halWBL_WobbleBeatMode1<<BUS_STARTBIT) + 0x0007) //distance deviation of the bitsync
#define WBL_wobblebeat1_debug_bitsync_dev6                  (WBL_BLK + DBG64SEL + (halWBL_WobbleBeatMode1<<BUS_STARTBIT) + 0x0008) //distance deviation of the bitsync
#define WBL_wobblebeat1_bd_adip_bit_confid0                 (WBL_BLK + DBG64SEL + (halWBL_WobbleBeatMode1<<BUS_STARTBIT) + 0x0009) //confidence level bitsync
#define WBL_wobblebeat1_bd_adip_bit_confid1                 (WBL_BLK + DBG64SEL + (halWBL_WobbleBeatMode1<<BUS_STARTBIT) + 0x000A) //confidence level bitsync
#define WBL_wobblebeat1_bd_adip_bit_confid2                 (WBL_BLK + DBG64SEL + (halWBL_WobbleBeatMode1<<BUS_STARTBIT) + 0x000B) //confidence level bitsync
#define WBL_wobblebeat1_bd_adip_bit_confid3                 (WBL_BLK + DBG64SEL + (halWBL_WobbleBeatMode1<<BUS_STARTBIT) + 0x000C) //confidence level bitsync
#define WBL_wobblebeat1_bd_adip_bit_confid4                 (WBL_BLK + DBG64SEL + (halWBL_WobbleBeatMode1<<BUS_STARTBIT) + 0x000D) //confidence level bitsync
#define WBL_wobblebeat1_bd_adip_bit_lock_int                (WBL_BLK + DBG64SEL + (halWBL_WobbleBeatMode1<<BUS_STARTBIT) + 0x000E) //lock bit bitsync
#define WBL_wobblebeat1_bd_adip_bit_la_lock_int             (WBL_BLK + DBG64SEL + (halWBL_WobbleBeatMode1<<BUS_STARTBIT) + 0x000F) //lock bit bitsync for lock aid
//WobbleBeatMode2
#define WBL_wobblebeat2_min_msk_value_shift0_debug0         (WBL_BLK + DBG64SEL + (halWBL_WobbleBeatMode2<<BUS_STARTBIT) + 0x0000) //System clock
#define WBL_wobblebeat2_min_msk_value_shift0_debug1         (WBL_BLK + DBG64SEL + (halWBL_WobbleBeatMode2<<BUS_STARTBIT) + 0x0001) //freeze flywheel based on probabilities
#define WBL_wobblebeat2_min_msk_value_shift0_debug2         (WBL_BLK + DBG64SEL + (halWBL_WobbleBeatMode2<<BUS_STARTBIT) + 0x0002) //distance deviation of the bitsync
#define WBL_wobblebeat2_min_msk_value_shift0_debug3         (WBL_BLK + DBG64SEL + (halWBL_WobbleBeatMode2<<BUS_STARTBIT) + 0x0003) //distance deviation of the bitsync
#define WBL_wobblebeat2_min_msk_value_shift0_debug4         (WBL_BLK + DBG64SEL + (halWBL_WobbleBeatMode2<<BUS_STARTBIT) + 0x0004) //distance deviation of the bitsync
#define WBL_wobblebeat2_min_msk_value_shift0_debug5         (WBL_BLK + DBG64SEL + (halWBL_WobbleBeatMode2<<BUS_STARTBIT) + 0x0005) //distance deviation of the bitsync
#define WBL_wobblebeat2_min_msk_value_shift0_debug6         (WBL_BLK + DBG64SEL + (halWBL_WobbleBeatMode2<<BUS_STARTBIT) + 0x0006) //distance deviation of the bitsync
#define WBL_wobblebeat2_min_msk_value_shift0_debug7         (WBL_BLK + DBG64SEL + (halWBL_WobbleBeatMode2<<BUS_STARTBIT) + 0x0007) //distance deviation of the bitsync
#define WBL_wobblebeat2_min_msk_value_shift1_debug0         (WBL_BLK + DBG64SEL + (halWBL_WobbleBeatMode2<<BUS_STARTBIT) + 0x0008) //distance deviation of the bitsync
#define WBL_wobblebeat2_min_msk_value_shift1_debug1         (WBL_BLK + DBG64SEL + (halWBL_WobbleBeatMode2<<BUS_STARTBIT) + 0x0009) //confidence level bitsync
#define WBL_wobblebeat2_min_msk_value_shift1_debug2         (WBL_BLK + DBG64SEL + (halWBL_WobbleBeatMode2<<BUS_STARTBIT) + 0x000A) //confidence level bitsync
#define WBL_wobblebeat2_min_msk_value_shift1_debug3         (WBL_BLK + DBG64SEL + (halWBL_WobbleBeatMode2<<BUS_STARTBIT) + 0x000B) //confidence level bitsync
#define WBL_wobblebeat2_min_msk_value_shift1_debug4         (WBL_BLK + DBG64SEL + (halWBL_WobbleBeatMode2<<BUS_STARTBIT) + 0x000C) //confidence level bitsync
#define WBL_wobblebeat2_min_msk_value_shift1_debug5         (WBL_BLK + DBG64SEL + (halWBL_WobbleBeatMode2<<BUS_STARTBIT) + 0x000D) //confidence level bitsync
#define WBL_wobblebeat2_min_msk_value_shift1_debug6         (WBL_BLK + DBG64SEL + (halWBL_WobbleBeatMode2<<BUS_STARTBIT) + 0x000E) //lock bit bitsync
#define WBL_wobblebeat2_min_msk_value_shift1_debug7         (WBL_BLK + DBG64SEL + (halWBL_WobbleBeatMode2<<BUS_STARTBIT) + 0x000F) //lock bit bitsync for lock aid
//WobbleBeatMode3
#define WBL_wobblebeat3_sysclk                              (WBL_BLK + DBG64SEL + (halWBL_WobbleBeatMode3<<BUS_STARTBIT) + 0x0000) //System clock
#define WBL_wobblebeat3_bd_adip_word_lock_int               (WBL_BLK + DBG64SEL + (halWBL_WobbleBeatMode3<<BUS_STARTBIT) + 0x0001) //lock bit word sync
#define WBL_wobblebeat3_bd_adip_word_confid0                (WBL_BLK + DBG64SEL + (halWBL_WobbleBeatMode3<<BUS_STARTBIT) + 0x0002) //confidence level word sync
#define WBL_wobblebeat3_bd_adip_word_confid1                (WBL_BLK + DBG64SEL + (halWBL_WobbleBeatMode3<<BUS_STARTBIT) + 0x0003) //confidence level word sync
#define WBL_wobblebeat3_bd_adip_word_confid2                (WBL_BLK + DBG64SEL + (halWBL_WobbleBeatMode3<<BUS_STARTBIT) + 0x0004) //confidence level word sync
#define WBL_wobblebeat3_bd_adip_word_confid3                (WBL_BLK + DBG64SEL + (halWBL_WobbleBeatMode3<<BUS_STARTBIT) + 0x0005) //confidence level word sync
#define WBL_wobblebeat3_bd_adip_addr_lock_int               (WBL_BLK + DBG64SEL + (halWBL_WobbleBeatMode3<<BUS_STARTBIT) + 0x0006) //lock bit address
#define WBL_wobblebeat3_bd_adip_addr_confid0                (WBL_BLK + DBG64SEL + (halWBL_WobbleBeatMode3<<BUS_STARTBIT) + 0x0007) //confidence address
#define WBL_wobblebeat3_bd_adip_addr_confid1                (WBL_BLK + DBG64SEL + (halWBL_WobbleBeatMode3<<BUS_STARTBIT) + 0x0008) //confidence address
#define WBL_wobblebeat3_bd_adip_addr_confid2                (WBL_BLK + DBG64SEL + (halWBL_WobbleBeatMode3<<BUS_STARTBIT) + 0x0009) //confidence address
#define WBL_wobblebeat3_bd_adip_addr_confid3                (WBL_BLK + DBG64SEL + (halWBL_WobbleBeatMode3<<BUS_STARTBIT) + 0x000A) //confidence address
#define WBL_wobblebeat3_bd_adip_reached                     (WBL_BLK + DBG64SEL + (halWBL_WobbleBeatMode3<<BUS_STARTBIT) + 0x000B) //programmed adip address reached
#define WBL_wobblebeat3_bd_adip_bit_resync_int              (WBL_BLK + DBG64SEL + (halWBL_WobbleBeatMode3<<BUS_STARTBIT) + 0x000C) //resync on bit sync flywheel
#define WBL_wobblebeat3_bd_adip_word_resync_int             (WBL_BLK + DBG64SEL + (halWBL_WobbleBeatMode3<<BUS_STARTBIT) + 0x000D) //resync on word sync flywheel
#define WBL_wobblebeat3_bd_adip_address_resync_int          (WBL_BLK + DBG64SEL + (halWBL_WobbleBeatMode3<<BUS_STARTBIT) + 0x000E) //resync on address flywheel
#define WBL_wobblebeat3_bd_adip_missed_sync                 (WBL_BLK + DBG64SEL + (halWBL_WobbleBeatMode3<<BUS_STARTBIT) + 0x000F) //missed bit sync
//WobbleBeatMode4
#define WBL_wobblebeat4_sysclk                              (WBL_BLK + DBG64SEL + (halWBL_WobbleBeatMode4<<BUS_STARTBIT) + 0x0000) //System clock
#define WBL_wobblebeat4_writeclk                            (WBL_BLK + DBG64SEL + (halWBL_WobbleBeatMode4<<BUS_STARTBIT) + 0x0001) //Write clock
#define WBL_wobblebeat4_debug_best_pattern0                 (WBL_BLK + DBG64SEL + (halWBL_WobbleBeatMode4<<BUS_STARTBIT) + 0x0002) //MXLLH pattern
#define WBL_wobblebeat4_debug_best_pattern1                 (WBL_BLK + DBG64SEL + (halWBL_WobbleBeatMode4<<BUS_STARTBIT) + 0x0003) //MXLLH pattern
#define WBL_wobblebeat4_debug_best_pattern2                 (WBL_BLK + DBG64SEL + (halWBL_WobbleBeatMode4<<BUS_STARTBIT) + 0x0004) //MXLLH pattern
#define WBL_wobblebeat4_debug_best_position0                (WBL_BLK + DBG64SEL + (halWBL_WobbleBeatMode4<<BUS_STARTBIT) + 0x0005) //MXLLH position
#define WBL_wobblebeat4_debug_best_position1                (WBL_BLK + DBG64SEL + (halWBL_WobbleBeatMode4<<BUS_STARTBIT) + 0x0006) //MXLLH position
#define WBL_wobblebeat4_debug_best_position2                (WBL_BLK + DBG64SEL + (halWBL_WobbleBeatMode4<<BUS_STARTBIT) + 0x0007) //MXLLH position
#define WBL_wobblebeat4_debug_best_position3                (WBL_BLK + DBG64SEL + (halWBL_WobbleBeatMode4<<BUS_STARTBIT) + 0x0008) //MXLLH position
#define WBL_wobblebeat4_debug_best_position4                (WBL_BLK + DBG64SEL + (halWBL_WobbleBeatMode4<<BUS_STARTBIT) + 0x0009) //MXLLH position
#define WBL_wobblebeat4_debug_best_position5                (WBL_BLK + DBG64SEL + (halWBL_WobbleBeatMode4<<BUS_STARTBIT) + 0x000A) //MXLLH position
#define WBL_wobblebeat4_debug_best_position6                (WBL_BLK + DBG64SEL + (halWBL_WobbleBeatMode4<<BUS_STARTBIT) + 0x000B) //MXLLH position
#define WBL_wobblebeat4_debug_best_position7                (WBL_BLK + DBG64SEL + (halWBL_WobbleBeatMode4<<BUS_STARTBIT) + 0x000C) //MXLLH position
#define WBL_wobblebeat4_debug_best_pattern_enable           (WBL_BLK + DBG64SEL + (halWBL_WobbleBeatMode4<<BUS_STARTBIT) + 0x000D) //MXLLH enable
#define WBL_wobblebeat4_bd_adip_new_wobble_int              (WBL_BLK + DBG64SEL + (halWBL_WobbleBeatMode4<<BUS_STARTBIT) + 0x000E) //interface to encoder
#define WBL_wobblebeat4_bd_adip_flywheel_addr_toggle_int    (WBL_BLK + DBG64SEL + (halWBL_WobbleBeatMode4<<BUS_STARTBIT) + 0x000F) //interface to encoder
//BDFlywheelAddr1
#define WBL_BDFlywheel1_bd_adip_flywheel_addr_int0          (WBL_BLK + DBG64SEL + (halWBL_BDFlywheelAddr1<<BUS_STARTBIT) + 0x0000) //interface to encoder
#define WBL_BDFlywheel1_bd_adip_flywheel_addr_int1          (WBL_BLK + DBG64SEL + (halWBL_BDFlywheelAddr1<<BUS_STARTBIT) + 0x0001) //interface to encoder
#define WBL_BDFlywheel1_bd_adip_flywheel_addr_int2          (WBL_BLK + DBG64SEL + (halWBL_BDFlywheelAddr1<<BUS_STARTBIT) + 0x0002) //interface to encoder
#define WBL_BDFlywheel1_bd_adip_flywheel_addr_int3          (WBL_BLK + DBG64SEL + (halWBL_BDFlywheelAddr1<<BUS_STARTBIT) + 0x0003) //interface to encoder
#define WBL_BDFlywheel1_bd_adip_flywheel_addr_int4          (WBL_BLK + DBG64SEL + (halWBL_BDFlywheelAddr1<<BUS_STARTBIT) + 0x0004) //interface to encoder
#define WBL_BDFlywheel1_bd_adip_flywheel_addr_int5          (WBL_BLK + DBG64SEL + (halWBL_BDFlywheelAddr1<<BUS_STARTBIT) + 0x0005) //interface to encoder
#define WBL_BDFlywheel1_bd_adip_flywheel_addr_int6          (WBL_BLK + DBG64SEL + (halWBL_BDFlywheelAddr1<<BUS_STARTBIT) + 0x0006) //interface to encoder
#define WBL_BDFlywheel1_bd_adip_flywheel_addr_int7          (WBL_BLK + DBG64SEL + (halWBL_BDFlywheelAddr1<<BUS_STARTBIT) + 0x0007) //interface to encoder
#define WBL_BDFlywheel1_bd_adip_flywheel_addr_int8          (WBL_BLK + DBG64SEL + (halWBL_BDFlywheelAddr1<<BUS_STARTBIT) + 0x0008) //interface to encoder
#define WBL_BDFlywheel1_bd_adip_bitsync_cnt_int0            (WBL_BLK + DBG64SEL + (halWBL_BDFlywheelAddr1<<BUS_STARTBIT) + 0x0009) //interface to encoder
#define WBL_BDFlywheel1_bd_adip_bitsync_cnt_int1            (WBL_BLK + DBG64SEL + (halWBL_BDFlywheelAddr1<<BUS_STARTBIT) + 0x000A) //interface to encoder
#define WBL_BDFlywheel1_bd_adip_bitsync_cnt_int2            (WBL_BLK + DBG64SEL + (halWBL_BDFlywheelAddr1<<BUS_STARTBIT) + 0x000B) //interface to encoder
#define WBL_BDFlywheel1_bd_adip_bitsync_cnt_int3            (WBL_BLK + DBG64SEL + (halWBL_BDFlywheelAddr1<<BUS_STARTBIT) + 0x000C) //interface to encoder
#define WBL_BDFlywheel1_bd_adip_bitsync_cnt_int4            (WBL_BLK + DBG64SEL + (halWBL_BDFlywheelAddr1<<BUS_STARTBIT) + 0x000D) //interface to encoder
#define WBL_BDFlywheel1_bd_adip_bitsync_cnt_int5            (WBL_BLK + DBG64SEL + (halWBL_BDFlywheelAddr1<<BUS_STARTBIT) + 0x000E) //interface to encoder
#define WBL_BDFlywheel1_bd_adip_bitsync_cnt_int6            (WBL_BLK + DBG64SEL + (halWBL_BDFlywheelAddr1<<BUS_STARTBIT) + 0x000F) //interface to encoder
//BDFlywheelAddr2
#define WBL_BDFlywheel2_sysclk                              (WBL_BLK + DBG64SEL + (halWBL_BDFlywheelAddr2<<BUS_STARTBIT) + 0x0000) //System clock
#define WBL_BDFlywheel2_bd_adip_wobblenr_cnt_int0           (WBL_BLK + DBG64SEL + (halWBL_BDFlywheelAddr2<<BUS_STARTBIT) + 0x0001) //interface to encoder
#define WBL_BDFlywheel2_bd_adip_wobblenr_cnt_int1           (WBL_BLK + DBG64SEL + (halWBL_BDFlywheelAddr2<<BUS_STARTBIT) + 0x0002) //interface to encoder
#define WBL_BDFlywheel2_bd_adip_wobblenr_cnt_int2           (WBL_BLK + DBG64SEL + (halWBL_BDFlywheelAddr2<<BUS_STARTBIT) + 0x0003) //interface to encoder
#define WBL_BDFlywheel2_bd_adip_wobblenr_cnt_int3           (WBL_BLK + DBG64SEL + (halWBL_BDFlywheelAddr2<<BUS_STARTBIT) + 0x0004) //interface to encoder
#define WBL_BDFlywheel2_bd_adip_wobblenr_cnt_int4           (WBL_BLK + DBG64SEL + (halWBL_BDFlywheelAddr2<<BUS_STARTBIT) + 0x0005) //interface to encoder
#define WBL_BDFlywheel2_bd_adip_wobblenr_cnt_int5           (WBL_BLK + DBG64SEL + (halWBL_BDFlywheelAddr2<<BUS_STARTBIT) + 0x0006) //interface to encoder
#define WBL_BDFlywheel2_wobble_dto_phase_int0               (WBL_BLK + DBG64SEL + (halWBL_BDFlywheelAddr2<<BUS_STARTBIT) + 0x0007) //interface to encoder
#define WBL_BDFlywheel2_wobble_dto_phase_int1               (WBL_BLK + DBG64SEL + (halWBL_BDFlywheelAddr2<<BUS_STARTBIT) + 0x0008) //interface to encoder
#define WBL_BDFlywheel2_wobble_dto_phase_int2               (WBL_BLK + DBG64SEL + (halWBL_BDFlywheelAddr2<<BUS_STARTBIT) + 0x0009) //interface to encoder
#define WBL_BDFlywheel2_wobble_dto_phase_int3               (WBL_BLK + DBG64SEL + (halWBL_BDFlywheelAddr2<<BUS_STARTBIT) + 0x000A) //interface to encoder
#define WBL_BDFlywheel2_wobble_dto_phase_int4               (WBL_BLK + DBG64SEL + (halWBL_BDFlywheelAddr2<<BUS_STARTBIT) + 0x000B) //interface to encoder
#define WBL_BDFlywheel2_wobble_dto_phase_int5               (WBL_BLK + DBG64SEL + (halWBL_BDFlywheelAddr2<<BUS_STARTBIT) + 0x000C) //interface to encoder
#define WBL_BDFlywheel2_wobble_dto_phase_int6               (WBL_BLK + DBG64SEL + (halWBL_BDFlywheelAddr2<<BUS_STARTBIT) + 0x000D) //interface to encoder
#define WBL_BDFlywheel2_wobble_dto_phase_int7               (WBL_BLK + DBG64SEL + (halWBL_BDFlywheelAddr2<<BUS_STARTBIT) + 0x000E) //interface to encoder
#define WBL_BDFlywheel2_wobble_dto_phase_int8               (WBL_BLK + DBG64SEL + (halWBL_BDFlywheelAddr2<<BUS_STARTBIT) + 0x000F) //interface to encoder
//BDDecodedAddr
#define WBL_BDDecoded_sysclk                                (WBL_BLK + DBG64SEL + (halWBL_BDDecodedAddr<<BUS_STARTBIT) + 0x0000) //System clock
#define WBL_BDDecoded_bd_adip_nibble_corrected3             (WBL_BLK + DBG64SEL + (halWBL_BDDecodedAddr<<BUS_STARTBIT) + 0x0001) //adip data nibble
#define WBL_BDDecoded_bd_adip_nibble_corrected2             (WBL_BLK + DBG64SEL + (halWBL_BDDecodedAddr<<BUS_STARTBIT) + 0x0002) //adip data nibble
#define WBL_BDDecoded_bd_adip_nibble_corrected1             (WBL_BLK + DBG64SEL + (halWBL_BDDecodedAddr<<BUS_STARTBIT) + 0x0003) //adip data nibble
#define WBL_BDDecoded_bd_adip_nibble_corrected0             (WBL_BLK + DBG64SEL + (halWBL_BDDecodedAddr<<BUS_STARTBIT) + 0x0004) //adip data nibble
#define WBL_BDDecoded_bd_adip_nibble_start_corrected        (WBL_BLK + DBG64SEL + (halWBL_BDDecodedAddr<<BUS_STARTBIT) + 0x0005) //decoded flag
#define WBL_BDDecoded_bd_adip_n_errors2                     (WBL_BLK + DBG64SEL + (halWBL_BDDecodedAddr<<BUS_STARTBIT) + 0x0006) //decoded addresses
#define WBL_BDDecoded_bd_adip_n_errors1                     (WBL_BLK + DBG64SEL + (halWBL_BDDecodedAddr<<BUS_STARTBIT) + 0x0007) //decoded addresses
#define WBL_BDDecoded_bd_adip_n_errors0                     (WBL_BLK + DBG64SEL + (halWBL_BDDecodedAddr<<BUS_STARTBIT) + 0x0008) //decoded addresses
#define WBL_BDDecoded_bd_adip_correctable                   (WBL_BLK + DBG64SEL + (halWBL_BDDecodedAddr<<BUS_STARTBIT) + 0x0009) //decoded addresses
#define WBL_BDDecoded_bd_adip_error_free                    (WBL_BLK + DBG64SEL + (halWBL_BDDecodedAddr<<BUS_STARTBIT) + 0x000A) //decoded addresses
#define WBL_BDDecoded_bd_adip_word_start_int                (WBL_BLK + DBG64SEL + (halWBL_BDDecodedAddr<<BUS_STARTBIT) + 0x000B) //decoded addresses
#define WBL_BDDecoded_bd_adip_uncorrectable                 (WBL_BLK + DBG64SEL + (halWBL_BDDecodedAddr<<BUS_STARTBIT) + 0x000C) //decoded addresses
#define WBL_BDDecoded_bd_adip_decoded_data2                 (WBL_BLK + DBG64SEL + (halWBL_BDDecodedAddr<<BUS_STARTBIT) + 0x000D) //decoded addresses
#define WBL_BDDecoded_bd_adip_decoded_data1                 (WBL_BLK + DBG64SEL + (halWBL_BDDecodedAddr<<BUS_STARTBIT) + 0x000E) //decoded addresses
#define WBL_BDDecoded_bd_adip_decoded_data0                 (WBL_BLK + DBG64SEL + (halWBL_BDDecodedAddr<<BUS_STARTBIT) + 0x000F) //decoded addresses
//DVDPFlywheelAddr1
#define WBL_DVDPFlywheel1_sysclk                            (WBL_BLK + DBG64SEL + (halWBL_DVDPFlywheelAddr1<<BUS_STARTBIT) + 0x0000) //System clock
#define WBL_DVDPFlywheel1_dvd_adip_reached                  (WBL_BLK + DBG64SEL + (halWBL_DVDPFlywheelAddr1<<BUS_STARTBIT) + 0x0001) //programmed adip address reached
#define WBL_DVDPFlywheel1_dvd_block_address_valid_int       (WBL_BLK + DBG64SEL + (halWBL_DVDPFlywheelAddr1<<BUS_STARTBIT) + 0x0002) //first wobble enable
#define WBL_DVDPFlywheel1_dvd_bsyncinlock_int               (WBL_BLK + DBG64SEL + (halWBL_DVDPFlywheelAddr1<<BUS_STARTBIT) + 0x0003) //lock bit bit sync
#define WBL_DVDPFlywheel1_dvd_wsyncinlock_int               (WBL_BLK + DBG64SEL + (halWBL_DVDPFlywheelAddr1<<BUS_STARTBIT) + 0x0004) //lock bit word sync
#define WBL_DVDPFlywheel1_dvd_addressinlock_int             (WBL_BLK + DBG64SEL + (halWBL_DVDPFlywheelAddr1<<BUS_STARTBIT) + 0x0005) //lock bit address flywheel
#define WBL_DVDPFlywheel1_dvd_wordsync_int                  (WBL_BLK + DBG64SEL + (halWBL_DVDPFlywheelAddr1<<BUS_STARTBIT) + 0x0006) //adip bitsync
#define WBL_DVDPFlywheel1_dvd_adip_missed_sync              (WBL_BLK + DBG64SEL + (halWBL_DVDPFlywheelAddr1<<BUS_STARTBIT) + 0x0007) //missed bit sync
#define WBL_DVDPFlywheel1_dvd_adip_bit_resync               (WBL_BLK + DBG64SEL + (halWBL_DVDPFlywheelAddr1<<BUS_STARTBIT) + 0x0008) //resync on bit sync flywheel
#define WBL_DVDPFlywheel1_dvd_adip_word_resync              (WBL_BLK + DBG64SEL + (halWBL_DVDPFlywheelAddr1<<BUS_STARTBIT) + 0x0009) //resync on word sync flywheel
#define WBL_DVDPFlywheel1_dvd_adip_address_resync           (WBL_BLK + DBG64SEL + (halWBL_DVDPFlywheelAddr1<<BUS_STARTBIT) + 0x000A) //resync on address flywheel
#define WBL_DVDPFlywheel1_dvd_adip_bsyncinlock_la           (WBL_BLK + DBG64SEL + (halWBL_DVDPFlywheelAddr1<<BUS_STARTBIT) + 0x000B) //lock bit bit sync for lock aid
#define WBL_DVDPFlywheel1_dvd_adip_bsync_confidence0        (WBL_BLK + DBG64SEL + (halWBL_DVDPFlywheelAddr1<<BUS_STARTBIT) + 0x000C) //confidence level bit sync flywheel
#define WBL_DVDPFlywheel1_dvd_adip_bsync_confidence1        (WBL_BLK + DBG64SEL + (halWBL_DVDPFlywheelAddr1<<BUS_STARTBIT) + 0x000D) //confidence level bit sync flywheel
#define WBL_DVDPFlywheel1_dvd_adip_bsync_confidence2        (WBL_BLK + DBG64SEL + (halWBL_DVDPFlywheelAddr1<<BUS_STARTBIT) + 0x000E) //confidence level bit sync flywheel
#define WBL_DVDPFlywheel1_dvd_adip_bsync_confidence3        (WBL_BLK + DBG64SEL + (halWBL_DVDPFlywheelAddr1<<BUS_STARTBIT) + 0x000F) //confidence level bit sync flywheel
//DVDPFlywheelAddr2
#define WBL_DVDPFlywheel2_sysclk                            (WBL_BLK + DBG64SEL + (halWBL_DVDPFlywheelAddr2<<BUS_STARTBIT) + 0x0000) //System clock
#define WBL_DVDPFlywheel2_dvd_block_address_int0            (WBL_BLK + DBG64SEL + (halWBL_DVDPFlywheelAddr2<<BUS_STARTBIT) + 0x0001) //dvd block address flywheel
#define WBL_DVDPFlywheel2_dvd_block_address_int1            (WBL_BLK + DBG64SEL + (halWBL_DVDPFlywheelAddr2<<BUS_STARTBIT) + 0x0002) //dvd block address flywheel
#define WBL_DVDPFlywheel2_dvd_block_address_int2            (WBL_BLK + DBG64SEL + (halWBL_DVDPFlywheelAddr2<<BUS_STARTBIT) + 0x0003) //dvd block address flywheel
#define WBL_DVDPFlywheel2_dvd_block_address_int3            (WBL_BLK + DBG64SEL + (halWBL_DVDPFlywheelAddr2<<BUS_STARTBIT) + 0x0004) //dvd block address flywheel
#define WBL_DVDPFlywheel2_dvd_block_address_int4            (WBL_BLK + DBG64SEL + (halWBL_DVDPFlywheelAddr2<<BUS_STARTBIT) + 0x0005) //dvd block address flywheel
#define WBL_DVDPFlywheel2_dvd_block_address_int5            (WBL_BLK + DBG64SEL + (halWBL_DVDPFlywheelAddr2<<BUS_STARTBIT) + 0x0006) //dvd block address flywheel
#define WBL_DVDPFlywheel2_dvd_block_address_int6            (WBL_BLK + DBG64SEL + (halWBL_DVDPFlywheelAddr2<<BUS_STARTBIT) + 0x0007) //dvd block address flywheel
#define WBL_DVDPFlywheel2_dvd_adip_wsync_confidence0        (WBL_BLK + DBG64SEL + (halWBL_DVDPFlywheelAddr2<<BUS_STARTBIT) + 0x0008) //confidence level word sync flywheel
#define WBL_DVDPFlywheel2_dvd_adip_wsync_confidence1        (WBL_BLK + DBG64SEL + (halWBL_DVDPFlywheelAddr2<<BUS_STARTBIT) + 0x0009) //confidence level word sync flywheel
#define WBL_DVDPFlywheel2_dvd_adip_wsync_confidence2        (WBL_BLK + DBG64SEL + (halWBL_DVDPFlywheelAddr2<<BUS_STARTBIT) + 0x000A) //confidence level word sync flywheel
#define WBL_DVDPFlywheel2_dvd_adip_wsync_confidence3        (WBL_BLK + DBG64SEL + (halWBL_DVDPFlywheelAddr2<<BUS_STARTBIT) + 0x000B) //confidence level word sync flywheel
#define WBL_DVDPFlywheel2_dvd_adip_addr_confidence0         (WBL_BLK + DBG64SEL + (halWBL_DVDPFlywheelAddr2<<BUS_STARTBIT) + 0x000C) //confidence level address flywheel
#define WBL_DVDPFlywheel2_dvd_adip_addr_confidence1         (WBL_BLK + DBG64SEL + (halWBL_DVDPFlywheelAddr2<<BUS_STARTBIT) + 0x000D) //confidence level address flywheel
#define WBL_DVDPFlywheel2_dvd_adip_addr_confidence2         (WBL_BLK + DBG64SEL + (halWBL_DVDPFlywheelAddr2<<BUS_STARTBIT) + 0x000E) //confidence level address flywheel
#define WBL_DVDPFlywheel2_dvd_adip_addr_confidence3         (WBL_BLK + DBG64SEL + (halWBL_DVDPFlywheelAddr2<<BUS_STARTBIT) + 0x000F) //confidence level address flywheel
//DVDPDecodedAddr1
#define WBL_DVDPDecoded1_dvd_adip_aux_data0                 (WBL_BLK + DBG64SEL + (halWBL_DVDPDecodedAddr1<<BUS_STARTBIT) + 0x0000) //Auxiliary data
#define WBL_DVDPDecoded1_dvd_adip_aux_data1                 (WBL_BLK + DBG64SEL + (halWBL_DVDPDecodedAddr1<<BUS_STARTBIT) + 0x0001) //Auxiliary data
#define WBL_DVDPDecoded1_dvd_adip_aux_data2                 (WBL_BLK + DBG64SEL + (halWBL_DVDPDecodedAddr1<<BUS_STARTBIT) + 0x0002) //Auxiliary data
#define WBL_DVDPDecoded1_dvd_adip_aux_data3                 (WBL_BLK + DBG64SEL + (halWBL_DVDPDecodedAddr1<<BUS_STARTBIT) + 0x0003) //Auxiliary data
#define WBL_DVDPDecoded1_dvd_adip_aux_data4                 (WBL_BLK + DBG64SEL + (halWBL_DVDPDecodedAddr1<<BUS_STARTBIT) + 0x0004) //Auxiliary data
#define WBL_DVDPDecoded1_dvd_adip_aux_data5                 (WBL_BLK + DBG64SEL + (halWBL_DVDPDecodedAddr1<<BUS_STARTBIT) + 0x0005) //Auxiliary data
#define WBL_DVDPDecoded1_dvd_adip_aux_data6                 (WBL_BLK + DBG64SEL + (halWBL_DVDPDecodedAddr1<<BUS_STARTBIT) + 0x0006) //Auxiliary data
#define WBL_DVDPDecoded1_dvd_adip_aux_data7                 (WBL_BLK + DBG64SEL + (halWBL_DVDPDecodedAddr1<<BUS_STARTBIT) + 0x0007) //Auxiliary data
#define WBL_DVDPDecoded1_dvd_adip_error_corrected           (WBL_BLK + DBG64SEL + (halWBL_DVDPDecodedAddr1<<BUS_STARTBIT) + 0x0008) //error corrected flag
#define WBL_DVDPDecoded1_dvd_adip_uncorrectable             (WBL_BLK + DBG64SEL + (halWBL_DVDPDecodedAddr1<<BUS_STARTBIT) + 0x0009) //uncorrectable flag
#define WBL_DVDPDecoded1_dvd_adip_missed_sync               (WBL_BLK + DBG64SEL + (halWBL_DVDPDecodedAddr1<<BUS_STARTBIT) + 0x000A) //missed bit sync
#define WBL_DVDPDecoded1_dvd_adip_bit_resync                (WBL_BLK + DBG64SEL + (halWBL_DVDPDecodedAddr1<<BUS_STARTBIT) + 0x000B) //resync on bit sync flywheel
#define WBL_DVDPDecoded1_dvd_adip_word_resync               (WBL_BLK + DBG64SEL + (halWBL_DVDPDecodedAddr1<<BUS_STARTBIT) + 0x000C) //resync on word sync flywheel
#define WBL_DVDPDecoded1_dvd_adip_address_resync            (WBL_BLK + DBG64SEL + (halWBL_DVDPDecodedAddr1<<BUS_STARTBIT) + 0x000D) //confidence level bit sync flywheel
#define WBL_DVDPDecoded1_dvd_adip_bsyncinlock               (WBL_BLK + DBG64SEL + (halWBL_DVDPDecodedAddr1<<BUS_STARTBIT) + 0x000E) //lock bit bit sync
#define WBL_DVDPDecoded1_dvd_adip_wsyncinlock               (WBL_BLK + DBG64SEL + (halWBL_DVDPDecodedAddr1<<BUS_STARTBIT) + 0x000F) //lock bit word sync
//DVDPDecodedAddr2
#define WBL_DVDPDecoded2_sysclk                             (WBL_BLK + DBG64SEL + (halWBL_DVDPDecodedAddr2<<BUS_STARTBIT) + 0x0000) //System clock
#define WBL_DVDPDecoded2_dvd_adip_block_address_decoded0    (WBL_BLK + DBG64SEL + (halWBL_DVDPDecodedAddr2<<BUS_STARTBIT) + 0x0001) //Decoded adip address
#define WBL_DVDPDecoded2_dvd_adip_block_address_decoded1    (WBL_BLK + DBG64SEL + (halWBL_DVDPDecodedAddr2<<BUS_STARTBIT) + 0x0002) //Decoded adip address
#define WBL_DVDPDecoded2_dvd_adip_block_address_decoded2    (WBL_BLK + DBG64SEL + (halWBL_DVDPDecodedAddr2<<BUS_STARTBIT) + 0x0003) //Decoded adip address
#define WBL_DVDPDecoded2_dvd_adip_block_address_decoded3    (WBL_BLK + DBG64SEL + (halWBL_DVDPDecodedAddr2<<BUS_STARTBIT) + 0x0004) //Decoded adip address
#define WBL_DVDPDecoded2_dvd_adip_block_address_decoded4    (WBL_BLK + DBG64SEL + (halWBL_DVDPDecodedAddr2<<BUS_STARTBIT) + 0x0005) //Decoded adip address
#define WBL_DVDPDecoded2_dvd_adip_block_address_decoded5    (WBL_BLK + DBG64SEL + (halWBL_DVDPDecodedAddr2<<BUS_STARTBIT) + 0x0006) //Decoded adip address
#define WBL_DVDPDecoded2_dvd_adip_block_address_decoded6    (WBL_BLK + DBG64SEL + (halWBL_DVDPDecodedAddr2<<BUS_STARTBIT) + 0x0007) //Decoded adip address
#define WBL_DVDPDecoded2_dvd_adip_block_address_decoded7    (WBL_BLK + DBG64SEL + (halWBL_DVDPDecodedAddr2<<BUS_STARTBIT) + 0x0008) //Decoded adip address
#define WBL_DVDPDecoded2_dvd_adip_block_address_decoded8    (WBL_BLK + DBG64SEL + (halWBL_DVDPDecodedAddr2<<BUS_STARTBIT) + 0x0009) //Decoded adip address
#define WBL_DVDPDecoded2_dvd_adip_block_address_decoded9    (WBL_BLK + DBG64SEL + (halWBL_DVDPDecodedAddr2<<BUS_STARTBIT) + 0x000A) //Decoded adip address
#define WBL_DVDPDecoded2_dvd_adip_block_address_decoded10   (WBL_BLK + DBG64SEL + (halWBL_DVDPDecodedAddr2<<BUS_STARTBIT) + 0x000B) //Decoded adip address
#define WBL_DVDPDecoded2_dvd_adip_block_address_decoded11   (WBL_BLK + DBG64SEL + (halWBL_DVDPDecodedAddr2<<BUS_STARTBIT) + 0x000C) //Decoded adip address
#define WBL_DVDPDecoded2_dvd_adip_block_address_decoded12   (WBL_BLK + DBG64SEL + (halWBL_DVDPDecodedAddr2<<BUS_STARTBIT) + 0x000D) //Decoded adip address
#define WBL_DVDPDecoded2_dvd_adip_errors0                   (WBL_BLK + DBG64SEL + (halWBL_DVDPDecodedAddr2<<BUS_STARTBIT) + 0x000E) //Amount of errors
#define WBL_DVDPDecoded2_dvd_adip_errors1                   (WBL_BLK + DBG64SEL + (halWBL_DVDPDecodedAddr2<<BUS_STARTBIT) + 0x000F) //Amount of errors
//DVDMFlywheelAddr1
#define WBL_DVDMFlywheel1_sysclk                            (WBL_BLK + DBG64SEL + (halWBL_DVDMFlywheelAddr1<<BUS_STARTBIT) + 0x0000) //System clock
#define WBL_DVDMFlywheel1_writeclk                          (WBL_BLK + DBG64SEL + (halWBL_DVDMFlywheelAddr1<<BUS_STARTBIT) + 0x0001) //Write clock
#define WBL_DVDMFlywheel1_dvd_block_address_valid_int       (WBL_BLK + DBG64SEL + (halWBL_DVDMFlywheelAddr1<<BUS_STARTBIT) + 0x0002) //fisrt wobble of dvd block address
#define WBL_DVDMFlywheel1_dvd_bsyncinlock_int               (WBL_BLK + DBG64SEL + (halWBL_DVDMFlywheelAddr1<<BUS_STARTBIT) + 0x0003) //lock bit bit sync
#define WBL_DVDMFlywheel1_dvd_wsyncinlock_int               (WBL_BLK + DBG64SEL + (halWBL_DVDMFlywheelAddr1<<BUS_STARTBIT) + 0x0004) //lock bit word sync
#define WBL_DVDMFlywheel1_dvd_addressinlock_int             (WBL_BLK + DBG64SEL + (halWBL_DVDMFlywheelAddr1<<BUS_STARTBIT) + 0x0005) //lock bit address flywheel
#define WBL_DVDMFlywheel1_dvd_wordsync_int                  (WBL_BLK + DBG64SEL + (halWBL_DVDMFlywheelAddr1<<BUS_STARTBIT) + 0x0006) //lpp bitsync
#define WBL_DVDMFlywheel1_dvd_lpp_bit_resync                (WBL_BLK + DBG64SEL + (halWBL_DVDMFlywheelAddr1<<BUS_STARTBIT) + 0x0007) //resync on bit sync flywheel
#define WBL_DVDMFlywheel1_dvd_lpp_word_resync               (WBL_BLK + DBG64SEL + (halWBL_DVDMFlywheelAddr1<<BUS_STARTBIT) + 0x0008) //resync on word sync flywheel
#define WBL_DVDMFlywheel1_dvd_lpp_rel_address_resync        (WBL_BLK + DBG64SEL + (halWBL_DVDMFlywheelAddr1<<BUS_STARTBIT) + 0x0009) //resync on relative address flywheel
#define WBL_DVDMFlywheel1_dvd_lpp_address_resync            (WBL_BLK + DBG64SEL + (halWBL_DVDMFlywheelAddr1<<BUS_STARTBIT) + 0x000A) //resync on address flywheel
#define WBL_DVDMFlywheel1_dvd_lpp_reached                   (WBL_BLK + DBG64SEL + (halWBL_DVDMFlywheelAddr1<<BUS_STARTBIT) + 0x000B) //LPP address reached
#define WBL_DVDMFlywheel1_dvd_lpp_bsync_confidence0         (WBL_BLK + DBG64SEL + (halWBL_DVDMFlywheelAddr1<<BUS_STARTBIT) + 0x000C) //confidence level bit sync flywheel
#define WBL_DVDMFlywheel1_dvd_lpp_bsync_confidence1         (WBL_BLK + DBG64SEL + (halWBL_DVDMFlywheelAddr1<<BUS_STARTBIT) + 0x000D) //confidence level bit sync flywheel
#define WBL_DVDMFlywheel1_dvd_lpp_bsync_confidence2         (WBL_BLK + DBG64SEL + (halWBL_DVDMFlywheelAddr1<<BUS_STARTBIT) + 0x000E) //confidence level bit sync flywheel
#define WBL_DVDMFlywheel1_dvd_lpp_bsync_confidence3         (WBL_BLK + DBG64SEL + (halWBL_DVDMFlywheelAddr1<<BUS_STARTBIT) + 0x000F) //confidence level bit sync flywheel
//DVDMFlywheelAddr2
#define WBL_DVDMFlywheel2_dvd_block_address_int0            (WBL_BLK + DBG64SEL + (halWBL_DVDMFlywheelAddr2<<BUS_STARTBIT) + 0x0000) //dvd block address flywheel
#define WBL_DVDMFlywheel2_dvd_block_address_int1            (WBL_BLK + DBG64SEL + (halWBL_DVDMFlywheelAddr2<<BUS_STARTBIT) + 0x0001) //dvd block address flywheel
#define WBL_DVDMFlywheel2_dvd_block_address_int2            (WBL_BLK + DBG64SEL + (halWBL_DVDMFlywheelAddr2<<BUS_STARTBIT) + 0x0002) //dvd block address flywheel
#define WBL_DVDMFlywheel2_dvd_block_address_int3            (WBL_BLK + DBG64SEL + (halWBL_DVDMFlywheelAddr2<<BUS_STARTBIT) + 0x0003) //dvd block address flywheel
#define WBL_DVDMFlywheel2_dvd_block_address_int4            (WBL_BLK + DBG64SEL + (halWBL_DVDMFlywheelAddr2<<BUS_STARTBIT) + 0x0004) //dvd block address flywheel
#define WBL_DVDMFlywheel2_dvd_block_address_int5            (WBL_BLK + DBG64SEL + (halWBL_DVDMFlywheelAddr2<<BUS_STARTBIT) + 0x0005) //dvd block address flywheel
#define WBL_DVDMFlywheel2_dvd_block_address_int6            (WBL_BLK + DBG64SEL + (halWBL_DVDMFlywheelAddr2<<BUS_STARTBIT) + 0x0006) //dvd block address flywheel
#define WBL_DVDMFlywheel2_dvd_block_address_int7            (WBL_BLK + DBG64SEL + (halWBL_DVDMFlywheelAddr2<<BUS_STARTBIT) + 0x0007) //dvd block address flywheel
#define WBL_DVDMFlywheel2_dvd_block_address_int8            (WBL_BLK + DBG64SEL + (halWBL_DVDMFlywheelAddr2<<BUS_STARTBIT) + 0x0008) //dvd block address flywheel
#define WBL_DVDMFlywheel2_dvd_block_address_int9            (WBL_BLK + DBG64SEL + (halWBL_DVDMFlywheelAddr2<<BUS_STARTBIT) + 0x0009) //dvd block address flywheel
#define WBL_DVDMFlywheel2_dvd_block_address_int10           (WBL_BLK + DBG64SEL + (halWBL_DVDMFlywheelAddr2<<BUS_STARTBIT) + 0x000A) //dvd block address flywheel
#define WBL_DVDMFlywheel2_dvd_block_address_int11           (WBL_BLK + DBG64SEL + (halWBL_DVDMFlywheelAddr2<<BUS_STARTBIT) + 0x000B) //dvd block address flywheel
#define WBL_DVDMFlywheel2_dvd_block_address_int12           (WBL_BLK + DBG64SEL + (halWBL_DVDMFlywheelAddr2<<BUS_STARTBIT) + 0x000C) //dvd block address flywheel
#define WBL_DVDMFlywheel2_dvd_block_address_int13           (WBL_BLK + DBG64SEL + (halWBL_DVDMFlywheelAddr2<<BUS_STARTBIT) + 0x000D) //dvd block address flywheel
#define WBL_DVDMFlywheel2_dvd_block_address_int14           (WBL_BLK + DBG64SEL + (halWBL_DVDMFlywheelAddr2<<BUS_STARTBIT) + 0x000E) //dvd block address flywheel
#define WBL_DVDMFlywheel2_dvd_block_address_int15           (WBL_BLK + DBG64SEL + (halWBL_DVDMFlywheelAddr2<<BUS_STARTBIT) + 0x000F) //dvd block address flywheel
//DVDMFlywheelAddr3
#define WBL_DVDMFlywheel3_sysclk                            (WBL_BLK + DBG64SEL + (halWBL_DVDMFlywheelAddr3<<BUS_STARTBIT) + 0x0000) //System clock
#define WBL_DVDMFlywheel3_dvd_lpp_wsync_confidence3         (WBL_BLK + DBG64SEL + (halWBL_DVDMFlywheelAddr3<<BUS_STARTBIT) + 0x0001) //confidence level word sync flywheel
#define WBL_DVDMFlywheel3_dvd_lpp_wsync_confidence2         (WBL_BLK + DBG64SEL + (halWBL_DVDMFlywheelAddr3<<BUS_STARTBIT) + 0x0002) //confidence level word sync flywheel
#define WBL_DVDMFlywheel3_dvd_lpp_wsync_confidence1         (WBL_BLK + DBG64SEL + (halWBL_DVDMFlywheelAddr3<<BUS_STARTBIT) + 0x0003) //confidence level word sync flywheel
#define WBL_DVDMFlywheel3_dvd_lpp_wsync_confidence0         (WBL_BLK + DBG64SEL + (halWBL_DVDMFlywheelAddr3<<BUS_STARTBIT) + 0x0004) //confidence level word sync flywheel
#define WBL_DVDMFlywheel3_dvd_lpp_rel_addr_confidence3      (WBL_BLK + DBG64SEL + (halWBL_DVDMFlywheelAddr3<<BUS_STARTBIT) + 0x0005) //confidence level relative address flywheel
#define WBL_DVDMFlywheel3_dvd_lpp_rel_addr_confidence2      (WBL_BLK + DBG64SEL + (halWBL_DVDMFlywheelAddr3<<BUS_STARTBIT) + 0x0006) //confidence level relative address flywheel
#define WBL_DVDMFlywheel3_dvd_lpp_rel_addr_confidence1      (WBL_BLK + DBG64SEL + (halWBL_DVDMFlywheelAddr3<<BUS_STARTBIT) + 0x0007) //confidence level relative address flywheel
#define WBL_DVDMFlywheel3_dvd_lpp_rel_addr_confidence0      (WBL_BLK + DBG64SEL + (halWBL_DVDMFlywheelAddr3<<BUS_STARTBIT) + 0x0008) //confidence level relative address flywheel
#define WBL_DVDMFlywheel3_dvd_lpp_addr_confidence3          (WBL_BLK + DBG64SEL + (halWBL_DVDMFlywheelAddr3<<BUS_STARTBIT) + 0x0009) //confidence level address flywheel
#define WBL_DVDMFlywheel3_dvd_lpp_addr_confidence2          (WBL_BLK + DBG64SEL + (halWBL_DVDMFlywheelAddr3<<BUS_STARTBIT) + 0x000A) //confidence level address flywheel
#define WBL_DVDMFlywheel3_dvd_lpp_addr_confidence1          (WBL_BLK + DBG64SEL + (halWBL_DVDMFlywheelAddr3<<BUS_STARTBIT) + 0x000B) //confidence level address flywheel
#define WBL_DVDMFlywheel3_dvd_lpp_addr_confidence0          (WBL_BLK + DBG64SEL + (halWBL_DVDMFlywheelAddr3<<BUS_STARTBIT) + 0x000C) //confidence level address flywheel
#define WBL_DVDMFlywheel3_dvd_lpp_sliced                    (WBL_BLK + DBG64SEL + (halWBL_DVDMFlywheelAddr3<<BUS_STARTBIT) + 0x000D) //wobble signal sliced at lpp detection level
#define WBL_DVDMFlywheel3_dvd_lpp_detect_win                (WBL_BLK + DBG64SEL + (halWBL_DVDMFlywheelAddr3<<BUS_STARTBIT) + 0x000E) //lpp detection window
#define WBL_DVDMFlywheel3_reserved                          (WBL_BLK + DBG64SEL + (halWBL_DVDMFlywheelAddr3<<BUS_STARTBIT) + 0x000F) //reserved
//DVDMDecodedAddr1
#define WBL_DVDMDecoded1_sysclk                             (WBL_BLK + DBG64SEL + (halWBL_DVDMDecodedAddr1<<BUS_STARTBIT) + 0x0000) //System clock
#define WBL_DVDMDecoded1_writeclk                           (WBL_BLK + DBG64SEL + (halWBL_DVDMDecodedAddr1<<BUS_STARTBIT) + 0x0001) //Write clock
#define WBL_DVDMDecoded1_dvd_lpp_block_addr_decoded_valid   (WBL_BLK + DBG64SEL + (halWBL_DVDMDecodedAddr1<<BUS_STARTBIT) + 0x0002) //decoded address
#define WBL_DVDMDecoded1_dvd_lpp_dvd_error                  (WBL_BLK + DBG64SEL + (halWBL_DVDMDecodedAddr1<<BUS_STARTBIT) + 0x0003) //decoded address
#define WBL_DVDMDecoded1_dvd_lpp_erco_fail                  (WBL_BLK + DBG64SEL + (halWBL_DVDMDecodedAddr1<<BUS_STARTBIT) + 0x0004) //decoded address
#define WBL_DVDMDecoded1_dvd_lpp_erco_fail_b                (WBL_BLK + DBG64SEL + (halWBL_DVDMDecodedAddr1<<BUS_STARTBIT) + 0x0005) //decoded address
#define WBL_DVDMDecoded1_dvd_lpp_new_data_not_reliable      (WBL_BLK + DBG64SEL + (halWBL_DVDMDecodedAddr1<<BUS_STARTBIT) + 0x0006) //decoded address
#define WBL_DVDMDecoded1_dvd_lpp_bit_resync                 (WBL_BLK + DBG64SEL + (halWBL_DVDMDecodedAddr1<<BUS_STARTBIT) + 0x0007) //resync on bit sync flywheel
#define WBL_DVDMDecoded1_dvd_lpp_word_resync                (WBL_BLK + DBG64SEL + (halWBL_DVDMDecodedAddr1<<BUS_STARTBIT) + 0x0008) //resync on word sync flywheel
#define WBL_DVDMDecoded1_dvd_lpp_rel_address_resync         (WBL_BLK + DBG64SEL + (halWBL_DVDMDecodedAddr1<<BUS_STARTBIT) + 0x0009) //resync on relative address flywheel
#define WBL_DVDMDecoded1_dvd_lpp_address_resync             (WBL_BLK + DBG64SEL + (halWBL_DVDMDecodedAddr1<<BUS_STARTBIT) + 0x000A) //resync on address flywheel
#define WBL_DVDMDecoded1_dvd_bsyncinlock_int                (WBL_BLK + DBG64SEL + (halWBL_DVDMDecodedAddr1<<BUS_STARTBIT) + 0x000B) //lock bit bit sync
#define WBL_DVDMDecoded1_dvd_wsyncinlock_int                (WBL_BLK + DBG64SEL + (halWBL_DVDMDecodedAddr1<<BUS_STARTBIT) + 0x000C) //lock bit word sync
#define WBL_DVDMDecoded1_dvd_addressinlock_int              (WBL_BLK + DBG64SEL + (halWBL_DVDMDecodedAddr1<<BUS_STARTBIT) + 0x000D) //lock bit address flywheel
#define WBL_DVDMDecoded1_dvd_lpp_reached                    (WBL_BLK + DBG64SEL + (halWBL_DVDMDecodedAddr1<<BUS_STARTBIT) + 0x000E) //LPP address reached
#define WBL_DVDMDecoded1_reserved                           (WBL_BLK + DBG64SEL + (halWBL_DVDMDecodedAddr1<<BUS_STARTBIT) + 0x000F) //reserved
//DVDMDecodedAddr2
#define WBL_DVDMDecoded2_dvd_lpp_block_address_decoded0     (WBL_BLK + DBG64SEL + (halWBL_DVDMDecodedAddr2<<BUS_STARTBIT) + 0x0000) //Decoded address
#define WBL_DVDMDecoded2_dvd_lpp_block_address_decoded1     (WBL_BLK + DBG64SEL + (halWBL_DVDMDecodedAddr2<<BUS_STARTBIT) + 0x0001) //Decoded address
#define WBL_DVDMDecoded2_dvd_lpp_block_address_decoded2     (WBL_BLK + DBG64SEL + (halWBL_DVDMDecodedAddr2<<BUS_STARTBIT) + 0x0002) //Decoded address
#define WBL_DVDMDecoded2_dvd_lpp_block_address_decoded3     (WBL_BLK + DBG64SEL + (halWBL_DVDMDecodedAddr2<<BUS_STARTBIT) + 0x0003) //Decoded address
#define WBL_DVDMDecoded2_dvd_lpp_block_address_decoded4     (WBL_BLK + DBG64SEL + (halWBL_DVDMDecodedAddr2<<BUS_STARTBIT) + 0x0004) //Decoded address
#define WBL_DVDMDecoded2_dvd_lpp_block_address_decoded5     (WBL_BLK + DBG64SEL + (halWBL_DVDMDecodedAddr2<<BUS_STARTBIT) + 0x0005) //Decoded address
#define WBL_DVDMDecoded2_dvd_lpp_block_address_decoded6     (WBL_BLK + DBG64SEL + (halWBL_DVDMDecodedAddr2<<BUS_STARTBIT) + 0x0006) //Decoded address
#define WBL_DVDMDecoded2_dvd_lpp_block_address_decoded7     (WBL_BLK + DBG64SEL + (halWBL_DVDMDecodedAddr2<<BUS_STARTBIT) + 0x0007) //Decoded address
#define WBL_DVDMDecoded2_dvd_lpp_block_address_decoded8     (WBL_BLK + DBG64SEL + (halWBL_DVDMDecodedAddr2<<BUS_STARTBIT) + 0x0008) //Decoded address
#define WBL_DVDMDecoded2_dvd_lpp_block_address_decoded9     (WBL_BLK + DBG64SEL + (halWBL_DVDMDecodedAddr2<<BUS_STARTBIT) + 0x0009) //Decoded address
#define WBL_DVDMDecoded2_dvd_lpp_block_address_decoded10    (WBL_BLK + DBG64SEL + (halWBL_DVDMDecodedAddr2<<BUS_STARTBIT) + 0x000A) //Decoded address
#define WBL_DVDMDecoded2_dvd_lpp_block_address_decoded11    (WBL_BLK + DBG64SEL + (halWBL_DVDMDecodedAddr2<<BUS_STARTBIT) + 0x000B) //Decoded address
#define WBL_DVDMDecoded2_dvd_lpp_block_address_decoded12    (WBL_BLK + DBG64SEL + (halWBL_DVDMDecodedAddr2<<BUS_STARTBIT) + 0x000C) //Decoded address
#define WBL_DVDMDecoded2_dvd_lpp_block_address_decoded13    (WBL_BLK + DBG64SEL + (halWBL_DVDMDecodedAddr2<<BUS_STARTBIT) + 0x000D) //Decoded address
#define WBL_DVDMDecoded2_dvd_lpp_block_address_decoded14    (WBL_BLK + DBG64SEL + (halWBL_DVDMDecodedAddr2<<BUS_STARTBIT) + 0x000E) //Decoded address
#define WBL_DVDMDecoded2_dvd_lpp_block_address_decoded15    (WBL_BLK + DBG64SEL + (halWBL_DVDMDecodedAddr2<<BUS_STARTBIT) + 0x000F) //Decoded address
//HDDVDRAMFlywheelAddr1
#define WBL_HDDVDRAMFlywheel1_sysclk                        (WBL_BLK + DBG64SEL + (halWBL_HDDVDRAMFlywheelAddr1<<BUS_STARTBIT) + 0x0000) //System clock
#define WBL_HDDVDRAMFlywheel1_hddvd_ram_new_wobble          (WBL_BLK + DBG64SEL + (halWBL_HDDVDRAMFlywheelAddr1<<BUS_STARTBIT) + 0x0001) //Pulse for new wobble
#define WBL_HDDVDRAMFlywheel1_hddvd_ram_wdu_sync_confid0    (WBL_BLK + DBG64SEL + (halWBL_HDDVDRAMFlywheelAddr1<<BUS_STARTBIT) + 0x0002) //Confidence level wdu sync flywheel
#define WBL_HDDVDRAMFlywheel1_hddvd_ram_wdu_sync_confid1    (WBL_BLK + DBG64SEL + (halWBL_HDDVDRAMFlywheelAddr1<<BUS_STARTBIT) + 0x0003) //Confidence level wdu sync flywheel
#define WBL_HDDVDRAMFlywheel1_hddvd_ram_wdu_sync_confid2    (WBL_BLK + DBG64SEL + (halWBL_HDDVDRAMFlywheelAddr1<<BUS_STARTBIT) + 0x0004) //Confidence level wdu sync flywheel
#define WBL_HDDVDRAMFlywheel1_hddvd_ram_wdu_sync_confid3    (WBL_BLK + DBG64SEL + (halWBL_HDDVDRAMFlywheelAddr1<<BUS_STARTBIT) + 0x0005) //Confidence level wdu sync flywheel
#define WBL_HDDVDRAMFlywheel1_hddvd_ram_wap_reached         (WBL_BLK + DBG64SEL + (halWBL_HDDVDRAMFlywheelAddr1<<BUS_STARTBIT) + 0x0006) //wobble address reached
#define WBL_HDDVDRAMFlywheel1_hddvd_ram_wdu_sync            (WBL_BLK + DBG64SEL + (halWBL_HDDVDRAMFlywheelAddr1<<BUS_STARTBIT) + 0x0007) //wdu sync
#define WBL_HDDVDRAMFlywheel1_hddvd_ram_wap_in_seq          (WBL_BLK + DBG64SEL + (halWBL_HDDVDRAMFlywheelAddr1<<BUS_STARTBIT) + 0x0008) //detected address in sequence
#define WBL_HDDVDRAMFlywheel1_hddvd_ram_wdu_missed_sync     (WBL_BLK + DBG64SEL + (halWBL_HDDVDRAMFlywheelAddr1<<BUS_STARTBIT) + 0x0009) //missed wdu sync
#define WBL_HDDVDRAMFlywheel1_hddvd_ram_wap_addr_resync     (WBL_BLK + DBG64SEL + (halWBL_HDDVDRAMFlywheelAddr1<<BUS_STARTBIT) + 0x000A) //resync on address flywheel
#define WBL_HDDVDRAMFlywheel1_hddvd_ram_wdu_sync_resync     (WBL_BLK + DBG64SEL + (halWBL_HDDVDRAMFlywheelAddr1<<BUS_STARTBIT) + 0x000B) //resync on wdu sync flywheel
#define WBL_HDDVDRAMFlywheel1_hddvd_ram_wap_addr_lock       (WBL_BLK + DBG64SEL + (halWBL_HDDVDRAMFlywheelAddr1<<BUS_STARTBIT) + 0x000C) //lock bit on address flywheel
#define WBL_HDDVDRAMFlywheel1_hddvd_ram_wdu_sync_la_lock    (WBL_BLK + DBG64SEL + (halWBL_HDDVDRAMFlywheelAddr1<<BUS_STARTBIT) + 0x000D) //lock bit on wdu sync flywheel for lock aid
#define WBL_HDDVDRAMFlywheel1_hddvd_ram_wdu_sync_lock       (WBL_BLK + DBG64SEL + (halWBL_HDDVDRAMFlywheelAddr1<<BUS_STARTBIT) + 0x000E) //lock bit on wdu sync flywheel
#define WBL_HDDVDRAMFlywheel1_reserved                      (WBL_BLK + DBG64SEL + (halWBL_HDDVDRAMFlywheelAddr1<<BUS_STARTBIT) + 0x000F) //reserved
//HDDVDRAMFlywheelAddr2
#define WBL_HDDVDRAMFlywheel2_sysclk                        (WBL_BLK + DBG64SEL + (halWBL_HDDVDRAMFlywheelAddr2<<BUS_STARTBIT) + 0x0000) //System clock
#define WBL_HDDVDRAMFlywheel2_hddvd_ram_wap_address_confid0 (WBL_BLK + DBG64SEL + (halWBL_HDDVDRAMFlywheelAddr2<<BUS_STARTBIT) + 0x0001) //Confidence level address flywheel
#define WBL_HDDVDRAMFlywheel2_hddvd_ram_wap_address_confid1 (WBL_BLK + DBG64SEL + (halWBL_HDDVDRAMFlywheelAddr2<<BUS_STARTBIT) + 0x0002) //Confidence level address flywheel
#define WBL_HDDVDRAMFlywheel2_hddvd_ram_wap_address_confid2 (WBL_BLK + DBG64SEL + (halWBL_HDDVDRAMFlywheelAddr2<<BUS_STARTBIT) + 0x0003) //Confidence level address flywheel
#define WBL_HDDVDRAMFlywheel2_hddvd_ram_wap_address_confid3 (WBL_BLK + DBG64SEL + (halWBL_HDDVDRAMFlywheelAddr2<<BUS_STARTBIT) + 0x0004) //Confidence level address flywheel
#define WBL_HDDVDRAMFlywheel2_hddvd_ram_wobblenr_cnt0       (WBL_BLK + DBG64SEL + (halWBL_HDDVDRAMFlywheelAddr2<<BUS_STARTBIT) + 0x0005) //Wobble number flywheel (wap)
#define WBL_HDDVDRAMFlywheel2_hddvd_ram_wobblenr_cnt1       (WBL_BLK + DBG64SEL + (halWBL_HDDVDRAMFlywheelAddr2<<BUS_STARTBIT) + 0x0006) //Wobble number flywheel (wap)
#define WBL_HDDVDRAMFlywheel2_hddvd_ram_wobblenr_cnt2       (WBL_BLK + DBG64SEL + (halWBL_HDDVDRAMFlywheelAddr2<<BUS_STARTBIT) + 0x0007) //Wobble number flywheel (wap)
#define WBL_HDDVDRAMFlywheel2_hddvd_ram_wobblenr_cnt3       (WBL_BLK + DBG64SEL + (halWBL_HDDVDRAMFlywheelAddr2<<BUS_STARTBIT) + 0x0008) //Wobble number flywheel (wap)
#define WBL_HDDVDRAMFlywheel2_hddvd_ram_wobblenr_cnt4       (WBL_BLK + DBG64SEL + (halWBL_HDDVDRAMFlywheelAddr2<<BUS_STARTBIT) + 0x0009) //Wobble number flywheel (wap)
#define WBL_HDDVDRAMFlywheel2_hddvd_ram_wobblenr_cnt5       (WBL_BLK + DBG64SEL + (halWBL_HDDVDRAMFlywheelAddr2<<BUS_STARTBIT) + 0x000A) //Wobble number flywheel (wap)
#define WBL_HDDVDRAMFlywheel2_hddvd_ram_wobblenr_cnt6       (WBL_BLK + DBG64SEL + (halWBL_HDDVDRAMFlywheelAddr2<<BUS_STARTBIT) + 0x000B) //Wobble number flywheel (wap)
#define WBL_HDDVDRAMFlywheel2_hddvd_ram_wobblenr_cnt7       (WBL_BLK + DBG64SEL + (halWBL_HDDVDRAMFlywheelAddr2<<BUS_STARTBIT) + 0x000C) //Wobble number flywheel (wap)
#define WBL_HDDVDRAMFlywheel2_hddvd_ram_wobblenr_cnt8       (WBL_BLK + DBG64SEL + (halWBL_HDDVDRAMFlywheelAddr2<<BUS_STARTBIT) + 0x000D) //Wobble number flywheel (wap)
#define WBL_HDDVDRAMFlywheel2_hddvd_ram_wobblenr_cnt9       (WBL_BLK + DBG64SEL + (halWBL_HDDVDRAMFlywheelAddr2<<BUS_STARTBIT) + 0x000E) //Wobble number flywheel (wap)
#define WBL_HDDVDRAMFlywheel2_hddvd_ram_wobblenr_cnt10      (WBL_BLK + DBG64SEL + (halWBL_HDDVDRAMFlywheelAddr2<<BUS_STARTBIT) + 0x000F) //Wobble number flywheel (wap)
//HDDVDRAMFlywheelAddr3
#define WBL_HDDVDRAMFlywheel3_hddvd_segment_address_int0    (WBL_BLK + DBG64SEL + (halWBL_HDDVDRAMFlywheelAddr3<<BUS_STARTBIT) + 0x0000) //Segment address flywheel (wap)
#define WBL_HDDVDRAMFlywheel3_hddvd_segment_address_int1    (WBL_BLK + DBG64SEL + (halWBL_HDDVDRAMFlywheelAddr3<<BUS_STARTBIT) + 0x0001) //Segment address flywheel (wap)
#define WBL_HDDVDRAMFlywheel3_hddvd_segment_address_int2    (WBL_BLK + DBG64SEL + (halWBL_HDDVDRAMFlywheelAddr3<<BUS_STARTBIT) + 0x0002) //Segment address flywheel (wap)
#define WBL_HDDVDRAMFlywheel3_hddvd_segment_address_int3    (WBL_BLK + DBG64SEL + (halWBL_HDDVDRAMFlywheelAddr3<<BUS_STARTBIT) + 0x0003) //Segment address flywheel (wap)
#define WBL_HDDVDRAMFlywheel3_hddvd_segment_address_int4    (WBL_BLK + DBG64SEL + (halWBL_HDDVDRAMFlywheelAddr3<<BUS_STARTBIT) + 0x0004) //Segment address flywheel (wap)
#define WBL_HDDVDRAMFlywheel3_hddvd_segment_address_int5    (WBL_BLK + DBG64SEL + (halWBL_HDDVDRAMFlywheelAddr3<<BUS_STARTBIT) + 0x0005) //Segment address flywheel (wap)
#define WBL_HDDVDRAMFlywheel3_hddvd_zone_address_int0       (WBL_BLK + DBG64SEL + (halWBL_HDDVDRAMFlywheelAddr3<<BUS_STARTBIT) + 0x0006) //Zone address flywheel (wap)
#define WBL_HDDVDRAMFlywheel3_hddvd_zone_address_int1       (WBL_BLK + DBG64SEL + (halWBL_HDDVDRAMFlywheelAddr3<<BUS_STARTBIT) + 0x0007) //Zone address flywheel (wap)
#define WBL_HDDVDRAMFlywheel3_hddvd_zone_address_int2       (WBL_BLK + DBG64SEL + (halWBL_HDDVDRAMFlywheelAddr3<<BUS_STARTBIT) + 0x0008) //Zone address flywheel (wap)
#define WBL_HDDVDRAMFlywheel3_hddvd_zone_address_int3       (WBL_BLK + DBG64SEL + (halWBL_HDDVDRAMFlywheelAddr3<<BUS_STARTBIT) + 0x0009) //Zone address flywheel (wap)
#define WBL_HDDVDRAMFlywheel3_hddvd_zone_address_int4       (WBL_BLK + DBG64SEL + (halWBL_HDDVDRAMFlywheelAddr3<<BUS_STARTBIT) + 0x000A) //Zone address flywheel (wap)
#define WBL_HDDVDRAMFlywheel3_hddvd_track_address_int0      (WBL_BLK + DBG64SEL + (halWBL_HDDVDRAMFlywheelAddr3<<BUS_STARTBIT) + 0x000B) //Track address flywheel (wap)
#define WBL_HDDVDRAMFlywheel3_hddvd_track_address_int1      (WBL_BLK + DBG64SEL + (halWBL_HDDVDRAMFlywheelAddr3<<BUS_STARTBIT) + 0x000C) //Track address flywheel (wap)
#define WBL_HDDVDRAMFlywheel3_hddvd_track_address_int2      (WBL_BLK + DBG64SEL + (halWBL_HDDVDRAMFlywheelAddr3<<BUS_STARTBIT) + 0x000D) //Track address flywheel (wap)
#define WBL_HDDVDRAMFlywheel3_hddvd_track_address_int3      (WBL_BLK + DBG64SEL + (halWBL_HDDVDRAMFlywheelAddr3<<BUS_STARTBIT) + 0x000E) //Track address flywheel (wap)
#define WBL_HDDVDRAMFlywheel3_hddvd_track_address_int4      (WBL_BLK + DBG64SEL + (halWBL_HDDVDRAMFlywheelAddr3<<BUS_STARTBIT) + 0x000F) //Track address flywheel (wap)
//HDDVDRAMDecodedAddr
#define WBL_HDDVDRAMDecoded_hddvd_ram_wap_decoded0          (WBL_BLK + DBG64SEL + (halWBL_HDDVDRAMDecodedAddr<<BUS_STARTBIT) + 0x0000) //Decoded wap address
#define WBL_HDDVDRAMDecoded_hddvd_ram_wap_decoded1          (WBL_BLK + DBG64SEL + (halWBL_HDDVDRAMDecodedAddr<<BUS_STARTBIT) + 0x0001) //Decoded wap address
#define WBL_HDDVDRAMDecoded_hddvd_ram_wap_decoded2          (WBL_BLK + DBG64SEL + (halWBL_HDDVDRAMDecodedAddr<<BUS_STARTBIT) + 0x0002) //Decoded wap address
#define WBL_HDDVDRAMDecoded_hddvd_ram_wap_decoded3          (WBL_BLK + DBG64SEL + (halWBL_HDDVDRAMDecodedAddr<<BUS_STARTBIT) + 0x0003) //Decoded wap address
#define WBL_HDDVDRAMDecoded_hddvd_ram_wap_decoded4          (WBL_BLK + DBG64SEL + (halWBL_HDDVDRAMDecodedAddr<<BUS_STARTBIT) + 0x0004) //Decoded wap address
#define WBL_HDDVDRAMDecoded_hddvd_ram_wap_decoded5          (WBL_BLK + DBG64SEL + (halWBL_HDDVDRAMDecodedAddr<<BUS_STARTBIT) + 0x0005) //Decoded wap address
#define WBL_HDDVDRAMDecoded_hddvd_ram_wap_decoded6          (WBL_BLK + DBG64SEL + (halWBL_HDDVDRAMDecodedAddr<<BUS_STARTBIT) + 0x0006) //Decoded wap address
#define WBL_HDDVDRAMDecoded_hddvd_ram_wap_decoded7          (WBL_BLK + DBG64SEL + (halWBL_HDDVDRAMDecodedAddr<<BUS_STARTBIT) + 0x0007) //Decoded wap address
#define WBL_HDDVDRAMDecoded_hddvd_ram_wap_decoded8          (WBL_BLK + DBG64SEL + (halWBL_HDDVDRAMDecodedAddr<<BUS_STARTBIT) + 0x0008) //Decoded wap address
#define WBL_HDDVDRAMDecoded_hddvd_ram_wap_decoded9          (WBL_BLK + DBG64SEL + (halWBL_HDDVDRAMDecodedAddr<<BUS_STARTBIT) + 0x0009) //Decoded wap address
#define WBL_HDDVDRAMDecoded_hddvd_ram_wap_decoded10         (WBL_BLK + DBG64SEL + (halWBL_HDDVDRAMDecodedAddr<<BUS_STARTBIT) + 0x000A) //Decoded wap address
#define WBL_HDDVDRAMDecoded_hddvd_ram_wap_decoded11         (WBL_BLK + DBG64SEL + (halWBL_HDDVDRAMDecodedAddr<<BUS_STARTBIT) + 0x000B) //Decoded wap address
#define WBL_HDDVDRAMDecoded_hddvd_ram_wap_decoded12         (WBL_BLK + DBG64SEL + (halWBL_HDDVDRAMDecodedAddr<<BUS_STARTBIT) + 0x000C) //Decoded wap address
#define WBL_HDDVDRAMDecoded_hddvd_ram_wap_decoded13         (WBL_BLK + DBG64SEL + (halWBL_HDDVDRAMDecodedAddr<<BUS_STARTBIT) + 0x000D) //Decoded wap address
#define WBL_HDDVDRAMDecoded_hddvd_ram_wap_decoded_valid     (WBL_BLK + DBG64SEL + (halWBL_HDDVDRAMDecodedAddr<<BUS_STARTBIT) + 0x000E) //Pulse for new decoded wap address
#define WBL_HDDVDRAMDecoded_hddvd_ram_address_toggle        (WBL_BLK + DBG64SEL + (halWBL_HDDVDRAMDecodedAddr<<BUS_STARTBIT) + 0x000F) //toggle signal for block address
//HDDVDBlockAddr1
#define WBL_HDDVDBlock1_sysclk                              (WBL_BLK + DBG64SEL + (halWBL_HDDVDBlockAddr1<<BUS_STARTBIT) + 0x0000) //System clock
#define WBL_HDDVDBlock1_hddvd_wap_address_confid0           (WBL_BLK + DBG64SEL + (halWBL_HDDVDBlockAddr1<<BUS_STARTBIT) + 0x0001) //Confidence level address flywheel
#define WBL_HDDVDBlock1_hddvd_wap_address_confid1           (WBL_BLK + DBG64SEL + (halWBL_HDDVDBlockAddr1<<BUS_STARTBIT) + 0x0002) //Confidence level address flywheel
#define WBL_HDDVDBlock1_hddvd_wap_address_confid2           (WBL_BLK + DBG64SEL + (halWBL_HDDVDBlockAddr1<<BUS_STARTBIT) + 0x0003) //Confidence level address flywheel
#define WBL_HDDVDBlock1_hddvd_wap_address_confid3           (WBL_BLK + DBG64SEL + (halWBL_HDDVDBlockAddr1<<BUS_STARTBIT) + 0x0004) //Confidence level address flywheel
#define WBL_HDDVDBlock1_hddvd_wdu_sync_confid0              (WBL_BLK + DBG64SEL + (halWBL_HDDVDBlockAddr1<<BUS_STARTBIT) + 0x0005) //Confidence level wdu sync flywheel
#define WBL_HDDVDBlock1_hddvd_wdu_sync_confid1              (WBL_BLK + DBG64SEL + (halWBL_HDDVDBlockAddr1<<BUS_STARTBIT) + 0x0006) //Confidence level wdu sync flywheel
#define WBL_HDDVDBlock1_hddvd_wdu_sync_confid2              (WBL_BLK + DBG64SEL + (halWBL_HDDVDBlockAddr1<<BUS_STARTBIT) + 0x0007) //Confidence level wdu sync flywheel
#define WBL_HDDVDBlock1_hddvd_wdu_sync_confid3              (WBL_BLK + DBG64SEL + (halWBL_HDDVDBlockAddr1<<BUS_STARTBIT) + 0x0008) //Confidence level wdu sync flywheel
#define WBL_HDDVDBlock1_hddvd_wap_in_seq                    (WBL_BLK + DBG64SEL + (halWBL_HDDVDBlockAddr1<<BUS_STARTBIT) + 0x0009) //wobble address in sequence
#define WBL_HDDVDBlock1_hddvd_wdu_missed_sync               (WBL_BLK + DBG64SEL + (halWBL_HDDVDBlockAddr1<<BUS_STARTBIT) + 0x000A) //missed wdu sync
#define WBL_HDDVDBlock1_hddvd_wdu_sync_lock_int             (WBL_BLK + DBG64SEL + (halWBL_HDDVDBlockAddr1<<BUS_STARTBIT) + 0x000B) //lock bit on wdu sync flywheel
#define WBL_HDDVDBlock1_hddvd_wdu_sync_la_lock_int          (WBL_BLK + DBG64SEL + (halWBL_HDDVDBlockAddr1<<BUS_STARTBIT) + 0x000C) //lock bit on wdu sync flywheel for lock aid
#define WBL_HDDVDBlock1_hddvd_wap_addr_lock_int             (WBL_BLK + DBG64SEL + (halWBL_HDDVDBlockAddr1<<BUS_STARTBIT) + 0x000D) //lock bit on address flywheel
#define WBL_HDDVDBlock1_hddvd_wdu_sync_resync_int           (WBL_BLK + DBG64SEL + (halWBL_HDDVDBlockAddr1<<BUS_STARTBIT) + 0x000E) //resync on wdu sync flywheel
#define WBL_HDDVDBlock1_hddvd_wap_addr_resync_int           (WBL_BLK + DBG64SEL + (halWBL_HDDVDBlockAddr1<<BUS_STARTBIT) + 0x000F) //resync on address flywheel
//HDDVDBlockAddr2
#define WBL_HDDVDBlock2_hddvd_new_wobble_in_block_int       (WBL_BLK + DBG64SEL + (halWBL_HDDVDBlockAddr2<<BUS_STARTBIT) + 0x0000) //new wobble available
#define WBL_HDDVDBlock2_hddvd_address_toggle_int            (WBL_BLK + DBG64SEL + (halWBL_HDDVDBlockAddr2<<BUS_STARTBIT) + 0x0001) //toggle signal for block address
#define WBL_HDDVDBlock2_hddvd_addr_valid_if_int             (WBL_BLK + DBG64SEL + (halWBL_HDDVDBlockAddr2<<BUS_STARTBIT) + 0x0002) //signal for wobble-encoder interface
#define WBL_HDDVDBlock2_hddvd_block_address_int0            (WBL_BLK + DBG64SEL + (halWBL_HDDVDBlockAddr2<<BUS_STARTBIT) + 0x0003) //block address
#define WBL_HDDVDBlock2_hddvd_block_address_int1            (WBL_BLK + DBG64SEL + (halWBL_HDDVDBlockAddr2<<BUS_STARTBIT) + 0x0004) //block address
#define WBL_HDDVDBlock2_hddvd_block_address_int2            (WBL_BLK + DBG64SEL + (halWBL_HDDVDBlockAddr2<<BUS_STARTBIT) + 0x0005) //block address
#define WBL_HDDVDBlock2_hddvd_block_address_int3            (WBL_BLK + DBG64SEL + (halWBL_HDDVDBlockAddr2<<BUS_STARTBIT) + 0x0006) //block address
#define WBL_HDDVDBlock2_hddvd_block_address_int4            (WBL_BLK + DBG64SEL + (halWBL_HDDVDBlockAddr2<<BUS_STARTBIT) + 0x0007) //block address
#define WBL_HDDVDBlock2_hddvd_block_address_int5            (WBL_BLK + DBG64SEL + (halWBL_HDDVDBlockAddr2<<BUS_STARTBIT) + 0x0008) //block address
#define WBL_HDDVDBlock2_hddvd_block_address_int6            (WBL_BLK + DBG64SEL + (halWBL_HDDVDBlockAddr2<<BUS_STARTBIT) + 0x0009) //block address
#define WBL_HDDVDBlock2_hddvd_block_address_int7            (WBL_BLK + DBG64SEL + (halWBL_HDDVDBlockAddr2<<BUS_STARTBIT) + 0x000A) //block address
#define WBL_HDDVDBlock2_hddvd_block_address_int8            (WBL_BLK + DBG64SEL + (halWBL_HDDVDBlockAddr2<<BUS_STARTBIT) + 0x000B) //block address
#define WBL_HDDVDBlock2_hddvd_block_address_int9            (WBL_BLK + DBG64SEL + (halWBL_HDDVDBlockAddr2<<BUS_STARTBIT) + 0x000C) //block address
#define WBL_HDDVDBlock2_hddvd_block_address_int10           (WBL_BLK + DBG64SEL + (halWBL_HDDVDBlockAddr2<<BUS_STARTBIT) + 0x000D) //block address
#define WBL_HDDVDBlock2_hddvd_block_address_int11           (WBL_BLK + DBG64SEL + (halWBL_HDDVDBlockAddr2<<BUS_STARTBIT) + 0x000E) //block address
#define WBL_HDDVDBlock2_hddvd_block_address_int12           (WBL_BLK + DBG64SEL + (halWBL_HDDVDBlockAddr2<<BUS_STARTBIT) + 0x000F) //block address
//HDDVDBlockAddr3
#define WBL_HDDVDBlock3_sysclk                              (WBL_BLK + DBG64SEL + (halWBL_HDDVDBlockAddr3<<BUS_STARTBIT) + 0x0000) //System clock
#define WBL_HDDVDBlock3_hddvd_wobblenr_in_block_int0        (WBL_BLK + DBG64SEL + (halWBL_HDDVDBlockAddr3<<BUS_STARTBIT) + 0x0001) //wobble number within the block
#define WBL_HDDVDBlock3_hddvd_wobblenr_in_block_int1        (WBL_BLK + DBG64SEL + (halWBL_HDDVDBlockAddr3<<BUS_STARTBIT) + 0x0002) //wobble number within the block
#define WBL_HDDVDBlock3_hddvd_wobblenr_in_block_int2        (WBL_BLK + DBG64SEL + (halWBL_HDDVDBlockAddr3<<BUS_STARTBIT) + 0x0003) //wobble number within the block
#define WBL_HDDVDBlock3_hddvd_wobblenr_in_block_int3        (WBL_BLK + DBG64SEL + (halWBL_HDDVDBlockAddr3<<BUS_STARTBIT) + 0x0004) //wobble number within the block
#define WBL_HDDVDBlock3_hddvd_wobblenr_in_block_int4        (WBL_BLK + DBG64SEL + (halWBL_HDDVDBlockAddr3<<BUS_STARTBIT) + 0x0005) //wobble number within the block
#define WBL_HDDVDBlock3_hddvd_wobblenr_in_block_int5        (WBL_BLK + DBG64SEL + (halWBL_HDDVDBlockAddr3<<BUS_STARTBIT) + 0x0006) //wobble number within the block
#define WBL_HDDVDBlock3_hddvd_wobblenr_in_block_int6        (WBL_BLK + DBG64SEL + (halWBL_HDDVDBlockAddr3<<BUS_STARTBIT) + 0x0007) //wobble number within the block
#define WBL_HDDVDBlock3_hddvd_wobblenr_in_block_int7        (WBL_BLK + DBG64SEL + (halWBL_HDDVDBlockAddr3<<BUS_STARTBIT) + 0x0008) //wobble number within the block
#define WBL_HDDVDBlock3_hddvd_wobblenr_in_block_int8        (WBL_BLK + DBG64SEL + (halWBL_HDDVDBlockAddr3<<BUS_STARTBIT) + 0x0009) //wobble number within the block
#define WBL_HDDVDBlock3_hddvd_wobblenr_in_block_int9        (WBL_BLK + DBG64SEL + (halWBL_HDDVDBlockAddr3<<BUS_STARTBIT) + 0x000A) //wobble number within the block
#define WBL_HDDVDBlock3_hddvd_wobblenr_in_block_int10       (WBL_BLK + DBG64SEL + (halWBL_HDDVDBlockAddr3<<BUS_STARTBIT) + 0x000B) //wobble number within the block
#define WBL_HDDVDBlock3_hddvd_wobblenr_in_block_int11       (WBL_BLK + DBG64SEL + (halWBL_HDDVDBlockAddr3<<BUS_STARTBIT) + 0x000C) //wobble number within the block
#define WBL_HDDVDBlock3_hddvd_wobblenr_in_block_int12       (WBL_BLK + DBG64SEL + (halWBL_HDDVDBlockAddr3<<BUS_STARTBIT) + 0x000D) //wobble number within the block
#define WBL_HDDVDBlock3_hddvd_wobblenr_in_block_int13       (WBL_BLK + DBG64SEL + (halWBL_HDDVDBlockAddr3<<BUS_STARTBIT) + 0x000E) //wobble number within the block
#define WBL_HDDVDBlock3_reserved                            (WBL_BLK + DBG64SEL + (halWBL_HDDVDBlockAddr3<<BUS_STARTBIT) + 0x000F) //reserved
//HDDVDRWFlywheelAddr1
#define WBL_HDDVDRWFlywheel1_sysclk                         (WBL_BLK + DBG64SEL + (halWBL_HDDVDRWFlywheelAddr1<<BUS_STARTBIT) + 0x0000) //System clock
#define WBL_HDDVDRWFlywheel1_hddvd_rw_new_wobble            (WBL_BLK + DBG64SEL + (halWBL_HDDVDRWFlywheelAddr1<<BUS_STARTBIT) + 0x0001) //Pulse for new wobble
#define WBL_HDDVDRWFlywheel1_hddvd_rw_wdu_sync_confid0      (WBL_BLK + DBG64SEL + (halWBL_HDDVDRWFlywheelAddr1<<BUS_STARTBIT) + 0x0002) //Confidence level wdu sync flywheel
#define WBL_HDDVDRWFlywheel1_hddvd_rw_wdu_sync_confid1      (WBL_BLK + DBG64SEL + (halWBL_HDDVDRWFlywheelAddr1<<BUS_STARTBIT) + 0x0003) //Confidence level wdu sync flywheel
#define WBL_HDDVDRWFlywheel1_hddvd_rw_wdu_sync_confid2      (WBL_BLK + DBG64SEL + (halWBL_HDDVDRWFlywheelAddr1<<BUS_STARTBIT) + 0x0004) //Confidence level wdu sync flywheel
#define WBL_HDDVDRWFlywheel1_hddvd_rw_wdu_sync_confid3      (WBL_BLK + DBG64SEL + (halWBL_HDDVDRWFlywheelAddr1<<BUS_STARTBIT) + 0x0005) //Confidence level wdu sync flywheel
#define WBL_HDDVDRWFlywheel1_hddvd_rw_wap_reached           (WBL_BLK + DBG64SEL + (halWBL_HDDVDRWFlywheelAddr1<<BUS_STARTBIT) + 0x0006) //wobble address reached
#define WBL_HDDVDRWFlywheel1_hddvd_rw_wdu_sync              (WBL_BLK + DBG64SEL + (halWBL_HDDVDRWFlywheelAddr1<<BUS_STARTBIT) + 0x0007) //wdu sync
#define WBL_HDDVDRWFlywheel1_hddvd_rw_wap_in_seq            (WBL_BLK + DBG64SEL + (halWBL_HDDVDRWFlywheelAddr1<<BUS_STARTBIT) + 0x0008) //detected address in sequence
#define WBL_HDDVDRWFlywheel1_hddvd_rw_wdu_missed_sync       (WBL_BLK + DBG64SEL + (halWBL_HDDVDRWFlywheelAddr1<<BUS_STARTBIT) + 0x0009) //missed wdu sync
#define WBL_HDDVDRWFlywheel1_hddvd_rw_wdu_sync_resync       (WBL_BLK + DBG64SEL + (halWBL_HDDVDRWFlywheelAddr1<<BUS_STARTBIT) + 0x000A) //resync on address flywheel
#define WBL_HDDVDRWFlywheel1_hddvd_rw_wap_addr_resync       (WBL_BLK + DBG64SEL + (halWBL_HDDVDRWFlywheelAddr1<<BUS_STARTBIT) + 0x000B) //resync on wdu sync flywheel
#define WBL_HDDVDRWFlywheel1_hddvd_rw_wdu_sync_lock         (WBL_BLK + DBG64SEL + (halWBL_HDDVDRWFlywheelAddr1<<BUS_STARTBIT) + 0x000C) //lock bit on address flywheel
#define WBL_HDDVDRWFlywheel1_hddvd_rw_wdu_sync_la_lock      (WBL_BLK + DBG64SEL + (halWBL_HDDVDRWFlywheelAddr1<<BUS_STARTBIT) + 0x000D) //lock bit on wdu sync flywheel for lock aid
#define WBL_HDDVDRWFlywheel1_hddvd_rw_wap_addr_lock         (WBL_BLK + DBG64SEL + (halWBL_HDDVDRWFlywheelAddr1<<BUS_STARTBIT) + 0x000E) //lock bit on wdu sync flywheel
#define WBL_HDDVDRWFlywheel1_hddvd_wdu_sync_window_nok      (WBL_BLK + DBG64SEL + (halWBL_HDDVDRWFlywheelAddr1<<BUS_STARTBIT) + 0x000F) //even odd OK signal
//HDDVDRWFlywheelAddr2
#define WBL_HDDVDRWFlywheel2_hddvd_rw_wap_address_confid0   (WBL_BLK + DBG64SEL + (halWBL_HDDVDRWFlywheelAddr2<<BUS_STARTBIT) + 0x0000) //Confidence level address flywheel
#define WBL_HDDVDRWFlywheel2_hddvd_rw_wap_address_confid1   (WBL_BLK + DBG64SEL + (halWBL_HDDVDRWFlywheelAddr2<<BUS_STARTBIT) + 0x0001) //Confidence level address flywheel
#define WBL_HDDVDRWFlywheel2_hddvd_rw_wap_address_confid2   (WBL_BLK + DBG64SEL + (halWBL_HDDVDRWFlywheelAddr2<<BUS_STARTBIT) + 0x0002) //Confidence level address flywheel
#define WBL_HDDVDRWFlywheel2_hddvd_rw_wap_address_confid3   (WBL_BLK + DBG64SEL + (halWBL_HDDVDRWFlywheelAddr2<<BUS_STARTBIT) + 0x0003) //Confidence level address flywheel
#define WBL_HDDVDRWFlywheel2_hddvd_segment_order_addr_int0  (WBL_BLK + DBG64SEL + (halWBL_HDDVDRWFlywheelAddr2<<BUS_STARTBIT) + 0x0004) //Segment order flywheel (wap)
#define WBL_HDDVDRWFlywheel2_hddvd_segment_order_addr_int1  (WBL_BLK + DBG64SEL + (halWBL_HDDVDRWFlywheelAddr2<<BUS_STARTBIT) + 0x0005) //Segment order flywheel (wap)
#define WBL_HDDVDRWFlywheel2_hddvd_segment_order_addr_int2  (WBL_BLK + DBG64SEL + (halWBL_HDDVDRWFlywheelAddr2<<BUS_STARTBIT) + 0x0006) //Segment order flywheel (wap)
#define WBL_HDDVDRWFlywheel2_hddvd_rw_wobblenr_cnt0         (WBL_BLK + DBG64SEL + (halWBL_HDDVDRWFlywheelAddr2<<BUS_STARTBIT) + 0x0007) //Wobble number flywheel (wap)
#define WBL_HDDVDRWFlywheel2_hddvd_rw_wobblenr_cnt1         (WBL_BLK + DBG64SEL + (halWBL_HDDVDRWFlywheelAddr2<<BUS_STARTBIT) + 0x0008) //Wobble number flywheel (wap)
#define WBL_HDDVDRWFlywheel2_hddvd_rw_wobblenr_cnt2         (WBL_BLK + DBG64SEL + (halWBL_HDDVDRWFlywheelAddr2<<BUS_STARTBIT) + 0x0009) //Wobble number flywheel (wap)
#define WBL_HDDVDRWFlywheel2_hddvd_rw_wobblenr_cnt3         (WBL_BLK + DBG64SEL + (halWBL_HDDVDRWFlywheelAddr2<<BUS_STARTBIT) + 0x000A) //Wobble number flywheel (wap)
#define WBL_HDDVDRWFlywheel2_hddvd_rw_wobblenr_cnt4         (WBL_BLK + DBG64SEL + (halWBL_HDDVDRWFlywheelAddr2<<BUS_STARTBIT) + 0x000B) //Wobble number flywheel (wap)
#define WBL_HDDVDRWFlywheel2_hddvd_rw_wobblenr_cnt5         (WBL_BLK + DBG64SEL + (halWBL_HDDVDRWFlywheelAddr2<<BUS_STARTBIT) + 0x000C) //Wobble number flywheel (wap)
#define WBL_HDDVDRWFlywheel2_hddvd_rw_wobblenr_cnt6         (WBL_BLK + DBG64SEL + (halWBL_HDDVDRWFlywheelAddr2<<BUS_STARTBIT) + 0x000D) //Wobble number flywheel (wap)
#define WBL_HDDVDRWFlywheel2_hddvd_rw_wobblenr_cnt7         (WBL_BLK + DBG64SEL + (halWBL_HDDVDRWFlywheelAddr2<<BUS_STARTBIT) + 0x000E) //Wobble number flywheel (wap)
#define WBL_HDDVDRWFlywheel2_hddvd_rw_wobblenr_cnt8         (WBL_BLK + DBG64SEL + (halWBL_HDDVDRWFlywheelAddr2<<BUS_STARTBIT) + 0x000F) //Wobble number flywheel (wap)
//HDDVDRWFlywheelAddr3
#define WBL_HDDVDRWFlywheel3_hddvd_rw_address_toggle        (WBL_BLK + DBG64SEL + (halWBL_HDDVDRWFlywheelAddr3<<BUS_STARTBIT) + 0x0000) //toggle signal for block address
#define WBL_HDDVDRWFlywheel3_hddvd_ps_block_address_int0    (WBL_BLK + DBG64SEL + (halWBL_HDDVDRWFlywheelAddr3<<BUS_STARTBIT) + 0x0001) //PS block flywheel (wap)
#define WBL_HDDVDRWFlywheel3_hddvd_ps_block_address_int1    (WBL_BLK + DBG64SEL + (halWBL_HDDVDRWFlywheelAddr3<<BUS_STARTBIT) + 0x0002) //PS block flywheel (wap)
#define WBL_HDDVDRWFlywheel3_hddvd_ps_block_address_int2    (WBL_BLK + DBG64SEL + (halWBL_HDDVDRWFlywheelAddr3<<BUS_STARTBIT) + 0x0003) //PS block flywheel (wap)
#define WBL_HDDVDRWFlywheel3_hddvd_ps_block_address_int3    (WBL_BLK + DBG64SEL + (halWBL_HDDVDRWFlywheelAddr3<<BUS_STARTBIT) + 0x0004) //PS block flywheel (wap)
#define WBL_HDDVDRWFlywheel3_hddvd_ps_block_address_int4    (WBL_BLK + DBG64SEL + (halWBL_HDDVDRWFlywheelAddr3<<BUS_STARTBIT) + 0x0005) //PS block flywheel (wap)
#define WBL_HDDVDRWFlywheel3_hddvd_ps_block_address_int5    (WBL_BLK + DBG64SEL + (halWBL_HDDVDRWFlywheelAddr3<<BUS_STARTBIT) + 0x0006) //PS block flywheel (wap)
#define WBL_HDDVDRWFlywheel3_hddvd_ps_block_address_int6    (WBL_BLK + DBG64SEL + (halWBL_HDDVDRWFlywheelAddr3<<BUS_STARTBIT) + 0x0007) //PS block flywheel (wap)
#define WBL_HDDVDRWFlywheel3_hddvd_ps_block_address_int7    (WBL_BLK + DBG64SEL + (halWBL_HDDVDRWFlywheelAddr3<<BUS_STARTBIT) + 0x0008) //PS block flywheel (wap)
#define WBL_HDDVDRWFlywheel3_hddvd_ps_block_address_int8    (WBL_BLK + DBG64SEL + (halWBL_HDDVDRWFlywheelAddr3<<BUS_STARTBIT) + 0x0009) //PS block flywheel (wap)
#define WBL_HDDVDRWFlywheel3_hddvd_ps_block_address_int9    (WBL_BLK + DBG64SEL + (halWBL_HDDVDRWFlywheelAddr3<<BUS_STARTBIT) + 0x000A) //PS block flywheel (wap)
#define WBL_HDDVDRWFlywheel3_hddvd_ps_block_address_int10   (WBL_BLK + DBG64SEL + (halWBL_HDDVDRWFlywheelAddr3<<BUS_STARTBIT) + 0x000B) //PS block flywheel (wap)
#define WBL_HDDVDRWFlywheel3_hddvd_ps_block_address_int11   (WBL_BLK + DBG64SEL + (halWBL_HDDVDRWFlywheelAddr3<<BUS_STARTBIT) + 0x000C) //PS block flywheel (wap)
#define WBL_HDDVDRWFlywheel3_hddvd_ps_block_address_int12   (WBL_BLK + DBG64SEL + (halWBL_HDDVDRWFlywheelAddr3<<BUS_STARTBIT) + 0x000D) //PS block flywheel (wap)
#define WBL_HDDVDRWFlywheel3_hddvd_ps_block_address_int13   (WBL_BLK + DBG64SEL + (halWBL_HDDVDRWFlywheelAddr3<<BUS_STARTBIT) + 0x000E) //PS block flywheel (wap)
#define WBL_HDDVDRWFlywheel3_hddvd_ps_block_address_int14   (WBL_BLK + DBG64SEL + (halWBL_HDDVDRWFlywheelAddr3<<BUS_STARTBIT) + 0x000F) //PS block flywheel (wap)
//HDDVDRWDecodedAddr
#define WBL_HDDVDRWDecoded_hddvd_rw_wap_decoded_valid       (WBL_BLK + DBG64SEL + (halWBL_HDDVDRWDecodedAddr<<BUS_STARTBIT) + 0x0000) //Wobble number flywheel (wap)
#define WBL_HDDVDRWDecoded_hddvd_rw_wap_decoded0            (WBL_BLK + DBG64SEL + (halWBL_HDDVDRWDecodedAddr<<BUS_STARTBIT) + 0x0001) //Decoded wap address
#define WBL_HDDVDRWDecoded_hddvd_rw_wap_decoded1            (WBL_BLK + DBG64SEL + (halWBL_HDDVDRWDecodedAddr<<BUS_STARTBIT) + 0x0002) //Decoded wap address
#define WBL_HDDVDRWDecoded_hddvd_rw_wap_decoded2            (WBL_BLK + DBG64SEL + (halWBL_HDDVDRWDecodedAddr<<BUS_STARTBIT) + 0x0003) //Decoded wap address
#define WBL_HDDVDRWDecoded_hddvd_rw_wap_decoded3            (WBL_BLK + DBG64SEL + (halWBL_HDDVDRWDecodedAddr<<BUS_STARTBIT) + 0x0004) //Decoded wap address
#define WBL_HDDVDRWDecoded_hddvd_rw_wap_decoded4            (WBL_BLK + DBG64SEL + (halWBL_HDDVDRWDecodedAddr<<BUS_STARTBIT) + 0x0005) //Decoded wap address
#define WBL_HDDVDRWDecoded_hddvd_rw_wap_decoded5            (WBL_BLK + DBG64SEL + (halWBL_HDDVDRWDecodedAddr<<BUS_STARTBIT) + 0x0006) //Decoded wap address
#define WBL_HDDVDRWDecoded_hddvd_rw_wap_decoded6            (WBL_BLK + DBG64SEL + (halWBL_HDDVDRWDecodedAddr<<BUS_STARTBIT) + 0x0007) //Decoded wap address
#define WBL_HDDVDRWDecoded_hddvd_rw_wap_decoded7            (WBL_BLK + DBG64SEL + (halWBL_HDDVDRWDecodedAddr<<BUS_STARTBIT) + 0x0008) //Decoded wap address
#define WBL_HDDVDRWDecoded_hddvd_rw_wap_decoded8            (WBL_BLK + DBG64SEL + (halWBL_HDDVDRWDecodedAddr<<BUS_STARTBIT) + 0x0009) //Decoded wap address
#define WBL_HDDVDRWDecoded_hddvd_rw_wap_decoded9            (WBL_BLK + DBG64SEL + (halWBL_HDDVDRWDecodedAddr<<BUS_STARTBIT) + 0x000A) //Decoded wap address
#define WBL_HDDVDRWDecoded_hddvd_rw_wap_decoded10           (WBL_BLK + DBG64SEL + (halWBL_HDDVDRWDecodedAddr<<BUS_STARTBIT) + 0x000B) //Decoded wap address
#define WBL_HDDVDRWDecoded_hddvd_rw_wap_decoded11           (WBL_BLK + DBG64SEL + (halWBL_HDDVDRWDecodedAddr<<BUS_STARTBIT) + 0x000C) //Decoded wap address
#define WBL_HDDVDRWDecoded_hddvd_rw_wap_decoded12           (WBL_BLK + DBG64SEL + (halWBL_HDDVDRWDecodedAddr<<BUS_STARTBIT) + 0x000D) //Decoded wap address
#define WBL_HDDVDRWDecoded_hddvd_rw_wap_decoded13           (WBL_BLK + DBG64SEL + (halWBL_HDDVDRWDecodedAddr<<BUS_STARTBIT) + 0x000E) //Decoded wap address
#define WBL_HDDVDRWDecoded_hddvd_rw_wap_decoded14           (WBL_BLK + DBG64SEL + (halWBL_HDDVDRWDecodedAddr<<BUS_STARTBIT) + 0x000F) //Decoded wap address
//WobbleAGC
#define WBL_WobbleAGC_sysclk                                (WBL_BLK + DBG64SEL + (halWBL_WobbleAGC<<BUS_STARTBIT) + 0x0000)
#define WBL_WobbleAGC_hold_integ                            (WBL_BLK + DBG64SEL + (halWBL_WobbleAGC<<BUS_STARTBIT) + 0x0001)
#define WBL_WobbleAGC_neg_error                             (WBL_BLK + DBG64SEL + (halWBL_WobbleAGC<<BUS_STARTBIT) + 0x0002)
#define WBL_WobbleAGC_pos_error                             (WBL_BLK + DBG64SEL + (halWBL_WobbleAGC<<BUS_STARTBIT) + 0x0003)
#define WBL_WobbleAGC_update_gain                           (WBL_BLK + DBG64SEL + (halWBL_WobbleAGC<<BUS_STARTBIT) + 0x0004)
#define WBL_WobbleAGC_slowcnt_hi_mid                        (WBL_BLK + DBG64SEL + (halWBL_WobbleAGC<<BUS_STARTBIT) + 0x0005)
#define WBL_WobbleAGC_slowcnt_lo_mid                        (WBL_BLK + DBG64SEL + (halWBL_WobbleAGC<<BUS_STARTBIT) + 0x0006)
#define WBL_WobbleAGC_dvdram_hold_wobbleagc                 (WBL_BLK + DBG64SEL + (halWBL_WobbleAGC<<BUS_STARTBIT) + 0x0007)
#define WBL_WobbleAGC_wobble_agc_gain_output0               (WBL_BLK + DBG64SEL + (halWBL_WobbleAGC<<BUS_STARTBIT) + 0x0008)
#define WBL_WobbleAGC_wobble_agc_gain_output1               (WBL_BLK + DBG64SEL + (halWBL_WobbleAGC<<BUS_STARTBIT) + 0x0009)
#define WBL_WobbleAGC_wobble_agc_gain_output2               (WBL_BLK + DBG64SEL + (halWBL_WobbleAGC<<BUS_STARTBIT) + 0x000A)
#define WBL_WobbleAGC_wobble_agc_gain_output3               (WBL_BLK + DBG64SEL + (halWBL_WobbleAGC<<BUS_STARTBIT) + 0x000B)
#define WBL_WobbleAGC_wobble_agc_gain_output4               (WBL_BLK + DBG64SEL + (halWBL_WobbleAGC<<BUS_STARTBIT) + 0x000C)
#define WBL_WobbleAGC_wobblegain_strobe_tmp                 (WBL_BLK + DBG64SEL + (halWBL_WobbleAGC<<BUS_STARTBIT) + 0x000D)
#define WBL_WobbleAGC_reserved1                             (WBL_BLK + DBG64SEL + (halWBL_WobbleAGC<<BUS_STARTBIT) + 0x000E)
#define WBL_WobbleAGC_reserved2                             (WBL_BLK + DBG64SEL + (halWBL_WobbleAGC<<BUS_STARTBIT) + 0x000F)
//WobbleAGCInt
#define WBL_WobbleAGCInt_sysclk                             (WBL_BLK + DBG64SEL + (halWBL_WobbleAGCInt<<BUS_STARTBIT) + 0x0000)
#define WBL_WobbleAGCInt_integrator_out0                    (WBL_BLK + DBG64SEL + (halWBL_WobbleAGCInt<<BUS_STARTBIT) + 0x0001)
#define WBL_WobbleAGCInt_integrator_out1                    (WBL_BLK + DBG64SEL + (halWBL_WobbleAGCInt<<BUS_STARTBIT) + 0x0002)
#define WBL_WobbleAGCInt_integrator_out2                    (WBL_BLK + DBG64SEL + (halWBL_WobbleAGCInt<<BUS_STARTBIT) + 0x0003)
#define WBL_WobbleAGCInt_integrator_out3                    (WBL_BLK + DBG64SEL + (halWBL_WobbleAGCInt<<BUS_STARTBIT) + 0x0004)
#define WBL_WobbleAGCInt_integrator_out4                    (WBL_BLK + DBG64SEL + (halWBL_WobbleAGCInt<<BUS_STARTBIT) + 0x0005)
#define WBL_WobbleAGCInt_integrator_out5                    (WBL_BLK + DBG64SEL + (halWBL_WobbleAGCInt<<BUS_STARTBIT) + 0x0006)
#define WBL_WobbleAGCInt_integrator_out6                    (WBL_BLK + DBG64SEL + (halWBL_WobbleAGCInt<<BUS_STARTBIT) + 0x0007)
#define WBL_WobbleAGCInt_integrator_out7                    (WBL_BLK + DBG64SEL + (halWBL_WobbleAGCInt<<BUS_STARTBIT) + 0x0008)
#define WBL_WobbleAGCInt_integrator_out8                    (WBL_BLK + DBG64SEL + (halWBL_WobbleAGCInt<<BUS_STARTBIT) + 0x0009)
#define WBL_WobbleAGCInt_integrator_out9                    (WBL_BLK + DBG64SEL + (halWBL_WobbleAGCInt<<BUS_STARTBIT) + 0x000A)
#define WBL_WobbleAGCInt_integrator_out10                   (WBL_BLK + DBG64SEL + (halWBL_WobbleAGCInt<<BUS_STARTBIT) + 0x000B)
#define WBL_WobbleAGCInt_integrator_out11                   (WBL_BLK + DBG64SEL + (halWBL_WobbleAGCInt<<BUS_STARTBIT) + 0x000C)
#define WBL_WobbleAGCInt_integrator_out12                   (WBL_BLK + DBG64SEL + (halWBL_WobbleAGCInt<<BUS_STARTBIT) + 0x000D)
#define WBL_WobbleAGCInt_integrator_out13                   (WBL_BLK + DBG64SEL + (halWBL_WobbleAGCInt<<BUS_STARTBIT) + 0x000E)
#define WBL_WobbleAGCInt_integrator_out14                   (WBL_BLK + DBG64SEL + (halWBL_WobbleAGCInt<<BUS_STARTBIT) + 0x000F)
//WobbleAGCPeak
#define WBL_WobbleAGCPeak_max_peak0                         (WBL_BLK + DBG64SEL + (halWBL_WobbleAGCPeak<<BUS_STARTBIT) + 0x0000)
#define WBL_WobbleAGCPeak_max_peak1                         (WBL_BLK + DBG64SEL + (halWBL_WobbleAGCPeak<<BUS_STARTBIT) + 0x0001)
#define WBL_WobbleAGCPeak_max_peak2                         (WBL_BLK + DBG64SEL + (halWBL_WobbleAGCPeak<<BUS_STARTBIT) + 0x0002)
#define WBL_WobbleAGCPeak_max_peak3                         (WBL_BLK + DBG64SEL + (halWBL_WobbleAGCPeak<<BUS_STARTBIT) + 0x0003)
#define WBL_WobbleAGCPeak_max_peak4                         (WBL_BLK + DBG64SEL + (halWBL_WobbleAGCPeak<<BUS_STARTBIT) + 0x0004)
#define WBL_WobbleAGCPeak_max_peak5                         (WBL_BLK + DBG64SEL + (halWBL_WobbleAGCPeak<<BUS_STARTBIT) + 0x0005)
#define WBL_WobbleAGCPeak_max_peak6                         (WBL_BLK + DBG64SEL + (halWBL_WobbleAGCPeak<<BUS_STARTBIT) + 0x0006)
#define WBL_WobbleAGCPeak_max_peak7                         (WBL_BLK + DBG64SEL + (halWBL_WobbleAGCPeak<<BUS_STARTBIT) + 0x0007)
#define WBL_WobbleAGCPeak_min_peak0                         (WBL_BLK + DBG64SEL + (halWBL_WobbleAGCPeak<<BUS_STARTBIT) + 0x0008)
#define WBL_WobbleAGCPeak_min_peak1                         (WBL_BLK + DBG64SEL + (halWBL_WobbleAGCPeak<<BUS_STARTBIT) + 0x0009)
#define WBL_WobbleAGCPeak_min_peak2                         (WBL_BLK + DBG64SEL + (halWBL_WobbleAGCPeak<<BUS_STARTBIT) + 0x000A)
#define WBL_WobbleAGCPeak_min_peak3                         (WBL_BLK + DBG64SEL + (halWBL_WobbleAGCPeak<<BUS_STARTBIT) + 0x000B)
#define WBL_WobbleAGCPeak_min_peak4                         (WBL_BLK + DBG64SEL + (halWBL_WobbleAGCPeak<<BUS_STARTBIT) + 0x000C)
#define WBL_WobbleAGCPeak_min_peak5                         (WBL_BLK + DBG64SEL + (halWBL_WobbleAGCPeak<<BUS_STARTBIT) + 0x000D)
#define WBL_WobbleAGCPeak_min_peak6                         (WBL_BLK + DBG64SEL + (halWBL_WobbleAGCPeak<<BUS_STARTBIT) + 0x000E)
#define WBL_WobbleAGCPeak_min_peak7                         (WBL_BLK + DBG64SEL + (halWBL_WobbleAGCPeak<<BUS_STARTBIT) + 0x000F)
//DVDRAMTimingEngine1
#define WBL_DVDRAMTimingEngine1_sysclk                      (WBL_BLK + DBG64SEL + (halWBL_DVDRAMTimingEngine1<<BUS_STARTBIT) + 0x0000)
#define WBL_DVDRAMTimingEngine1_wzerox_pulse_rise           (WBL_BLK + DBG64SEL + (halWBL_DVDRAMTimingEngine1<<BUS_STARTBIT) + 0x0001)
#define WBL_DVDRAMTimingEngine1_wzerox_pulse_fall           (WBL_BLK + DBG64SEL + (halWBL_DVDRAMTimingEngine1<<BUS_STARTBIT) + 0x0002)
#define WBL_DVDRAMTimingEngine1_pp_rf_in0                   (WBL_BLK + DBG64SEL + (halWBL_DVDRAMTimingEngine1<<BUS_STARTBIT) + 0x0003)
#define WBL_DVDRAMTimingEngine1_pp_rf_in1                   (WBL_BLK + DBG64SEL + (halWBL_DVDRAMTimingEngine1<<BUS_STARTBIT) + 0x0004)
#define WBL_DVDRAMTimingEngine1_pp_rf_in2                   (WBL_BLK + DBG64SEL + (halWBL_DVDRAMTimingEngine1<<BUS_STARTBIT) + 0x0005)
#define WBL_DVDRAMTimingEngine1_pp_rf_in3                   (WBL_BLK + DBG64SEL + (halWBL_DVDRAMTimingEngine1<<BUS_STARTBIT) + 0x0006)
#define WBL_DVDRAMTimingEngine1_pp_rf_in4                   (WBL_BLK + DBG64SEL + (halWBL_DVDRAMTimingEngine1<<BUS_STARTBIT) + 0x0007)
#define WBL_DVDRAMTimingEngine1_pp_rf_in5                   (WBL_BLK + DBG64SEL + (halWBL_DVDRAMTimingEngine1<<BUS_STARTBIT) + 0x0008)
#define WBL_DVDRAMTimingEngine1_header_window_mux           (WBL_BLK + DBG64SEL + (halWBL_DVDRAMTimingEngine1<<BUS_STARTBIT) + 0x0009)
#define WBL_DVDRAMTimingEngine1_landnotgroove_mux           (WBL_BLK + DBG64SEL + (halWBL_DVDRAMTimingEngine1<<BUS_STARTBIT) + 0x000A)
#define WBL_DVDRAMTimingEngine1_header_lock_int             (WBL_BLK + DBG64SEL + (halWBL_DVDRAMTimingEngine1<<BUS_STARTBIT) + 0x000B)
#define WBL_DVDRAMTimingEngine1_header_resync               (WBL_BLK + DBG64SEL + (halWBL_DVDRAMTimingEngine1<<BUS_STARTBIT) + 0x000C)
#define WBL_DVDRAMTimingEngine1_iwp_diff_sign_max           (WBL_BLK + DBG64SEL + (halWBL_DVDRAMTimingEngine1<<BUS_STARTBIT) + 0x000D)
#define WBL_DVDRAMTimingEngine1_iwp_slicer                  (WBL_BLK + DBG64SEL + (halWBL_DVDRAMTimingEngine1<<BUS_STARTBIT) + 0x000E)
#define WBL_DVDRAMTimingEngine1_header_window_slicer_lg     (WBL_BLK + DBG64SEL + (halWBL_DVDRAMTimingEngine1<<BUS_STARTBIT) + 0x000F)
//DVDRAMTimingEngine2
#define WBL_DVDRAMTimingEngine2_wobble_max_llh_pos_temp0    (WBL_BLK + DBG64SEL + (halWBL_DVDRAMTimingEngine2<<BUS_STARTBIT) + 0x0000)
#define WBL_DVDRAMTimingEngine2_wobble_max_llh_pos_temp1    (WBL_BLK + DBG64SEL + (halWBL_DVDRAMTimingEngine2<<BUS_STARTBIT) + 0x0001)
#define WBL_DVDRAMTimingEngine2_wobble_max_llh_pos_temp2    (WBL_BLK + DBG64SEL + (halWBL_DVDRAMTimingEngine2<<BUS_STARTBIT) + 0x0002)
#define WBL_DVDRAMTimingEngine2_wobble_max_llh_pos_temp3    (WBL_BLK + DBG64SEL + (halWBL_DVDRAMTimingEngine2<<BUS_STARTBIT) + 0x0003)
#define WBL_DVDRAMTimingEngine2_wobble_max_llh_pos_temp4    (WBL_BLK + DBG64SEL + (halWBL_DVDRAMTimingEngine2<<BUS_STARTBIT) + 0x0004)
#define WBL_DVDRAMTimingEngine2_wobble_max_llh_pos_temp5    (WBL_BLK + DBG64SEL + (halWBL_DVDRAMTimingEngine2<<BUS_STARTBIT) + 0x0005)
#define WBL_DVDRAMTimingEngine2_wobble_max_llh_pos_temp6    (WBL_BLK + DBG64SEL + (halWBL_DVDRAMTimingEngine2<<BUS_STARTBIT) + 0x0006)
#define WBL_DVDRAMTimingEngine2_wobble_max_llh_pos_temp7    (WBL_BLK + DBG64SEL + (halWBL_DVDRAMTimingEngine2<<BUS_STARTBIT) + 0x0007)
#define WBL_DVDRAMTimingEngine2_iwp_diff_lpf_slicer0        (WBL_BLK + DBG64SEL + (halWBL_DVDRAMTimingEngine2<<BUS_STARTBIT) + 0x0008)
#define WBL_DVDRAMTimingEngine2_iwp_diff_lpf_slicer1        (WBL_BLK + DBG64SEL + (halWBL_DVDRAMTimingEngine2<<BUS_STARTBIT) + 0x0009)
#define WBL_DVDRAMTimingEngine2_iwp_diff_lpf_slicer2        (WBL_BLK + DBG64SEL + (halWBL_DVDRAMTimingEngine2<<BUS_STARTBIT) + 0x000A)
#define WBL_DVDRAMTimingEngine2_iwp_diff_lpf_slicer3        (WBL_BLK + DBG64SEL + (halWBL_DVDRAMTimingEngine2<<BUS_STARTBIT) + 0x000B)
#define WBL_DVDRAMTimingEngine2_iwp_diff_lpf_slicer4        (WBL_BLK + DBG64SEL + (halWBL_DVDRAMTimingEngine2<<BUS_STARTBIT) + 0x000C)
#define WBL_DVDRAMTimingEngine2_iwp_diff_lpf_slicer5        (WBL_BLK + DBG64SEL + (halWBL_DVDRAMTimingEngine2<<BUS_STARTBIT) + 0x000D)
#define WBL_DVDRAMTimingEngine2_iwp_diff_lpf_slicer6        (WBL_BLK + DBG64SEL + (halWBL_DVDRAMTimingEngine2<<BUS_STARTBIT) + 0x000E)
#define WBL_DVDRAMTimingEngine2_iwp_diff_lpf_slicer7        (WBL_BLK + DBG64SEL + (halWBL_DVDRAMTimingEngine2<<BUS_STARTBIT) + 0x000F)
//DVDRAMTimingEngine3
#define WBL_DVDRAMTimingEngine3_iwp_diff_sum0               (WBL_BLK + DBG64SEL + (halWBL_DVDRAMTimingEngine3<<BUS_STARTBIT) + 0x0000)
#define WBL_DVDRAMTimingEngine3_iwp_diff_sum1               (WBL_BLK + DBG64SEL + (halWBL_DVDRAMTimingEngine3<<BUS_STARTBIT) + 0x0001)
#define WBL_DVDRAMTimingEngine3_iwp_diff_sum2               (WBL_BLK + DBG64SEL + (halWBL_DVDRAMTimingEngine3<<BUS_STARTBIT) + 0x0002)
#define WBL_DVDRAMTimingEngine3_iwp_diff_sum3               (WBL_BLK + DBG64SEL + (halWBL_DVDRAMTimingEngine3<<BUS_STARTBIT) + 0x0003)
#define WBL_DVDRAMTimingEngine3_iwp_diff_sum4               (WBL_BLK + DBG64SEL + (halWBL_DVDRAMTimingEngine3<<BUS_STARTBIT) + 0x0004)
#define WBL_DVDRAMTimingEngine3_iwp_diff_sum5               (WBL_BLK + DBG64SEL + (halWBL_DVDRAMTimingEngine3<<BUS_STARTBIT) + 0x0005)
#define WBL_DVDRAMTimingEngine3_iwp_diff_sum6               (WBL_BLK + DBG64SEL + (halWBL_DVDRAMTimingEngine3<<BUS_STARTBIT) + 0x0006)
#define WBL_DVDRAMTimingEngine3_iwp_diff_sum7               (WBL_BLK + DBG64SEL + (halWBL_DVDRAMTimingEngine3<<BUS_STARTBIT) + 0x0007)
#define WBL_DVDRAMTimingEngine3_iwp_diff_30                 (WBL_BLK + DBG64SEL + (halWBL_DVDRAMTimingEngine3<<BUS_STARTBIT) + 0x0008)
#define WBL_DVDRAMTimingEngine3_iwp_diff_31                 (WBL_BLK + DBG64SEL + (halWBL_DVDRAMTimingEngine3<<BUS_STARTBIT) + 0x0009)
#define WBL_DVDRAMTimingEngine3_iwp_diff_32                 (WBL_BLK + DBG64SEL + (halWBL_DVDRAMTimingEngine3<<BUS_STARTBIT) + 0x000A)
#define WBL_DVDRAMTimingEngine3_iwp_diff_33                 (WBL_BLK + DBG64SEL + (halWBL_DVDRAMTimingEngine3<<BUS_STARTBIT) + 0x000B)
#define WBL_DVDRAMTimingEngine3_iwp_diff_34                 (WBL_BLK + DBG64SEL + (halWBL_DVDRAMTimingEngine3<<BUS_STARTBIT) + 0x000C)
#define WBL_DVDRAMTimingEngine3_iwp_diff_35                 (WBL_BLK + DBG64SEL + (halWBL_DVDRAMTimingEngine3<<BUS_STARTBIT) + 0x000D)
#define WBL_DVDRAMTimingEngine3_iwp_diff_36                 (WBL_BLK + DBG64SEL + (halWBL_DVDRAMTimingEngine3<<BUS_STARTBIT) + 0x000E)
#define WBL_DVDRAMTimingEngine3_iwp_diff_37                 (WBL_BLK + DBG64SEL + (halWBL_DVDRAMTimingEngine3<<BUS_STARTBIT) + 0x000F)
//DVDRAMTimingEngine4
#define WBL_DVDRAMTimingEngine4_sysclk                      (WBL_BLK + DBG64SEL + (halWBL_DVDRAMTimingEngine4<<BUS_STARTBIT) + 0x0000)
#define WBL_DVDRAMTimingEngine4_wzerox_pulse_rise           (WBL_BLK + DBG64SEL + (halWBL_DVDRAMTimingEngine4<<BUS_STARTBIT) + 0x0001)
#define WBL_DVDRAMTimingEngine4_wzerox_pulse_fall           (WBL_BLK + DBG64SEL + (halWBL_DVDRAMTimingEngine4<<BUS_STARTBIT) + 0x0002)
#define WBL_DVDRAMTimingEngine4_header_confidence_int3      (WBL_BLK + DBG64SEL + (halWBL_DVDRAMTimingEngine4<<BUS_STARTBIT) + 0x0003)
#define WBL_DVDRAMTimingEngine4_header_confidence_int4      (WBL_BLK + DBG64SEL + (halWBL_DVDRAMTimingEngine4<<BUS_STARTBIT) + 0x0004)
#define WBL_DVDRAMTimingEngine4_header_confidence_int5      (WBL_BLK + DBG64SEL + (halWBL_DVDRAMTimingEngine4<<BUS_STARTBIT) + 0x0005)
#define WBL_DVDRAMTimingEngine4_header_confidence_int6      (WBL_BLK + DBG64SEL + (halWBL_DVDRAMTimingEngine4<<BUS_STARTBIT) + 0x0006)
#define WBL_DVDRAMTimingEngine4_header_prelock_int          (WBL_BLK + DBG64SEL + (halWBL_DVDRAMTimingEngine4<<BUS_STARTBIT) + 0x0007)
#define WBL_DVDRAMTimingEngine4_bit_delay_pulse             (WBL_BLK + DBG64SEL + (halWBL_DVDRAMTimingEngine4<<BUS_STARTBIT) + 0x0008)
#define WBL_DVDRAMTimingEngine4_header_window_mux           (WBL_BLK + DBG64SEL + (halWBL_DVDRAMTimingEngine4<<BUS_STARTBIT) + 0x0009)
#define WBL_DVDRAMTimingEngine4_landnotgroove_mux           (WBL_BLK + DBG64SEL + (halWBL_DVDRAMTimingEngine4<<BUS_STARTBIT) + 0x000A)
#define WBL_DVDRAMTimingEngine4_header_lock_int             (WBL_BLK + DBG64SEL + (halWBL_DVDRAMTimingEngine4<<BUS_STARTBIT) + 0x000B)
#define WBL_DVDRAMTimingEngine4_header_resync               (WBL_BLK + DBG64SEL + (halWBL_DVDRAMTimingEngine4<<BUS_STARTBIT) + 0x000C)
#define WBL_DVDRAMTimingEngine4_iwp_diff_sign_max           (WBL_BLK + DBG64SEL + (halWBL_DVDRAMTimingEngine4<<BUS_STARTBIT) + 0x000D)
#define WBL_DVDRAMTimingEngine4_iwp_slicer                  (WBL_BLK + DBG64SEL + (halWBL_DVDRAMTimingEngine4<<BUS_STARTBIT) + 0x000E)
#define WBL_DVDRAMTimingEngine4_header_window_slicer_lg     (WBL_BLK + DBG64SEL + (halWBL_DVDRAMTimingEngine4<<BUS_STARTBIT) + 0x000F)
//BDTimingEngine1
#define WBL_BDTimingEngine1_sysclk                          (WBL_BLK + DBG64SEL + (halWBL_BDTimingEngine1<<BUS_STARTBIT) + 0x0000)
#define WBL_BDTimingEngine1_bd_adip_addr_lock               (WBL_BLK + DBG64SEL + (halWBL_BDTimingEngine1<<BUS_STARTBIT) + 0x0001)
#define WBL_BDTimingEngine1_bd_adip_bit_lock                (WBL_BLK + DBG64SEL + (halWBL_BDTimingEngine1<<BUS_STARTBIT) + 0x0002)
#define WBL_BDTimingEngine1_bd_adip_word_lock               (WBL_BLK + DBG64SEL + (halWBL_BDTimingEngine1<<BUS_STARTBIT) + 0x0003)
#define WBL_BDTimingEngine1_bd_adip_wobblenr_cnt0           (WBL_BLK + DBG64SEL + (halWBL_BDTimingEngine1<<BUS_STARTBIT) + 0x0004)
#define WBL_BDTimingEngine1_bd_adip_wobblenr_cnt1           (WBL_BLK + DBG64SEL + (halWBL_BDTimingEngine1<<BUS_STARTBIT) + 0x0005)
#define WBL_BDTimingEngine1_bd_adip_wobblenr_cnt2           (WBL_BLK + DBG64SEL + (halWBL_BDTimingEngine1<<BUS_STARTBIT) + 0x0006)
#define WBL_BDTimingEngine1_bd_adip_wobblenr_cnt3           (WBL_BLK + DBG64SEL + (halWBL_BDTimingEngine1<<BUS_STARTBIT) + 0x0007)
#define WBL_BDTimingEngine1_bd_adip_wobblenr_cnt4           (WBL_BLK + DBG64SEL + (halWBL_BDTimingEngine1<<BUS_STARTBIT) + 0x0008)
#define WBL_BDTimingEngine1_bd_adip_new_wobble              (WBL_BLK + DBG64SEL + (halWBL_BDTimingEngine1<<BUS_STARTBIT) + 0x0009)
#define WBL_BDTimingEngine1_iced_area_mask_int              (WBL_BLK + DBG64SEL + (halWBL_BDTimingEngine1<<BUS_STARTBIT) + 0x000A)
#define WBL_BDTimingEngine1_iced_area_preset_int            (WBL_BLK + DBG64SEL + (halWBL_BDTimingEngine1<<BUS_STARTBIT) + 0x000B)
#define WBL_BDTimingEngine1_preset_fast_pll_int             (WBL_BLK + DBG64SEL + (halWBL_BDTimingEngine1<<BUS_STARTBIT) + 0x000C)
#define WBL_BDTimingEngine1_last_frame_int                  (WBL_BLK + DBG64SEL + (halWBL_BDTimingEngine1<<BUS_STARTBIT) + 0x000D)
#define WBL_BDTimingEngine1_runin_init_demod_int            (WBL_BLK + DBG64SEL + (halWBL_BDTimingEngine1<<BUS_STARTBIT) + 0x000E)
#define WBL_BDTimingEngine1_demod_force_int                 (WBL_BLK + DBG64SEL + (halWBL_BDTimingEngine1<<BUS_STARTBIT) + 0x000F)
//BDTimingEngine2
#define WBL_BDTimingEngine2_sysclk                          (WBL_BLK + DBG64SEL + (halWBL_BDTimingEngine2<<BUS_STARTBIT) + 0x0000)
#define WBL_BDTimingEngine2_bd_adip_bitsync_cnt0            (WBL_BLK + DBG64SEL + (halWBL_BDTimingEngine2<<BUS_STARTBIT) + 0x0001)
#define WBL_BDTimingEngine2_bd_adip_bitsync_cnt1            (WBL_BLK + DBG64SEL + (halWBL_BDTimingEngine2<<BUS_STARTBIT) + 0x0002)
#define WBL_BDTimingEngine2_bd_adip_bitsync_cnt2            (WBL_BLK + DBG64SEL + (halWBL_BDTimingEngine2<<BUS_STARTBIT) + 0x0003)
#define WBL_BDTimingEngine2_bd_adip_bitsync_cnt3            (WBL_BLK + DBG64SEL + (halWBL_BDTimingEngine2<<BUS_STARTBIT) + 0x0004)
#define WBL_BDTimingEngine2_bd_adip_bitsync_cnt4            (WBL_BLK + DBG64SEL + (halWBL_BDTimingEngine2<<BUS_STARTBIT) + 0x0005)
#define WBL_BDTimingEngine2_bd_adip_bitsync_cnt5            (WBL_BLK + DBG64SEL + (halWBL_BDTimingEngine2<<BUS_STARTBIT) + 0x0006)
#define WBL_BDTimingEngine2_bd_adip_bitsync_cnt6            (WBL_BLK + DBG64SEL + (halWBL_BDTimingEngine2<<BUS_STARTBIT) + 0x0007)
#define WBL_BDTimingEngine2_bd_adip_flywheel_addr0          (WBL_BLK + DBG64SEL + (halWBL_BDTimingEngine2<<BUS_STARTBIT) + 0x0008)
#define WBL_BDTimingEngine2_bd_adip_flywheel_addr1          (WBL_BLK + DBG64SEL + (halWBL_BDTimingEngine2<<BUS_STARTBIT) + 0x0009)
#define WBL_BDTimingEngine2_bd_adip_flywheel_addr2          (WBL_BLK + DBG64SEL + (halWBL_BDTimingEngine2<<BUS_STARTBIT) + 0x000A)
#define WBL_BDTimingEngine2_bd_adip_flywheel_addr3          (WBL_BLK + DBG64SEL + (halWBL_BDTimingEngine2<<BUS_STARTBIT) + 0x000B)
#define WBL_BDTimingEngine2_bd_adip_flywheel_addr4          (WBL_BLK + DBG64SEL + (halWBL_BDTimingEngine2<<BUS_STARTBIT) + 0x000C)
#define WBL_BDTimingEngine2_bd_adip_flywheel_addr5          (WBL_BLK + DBG64SEL + (halWBL_BDTimingEngine2<<BUS_STARTBIT) + 0x000D)
#define WBL_BDTimingEngine2_bd_adip_flywheel_addr6          (WBL_BLK + DBG64SEL + (halWBL_BDTimingEngine2<<BUS_STARTBIT) + 0x000E)
#define WBL_BDTimingEngine2_bd_adip_flywheel_addr7          (WBL_BLK + DBG64SEL + (halWBL_BDTimingEngine2<<BUS_STARTBIT) + 0x000F)
//HDDVDTimingEngine
#define WBL_HDDVDTimingEngine_sysclk                        (WBL_BLK + DBG64SEL + (halWBL_HDDVDTimingEngine<<BUS_STARTBIT) + 0x0000)
#define WBL_HDDVDTimingEngine_hddvd_wdu_sync_lock           (WBL_BLK + DBG64SEL + (halWBL_HDDVDTimingEngine<<BUS_STARTBIT) + 0x0001)
#define WBL_HDDVDTimingEngine_hddvd_wap_addr_lock           (WBL_BLK + DBG64SEL + (halWBL_HDDVDTimingEngine<<BUS_STARTBIT) + 0x0002)
#define WBL_HDDVDTimingEngine_hddvd_wobblenr_cnt4           (WBL_BLK + DBG64SEL + (halWBL_HDDVDTimingEngine<<BUS_STARTBIT) + 0x0003)
#define WBL_HDDVDTimingEngine_hddvd_wobblenr_cnt3           (WBL_BLK + DBG64SEL + (halWBL_HDDVDTimingEngine<<BUS_STARTBIT) + 0x0004)
#define WBL_HDDVDTimingEngine_hddvd_wobblenr_cnt2           (WBL_BLK + DBG64SEL + (halWBL_HDDVDTimingEngine<<BUS_STARTBIT) + 0x0005)
#define WBL_HDDVDTimingEngine_hddvd_wobblenr_cnt1           (WBL_BLK + DBG64SEL + (halWBL_HDDVDTimingEngine<<BUS_STARTBIT) + 0x0006)
#define WBL_HDDVDTimingEngine_hddvd_wobblenr_cnt0           (WBL_BLK + DBG64SEL + (halWBL_HDDVDTimingEngine<<BUS_STARTBIT) + 0x0007)
#define WBL_HDDVDTimingEngine_hddvd_new_wobble              (WBL_BLK + DBG64SEL + (halWBL_HDDVDTimingEngine<<BUS_STARTBIT) + 0x0008)
#define WBL_HDDVDTimingEngine_iced_area_mask_int            (WBL_BLK + DBG64SEL + (halWBL_HDDVDTimingEngine<<BUS_STARTBIT) + 0x0009)
#define WBL_HDDVDTimingEngine_iced_area_preset_int          (WBL_BLK + DBG64SEL + (halWBL_HDDVDTimingEngine<<BUS_STARTBIT) + 0x000A)
#define WBL_HDDVDTimingEngine_preset_fast_pll_int           (WBL_BLK + DBG64SEL + (halWBL_HDDVDTimingEngine<<BUS_STARTBIT) + 0x000B)
#define WBL_HDDVDTimingEngine_force_idle_rw_int             (WBL_BLK + DBG64SEL + (halWBL_HDDVDTimingEngine<<BUS_STARTBIT) + 0x000C)
#define WBL_HDDVDTimingEngine_vfo_field_rw_int              (WBL_BLK + DBG64SEL + (halWBL_HDDVDTimingEngine<<BUS_STARTBIT) + 0x000D)
#define WBL_HDDVDTimingEngine_datafield_rw_int              (WBL_BLK + DBG64SEL + (halWBL_HDDVDTimingEngine<<BUS_STARTBIT) + 0x000E)
#define WBL_HDDVDTimingEngine_lastframe_rw_int              (WBL_BLK + DBG64SEL + (halWBL_HDDVDTimingEngine<<BUS_STARTBIT) + 0x000F)
//WobblePLLCD1
#define WBL_WobblePLLCD1_sysclk                             (WBL_BLK + DBG64SEL + (halWBL_WobblePLLCD1<<BUS_STARTBIT) + 0x0000) //System clock
#define WBL_WobblePLLCD1_writeclk                           (WBL_BLK + DBG64SEL + (halWBL_WobblePLLCD1<<BUS_STARTBIT) + 0x0001) //Write clock
#define WBL_WobblePLLCD1_w441_int                           (WBL_BLK + DBG64SEL + (halWBL_WobblePLLCD1<<BUS_STARTBIT) + 0x0002) //Pulse on every zerocrossing ref. cosine -> 2 * wobblefreq
#define WBL_WobblePLLCD1_filtered_wobble0                   (WBL_BLK + DBG64SEL + (halWBL_WobblePLLCD1<<BUS_STARTBIT) + 0x0003) //Filtered wobble - input of the PLL
#define WBL_WobblePLLCD1_filtered_wobble1                   (WBL_BLK + DBG64SEL + (halWBL_WobblePLLCD1<<BUS_STARTBIT) + 0x0004) //Filtered wobble - input of the PLL
#define WBL_WobblePLLCD1_filtered_wobble2                   (WBL_BLK + DBG64SEL + (halWBL_WobblePLLCD1<<BUS_STARTBIT) + 0x0005) //Filtered wobble - input of the PLL
#define WBL_WobblePLLCD1_filtered_wobble3                   (WBL_BLK + DBG64SEL + (halWBL_WobblePLLCD1<<BUS_STARTBIT) + 0x0006) //Filtered wobble - input of the PLL
#define WBL_WobblePLLCD1_filtered_wobble4                   (WBL_BLK + DBG64SEL + (halWBL_WobblePLLCD1<<BUS_STARTBIT) + 0x0007) //Filtered wobble - input of the PLL
#define WBL_WobblePLLCD1_filtered_wobble5                   (WBL_BLK + DBG64SEL + (halWBL_WobblePLLCD1<<BUS_STARTBIT) + 0x0008) //Filtered wobble - input of the PLL
#define WBL_WobblePLLCD1_filtered_wobble6                   (WBL_BLK + DBG64SEL + (halWBL_WobblePLLCD1<<BUS_STARTBIT) + 0x0009) //Filtered wobble - input of the PLL
#define WBL_WobblePLLCD1_filtered_wobble7                   (WBL_BLK + DBG64SEL + (halWBL_WobblePLLCD1<<BUS_STARTBIT) + 0x000A) //Filtered wobble - input of the PLL
#define WBL_WobblePLLCD1_writeclk_div57624                  (WBL_BLK + DBG64SEL + (halWBL_WobblePLLCD1<<BUS_STARTBIT) + 0x000B) //for outerloop testing - should be locked to wobble: writeclk/57624
#define WBL_WobblePLLCD1_sync_inlock                        (WBL_BLK + DBG64SEL + (halWBL_WobblePLLCD1<<BUS_STARTBIT) + 0x000C) //ATIP sync detection lock
#define WBL_WobblePLLCD1_atip_sync_i                        (WBL_BLK + DBG64SEL + (halWBL_WobblePLLCD1<<BUS_STARTBIT) + 0x000D) //ATIP sync flywheel
#define WBL_WobblePLLCD1_reserved1                          (WBL_BLK + DBG64SEL + (halWBL_WobblePLLCD1<<BUS_STARTBIT) + 0x000E) //reserved
#define WBL_WobblePLLCD1_reserved2                          (WBL_BLK + DBG64SEL + (halWBL_WobblePLLCD1<<BUS_STARTBIT) + 0x000F) //reserved
//WobblePLLCD2
#define WBL_WobblePLLCD2_sysclk                             (WBL_BLK + DBG64SEL + (halWBL_WobblePLLCD2<<BUS_STARTBIT) + 0x0000) //System clock
#define WBL_WobblePLLCD2_cdwobble_pout0                     (WBL_BLK + DBG64SEL + (halWBL_WobblePLLCD2<<BUS_STARTBIT) + 0x0001) //scaled phase error for ATIP detection
#define WBL_WobblePLLCD2_cdwobble_pout1                     (WBL_BLK + DBG64SEL + (halWBL_WobblePLLCD2<<BUS_STARTBIT) + 0x0002) //scaled phase error for ATIP detection
#define WBL_WobblePLLCD2_cdwobble_pout2                     (WBL_BLK + DBG64SEL + (halWBL_WobblePLLCD2<<BUS_STARTBIT) + 0x0003) //scaled phase error for ATIP detection
#define WBL_WobblePLLCD2_cdwobble_pout3                     (WBL_BLK + DBG64SEL + (halWBL_WobblePLLCD2<<BUS_STARTBIT) + 0x0004) //scaled phase error for ATIP detection
#define WBL_WobblePLLCD2_cdwobble_pout4                     (WBL_BLK + DBG64SEL + (halWBL_WobblePLLCD2<<BUS_STARTBIT) + 0x0005) //scaled phase error for ATIP detection
#define WBL_WobblePLLCD2_cdwobble_pout5                     (WBL_BLK + DBG64SEL + (halWBL_WobblePLLCD2<<BUS_STARTBIT) + 0x0006) //scaled phase error for ATIP detection
#define WBL_WobblePLLCD2_cdwobble_pout6                     (WBL_BLK + DBG64SEL + (halWBL_WobblePLLCD2<<BUS_STARTBIT) + 0x0007) //scaled phase error for ATIP detection
#define WBL_WobblePLLCD2_cdwobble_pout7                     (WBL_BLK + DBG64SEL + (halWBL_WobblePLLCD2<<BUS_STARTBIT) + 0x0008) //scaled phase error for ATIP detection
#define WBL_WobblePLLCD2_cdwobble_pout8                     (WBL_BLK + DBG64SEL + (halWBL_WobblePLLCD2<<BUS_STARTBIT) + 0x0009) //scaled phase error for ATIP detection
#define WBL_WobblePLLCD2_cdwobble_pout9                     (WBL_BLK + DBG64SEL + (halWBL_WobblePLLCD2<<BUS_STARTBIT) + 0x000A) //scaled phase error for ATIP detection
#define WBL_WobblePLLCD2_cdwobble_pout10                    (WBL_BLK + DBG64SEL + (halWBL_WobblePLLCD2<<BUS_STARTBIT) + 0x000B) //scaled phase error for ATIP detection
#define WBL_WobblePLLCD2_cdwobble_pout11                    (WBL_BLK + DBG64SEL + (halWBL_WobblePLLCD2<<BUS_STARTBIT) + 0x000C) //scaled phase error for ATIP detection
#define WBL_WobblePLLCD2_cdwobble_pout12                    (WBL_BLK + DBG64SEL + (halWBL_WobblePLLCD2<<BUS_STARTBIT) + 0x000D) //scaled phase error for ATIP detection
#define WBL_WobblePLLCD2_cdwobble_pout13                    (WBL_BLK + DBG64SEL + (halWBL_WobblePLLCD2<<BUS_STARTBIT) + 0x000E) //scaled phase error for ATIP detection
#define WBL_WobblePLLCD2_cdwobble_pout14                    (WBL_BLK + DBG64SEL + (halWBL_WobblePLLCD2<<BUS_STARTBIT) + 0x000F) //scaled phase error for ATIP detection
//WobblePLLCD3
#define WBL_WobblePLLCD3_sysclk                             (WBL_BLK + DBG64SEL + (halWBL_WobblePLLCD3<<BUS_STARTBIT) + 0x0000) //System clock
#define WBL_WobblePLLCD3_freq_comp_phase_detect0            (WBL_BLK + DBG64SEL + (halWBL_WobblePLLCD3<<BUS_STARTBIT) + 0x0001) //outerloop error
#define WBL_WobblePLLCD3_freq_comp_phase_detect1            (WBL_BLK + DBG64SEL + (halWBL_WobblePLLCD3<<BUS_STARTBIT) + 0x0002) //outerloop error
#define WBL_WobblePLLCD3_freq_comp_phase_detect2            (WBL_BLK + DBG64SEL + (halWBL_WobblePLLCD3<<BUS_STARTBIT) + 0x0003) //outerloop error
#define WBL_WobblePLLCD3_freq_comp_phase_detect3            (WBL_BLK + DBG64SEL + (halWBL_WobblePLLCD3<<BUS_STARTBIT) + 0x0004) //outerloop error
#define WBL_WobblePLLCD3_freq_comp_phase_detect4            (WBL_BLK + DBG64SEL + (halWBL_WobblePLLCD3<<BUS_STARTBIT) + 0x0005) //outerloop error
#define WBL_WobblePLLCD3_freq_comp_phase_detect5            (WBL_BLK + DBG64SEL + (halWBL_WobblePLLCD3<<BUS_STARTBIT) + 0x0006) //outerloop error
#define WBL_WobblePLLCD3_freq_comp_phase_detect6            (WBL_BLK + DBG64SEL + (halWBL_WobblePLLCD3<<BUS_STARTBIT) + 0x0007) //outerloop error
#define WBL_WobblePLLCD3_freq_comp_phase_detect7            (WBL_BLK + DBG64SEL + (halWBL_WobblePLLCD3<<BUS_STARTBIT) + 0x0008) //outerloop error
#define WBL_WobblePLLCD3_freq_comp_phase_detect8            (WBL_BLK + DBG64SEL + (halWBL_WobblePLLCD3<<BUS_STARTBIT) + 0x0009) //outerloop error
#define WBL_WobblePLLCD3_freq_comp_phase_detect9            (WBL_BLK + DBG64SEL + (halWBL_WobblePLLCD3<<BUS_STARTBIT) + 0x000A) //outerloop error
#define WBL_WobblePLLCD3_freq_comp_phase_detect10           (WBL_BLK + DBG64SEL + (halWBL_WobblePLLCD3<<BUS_STARTBIT) + 0x000B) //outerloop error
#define WBL_WobblePLLCD3_freq_comp_phase_detect11           (WBL_BLK + DBG64SEL + (halWBL_WobblePLLCD3<<BUS_STARTBIT) + 0x000C) //outerloop error
#define WBL_WobblePLLCD3_freq_comp_phase_detect12           (WBL_BLK + DBG64SEL + (halWBL_WobblePLLCD3<<BUS_STARTBIT) + 0x000D) //outerloop error
#define WBL_WobblePLLCD3_freq_comp_phase_detect13           (WBL_BLK + DBG64SEL + (halWBL_WobblePLLCD3<<BUS_STARTBIT) + 0x000E) //outerloop error
#define WBL_WobblePLLCD3_freq_comp_phase_detect14           (WBL_BLK + DBG64SEL + (halWBL_WobblePLLCD3<<BUS_STARTBIT) + 0x000F) //outerloop error
//CDFlywheelBlockAddr1
#define WBL_CDFlywheel1_sysclk                              (WBL_BLK + DBG64SEL + (halWBL_CDFlywheelBlockAddr1<<BUS_STARTBIT) + 0x0000) //System clock
#define WBL_CDFlywheel1_writeclk                            (WBL_BLK + DBG64SEL + (halWBL_CDFlywheelBlockAddr1<<BUS_STARTBIT) + 0x0001) //Write clock
#define WBL_CDFlywheel1_atip_sync_i                         (WBL_BLK + DBG64SEL + (halWBL_CDFlywheelBlockAddr1<<BUS_STARTBIT) + 0x0002) //ATIP sync flywheel
#define WBL_CDFlywheel1_sync_inlock                         (WBL_BLK + DBG64SEL + (halWBL_CDFlywheelBlockAddr1<<BUS_STARTBIT) + 0x0003) //ATIP sync detection lock
#define WBL_CDFlywheel1_w441_int                            (WBL_BLK + DBG64SEL + (halWBL_CDFlywheelBlockAddr1<<BUS_STARTBIT) + 0x0004) //Pulse on every zerocrossing ref. cosine -> 2 * wobblefreq
#define WBL_CDFlywheel1_adr_inlock                          (WBL_BLK + DBG64SEL + (halWBL_CDFlywheelBlockAddr1<<BUS_STARTBIT) + 0x0005) //ATIP address flywheel lock indication
#define WBL_CDFlywheel1_inter_block_adr_debug0              (WBL_BLK + DBG64SEL + (halWBL_CDFlywheelBlockAddr1<<BUS_STARTBIT) + 0x0006) //Interpolated block address
#define WBL_CDFlywheel1_inter_block_adr_debug1              (WBL_BLK + DBG64SEL + (halWBL_CDFlywheelBlockAddr1<<BUS_STARTBIT) + 0x0007) //Interpolated block address
#define WBL_CDFlywheel1_inter_block_adr_debug2              (WBL_BLK + DBG64SEL + (halWBL_CDFlywheelBlockAddr1<<BUS_STARTBIT) + 0x0008) //Interpolated block address
#define WBL_CDFlywheel1_inter_block_adr_debug3              (WBL_BLK + DBG64SEL + (halWBL_CDFlywheelBlockAddr1<<BUS_STARTBIT) + 0x0009) //Interpolated block address
#define WBL_CDFlywheel1_inter_block_adr_debug4              (WBL_BLK + DBG64SEL + (halWBL_CDFlywheelBlockAddr1<<BUS_STARTBIT) + 0x000A) //Interpolated block address
#define WBL_CDFlywheel1_real_block_adr_debug0               (WBL_BLK + DBG64SEL + (halWBL_CDFlywheelBlockAddr1<<BUS_STARTBIT) + 0x000B) //Decoded block address
#define WBL_CDFlywheel1_real_block_adr_debug1               (WBL_BLK + DBG64SEL + (halWBL_CDFlywheelBlockAddr1<<BUS_STARTBIT) + 0x000C) //Decoded block address
#define WBL_CDFlywheel1_real_block_adr_debug2               (WBL_BLK + DBG64SEL + (halWBL_CDFlywheelBlockAddr1<<BUS_STARTBIT) + 0x000D) //Decoded block address
#define WBL_CDFlywheel1_real_block_adr_debug3               (WBL_BLK + DBG64SEL + (halWBL_CDFlywheelBlockAddr1<<BUS_STARTBIT) + 0x000E) //Decoded block address
#define WBL_CDFlywheel1_real_block_adr_debug4               (WBL_BLK + DBG64SEL + (halWBL_CDFlywheelBlockAddr1<<BUS_STARTBIT) + 0x000F) //Decoded block address
//CDFlywheelBlockAddr2
#define WBL_CDFlywheel2_sysclk                              (WBL_BLK + DBG64SEL + (halWBL_CDFlywheelBlockAddr2<<BUS_STARTBIT) + 0x0000) //System clock
#define WBL_CDFlywheel2_writeclk                            (WBL_BLK + DBG64SEL + (halWBL_CDFlywheelBlockAddr2<<BUS_STARTBIT) + 0x0001) //Write clock
#define WBL_CDFlywheel2_atip_sync_i                         (WBL_BLK + DBG64SEL + (halWBL_CDFlywheelBlockAddr2<<BUS_STARTBIT) + 0x0002) //ATIP sync flywheel
#define WBL_CDFlywheel2_sync_inlock                         (WBL_BLK + DBG64SEL + (halWBL_CDFlywheelBlockAddr2<<BUS_STARTBIT) + 0x0003) //ATIP sync detection lock
#define WBL_CDFlywheel2_w441_int                            (WBL_BLK + DBG64SEL + (halWBL_CDFlywheelBlockAddr2<<BUS_STARTBIT) + 0x0004) //Pulse on every zerocrossing ref. cosine -> 2 * wobblefreq
#define WBL_CDFlywheel2_adr_inlock                          (WBL_BLK + DBG64SEL + (halWBL_CDFlywheelBlockAddr2<<BUS_STARTBIT) + 0x0005) //ATIP address flywheel lock indication
#define WBL_CDFlywheel2_inter_block_adr_debug0              (WBL_BLK + DBG64SEL + (halWBL_CDFlywheelBlockAddr2<<BUS_STARTBIT) + 0x0006) //Interpolated block address
#define WBL_CDFlywheel2_inter_block_adr_debug1              (WBL_BLK + DBG64SEL + (halWBL_CDFlywheelBlockAddr2<<BUS_STARTBIT) + 0x0007) //Interpolated block address
#define WBL_CDFlywheel2_inter_block_adr_debug2              (WBL_BLK + DBG64SEL + (halWBL_CDFlywheelBlockAddr2<<BUS_STARTBIT) + 0x0008) //Interpolated block address
#define WBL_CDFlywheel2_inter_block_adr_debug3              (WBL_BLK + DBG64SEL + (halWBL_CDFlywheelBlockAddr2<<BUS_STARTBIT) + 0x0009) //Interpolated block address
#define WBL_CDFlywheel2_inter_block_adr_debug4              (WBL_BLK + DBG64SEL + (halWBL_CDFlywheelBlockAddr2<<BUS_STARTBIT) + 0x000A) //Interpolated block address
#define WBL_CDFlywheel2_real_block_adr_debug0               (WBL_BLK + DBG64SEL + (halWBL_CDFlywheelBlockAddr2<<BUS_STARTBIT) + 0x000B) //Decoded block address
#define WBL_CDFlywheel2_real_block_adr_debug1               (WBL_BLK + DBG64SEL + (halWBL_CDFlywheelBlockAddr2<<BUS_STARTBIT) + 0x000C) //Decoded block address
#define WBL_CDFlywheel2_real_block_adr_debug2               (WBL_BLK + DBG64SEL + (halWBL_CDFlywheelBlockAddr2<<BUS_STARTBIT) + 0x000D) //Decoded block address
#define WBL_CDFlywheel2_real_block_adr_debug3               (WBL_BLK + DBG64SEL + (halWBL_CDFlywheelBlockAddr2<<BUS_STARTBIT) + 0x000E) //Decoded block address
#define WBL_CDFlywheel2_real_block_adr_debug4               (WBL_BLK + DBG64SEL + (halWBL_CDFlywheelBlockAddr2<<BUS_STARTBIT) + 0x000F) //Decoded block address
//CDFlywheelMSFAddr
#define WBL_CDFlywheelMSF_interp_frames_debug0              (WBL_BLK + DBG64SEL + (halWBL_CDFlywheelMSFAddr<<BUS_STARTBIT) + 0x0000) //Interpolated F address
#define WBL_CDFlywheelMSF_interp_frames_debug1              (WBL_BLK + DBG64SEL + (halWBL_CDFlywheelMSFAddr<<BUS_STARTBIT) + 0x0001) //Interpolated F address
#define WBL_CDFlywheelMSF_interp_frames_debug2              (WBL_BLK + DBG64SEL + (halWBL_CDFlywheelMSFAddr<<BUS_STARTBIT) + 0x0002) //Interpolated F address
#define WBL_CDFlywheelMSF_interp_frames_debug3              (WBL_BLK + DBG64SEL + (halWBL_CDFlywheelMSFAddr<<BUS_STARTBIT) + 0x0003) //Interpolated F address
#define WBL_CDFlywheelMSF_interp_frames_debug4              (WBL_BLK + DBG64SEL + (halWBL_CDFlywheelMSFAddr<<BUS_STARTBIT) + 0x0004) //Interpolated F address
#define WBL_CDFlywheelMSF_interp_frames_debug5              (WBL_BLK + DBG64SEL + (halWBL_CDFlywheelMSFAddr<<BUS_STARTBIT) + 0x0005) //Interpolated F address
#define WBL_CDFlywheelMSF_interp_seconds_debug0             (WBL_BLK + DBG64SEL + (halWBL_CDFlywheelMSFAddr<<BUS_STARTBIT) + 0x0006) //Interpolated S address
#define WBL_CDFlywheelMSF_interp_seconds_debug1             (WBL_BLK + DBG64SEL + (halWBL_CDFlywheelMSFAddr<<BUS_STARTBIT) + 0x0007) //Interpolated S address
#define WBL_CDFlywheelMSF_interp_seconds_debug2             (WBL_BLK + DBG64SEL + (halWBL_CDFlywheelMSFAddr<<BUS_STARTBIT) + 0x0008) //Interpolated S address
#define WBL_CDFlywheelMSF_interp_seconds_debug3             (WBL_BLK + DBG64SEL + (halWBL_CDFlywheelMSFAddr<<BUS_STARTBIT) + 0x0009) //Interpolated S address
#define WBL_CDFlywheelMSF_interp_seconds_debug4             (WBL_BLK + DBG64SEL + (halWBL_CDFlywheelMSFAddr<<BUS_STARTBIT) + 0x000A) //Interpolated S address
#define WBL_CDFlywheelMSF_interp_seconds_debug5             (WBL_BLK + DBG64SEL + (halWBL_CDFlywheelMSFAddr<<BUS_STARTBIT) + 0x000B) //Interpolated S address
#define WBL_CDFlywheelMSF_interp_minutes_debug0             (WBL_BLK + DBG64SEL + (halWBL_CDFlywheelMSFAddr<<BUS_STARTBIT) + 0x000C) //Interpolated M address
#define WBL_CDFlywheelMSF_interp_minutes_debug1             (WBL_BLK + DBG64SEL + (halWBL_CDFlywheelMSFAddr<<BUS_STARTBIT) + 0x000D) //Interpolated M address
#define WBL_CDFlywheelMSF_interp_minutes_debug2             (WBL_BLK + DBG64SEL + (halWBL_CDFlywheelMSFAddr<<BUS_STARTBIT) + 0x000E) //Interpolated M address
#define WBL_CDFlywheelMSF_interp_minutes_debug3             (WBL_BLK + DBG64SEL + (halWBL_CDFlywheelMSFAddr<<BUS_STARTBIT) + 0x000F) //Interpolated M address
//EncoderInterface1
#define WBL_EncoderInterface1_wobbleclk                     (WBL_BLK + DBG64SEL + (halWBL_EncoderInterface1<<BUS_STARTBIT) + 0x0000) //Interpolated F address
#define WBL_EncoderInterface1_wobble_ifclk                  (WBL_BLK + DBG64SEL + (halWBL_EncoderInterface1<<BUS_STARTBIT) + 0x0001) //Interpolated F address
#define WBL_EncoderInterface1_wzerox_pulse                  (WBL_BLK + DBG64SEL + (halWBL_EncoderInterface1<<BUS_STARTBIT) + 0x0002) //Interpolated F address
#define WBL_EncoderInterface1_dvd_block_address_valid_in    (WBL_BLK + DBG64SEL + (halWBL_EncoderInterface1<<BUS_STARTBIT) + 0x0003) //Interpolated F address
#define WBL_EncoderInterface1_cd_atip_sync_in               (WBL_BLK + DBG64SEL + (halWBL_EncoderInterface1<<BUS_STARTBIT) + 0x0004) //Interpolated F address
#define WBL_EncoderInterface1_bd_adip_address_valid_in      (WBL_BLK + DBG64SEL + (halWBL_EncoderInterface1<<BUS_STARTBIT) + 0x0005) //Interpolated F address
#define WBL_EncoderInterface1_hddvd_address_valid_in        (WBL_BLK + DBG64SEL + (halWBL_EncoderInterface1<<BUS_STARTBIT) + 0x0006) //Interpolated S address
#define WBL_EncoderInterface1_wzerox_ext_dbg                (WBL_BLK + DBG64SEL + (halWBL_EncoderInterface1<<BUS_STARTBIT) + 0x0007) //Interpolated S address
#define WBL_EncoderInterface1_dvd_block_addr_valid_ext_dbg  (WBL_BLK + DBG64SEL + (halWBL_EncoderInterface1<<BUS_STARTBIT) + 0x0008) //Interpolated S address
#define WBL_EncoderInterface1_cd_atip_sync_ext_dbg          (WBL_BLK + DBG64SEL + (halWBL_EncoderInterface1<<BUS_STARTBIT) + 0x0009) //Interpolated S address
#define WBL_EncoderInterface1_bd_adip_address_valid_ext_dbg (WBL_BLK + DBG64SEL + (halWBL_EncoderInterface1<<BUS_STARTBIT) + 0x000A) //Interpolated S address
#define WBL_EncoderInterface1_hddvd_address_valid_ext_dbg   (WBL_BLK + DBG64SEL + (halWBL_EncoderInterface1<<BUS_STARTBIT) + 0x000B) //Interpolated S address
#define WBL_EncoderInterface1_dvd_hfaddr_toggle             (WBL_BLK + DBG64SEL + (halWBL_EncoderInterface1<<BUS_STARTBIT) + 0x000C) //Interpolated M address
#define WBL_EncoderInterface1_hf_block_address_valid_interp (WBL_BLK + DBG64SEL + (halWBL_EncoderInterface1<<BUS_STARTBIT) + 0x000D) //Interpolated M address
#define WBL_EncoderInterface1_dvd_block_addr_valid_ext_int  (WBL_BLK + DBG64SEL + (halWBL_EncoderInterface1<<BUS_STARTBIT) + 0x000E) //Interpolated M address
#define WBL_EncoderInterface1_wzerox_ext_int                (WBL_BLK + DBG64SEL + (halWBL_EncoderInterface1<<BUS_STARTBIT) + 0x000F) //Interpolated M address
//EncoderInterface2
#define WBL_EncoderInterface2_wobbleclk                     (WBL_BLK + DBG64SEL + (halWBL_EncoderInterface2<<BUS_STARTBIT) + 0x0000) //Interpolated F address
#define WBL_EncoderInterface2_wobble_ifclk                  (WBL_BLK + DBG64SEL + (halWBL_EncoderInterface2<<BUS_STARTBIT) + 0x0001) //Interpolated F address
#define WBL_EncoderInterface2_dto_inc_before_zerox0         (WBL_BLK + DBG64SEL + (halWBL_EncoderInterface2<<BUS_STARTBIT) + 0x0002) //Interpolated F address
#define WBL_EncoderInterface2_dto_inc_before_zerox1         (WBL_BLK + DBG64SEL + (halWBL_EncoderInterface2<<BUS_STARTBIT) + 0x0003) //Interpolated F address
#define WBL_EncoderInterface2_dto_inc_before_zerox2         (WBL_BLK + DBG64SEL + (halWBL_EncoderInterface2<<BUS_STARTBIT) + 0x0004) //Interpolated F address
#define WBL_EncoderInterface2_hfaddr_confid0                (WBL_BLK + DBG64SEL + (halWBL_EncoderInterface2<<BUS_STARTBIT) + 0x0005) //Interpolated F address
#define WBL_EncoderInterface2_hfaddr_confid1                (WBL_BLK + DBG64SEL + (halWBL_EncoderInterface2<<BUS_STARTBIT) + 0x0006) //Interpolated S address
#define WBL_EncoderInterface2_hfaddr_confid2                (WBL_BLK + DBG64SEL + (halWBL_EncoderInterface2<<BUS_STARTBIT) + 0x0007) //Interpolated S address
#define WBL_EncoderInterface2_hfaddr_confid3                (WBL_BLK + DBG64SEL + (halWBL_EncoderInterface2<<BUS_STARTBIT) + 0x0008) //Interpolated S address
#define WBL_EncoderInterface2_hfaddr_lock                   (WBL_BLK + DBG64SEL + (halWBL_EncoderInterface2<<BUS_STARTBIT) + 0x0009) //Interpolated S address
#define WBL_EncoderInterface2_hfaddr_resync                 (WBL_BLK + DBG64SEL + (halWBL_EncoderInterface2<<BUS_STARTBIT) + 0x000A) //Interpolated S address
#define WBL_EncoderInterface2_wobble_cnt0                   (WBL_BLK + DBG64SEL + (halWBL_EncoderInterface2<<BUS_STARTBIT) + 0x000B) //Interpolated S address
#define WBL_EncoderInterface2_wobble_cnt1                   (WBL_BLK + DBG64SEL + (halWBL_EncoderInterface2<<BUS_STARTBIT) + 0x000C) //Interpolated M address
#define WBL_EncoderInterface2_wobble_cnt2                   (WBL_BLK + DBG64SEL + (halWBL_EncoderInterface2<<BUS_STARTBIT) + 0x000D) //Interpolated M address
#define WBL_EncoderInterface2_wobble_cnt3                   (WBL_BLK + DBG64SEL + (halWBL_EncoderInterface2<<BUS_STARTBIT) + 0x000E) //Interpolated M address
#define WBL_EncoderInterface2_wobble_cnt4                   (WBL_BLK + DBG64SEL + (halWBL_EncoderInterface2<<BUS_STARTBIT) + 0x000F) //Interpolated M address
//EncoderInterface3
#define WBL_EncoderInterface3_wobble_ifclk                  (WBL_BLK + DBG64SEL + (halWBL_EncoderInterface3<<BUS_STARTBIT) + 0x0000) //Interpolated F address
#define WBL_EncoderInterface3_wobble_cnt0                   (WBL_BLK + DBG64SEL + (halWBL_EncoderInterface3<<BUS_STARTBIT) + 0x0001) //Interpolated F address
#define WBL_EncoderInterface3_wobble_cnt1                   (WBL_BLK + DBG64SEL + (halWBL_EncoderInterface3<<BUS_STARTBIT) + 0x0002) //Interpolated F address
#define WBL_EncoderInterface3_wobble_cnt2                   (WBL_BLK + DBG64SEL + (halWBL_EncoderInterface3<<BUS_STARTBIT) + 0x0003) //Interpolated F address
#define WBL_EncoderInterface3_wobble_cnt3                   (WBL_BLK + DBG64SEL + (halWBL_EncoderInterface3<<BUS_STARTBIT) + 0x0004) //Interpolated F address
#define WBL_EncoderInterface3_wobble_cnt4                   (WBL_BLK + DBG64SEL + (halWBL_EncoderInterface3<<BUS_STARTBIT) + 0x0005) //Interpolated F address
#define WBL_EncoderInterface3_wobble_cnt5                   (WBL_BLK + DBG64SEL + (halWBL_EncoderInterface3<<BUS_STARTBIT) + 0x0006) //Interpolated S address
#define WBL_EncoderInterface3_wobble_cnt6                   (WBL_BLK + DBG64SEL + (halWBL_EncoderInterface3<<BUS_STARTBIT) + 0x0007) //Interpolated S address
#define WBL_EncoderInterface3_wobble_cnt7                   (WBL_BLK + DBG64SEL + (halWBL_EncoderInterface3<<BUS_STARTBIT) + 0x0008) //Interpolated S address
#define WBL_EncoderInterface3_wobble_cnt8                   (WBL_BLK + DBG64SEL + (halWBL_EncoderInterface3<<BUS_STARTBIT) + 0x0009) //Interpolated S address
#define WBL_EncoderInterface3_wobble_cnt9                   (WBL_BLK + DBG64SEL + (halWBL_EncoderInterface3<<BUS_STARTBIT) + 0x000A) //Interpolated S address
#define WBL_EncoderInterface3_wobble_cnt10                  (WBL_BLK + DBG64SEL + (halWBL_EncoderInterface3<<BUS_STARTBIT) + 0x000B) //Interpolated S address
#define WBL_EncoderInterface3_wobble_cnt11                  (WBL_BLK + DBG64SEL + (halWBL_EncoderInterface3<<BUS_STARTBIT) + 0x000C) //Interpolated M address
#define WBL_EncoderInterface3_wobble_cnt12                  (WBL_BLK + DBG64SEL + (halWBL_EncoderInterface3<<BUS_STARTBIT) + 0x000D) //Interpolated M address
#define WBL_EncoderInterface3_wobble_cnt13                  (WBL_BLK + DBG64SEL + (halWBL_EncoderInterface3<<BUS_STARTBIT) + 0x000E) //Interpolated M address
#define WBL_EncoderInterface3_wobble_cnt14                  (WBL_BLK + DBG64SEL + (halWBL_EncoderInterface3<<BUS_STARTBIT) + 0x000F) //Interpolated M address

/****************************************************************************
* DGB64 BUS DEM BLOCK
****************************************************************************/

//DEM BD
#define DEM_BD_demod_bd_clk                             (DEM_BLK + DBG64SEL + (halDMOD_BDMode<<BUS_STARTBIT) + 0x0000)
#define DEM_BD_last_frame                               (DEM_BLK + DBG64SEL + (halDMOD_BDMode<<BUS_STARTBIT) + 0x0001)
#define DEM_BD_runin_init_demod                         (DEM_BLK + DBG64SEL + (halDMOD_BDMode<<BUS_STARTBIT) + 0x0002)
#define DEM_BD_demod_force                              (DEM_BLK + DBG64SEL + (halDMOD_BDMode<<BUS_STARTBIT) + 0x0003)
#define DEM_BD_demod_state_debug0                       (DEM_BLK + DBG64SEL + (halDMOD_BDMode<<BUS_STARTBIT) + 0x0004)
#define DEM_BD_demod_state_debug1                       (DEM_BLK + DBG64SEL + (halDMOD_BDMode<<BUS_STARTBIT) + 0x0005)
#define DEM_BD_frame_id_debug0                          (DEM_BLK + DBG64SEL + (halDMOD_BDMode<<BUS_STARTBIT) + 0x0006)
#define DEM_BD_frame_id_debug1                          (DEM_BLK + DBG64SEL + (halDMOD_BDMode<<BUS_STARTBIT) + 0x0007)
#define DEM_BD_frame_id_debug2                          (DEM_BLK + DBG64SEL + (halDMOD_BDMode<<BUS_STARTBIT) + 0x0008)
#define DEM_BD_frame_id_debug3                          (DEM_BLK + DBG64SEL + (halDMOD_BDMode<<BUS_STARTBIT) + 0x0009)
#define DEM_BD_frame_id_val_debug                       (DEM_BLK + DBG64SEL + (halDMOD_BDMode<<BUS_STARTBIT) + 0x000A)
#define DEM_BD_runin_init_demod_debug                   (DEM_BLK + DBG64SEL + (halDMOD_BDMode<<BUS_STARTBIT) + 0x000B)
#define DEM_BD_runin_start_demod                        (DEM_BLK + DBG64SEL + (halDMOD_BDMode<<BUS_STARTBIT) + 0x000C)
#define DEM_BD_last_frame_debug                         (DEM_BLK + DBG64SEL + (halDMOD_BDMode<<BUS_STARTBIT) + 0x000D)
#define DEM_BD_hold                                     (DEM_BLK + DBG64SEL + (halDMOD_BDMode<<BUS_STARTBIT) + 0x000E)
#define DEM_BD_0b                                       (DEM_BLK + DBG64SEL + (halDMOD_BDMode<<BUS_STARTBIT) + 0x000F)
#define DEM_BD_data_int0                                (DEM_BLK + DBG64SEL + (halDMOD_BDMode<<BUS_STARTBIT) + 0x0010)
#define DEM_BD_data_int1                                (DEM_BLK + DBG64SEL + (halDMOD_BDMode<<BUS_STARTBIT) + 0x0011)
#define DEM_BD_data_int2                                (DEM_BLK + DBG64SEL + (halDMOD_BDMode<<BUS_STARTBIT) + 0x0012)
#define DEM_BD_data_int3                                (DEM_BLK + DBG64SEL + (halDMOD_BDMode<<BUS_STARTBIT) + 0x0013)
#define DEM_BD_data_int4                                (DEM_BLK + DBG64SEL + (halDMOD_BDMode<<BUS_STARTBIT) + 0x0014)
#define DEM_BD_data_int5                                (DEM_BLK + DBG64SEL + (halDMOD_BDMode<<BUS_STARTBIT) + 0x0015)
#define DEM_BD_data_int6                                (DEM_BLK + DBG64SEL + (halDMOD_BDMode<<BUS_STARTBIT) + 0x0016)
#define DEM_BD_data_int7                                (DEM_BLK + DBG64SEL + (halDMOD_BDMode<<BUS_STARTBIT) + 0x0017)
#define DEM_BD_dataval_int                              (DEM_BLK + DBG64SEL + (halDMOD_BDMode<<BUS_STARTBIT) + 0x0018)
#define DEM_BD_datafirstval_int                         (DEM_BLK + DBG64SEL + (halDMOD_BDMode<<BUS_STARTBIT) + 0x0019)
#define DEM_BD_datalastval_int                          (DEM_BLK + DBG64SEL + (halDMOD_BDMode<<BUS_STARTBIT) + 0x001A)
#define DEM_BD_sectorstart_int                          (DEM_BLK + DBG64SEL + (halDMOD_BDMode<<BUS_STARTBIT) + 0x001B)
#define DEM_BD_erasure_int                              (DEM_BLK + DBG64SEL + (halDMOD_BDMode<<BUS_STARTBIT) + 0x001C)
#define DEM_BD_syncval_int                              (DEM_BLK + DBG64SEL + (halDMOD_BDMode<<BUS_STARTBIT) + 0x001D)
#define DEM_BD_framestart_int                           (DEM_BLK + DBG64SEL + (halDMOD_BDMode<<BUS_STARTBIT) + 0x001E)
#define DEM_BD_demod_bd_clk_a                           (DEM_BLK + DBG64SEL + (halDMOD_BDMode<<BUS_STARTBIT) + 0x001F)
#define DEM_BD_syncpos_lock_int                         (DEM_BLK + DBG64SEL + (halDMOD_BDMode<<BUS_STARTBIT) + 0x0020)
#define DEM_BD_frameno_lock_int                         (DEM_BLK + DBG64SEL + (halDMOD_BDMode<<BUS_STARTBIT) + 0x0021)
#define DEM_BD_sync_debug                               (DEM_BLK + DBG64SEL + (halDMOD_BDMode<<BUS_STARTBIT) + 0x0022)
#define DEM_BD_distsync_debug                           (DEM_BLK + DBG64SEL + (halDMOD_BDMode<<BUS_STARTBIT) + 0x0023)
#define DEM_BD_poscnt_debug0                            (DEM_BLK + DBG64SEL + (halDMOD_BDMode<<BUS_STARTBIT) + 0x0024)
#define DEM_BD_poscnt_debug1                            (DEM_BLK + DBG64SEL + (halDMOD_BDMode<<BUS_STARTBIT) + 0x0025)
#define DEM_BD_poscnt_debug2                            (DEM_BLK + DBG64SEL + (halDMOD_BDMode<<BUS_STARTBIT) + 0x0026)
#define DEM_BD_poscnt_debug3                            (DEM_BLK + DBG64SEL + (halDMOD_BDMode<<BUS_STARTBIT) + 0x0027)
#define DEM_BD_poscnt_debug4                            (DEM_BLK + DBG64SEL + (halDMOD_BDMode<<BUS_STARTBIT) + 0x0028)
#define DEM_BD_position_debug0                          (DEM_BLK + DBG64SEL + (halDMOD_BDMode<<BUS_STARTBIT) + 0x0029)
#define DEM_BD_position_debug1                          (DEM_BLK + DBG64SEL + (halDMOD_BDMode<<BUS_STARTBIT) + 0x002A)
#define DEM_BD_position_debug2                          (DEM_BLK + DBG64SEL + (halDMOD_BDMode<<BUS_STARTBIT) + 0x002B)
#define DEM_BD_position_debug3                          (DEM_BLK + DBG64SEL + (halDMOD_BDMode<<BUS_STARTBIT) + 0x002C)
#define DEM_BD_position_debug4                          (DEM_BLK + DBG64SEL + (halDMOD_BDMode<<BUS_STARTBIT) + 0x002D)
#define DEM_BD_sync_cor_pos                             (DEM_BLK + DBG64SEL + (halDMOD_BDMode<<BUS_STARTBIT) + 0x002E)
#define DEM_BD_sync_cor_color                           (DEM_BLK + DBG64SEL + (halDMOD_BDMode<<BUS_STARTBIT) + 0x002F)
//DEM PIC1
#define DEM_PIC1_pic_frame_number_en_int                (DEM_BLK + DBG64SEL + (halDMOD_PICMode<<BUS_STARTBIT) + 0x0100)
#define DEM_PIC1_pic_frame_number_int0                  (DEM_BLK + DBG64SEL + (halDMOD_PICMode<<BUS_STARTBIT) + 0x0101)
#define DEM_PIC1_pic_frame_number_int1                  (DEM_BLK + DBG64SEL + (halDMOD_PICMode<<BUS_STARTBIT) + 0x0102)
#define DEM_PIC1_pic_frame_number_int2                  (DEM_BLK + DBG64SEL + (halDMOD_PICMode<<BUS_STARTBIT) + 0x0103)
#define DEM_PIC1_pic_frame_number_int3                  (DEM_BLK + DBG64SEL + (halDMOD_PICMode<<BUS_STARTBIT) + 0x0104)
#define DEM_PIC1_pic_frame_number_int4                  (DEM_BLK + DBG64SEL + (halDMOD_PICMode<<BUS_STARTBIT) + 0x0105)
#define DEM_PIC1_pic_sector_start_int                   (DEM_BLK + DBG64SEL + (halDMOD_PICMode<<BUS_STARTBIT) + 0x0106)
#define DEM_PIC1_pic_byte_en_int                        (DEM_BLK + DBG64SEL + (halDMOD_PICMode<<BUS_STARTBIT) + 0x0107)
#define DEM_PIC1_pic_byte_int0                          (DEM_BLK + DBG64SEL + (halDMOD_PICMode<<BUS_STARTBIT) + 0x0108)
#define DEM_PIC1_pic_byte_int1                          (DEM_BLK + DBG64SEL + (halDMOD_PICMode<<BUS_STARTBIT) + 0x0109)
#define DEM_PIC1_pic_byte_int2                          (DEM_BLK + DBG64SEL + (halDMOD_PICMode<<BUS_STARTBIT) + 0x010A)
#define DEM_PIC1_pic_byte_int3                          (DEM_BLK + DBG64SEL + (halDMOD_PICMode<<BUS_STARTBIT) + 0x010B)
#define DEM_PIC1_pic_byte_int4                          (DEM_BLK + DBG64SEL + (halDMOD_PICMode<<BUS_STARTBIT) + 0x010C)
#define DEM_PIC1_pic_byte_int5                          (DEM_BLK + DBG64SEL + (halDMOD_PICMode<<BUS_STARTBIT) + 0x010D)
#define DEM_PIC1_pic_byte_int6                          (DEM_BLK + DBG64SEL + (halDMOD_PICMode<<BUS_STARTBIT) + 0x010E)
#define DEM_PIC1_pic_byte_int7                          (DEM_BLK + DBG64SEL + (halDMOD_PICMode<<BUS_STARTBIT) + 0x010F)
//DEM PIC2
#define DEM_PIC2_demod_bd_clk                           (DEM_BLK + DBG64SEL + (halDMOD_PICMode<<BUS_STARTBIT) + 0x0200)
#define DEM_PIC2_pic_sync_coinc                         (DEM_BLK + DBG64SEL + (halDMOD_PICMode<<BUS_STARTBIT) + 0x0201)
#define DEM_PIC2_sync_sample_enable                     (DEM_BLK + DBG64SEL + (halDMOD_PICMode<<BUS_STARTBIT) + 0x0202)
#define DEM_PIC2_sync_sample0                           (DEM_BLK + DBG64SEL + (halDMOD_PICMode<<BUS_STARTBIT) + 0x0203)
#define DEM_PIC2_sync_sample1                           (DEM_BLK + DBG64SEL + (halDMOD_PICMode<<BUS_STARTBIT) + 0x0204)
#define DEM_PIC2_sync_sample2                           (DEM_BLK + DBG64SEL + (halDMOD_PICMode<<BUS_STARTBIT) + 0x0205)
#define DEM_PIC2_sync_sample3                           (DEM_BLK + DBG64SEL + (halDMOD_PICMode<<BUS_STARTBIT) + 0x0206)
#define DEM_PIC2_sync_sample4                           (DEM_BLK + DBG64SEL + (halDMOD_PICMode<<BUS_STARTBIT) + 0x0207)
#define DEM_PIC2_sync_sample5                           (DEM_BLK + DBG64SEL + (halDMOD_PICMode<<BUS_STARTBIT) + 0x0208)
#define DEM_PIC2_sync_sample6                           (DEM_BLK + DBG64SEL + (halDMOD_PICMode<<BUS_STARTBIT) + 0x0209)
#define DEM_PIC2_sync_sample7                           (DEM_BLK + DBG64SEL + (halDMOD_PICMode<<BUS_STARTBIT) + 0x020A)
#define DEM_PIC2_sync_sample8                           (DEM_BLK + DBG64SEL + (halDMOD_PICMode<<BUS_STARTBIT) + 0x020B)
#define DEM_PIC2_sync_sample9                           (DEM_BLK + DBG64SEL + (halDMOD_PICMode<<BUS_STARTBIT) + 0x020C)
#define DEM_PIC2_sync_sample10                          (DEM_BLK + DBG64SEL + (halDMOD_PICMode<<BUS_STARTBIT) + 0x020D)
#define DEM_PIC2_pic_sync                               (DEM_BLK + DBG64SEL + (halDMOD_PICMode<<BUS_STARTBIT) + 0x020E)
#define DEM_PIC2_pic_sync_in_window                     (DEM_BLK + DBG64SEL + (halDMOD_PICMode<<BUS_STARTBIT) + 0x020F)
//DEM PIC3
#define DEM_PIC3_pic_debug_det_flywheel_pos0            (DEM_BLK + DBG64SEL + (halDMOD_PICMode<<BUS_STARTBIT) + 0x0300)
#define DEM_PIC3_pic_debug_det_flywheel_pos1            (DEM_BLK + DBG64SEL + (halDMOD_PICMode<<BUS_STARTBIT) + 0x0301)
#define DEM_PIC3_pic_debug_det_flywheel_pos2            (DEM_BLK + DBG64SEL + (halDMOD_PICMode<<BUS_STARTBIT) + 0x0302)
#define DEM_PIC3_pic_debug_det_flywheel_pos3            (DEM_BLK + DBG64SEL + (halDMOD_PICMode<<BUS_STARTBIT) + 0x0303)
#define DEM_PIC3_pic_debug_det_flywheel_pos4            (DEM_BLK + DBG64SEL + (halDMOD_PICMode<<BUS_STARTBIT) + 0x0304)
#define DEM_PIC3_pic_debug_det_flywheel_pos5            (DEM_BLK + DBG64SEL + (halDMOD_PICMode<<BUS_STARTBIT) + 0x0305)
#define DEM_PIC3_pic_debug_det_flywheel_pos6            (DEM_BLK + DBG64SEL + (halDMOD_PICMode<<BUS_STARTBIT) + 0x0306)
#define DEM_PIC3_pic_debug_det_flywheel_pos7            (DEM_BLK + DBG64SEL + (halDMOD_PICMode<<BUS_STARTBIT) + 0x0307)
#define DEM_PIC3_pic_debug_det_flywheel_pos8            (DEM_BLK + DBG64SEL + (halDMOD_PICMode<<BUS_STARTBIT) + 0x0308)
#define DEM_PIC3_pic_debug_det_flywheel_pos9            (DEM_BLK + DBG64SEL + (halDMOD_PICMode<<BUS_STARTBIT) + 0x0309)
#define DEM_PIC3_pic_debug_det_demod_state_std          (DEM_BLK + DBG64SEL + (halDMOD_PICMode<<BUS_STARTBIT) + 0x030A)
#define DEM_PIC3_pic_debug_det_window_resync            (DEM_BLK + DBG64SEL + (halDMOD_PICMode<<BUS_STARTBIT) + 0x030B)
#define DEM_PIC3_pic_color_resync_int                   (DEM_BLK + DBG64SEL + (halDMOD_PICMode<<BUS_STARTBIT) + 0x030C)
#define DEM_PIC3_pic_color_lock_int                     (DEM_BLK + DBG64SEL + (halDMOD_PICMode<<BUS_STARTBIT) + 0x030D)
#define DEM_PIC3_pic_sync_lock_int                      (DEM_BLK + DBG64SEL + (halDMOD_PICMode<<BUS_STARTBIT) + 0x030E)
#define DEM_PIC3_demod_bd_clk                           (DEM_BLK + DBG64SEL + (halDMOD_PICMode<<BUS_STARTBIT) + 0x030F)
//DEM PIC4
#define DEM_PIC4_pic_debug_det_bit_pat0                 (DEM_BLK + DBG64SEL + (halDMOD_PICMode<<BUS_STARTBIT) + 0x0400)
#define DEM_PIC4_pic_debug_det_bit_pat1                 (DEM_BLK + DBG64SEL + (halDMOD_PICMode<<BUS_STARTBIT) + 0x0401)
#define DEM_PIC4_pic_debug_det_bit_pat2                 (DEM_BLK + DBG64SEL + (halDMOD_PICMode<<BUS_STARTBIT) + 0x0402)
#define DEM_PIC4_pic_debug_det_bit_pat3                 (DEM_BLK + DBG64SEL + (halDMOD_PICMode<<BUS_STARTBIT) + 0x0403)
#define DEM_PIC4_pic_debug_det_bit_pat4                 (DEM_BLK + DBG64SEL + (halDMOD_PICMode<<BUS_STARTBIT) + 0x0404)
#define DEM_PIC4_pic_debug_det_bit_pat5                 (DEM_BLK + DBG64SEL + (halDMOD_PICMode<<BUS_STARTBIT) + 0x0405)
#define DEM_PIC4_pic_debug_det_bit_pat6                 (DEM_BLK + DBG64SEL + (halDMOD_PICMode<<BUS_STARTBIT) + 0x0406)
#define DEM_PIC4_pic_debug_det_bit_pat7                 (DEM_BLK + DBG64SEL + (halDMOD_PICMode<<BUS_STARTBIT) + 0x0407)
#define DEM_PIC4_pic_debug_det_bit_pat8                 (DEM_BLK + DBG64SEL + (halDMOD_PICMode<<BUS_STARTBIT) + 0x0408)
#define DEM_PIC4_pic_debug_det_color0                   (DEM_BLK + DBG64SEL + (halDMOD_PICMode<<BUS_STARTBIT) + 0x0409)
#define DEM_PIC4_pic_debug_det_color1                   (DEM_BLK + DBG64SEL + (halDMOD_PICMode<<BUS_STARTBIT) + 0x040A)
#define DEM_PIC4_pic_debug_det_color2                   (DEM_BLK + DBG64SEL + (halDMOD_PICMode<<BUS_STARTBIT) + 0x040B)
#define DEM_PIC4_pic_debug_det_color3                   (DEM_BLK + DBG64SEL + (halDMOD_PICMode<<BUS_STARTBIT) + 0x040C)
#define DEM_PIC4_demod_bd_clk                           (DEM_BLK + DBG64SEL + (halDMOD_PICMode<<BUS_STARTBIT) + 0x040D)
//DEM PIC5
#define DEM_PIC5_pic_debug_det_fir_sync0                (DEM_BLK + DBG64SEL + (halDMOD_PICMode<<BUS_STARTBIT) + 0x0500)
#define DEM_PIC5_pic_debug_det_fir_sync1                (DEM_BLK + DBG64SEL + (halDMOD_PICMode<<BUS_STARTBIT) + 0x0501)
#define DEM_PIC5_pic_debug_det_fir_sync2                (DEM_BLK + DBG64SEL + (halDMOD_PICMode<<BUS_STARTBIT) + 0x0502)
#define DEM_PIC5_pic_debug_det_fir_sync3                (DEM_BLK + DBG64SEL + (halDMOD_PICMode<<BUS_STARTBIT) + 0x0503)
#define DEM_PIC5_pic_debug_det_fir_sync4                (DEM_BLK + DBG64SEL + (halDMOD_PICMode<<BUS_STARTBIT) + 0x0504)
#define DEM_PIC5_pic_debug_det_fir_sync5                (DEM_BLK + DBG64SEL + (halDMOD_PICMode<<BUS_STARTBIT) + 0x0505)
#define DEM_PIC5_pic_debug_det_fir_sync6                (DEM_BLK + DBG64SEL + (halDMOD_PICMode<<BUS_STARTBIT) + 0x0506)
#define DEM_PIC5_pic_debug_det_fir_sync7                (DEM_BLK + DBG64SEL + (halDMOD_PICMode<<BUS_STARTBIT) + 0x0507)
#define DEM_PIC5_pic_debug_det_fir_sync8                (DEM_BLK + DBG64SEL + (halDMOD_PICMode<<BUS_STARTBIT) + 0x0508)
#define DEM_PIC5_pic_debug_det_fir_sync9                (DEM_BLK + DBG64SEL + (halDMOD_PICMode<<BUS_STARTBIT) + 0x0509)
#define DEM_PIC5_demod_bd_clk                           (DEM_BLK + DBG64SEL + (halDMOD_PICMode<<BUS_STARTBIT) + 0x050A)
//DEM HDDVD
#define DEM_HDDVD_demod_hd_data_int7                    (DEM_BLK + DBG64SEL + (halDMOD_HDDVDMode<<BUS_STARTBIT) + 0x0000)
#define DEM_HDDVD_demod_hd_data_int6                    (DEM_BLK + DBG64SEL + (halDMOD_HDDVDMode<<BUS_STARTBIT) + 0x0001)
#define DEM_HDDVD_demod_hd_data_int5                    (DEM_BLK + DBG64SEL + (halDMOD_HDDVDMode<<BUS_STARTBIT) + 0x0002)
#define DEM_HDDVD_demod_hd_data_int4                    (DEM_BLK + DBG64SEL + (halDMOD_HDDVDMode<<BUS_STARTBIT) + 0x0003)
#define DEM_HDDVD_demod_hd_data_int3                    (DEM_BLK + DBG64SEL + (halDMOD_HDDVDMode<<BUS_STARTBIT) + 0x0004)
#define DEM_HDDVD_demod_hd_data_int2                    (DEM_BLK + DBG64SEL + (halDMOD_HDDVDMode<<BUS_STARTBIT) + 0x0005)
#define DEM_HDDVD_demod_hd_data_int1                    (DEM_BLK + DBG64SEL + (halDMOD_HDDVDMode<<BUS_STARTBIT) + 0x0006)
#define DEM_HDDVD_demod_hd_data_int0                    (DEM_BLK + DBG64SEL + (halDMOD_HDDVDMode<<BUS_STARTBIT) + 0x0007)
#define DEM_HDDVD_demod_hd_valid_int                    (DEM_BLK + DBG64SEL + (halDMOD_HDDVDMode<<BUS_STARTBIT) + 0x0008)
#define DEM_HDDVD_demod_hd_sector_start_int             (DEM_BLK + DBG64SEL + (halDMOD_HDDVDMode<<BUS_STARTBIT) + 0x0009)
#define DEM_HDDVD_demod_hd_frame_start_int              (DEM_BLK + DBG64SEL + (halDMOD_HDDVDMode<<BUS_STARTBIT) + 0x000A)
#define DEM_HDDVD_demod_hd_frame_sync_int               (DEM_BLK + DBG64SEL + (halDMOD_HDDVDMode<<BUS_STARTBIT) + 0x000B)
#define DEM_HDDVD_demod_hd_frame_sync_correct_int       (DEM_BLK + DBG64SEL + (halDMOD_HDDVDMode<<BUS_STARTBIT) + 0x000C)
#define DEM_HDDVD_demod_hd_erasure_int                  (DEM_BLK + DBG64SEL + (halDMOD_HDDVDMode<<BUS_STARTBIT) + 0x000D)
#define DEM_HDDVD_demod_hd_first_byte_of_datafield_int  (DEM_BLK + DBG64SEL + (halDMOD_HDDVDMode<<BUS_STARTBIT) + 0x000E)
#define DEM_HDDVD_demod_hd_last_byte_of_datafield_int   (DEM_BLK + DBG64SEL + (halDMOD_HDDVDMode<<BUS_STARTBIT) + 0x000F)
#define DEM_HDDVD_demod_hd_clk                          (DEM_BLK + DBG64SEL + (halDMOD_HDDVDMode<<BUS_STARTBIT) + 0x0010)
#define DEM_HDDVD_demod_hd_toggle_int                   (DEM_BLK + DBG64SEL + (halDMOD_HDDVDMode<<BUS_STARTBIT) + 0x0011)
#define DEM_HDDVD_demod_hd_sync_lock_int                (DEM_BLK + DBG64SEL + (halDMOD_HDDVDMode<<BUS_STARTBIT) + 0x0012)
#define DEM_HDDVD_demod_hd_color_lock_int               (DEM_BLK + DBG64SEL + (halDMOD_HDDVDMode<<BUS_STARTBIT) + 0x0013)
#define DEM_HDDVD_frame_no_int0                         (DEM_BLK + DBG64SEL + (halDMOD_HDDVDMode<<BUS_STARTBIT) + 0x0014)
#define DEM_HDDVD_frame_no_int1                         (DEM_BLK + DBG64SEL + (halDMOD_HDDVDMode<<BUS_STARTBIT) + 0x0015)
#define DEM_HDDVD_frame_no_int2                         (DEM_BLK + DBG64SEL + (halDMOD_HDDVDMode<<BUS_STARTBIT) + 0x0016)
#define DEM_HDDVD_frame_no_int3                         (DEM_BLK + DBG64SEL + (halDMOD_HDDVDMode<<BUS_STARTBIT) + 0x0017)
#define DEM_HDDVD_frame_no_int4                         (DEM_BLK + DBG64SEL + (halDMOD_HDDVDMode<<BUS_STARTBIT) + 0x0018)
#define DEM_HDDVD_frame_no_correct_int                  (DEM_BLK + DBG64SEL + (halDMOD_HDDVDMode<<BUS_STARTBIT) + 0x0019)
#define DEM_HDDVD_force_idle_rw                         (DEM_BLK + DBG64SEL + (halDMOD_HDDVDMode<<BUS_STARTBIT) + 0x001A)
#define DEM_HDDVD_vfo_field_rw                          (DEM_BLK + DBG64SEL + (halDMOD_HDDVDMode<<BUS_STARTBIT) + 0x001B)
#define DEM_HDDVD_datafield_rw                          (DEM_BLK + DBG64SEL + (halDMOD_HDDVDMode<<BUS_STARTBIT) + 0x001C)
#define DEM_HDDVD_lastframe_rw                          (DEM_BLK + DBG64SEL + (halDMOD_HDDVDMode<<BUS_STARTBIT) + 0x001D)
#define DEM_HDDVD_lastsector_rw                         (DEM_BLK + DBG64SEL + (halDMOD_HDDVDMode<<BUS_STARTBIT) + 0x001E)
#define DEM_HDDVD_lastframe_rom_resync                  (DEM_BLK + DBG64SEL + (halDMOD_HDDVDMode<<BUS_STARTBIT) + 0x001F)
#define DEM_HDDVD_lastsector_rom_resync                 (DEM_BLK + DBG64SEL + (halDMOD_HDDVDMode<<BUS_STARTBIT) + 0x0020)
#define DEM_HDDVD_winsync                               (DEM_BLK + DBG64SEL + (halDMOD_HDDVDMode<<BUS_STARTBIT) + 0x0021)
#define DEM_HDDVD_distsync                              (DEM_BLK + DBG64SEL + (halDMOD_HDDVDMode<<BUS_STARTBIT) + 0x0022)
#define DEM_HDDVD_distsync_window                       (DEM_BLK + DBG64SEL + (halDMOD_HDDVDMode<<BUS_STARTBIT) + 0x0023)
#define DEM_HDDVD_sync_id0                              (DEM_BLK + DBG64SEL + (halDMOD_HDDVDMode<<BUS_STARTBIT) + 0x0024)
#define DEM_HDDVD_sync_id1                              (DEM_BLK + DBG64SEL + (halDMOD_HDDVDMode<<BUS_STARTBIT) + 0x0025)
#define DEM_HDDVD_sync_id_valid                         (DEM_BLK + DBG64SEL + (halDMOD_HDDVDMode<<BUS_STARTBIT) + 0x0026)
#define DEM_HDDVD_sync_det                              (DEM_BLK + DBG64SEL + (halDMOD_HDDVDMode<<BUS_STARTBIT) + 0x0027)
#define DEM_HDDVD_sync_pred                             (DEM_BLK + DBG64SEL + (halDMOD_HDDVDMode<<BUS_STARTBIT) + 0x0028)
#define DEM_HDDVD_runin                                 (DEM_BLK + DBG64SEL + (halDMOD_HDDVDMode<<BUS_STARTBIT) + 0x0029)
#define DEM_HDDVD_resync                                (DEM_BLK + DBG64SEL + (halDMOD_HDDVDMode<<BUS_STARTBIT) + 0x002A)
#define DEM_HDDVD_sync_window                           (DEM_BLK + DBG64SEL + (halDMOD_HDDVDMode<<BUS_STARTBIT) + 0x002B)
#define DEM_HDDVD_sy3_det                               (DEM_BLK + DBG64SEL + (halDMOD_HDDVDMode<<BUS_STARTBIT) + 0x002C)
#define DEM_HDDVD_sync                                  (DEM_BLK + DBG64SEL + (halDMOD_HDDVDMode<<BUS_STARTBIT) + 0x002D)
#define DEM_HDDVD_half_frame                            (DEM_BLK + DBG64SEL + (halDMOD_HDDVDMode<<BUS_STARTBIT) + 0x002E)
#define DEM_HDDVD_demod_hd_clk_a                        (DEM_BLK + DBG64SEL + (halDMOD_HDDVDMode<<BUS_STARTBIT) + 0x002F)
//DEM CDDVD1
#define DEM_CDDVD1_cddvd_demod_clk                      (DEM_BLK + DBG64SEL + (halDMOD_CDDVDMode<<BUS_STARTBIT) + 0x0100)
#define DEM_CDDVD1_demod_frame_start_out                (DEM_BLK + DBG64SEL + (halDMOD_CDDVDMode<<BUS_STARTBIT) + 0x0101)
#define DEM_CDDVD1_demod_sector_start_out               (DEM_BLK + DBG64SEL + (halDMOD_CDDVDMode<<BUS_STARTBIT) + 0x0102)
#define DEM_CDDVD1_lock_in_int                          (DEM_BLK + DBG64SEL + (halDMOD_CDDVDMode<<BUS_STARTBIT) + 0x0103)
#define DEM_CDDVD1_f_lock_int                           (DEM_BLK + DBG64SEL + (halDMOD_CDDVDMode<<BUS_STARTBIT) + 0x0104)
#define DEM_CDDVD1_AM_sync_lock                         (DEM_BLK + DBG64SEL + (halDMOD_CDDVDMode<<BUS_STARTBIT) + 0x0105)
#define DEM_CDDVD1_demod_data_int0                      (DEM_BLK + DBG64SEL + (halDMOD_CDDVDMode<<BUS_STARTBIT) + 0x0106)
#define DEM_CDDVD1_demod_data_int1                      (DEM_BLK + DBG64SEL + (halDMOD_CDDVDMode<<BUS_STARTBIT) + 0x0107)
#define DEM_CDDVD1_demod_data_int2                      (DEM_BLK + DBG64SEL + (halDMOD_CDDVDMode<<BUS_STARTBIT) + 0x0108)
#define DEM_CDDVD1_demod_data_int3                      (DEM_BLK + DBG64SEL + (halDMOD_CDDVDMode<<BUS_STARTBIT) + 0x0109)
#define DEM_CDDVD1_demod_data_int4                      (DEM_BLK + DBG64SEL + (halDMOD_CDDVDMode<<BUS_STARTBIT) + 0x010A)
#define DEM_CDDVD1_demod_data_int5                      (DEM_BLK + DBG64SEL + (halDMOD_CDDVDMode<<BUS_STARTBIT) + 0x010B)
#define DEM_CDDVD1_demod_data_int6                      (DEM_BLK + DBG64SEL + (halDMOD_CDDVDMode<<BUS_STARTBIT) + 0x010C)
#define DEM_CDDVD1_demod_data_int7                      (DEM_BLK + DBG64SEL + (halDMOD_CDDVDMode<<BUS_STARTBIT) + 0x010D)
#define DEM_CDDVD1_demod_data_val_out                   (DEM_BLK + DBG64SEL + (halDMOD_CDDVDMode<<BUS_STARTBIT) + 0x010E)
#define DEM_CDDVD1_demod_dvdram_header_data_flag_out    (DEM_BLK + DBG64SEL + (halDMOD_CDDVDMode<<BUS_STARTBIT) + 0x010F)
#define DEM_CDDVD1_demod_dvdram_header_window           (DEM_BLK + DBG64SEL + (halDMOD_CDDVDMode<<BUS_STARTBIT) + 0x0110)
#define DEM_CDDVD1_demod_dvdram_start_demod             (DEM_BLK + DBG64SEL + (halDMOD_CDDVDMode<<BUS_STARTBIT) + 0x0111)
#define DEM_CDDVD1_sync                                 (DEM_BLK + DBG64SEL + (halDMOD_CDDVDMode<<BUS_STARTBIT) + 0x0112)
#define DEM_CDDVD1_AM_sync_int                          (DEM_BLK + DBG64SEL + (halDMOD_CDDVDMode<<BUS_STARTBIT) + 0x0113)
#define DEM_CDDVD1_PS_sync                              (DEM_BLK + DBG64SEL + (halDMOD_CDDVDMode<<BUS_STARTBIT) + 0x0114)
#define DEM_CDDVD1_header_track                         (DEM_BLK + DBG64SEL + (halDMOD_CDDVDMode<<BUS_STARTBIT) + 0x0115)
#define DEM_CDDVD1_demod_erasure_flag_int               (DEM_BLK + DBG64SEL + (halDMOD_CDDVDMode<<BUS_STARTBIT) + 0x0116)
#define DEM_CDDVD1_frameno_debug0                       (DEM_BLK + DBG64SEL + (halDMOD_CDDVDMode<<BUS_STARTBIT) + 0x0117)
#define DEM_CDDVD1_frameno_debug1                       (DEM_BLK + DBG64SEL + (halDMOD_CDDVDMode<<BUS_STARTBIT) + 0x0118)
#define DEM_CDDVD1_frameno_debug2                       (DEM_BLK + DBG64SEL + (halDMOD_CDDVDMode<<BUS_STARTBIT) + 0x0119)
#define DEM_CDDVD1_frameno_debug3                       (DEM_BLK + DBG64SEL + (halDMOD_CDDVDMode<<BUS_STARTBIT) + 0x011A)
#define DEM_CDDVD1_validframeno_debug                   (DEM_BLK + DBG64SEL + (halDMOD_CDDVDMode<<BUS_STARTBIT) + 0x011B)
#define DEM_CDDVD1_syncdet_state_debug0                 (DEM_BLK + DBG64SEL + (halDMOD_CDDVDMode<<BUS_STARTBIT) + 0x011C)
#define DEM_CDDVD1_syncdet_state_debug1                 (DEM_BLK + DBG64SEL + (halDMOD_CDDVDMode<<BUS_STARTBIT) + 0x011D)
#define DEM_CDDVD1_syncdet_state_debug2                 (DEM_BLK + DBG64SEL + (halDMOD_CDDVDMode<<BUS_STARTBIT) + 0x011E)
#define DEM_CDDVD1_syncdet_state_debug3                 (DEM_BLK + DBG64SEL + (halDMOD_CDDVDMode<<BUS_STARTBIT) + 0x011F)
#define DEM_CDDVD1_AMsyncdet_state_debug0               (DEM_BLK + DBG64SEL + (halDMOD_CDDVDMode<<BUS_STARTBIT) + 0x0120)
#define DEM_CDDVD1_AMsyncdet_state_debug1               (DEM_BLK + DBG64SEL + (halDMOD_CDDVDMode<<BUS_STARTBIT) + 0x0121)
//DEM CDDVD2
#define DEM_CDDVD2_dvd_dword_for_mm_debug0              (DEM_BLK + DBG64SEL + (halDMOD_CDDVDMode<<BUS_STARTBIT) + 0x0200)
#define DEM_CDDVD2_dvd_dword_for_mm_debug1              (DEM_BLK + DBG64SEL + (halDMOD_CDDVDMode<<BUS_STARTBIT) + 0x0201)
#define DEM_CDDVD2_dvd_dword_for_mm_debug2              (DEM_BLK + DBG64SEL + (halDMOD_CDDVDMode<<BUS_STARTBIT) + 0x0202)
#define DEM_CDDVD2_dvd_dword_for_mm_debug3              (DEM_BLK + DBG64SEL + (halDMOD_CDDVDMode<<BUS_STARTBIT) + 0x0203)
#define DEM_CDDVD2_dvd_dword_for_mm_debug4              (DEM_BLK + DBG64SEL + (halDMOD_CDDVDMode<<BUS_STARTBIT) + 0x0204)
#define DEM_CDDVD2_dvd_dword_for_mm_debug5              (DEM_BLK + DBG64SEL + (halDMOD_CDDVDMode<<BUS_STARTBIT) + 0x0205)
#define DEM_CDDVD2_dvd_dword_for_mm_debug6              (DEM_BLK + DBG64SEL + (halDMOD_CDDVDMode<<BUS_STARTBIT) + 0x0206)
#define DEM_CDDVD2_dvd_dword_for_mm_debug7              (DEM_BLK + DBG64SEL + (halDMOD_CDDVDMode<<BUS_STARTBIT) + 0x0207)
#define DEM_CDDVD2_dvd_dword_for_mm_debug8              (DEM_BLK + DBG64SEL + (halDMOD_CDDVDMode<<BUS_STARTBIT) + 0x0208)
#define DEM_CDDVD2_dvd_dword_for_mm_debug9              (DEM_BLK + DBG64SEL + (halDMOD_CDDVDMode<<BUS_STARTBIT) + 0x0209)
#define DEM_CDDVD2_dvd_dword_for_mm_debug10             (DEM_BLK + DBG64SEL + (halDMOD_CDDVDMode<<BUS_STARTBIT) + 0x020A)
#define DEM_CDDVD2_dvd_dword_for_mm_debug11             (DEM_BLK + DBG64SEL + (halDMOD_CDDVDMode<<BUS_STARTBIT) + 0x020B)
#define DEM_CDDVD2_dvd_dword_for_mm_debug12             (DEM_BLK + DBG64SEL + (halDMOD_CDDVDMode<<BUS_STARTBIT) + 0x020C)
#define DEM_CDDVD2_dvd_dword_for_mm_debug13             (DEM_BLK + DBG64SEL + (halDMOD_CDDVDMode<<BUS_STARTBIT) + 0x020D)
#define DEM_CDDVD2_dvd_dword_for_mm_debug14             (DEM_BLK + DBG64SEL + (halDMOD_CDDVDMode<<BUS_STARTBIT) + 0x020E)
#define DEM_CDDVD2_dvd_dword_for_mm_debug15             (DEM_BLK + DBG64SEL + (halDMOD_CDDVDMode<<BUS_STARTBIT) + 0x020F)
#define DEM_CDDVD2_dvd_dword_for_mm_debug16             (DEM_BLK + DBG64SEL + (halDMOD_CDDVDMode<<BUS_STARTBIT) + 0x0210)
#define DEM_CDDVD2_dvd_dword_for_mm_debug17             (DEM_BLK + DBG64SEL + (halDMOD_CDDVDMode<<BUS_STARTBIT) + 0x0211)
#define DEM_CDDVD2_dvd_dword_for_mm_debug18             (DEM_BLK + DBG64SEL + (halDMOD_CDDVDMode<<BUS_STARTBIT) + 0x0212)
#define DEM_CDDVD2_dvd_dword_for_mm_debug19             (DEM_BLK + DBG64SEL + (halDMOD_CDDVDMode<<BUS_STARTBIT) + 0x0213)
#define DEM_CDDVD2_dvd_dword_for_mm_debug20             (DEM_BLK + DBG64SEL + (halDMOD_CDDVDMode<<BUS_STARTBIT) + 0x0214)
#define DEM_CDDVD2_dvd_dword_for_mm_debug21             (DEM_BLK + DBG64SEL + (halDMOD_CDDVDMode<<BUS_STARTBIT) + 0x0215)
#define DEM_CDDVD2_dvd_dword_for_mm_debug22             (DEM_BLK + DBG64SEL + (halDMOD_CDDVDMode<<BUS_STARTBIT) + 0x0216)
#define DEM_CDDVD2_dvd_dword_for_mm_debug23             (DEM_BLK + DBG64SEL + (halDMOD_CDDVDMode<<BUS_STARTBIT) + 0x0217)
#define DEM_CDDVD2_dvd_dword_for_mm_debug24             (DEM_BLK + DBG64SEL + (halDMOD_CDDVDMode<<BUS_STARTBIT) + 0x0218)
#define DEM_CDDVD2_dvd_dword_for_mm_debug25             (DEM_BLK + DBG64SEL + (halDMOD_CDDVDMode<<BUS_STARTBIT) + 0x0219)
#define DEM_CDDVD2_dvd_dword_for_mm_debug26             (DEM_BLK + DBG64SEL + (halDMOD_CDDVDMode<<BUS_STARTBIT) + 0x021A)
#define DEM_CDDVD2_dvd_dword_for_mm_debug27             (DEM_BLK + DBG64SEL + (halDMOD_CDDVDMode<<BUS_STARTBIT) + 0x021B)
#define DEM_CDDVD2_dvd_dword_for_mm_debug28             (DEM_BLK + DBG64SEL + (halDMOD_CDDVDMode<<BUS_STARTBIT) + 0x021C)
#define DEM_CDDVD2_dvd_dword_for_mm_debug29             (DEM_BLK + DBG64SEL + (halDMOD_CDDVDMode<<BUS_STARTBIT) + 0x021D)
#define DEM_CDDVD2_dvd_dword_for_mm_debug30             (DEM_BLK + DBG64SEL + (halDMOD_CDDVDMode<<BUS_STARTBIT) + 0x021E)
#define DEM_CDDVD2_dvd_dword_for_mm_debug31             (DEM_BLK + DBG64SEL + (halDMOD_CDDVDMode<<BUS_STARTBIT) + 0x021F)
#define DEM_CDDVD2_dvd_dword_for_mm_valid_debug         (DEM_BLK + DBG64SEL + (halDMOD_CDDVDMode<<BUS_STARTBIT) + 0x0220)
#define DEM_CDDVD2_dvd_sync_window_for_mm_debug         (DEM_BLK + DBG64SEL + (halDMOD_CDDVDMode<<BUS_STARTBIT) + 0x0221)
#define DEM_CDDVD2_sync_window_state_debug0             (DEM_BLK + DBG64SEL + (halDMOD_CDDVDMode<<BUS_STARTBIT) + 0x0222)
#define DEM_CDDVD2_sync_window_state_debug1             (DEM_BLK + DBG64SEL + (halDMOD_CDDVDMode<<BUS_STARTBIT) + 0x0223)
//DEM Interface
#define DEM_Interface_demod_clk                         (DEM_BLK + DBG64SEL + (halDMOD_InterfaceMode<<BUS_STARTBIT) + 0x0000)
#define DEM_Interface_demod_data_valid_int              (DEM_BLK + DBG64SEL + (halDMOD_InterfaceMode<<BUS_STARTBIT) + 0x0001)
#define DEM_Interface_demod_data_int0                   (DEM_BLK + DBG64SEL + (halDMOD_InterfaceMode<<BUS_STARTBIT) + 0x0002)
#define DEM_Interface_demod_data_int1                   (DEM_BLK + DBG64SEL + (halDMOD_InterfaceMode<<BUS_STARTBIT) + 0x0003)
#define DEM_Interface_demod_data_int2                   (DEM_BLK + DBG64SEL + (halDMOD_InterfaceMode<<BUS_STARTBIT) + 0x0004)
#define DEM_Interface_demod_data_int3                   (DEM_BLK + DBG64SEL + (halDMOD_InterfaceMode<<BUS_STARTBIT) + 0x0005)
#define DEM_Interface_demod_data_int4                   (DEM_BLK + DBG64SEL + (halDMOD_InterfaceMode<<BUS_STARTBIT) + 0x0006)
#define DEM_Interface_demod_data_int5                   (DEM_BLK + DBG64SEL + (halDMOD_InterfaceMode<<BUS_STARTBIT) + 0x0007)
#define DEM_Interface_demod_data_int6                   (DEM_BLK + DBG64SEL + (halDMOD_InterfaceMode<<BUS_STARTBIT) + 0x0008)
#define DEM_Interface_demod_data_int7                   (DEM_BLK + DBG64SEL + (halDMOD_InterfaceMode<<BUS_STARTBIT) + 0x0009)
#define DEM_Interface_demod_erasure_flag_int            (DEM_BLK + DBG64SEL + (halDMOD_InterfaceMode<<BUS_STARTBIT) + 0x000A)
#define DEM_Interface_demod_frame_start_int             (DEM_BLK + DBG64SEL + (halDMOD_InterfaceMode<<BUS_STARTBIT) + 0x000B)
#define DEM_Interface_demod_sector_start_int            (DEM_BLK + DBG64SEL + (halDMOD_InterfaceMode<<BUS_STARTBIT) + 0x000C)
#define DEM_Interface_demod_dvdram_header_data_flag_int (DEM_BLK + DBG64SEL + (halDMOD_InterfaceMode<<BUS_STARTBIT) + 0x000D)
#define DEM_Interface_demod_dvdram_header_id_start_int  (DEM_BLK + DBG64SEL + (halDMOD_InterfaceMode<<BUS_STARTBIT) + 0x000E)
#define DEM_Interface_demod_dvdram_header_finished_int  (DEM_BLK + DBG64SEL + (halDMOD_InterfaceMode<<BUS_STARTBIT) + 0x000F)
#define DEM_Interface_demod_frame_sync_int              (DEM_BLK + DBG64SEL + (halDMOD_InterfaceMode<<BUS_STARTBIT) + 0x0010)
#define DEM_Interface_demod_frame_sync_flag_int         (DEM_BLK + DBG64SEL + (halDMOD_InterfaceMode<<BUS_STARTBIT) + 0x0011)
#define DEM_Interface_demod_cd_subbyte_int              (DEM_BLK + DBG64SEL + (halDMOD_InterfaceMode<<BUS_STARTBIT) + 0x0012)
#define DEM_Interface_demod_cd_S0_subsync_int           (DEM_BLK + DBG64SEL + (halDMOD_InterfaceMode<<BUS_STARTBIT) + 0x0013)
#define DEM_Interface_demod_cd_S1_subsync_int           (DEM_BLK + DBG64SEL + (halDMOD_InterfaceMode<<BUS_STARTBIT) + 0x0014)
#define DEM_Interface_demod_first_byte_of_cluster_int   (DEM_BLK + DBG64SEL + (halDMOD_InterfaceMode<<BUS_STARTBIT) + 0x0015)
#define DEM_Interface_demod_last_byte_of_cluster_int    (DEM_BLK + DBG64SEL + (halDMOD_InterfaceMode<<BUS_STARTBIT) + 0x0016)
#define DEM_Interface_demod_bd_dcod_last_frame          (DEM_BLK + DBG64SEL + (halDMOD_InterfaceMode<<BUS_STARTBIT) + 0x0017)
#define DEM_Interface_demod_hddvd_dcod_last_frame       (DEM_BLK + DBG64SEL + (halDMOD_InterfaceMode<<BUS_STARTBIT) + 0x0018)
#define DEM_Interface_demod_hddvd_dcod_last_sector      (DEM_BLK + DBG64SEL + (halDMOD_InterfaceMode<<BUS_STARTBIT) + 0x0019)
#define DEM_Interface_demod_dvdram_dcod_skip_sector     (DEM_BLK + DBG64SEL + (halDMOD_InterfaceMode<<BUS_STARTBIT) + 0x001A)
//DEM Input
#define DEM_Input_data_from_front0                      (DEM_BLK + DBG64SEL + (halDMOD_InputMode<<BUS_STARTBIT) + 0x0000)
#define DEM_Input_data_from_front1                      (DEM_BLK + DBG64SEL + (halDMOD_InputMode<<BUS_STARTBIT) + 0x0001)
#define DEM_Input_data_from_front2                      (DEM_BLK + DBG64SEL + (halDMOD_InputMode<<BUS_STARTBIT) + 0x0002)
#define DEM_Input_data_from_front3                      (DEM_BLK + DBG64SEL + (halDMOD_InputMode<<BUS_STARTBIT) + 0x0003)
#define DEM_Input_data_from_front4                      (DEM_BLK + DBG64SEL + (halDMOD_InputMode<<BUS_STARTBIT) + 0x0004)
#define DEM_Input_data_from_front5                      (DEM_BLK + DBG64SEL + (halDMOD_InputMode<<BUS_STARTBIT) + 0x0005)
#define DEM_Input_bits_enable_from_front                (DEM_BLK + DBG64SEL + (halDMOD_InputMode<<BUS_STARTBIT) + 0x0006)
#define DEM_Input_last_frame                            (DEM_BLK + DBG64SEL + (halDMOD_InputMode<<BUS_STARTBIT) + 0x0007)
#define DEM_Input_runin_init_demod                      (DEM_BLK + DBG64SEL + (halDMOD_InputMode<<BUS_STARTBIT) + 0x0008)
#define DEM_Input_demod_force                           (DEM_BLK + DBG64SEL + (halDMOD_InputMode<<BUS_STARTBIT) + 0x0009)
#define DEM_Input_demod_bd_dcod_last_frame              (DEM_BLK + DBG64SEL + (halDMOD_InputMode<<BUS_STARTBIT) + 0x000A)
#define DEM_Input_demod_dvdram_dcod_skip_sector         (DEM_BLK + DBG64SEL + (halDMOD_InputMode<<BUS_STARTBIT) + 0x000B)
#define DEM_Input_demod_dvdram_header_window            (DEM_BLK + DBG64SEL + (halDMOD_InputMode<<BUS_STARTBIT) + 0x000C)
#define DEM_Input_demod_dvdram_start_demod              (DEM_BLK + DBG64SEL + (halDMOD_InputMode<<BUS_STARTBIT) + 0x000D)
#define DEM_Input_hf_not_present                        (DEM_BLK + DBG64SEL + (halDMOD_InputMode<<BUS_STARTBIT) + 0x000E)
#define DEM_Input_dvdd_sector_match                     (DEM_BLK + DBG64SEL + (halDMOD_InputMode<<BUS_STARTBIT) + 0x000F)
#define DEM_Input_pic_sample0                           (DEM_BLK + DBG64SEL + (halDMOD_InputMode<<BUS_STARTBIT) + 0x0010)
#define DEM_Input_pic_sample1                           (DEM_BLK + DBG64SEL + (halDMOD_InputMode<<BUS_STARTBIT) + 0x0011)
#define DEM_Input_pic_sample2                           (DEM_BLK + DBG64SEL + (halDMOD_InputMode<<BUS_STARTBIT) + 0x0012)
#define DEM_Input_pic_sample3                           (DEM_BLK + DBG64SEL + (halDMOD_InputMode<<BUS_STARTBIT) + 0x0013)
#define DEM_Input_pic_sample4                           (DEM_BLK + DBG64SEL + (halDMOD_InputMode<<BUS_STARTBIT) + 0x0014)
#define DEM_Input_pic_sample5                           (DEM_BLK + DBG64SEL + (halDMOD_InputMode<<BUS_STARTBIT) + 0x0015)
#define DEM_Input_pic_sample6                           (DEM_BLK + DBG64SEL + (halDMOD_InputMode<<BUS_STARTBIT) + 0x0016)
#define DEM_Input_pic_sample7                           (DEM_BLK + DBG64SEL + (halDMOD_InputMode<<BUS_STARTBIT) + 0x0017)
#define DEM_Input_pic_sample8                           (DEM_BLK + DBG64SEL + (halDMOD_InputMode<<BUS_STARTBIT) + 0x0018)
#define DEM_Input_pic_sample9                           (DEM_BLK + DBG64SEL + (halDMOD_InputMode<<BUS_STARTBIT) + 0x0019)
#define DEM_Input_pic_sample10                          (DEM_BLK + DBG64SEL + (halDMOD_InputMode<<BUS_STARTBIT) + 0x001A)
#define DEM_Input_pic_sample_enable                     (DEM_BLK + DBG64SEL + (halDMOD_InputMode<<BUS_STARTBIT) + 0x001B)
#define DEM_Input_force_idle_rw                         (DEM_BLK + DBG64SEL + (halDMOD_InputMode<<BUS_STARTBIT) + 0x001C)
#define DEM_Input_vfo_field_rw                          (DEM_BLK + DBG64SEL + (halDMOD_InputMode<<BUS_STARTBIT) + 0x001D)
#define DEM_Input_datafield_rw                          (DEM_BLK + DBG64SEL + (halDMOD_InputMode<<BUS_STARTBIT) + 0x001E)
#define DEM_Input_lastframe_rw                          (DEM_BLK + DBG64SEL + (halDMOD_InputMode<<BUS_STARTBIT) + 0x001F)
#define DEM_Input_lastsector_rw                         (DEM_BLK + DBG64SEL + (halDMOD_InputMode<<BUS_STARTBIT) + 0x0020)
#define DEM_Input_demod_hddvd_dcod_last_frame           (DEM_BLK + DBG64SEL + (halDMOD_InputMode<<BUS_STARTBIT) + 0x0021)
#define DEM_Input_demod_hddvd_dcod_last_sector          (DEM_BLK + DBG64SEL + (halDMOD_InputMode<<BUS_STARTBIT) + 0x0022)
#define DEM_Input_demod_clk                             (DEM_BLK + DBG64SEL + (halDMOD_InputMode<<BUS_STARTBIT) + 0x0023)
#define DEM_Input_demod_bd_clk                          (DEM_BLK + DBG64SEL + (halDMOD_InputMode<<BUS_STARTBIT) + 0x0024)
#define DEM_Input_demod_hd_clk                          (DEM_BLK + DBG64SEL + (halDMOD_InputMode<<BUS_STARTBIT) + 0x0025)
#define DEM_Input_cddvd_demod_clk                       (DEM_BLK + DBG64SEL + (halDMOD_InputMode<<BUS_STARTBIT) + 0x0026)

/****************************************************************************
* DGB64 BUS AFE BLOCK
****************************************************************************/
//This block is empty

/****************************************************************************
* DGB64 BUS DVDD BLOCK
****************************************************************************/
//DVDD_DEMOD_IF_1
#define DVDD_DEMOD_IF_1_sysclk                              (DVDD_BLK + DBG64SEL + (halDVDD_DVDD_DEMOD_IF_1<<BUS_STARTBIT) + 0x002F)
#define DVDD_DEMOD_IF_1_demod_clk                           (DVDD_BLK + DBG64SEL + (halDVDD_DVDD_DEMOD_IF_1<<BUS_STARTBIT) + 0x002E)
#define DVDD_DEMOD_IF_1_demod_data_valid                    (DVDD_BLK + DBG64SEL + (halDVDD_DVDD_DEMOD_IF_1<<BUS_STARTBIT) + 0x002D)
#define DVDD_DEMOD_IF_1_demod_data7                         (DVDD_BLK + DBG64SEL + (halDVDD_DVDD_DEMOD_IF_1<<BUS_STARTBIT) + 0x002C)
#define DVDD_DEMOD_IF_1_demod_data6                         (DVDD_BLK + DBG64SEL + (halDVDD_DVDD_DEMOD_IF_1<<BUS_STARTBIT) + 0x002B)
#define DVDD_DEMOD_IF_1_demod_data5                         (DVDD_BLK + DBG64SEL + (halDVDD_DVDD_DEMOD_IF_1<<BUS_STARTBIT) + 0x002A)
#define DVDD_DEMOD_IF_1_demod_data4                         (DVDD_BLK + DBG64SEL + (halDVDD_DVDD_DEMOD_IF_1<<BUS_STARTBIT) + 0x0029)
#define DVDD_DEMOD_IF_1_demod_data3                         (DVDD_BLK + DBG64SEL + (halDVDD_DVDD_DEMOD_IF_1<<BUS_STARTBIT) + 0x0028)
#define DVDD_DEMOD_IF_1_demod_data2                         (DVDD_BLK + DBG64SEL + (halDVDD_DVDD_DEMOD_IF_1<<BUS_STARTBIT) + 0x0027)
#define DVDD_DEMOD_IF_1_demod_data1                         (DVDD_BLK + DBG64SEL + (halDVDD_DVDD_DEMOD_IF_1<<BUS_STARTBIT) + 0x0026)
#define DVDD_DEMOD_IF_1_demod_data0                         (DVDD_BLK + DBG64SEL + (halDVDD_DVDD_DEMOD_IF_1<<BUS_STARTBIT) + 0x0025)
#define DVDD_DEMOD_IF_1_demod_erasure_flag                  (DVDD_BLK + DBG64SEL + (halDVDD_DVDD_DEMOD_IF_1<<BUS_STARTBIT) + 0x0024)
#define DVDD_DEMOD_IF_1_demod_frame_start                   (DVDD_BLK + DBG64SEL + (halDVDD_DVDD_DEMOD_IF_1<<BUS_STARTBIT) + 0x0023)
#define DVDD_DEMOD_IF_1_demod_frame_sync                    (DVDD_BLK + DBG64SEL + (halDVDD_DVDD_DEMOD_IF_1<<BUS_STARTBIT) + 0x0022)
#define DVDD_DEMOD_IF_1_demod_sector_start                  (DVDD_BLK + DBG64SEL + (halDVDD_DVDD_DEMOD_IF_1<<BUS_STARTBIT) + 0x0021)
#define DVDD_DEMOD_IF_1_demod_dvdram_header_data_flag       (DVDD_BLK + DBG64SEL + (halDVDD_DVDD_DEMOD_IF_1<<BUS_STARTBIT) + 0x0020)
#define DVDD_DEMOD_IF_1_demod_dvdram_header_id_start        (DVDD_BLK + DBG64SEL + (halDVDD_DVDD_DEMOD_IF_1<<BUS_STARTBIT) + 0x001F)
#define DVDD_DEMOD_IF_1_demod_dvdram_header_window          (DVDD_BLK + DBG64SEL + (halDVDD_DVDD_DEMOD_IF_1<<BUS_STARTBIT) + 0x001E)
#define DVDD_DEMOD_IF_1_demod_first_byte_of_cluster         (DVDD_BLK + DBG64SEL + (halDVDD_DVDD_DEMOD_IF_1<<BUS_STARTBIT) + 0x001D)
#define DVDD_DEMOD_IF_1_demod_dvd_frameno4                  (DVDD_BLK + DBG64SEL + (halDVDD_DVDD_DEMOD_IF_1<<BUS_STARTBIT) + 0x001C)
#define DVDD_DEMOD_IF_1_demod_dvd_frameno3                  (DVDD_BLK + DBG64SEL + (halDVDD_DVDD_DEMOD_IF_1<<BUS_STARTBIT) + 0x001B)
#define DVDD_DEMOD_IF_1_demod_dvd_frameno2                  (DVDD_BLK + DBG64SEL + (halDVDD_DVDD_DEMOD_IF_1<<BUS_STARTBIT) + 0x001A)
#define DVDD_DEMOD_IF_1_demod_dvd_frameno1                  (DVDD_BLK + DBG64SEL + (halDVDD_DVDD_DEMOD_IF_1<<BUS_STARTBIT) + 0x0019)
#define DVDD_DEMOD_IF_1_demod_dvd_frameno0                  (DVDD_BLK + DBG64SEL + (halDVDD_DVDD_DEMOD_IF_1<<BUS_STARTBIT) + 0x0018)
#define DVDD_DEMOD_IF_1_dvdram_sector_tgl                   (DVDD_BLK + DBG64SEL + (halDVDD_DVDD_DEMOD_IF_1<<BUS_STARTBIT) + 0x0017)
#define DVDD_DEMOD_IF_1_dvdram_header_window_front          (DVDD_BLK + DBG64SEL + (halDVDD_DVDD_DEMOD_IF_1<<BUS_STARTBIT) + 0x0016)
#define DVDD_DEMOD_IF_1_hddvd_flywheel_addr_toggle          (DVDD_BLK + DBG64SEL + (halDVDD_DVDD_DEMOD_IF_1<<BUS_STARTBIT) + 0x0015)
#define DVDD_DEMOD_IF_1_dvdram_landnotgroove                (DVDD_BLK + DBG64SEL + (halDVDD_DVDD_DEMOD_IF_1<<BUS_STARTBIT) + 0x0014)
#define DVDD_DEMOD_IF_1_id_data7                            (DVDD_BLK + DBG64SEL + (halDVDD_DVDD_DEMOD_IF_1<<BUS_STARTBIT) + 0x0013)
#define DVDD_DEMOD_IF_1_id_data6                            (DVDD_BLK + DBG64SEL + (halDVDD_DVDD_DEMOD_IF_1<<BUS_STARTBIT) + 0x0012)
#define DVDD_DEMOD_IF_1_id_data5                            (DVDD_BLK + DBG64SEL + (halDVDD_DVDD_DEMOD_IF_1<<BUS_STARTBIT) + 0x0011)
#define DVDD_DEMOD_IF_1_id_data4                            (DVDD_BLK + DBG64SEL + (halDVDD_DVDD_DEMOD_IF_1<<BUS_STARTBIT) + 0x0010)
#define DVDD_DEMOD_IF_1_id_data3                            (DVDD_BLK + DBG64SEL + (halDVDD_DVDD_DEMOD_IF_1<<BUS_STARTBIT) + 0x000F)
#define DVDD_DEMOD_IF_1_id_data2                            (DVDD_BLK + DBG64SEL + (halDVDD_DVDD_DEMOD_IF_1<<BUS_STARTBIT) + 0x000E)
#define DVDD_DEMOD_IF_1_id_data1                            (DVDD_BLK + DBG64SEL + (halDVDD_DVDD_DEMOD_IF_1<<BUS_STARTBIT) + 0x000D)
#define DVDD_DEMOD_IF_1_id_data0                            (DVDD_BLK + DBG64SEL + (halDVDD_DVDD_DEMOD_IF_1<<BUS_STARTBIT) + 0x000C)
#define DVDD_DEMOD_IF_1_idcc_valid                          (DVDD_BLK + DBG64SEL + (halDVDD_DVDD_DEMOD_IF_1<<BUS_STARTBIT) + 0x000B)
#define DVDD_DEMOD_IF_1_pib_start                           (DVDD_BLK + DBG64SEL + (halDVDD_DVDD_DEMOD_IF_1<<BUS_STARTBIT) + 0x000A)
#define DVDD_DEMOD_IF_1_pid_ok                              (DVDD_BLK + DBG64SEL + (halDVDD_DVDD_DEMOD_IF_1<<BUS_STARTBIT) + 0x0009)
#define DVDD_DEMOD_IF_1_idcc_valid1                         (DVDD_BLK + DBG64SEL + (halDVDD_DVDD_DEMOD_IF_1<<BUS_STARTBIT) + 0x0008)
#define DVDD_DEMOD_IF_1_storing_data                        (DVDD_BLK + DBG64SEL + (halDVDD_DVDD_DEMOD_IF_1<<BUS_STARTBIT) + 0x0007)
#define DVDD_DEMOD_IF_1_block_outputs                       (DVDD_BLK + DBG64SEL + (halDVDD_DVDD_DEMOD_IF_1<<BUS_STARTBIT) + 0x0006)
#define DVDD_DEMOD_IF_1_block_data_out                      (DVDD_BLK + DBG64SEL + (halDVDD_DVDD_DEMOD_IF_1<<BUS_STARTBIT) + 0x0005)
#define DVDD_DEMOD_IF_1_cid_lsb4                            (DVDD_BLK + DBG64SEL + (halDVDD_DVDD_DEMOD_IF_1<<BUS_STARTBIT) + 0x0004)
#define DVDD_DEMOD_IF_1_cid_lsb3                            (DVDD_BLK + DBG64SEL + (halDVDD_DVDD_DEMOD_IF_1<<BUS_STARTBIT) + 0x0003)
#define DVDD_DEMOD_IF_1_cid_lsb2                            (DVDD_BLK + DBG64SEL + (halDVDD_DVDD_DEMOD_IF_1<<BUS_STARTBIT) + 0x0002)
#define DVDD_DEMOD_IF_1_cid_lsb1                            (DVDD_BLK + DBG64SEL + (halDVDD_DVDD_DEMOD_IF_1<<BUS_STARTBIT) + 0x0001)
#define DVDD_DEMOD_IF_1_cid_lsb0                            (DVDD_BLK + DBG64SEL + (halDVDD_DVDD_DEMOD_IF_1<<BUS_STARTBIT) + 0x0000)
//DVDD_DEMOD_IF_2
#define DVDD_DEMOD_IF_2_sysclk                              (DVDD_BLK + DBG64SEL + (halDVDD_DVDD_DEMOD_IF_2<<BUS_STARTBIT) + 0x002F)
#define DVDD_DEMOD_IF_2_demod_clk                           (DVDD_BLK + DBG64SEL + (halDVDD_DVDD_DEMOD_IF_2<<BUS_STARTBIT) + 0x002E)
#define DVDD_DEMOD_IF_2_demod_data_valid                    (DVDD_BLK + DBG64SEL + (halDVDD_DVDD_DEMOD_IF_2<<BUS_STARTBIT) + 0x002D)
#define DVDD_DEMOD_IF_2_sector_sync                         (DVDD_BLK + DBG64SEL + (halDVDD_DVDD_DEMOD_IF_2<<BUS_STARTBIT) + 0x002C)
#define DVDD_DEMOD_IF_2_pib_start                           (DVDD_BLK + DBG64SEL + (halDVDD_DVDD_DEMOD_IF_2<<BUS_STARTBIT) + 0x002B)
#define DVDD_DEMOD_IF_2_jump_across_sector                  (DVDD_BLK + DBG64SEL + (halDVDD_DVDD_DEMOD_IF_2<<BUS_STARTBIT) + 0x002A)
#define DVDD_DEMOD_IF_2_jump_back                           (DVDD_BLK + DBG64SEL + (halDVDD_DVDD_DEMOD_IF_2<<BUS_STARTBIT) + 0x0029)
#define DVDD_DEMOD_IF_2_storing_data                        (DVDD_BLK + DBG64SEL + (halDVDD_DVDD_DEMOD_IF_2<<BUS_STARTBIT) + 0x0028)
#define DVDD_DEMOD_IF_2_id_ecc_init                         (DVDD_BLK + DBG64SEL + (halDVDD_DVDD_DEMOD_IF_2<<BUS_STARTBIT) + 0x0027)
#define DVDD_DEMOD_IF_2_id_data7                            (DVDD_BLK + DBG64SEL + (halDVDD_DVDD_DEMOD_IF_2<<BUS_STARTBIT) + 0x0026)
#define DVDD_DEMOD_IF_2_id_data6                            (DVDD_BLK + DBG64SEL + (halDVDD_DVDD_DEMOD_IF_2<<BUS_STARTBIT) + 0x0025)
#define DVDD_DEMOD_IF_2_id_data5                            (DVDD_BLK + DBG64SEL + (halDVDD_DVDD_DEMOD_IF_2<<BUS_STARTBIT) + 0x0024)
#define DVDD_DEMOD_IF_2_id_data4                            (DVDD_BLK + DBG64SEL + (halDVDD_DVDD_DEMOD_IF_2<<BUS_STARTBIT) + 0x0023)
#define DVDD_DEMOD_IF_2_id_data3                            (DVDD_BLK + DBG64SEL + (halDVDD_DVDD_DEMOD_IF_2<<BUS_STARTBIT) + 0x0022)
#define DVDD_DEMOD_IF_2_id_data2                            (DVDD_BLK + DBG64SEL + (halDVDD_DVDD_DEMOD_IF_2<<BUS_STARTBIT) + 0x0021)
#define DVDD_DEMOD_IF_2_id_data1                            (DVDD_BLK + DBG64SEL + (halDVDD_DVDD_DEMOD_IF_2<<BUS_STARTBIT) + 0x0020)
#define DVDD_DEMOD_IF_2_id_data0                            (DVDD_BLK + DBG64SEL + (halDVDD_DVDD_DEMOD_IF_2<<BUS_STARTBIT) + 0x001F)
#define DVDD_DEMOD_IF_2_idcc_valid                          (DVDD_BLK + DBG64SEL + (halDVDD_DVDD_DEMOD_IF_2<<BUS_STARTBIT) + 0x001E)
#define DVDD_DEMOD_IF_2_raw_ecc_blk_sync                    (DVDD_BLK + DBG64SEL + (halDVDD_DVDD_DEMOD_IF_2<<BUS_STARTBIT) + 0x001D)
#define DVDD_DEMOD_IF_2_block_outputs                       (DVDD_BLK + DBG64SEL + (halDVDD_DVDD_DEMOD_IF_2<<BUS_STARTBIT) + 0x001C)
#define DVDD_DEMOD_IF_2_block_data_out                      (DVDD_BLK + DBG64SEL + (halDVDD_DVDD_DEMOD_IF_2<<BUS_STARTBIT) + 0x001B)
#define DVDD_DEMOD_IF_2_zero_elsi                           (DVDD_BLK + DBG64SEL + (halDVDD_DVDD_DEMOD_IF_2<<BUS_STARTBIT) + 0x001A)
#define DVDD_DEMOD_IF_2_elsi_data15                         (DVDD_BLK + DBG64SEL + (halDVDD_DVDD_DEMOD_IF_2<<BUS_STARTBIT) + 0x0019)
#define DVDD_DEMOD_IF_2_elsi_data14                         (DVDD_BLK + DBG64SEL + (halDVDD_DVDD_DEMOD_IF_2<<BUS_STARTBIT) + 0x0018)
#define DVDD_DEMOD_IF_2_elsi_data13                         (DVDD_BLK + DBG64SEL + (halDVDD_DVDD_DEMOD_IF_2<<BUS_STARTBIT) + 0x0017)
#define DVDD_DEMOD_IF_2_elsi_data12                         (DVDD_BLK + DBG64SEL + (halDVDD_DVDD_DEMOD_IF_2<<BUS_STARTBIT) + 0x0016)
#define DVDD_DEMOD_IF_2_elsi_data11                         (DVDD_BLK + DBG64SEL + (halDVDD_DVDD_DEMOD_IF_2<<BUS_STARTBIT) + 0x0015)
#define DVDD_DEMOD_IF_2_elsi_data10                         (DVDD_BLK + DBG64SEL + (halDVDD_DVDD_DEMOD_IF_2<<BUS_STARTBIT) + 0x0014)
#define DVDD_DEMOD_IF_2_elsi_data9                          (DVDD_BLK + DBG64SEL + (halDVDD_DVDD_DEMOD_IF_2<<BUS_STARTBIT) + 0x0013)
#define DVDD_DEMOD_IF_2_elsi_data8                          (DVDD_BLK + DBG64SEL + (halDVDD_DVDD_DEMOD_IF_2<<BUS_STARTBIT) + 0x0012)
#define DVDD_DEMOD_IF_2_elsi_data7                          (DVDD_BLK + DBG64SEL + (halDVDD_DVDD_DEMOD_IF_2<<BUS_STARTBIT) + 0x0011)
#define DVDD_DEMOD_IF_2_elsi_data6                          (DVDD_BLK + DBG64SEL + (halDVDD_DVDD_DEMOD_IF_2<<BUS_STARTBIT) + 0x0010)
#define DVDD_DEMOD_IF_2_elsi_data5                          (DVDD_BLK + DBG64SEL + (halDVDD_DVDD_DEMOD_IF_2<<BUS_STARTBIT) + 0x000F)
#define DVDD_DEMOD_IF_2_elsi_data4                          (DVDD_BLK + DBG64SEL + (halDVDD_DVDD_DEMOD_IF_2<<BUS_STARTBIT) + 0x000E)
#define DVDD_DEMOD_IF_2_elsi_data3                          (DVDD_BLK + DBG64SEL + (halDVDD_DVDD_DEMOD_IF_2<<BUS_STARTBIT) + 0x000D)
#define DVDD_DEMOD_IF_2_elsi_data2                          (DVDD_BLK + DBG64SEL + (halDVDD_DVDD_DEMOD_IF_2<<BUS_STARTBIT) + 0x000C)
#define DVDD_DEMOD_IF_2_elsi_data1                          (DVDD_BLK + DBG64SEL + (halDVDD_DVDD_DEMOD_IF_2<<BUS_STARTBIT) + 0x000B)
#define DVDD_DEMOD_IF_2_elsi_data0                          (DVDD_BLK + DBG64SEL + (halDVDD_DVDD_DEMOD_IF_2<<BUS_STARTBIT) + 0x000A)
#define DVDD_DEMOD_IF_2_elsi_vld                            (DVDD_BLK + DBG64SEL + (halDVDD_DVDD_DEMOD_IF_2<<BUS_STARTBIT) + 0x0009)
#define DVDD_DEMOD_IF_2_ersr7                               (DVDD_BLK + DBG64SEL + (halDVDD_DVDD_DEMOD_IF_2<<BUS_STARTBIT) + 0x0008)
#define DVDD_DEMOD_IF_2_ersr6                               (DVDD_BLK + DBG64SEL + (halDVDD_DVDD_DEMOD_IF_2<<BUS_STARTBIT) + 0x0007)
#define DVDD_DEMOD_IF_2_ersr5                               (DVDD_BLK + DBG64SEL + (halDVDD_DVDD_DEMOD_IF_2<<BUS_STARTBIT) + 0x0006)
#define DVDD_DEMOD_IF_2_ersr4                               (DVDD_BLK + DBG64SEL + (halDVDD_DVDD_DEMOD_IF_2<<BUS_STARTBIT) + 0x0005)
#define DVDD_DEMOD_IF_2_ersr3                               (DVDD_BLK + DBG64SEL + (halDVDD_DVDD_DEMOD_IF_2<<BUS_STARTBIT) + 0x0004)
#define DVDD_DEMOD_IF_2_ersr2                               (DVDD_BLK + DBG64SEL + (halDVDD_DVDD_DEMOD_IF_2<<BUS_STARTBIT) + 0x0003)
#define DVDD_DEMOD_IF_2_ersr1                               (DVDD_BLK + DBG64SEL + (halDVDD_DVDD_DEMOD_IF_2<<BUS_STARTBIT) + 0x0002)
#define DVDD_DEMOD_IF_2_ersr0                               (DVDD_BLK + DBG64SEL + (halDVDD_DVDD_DEMOD_IF_2<<BUS_STARTBIT) + 0x0001)
#define DVDD_DEMOD_IF_2_ersr_we                             (DVDD_BLK + DBG64SEL + (halDVDD_DVDD_DEMOD_IF_2<<BUS_STARTBIT) + 0x0000)
//DVDD_MEMIF_1
#define DVDD_MEMIF_1_memif_is_idle                          (DVDD_BLK + DBG64SEL + (halDVDD_MEMIF_1<<BUS_STARTBIT) + 0x002F)
#define DVDD_MEMIF_1_demod_wr_req                           (DVDD_BLK + DBG64SEL + (halDVDD_MEMIF_1<<BUS_STARTBIT) + 0x002E)
#define DVDD_MEMIF_1_demod_wr_ack                           (DVDD_BLK + DBG64SEL + (halDVDD_MEMIF_1<<BUS_STARTBIT) + 0x002D)
#define DVDD_MEMIF_1_demodwr_nw                             (DVDD_BLK + DBG64SEL + (halDVDD_MEMIF_1<<BUS_STARTBIT) + 0x002C)
#define DVDD_MEMIF_1_demod_wr_eop                           (DVDD_BLK + DBG64SEL + (halDVDD_MEMIF_1<<BUS_STARTBIT) + 0x002B)
#define DVDD_MEMIF_1_pi_read_stalled                        (DVDD_BLK + DBG64SEL + (halDVDD_MEMIF_1<<BUS_STARTBIT) + 0x002A)
#define DVDD_MEMIF_1_pird_ack                               (DVDD_BLK + DBG64SEL + (halDVDD_MEMIF_1<<BUS_STARTBIT) + 0x0029)
#define DVDD_MEMIF_1_pird_data_valid                        (DVDD_BLK + DBG64SEL + (halDVDD_MEMIF_1<<BUS_STARTBIT) + 0x0028)
#define DVDD_MEMIF_1_pird_eop                               (DVDD_BLK + DBG64SEL + (halDVDD_MEMIF_1<<BUS_STARTBIT) + 0x0027)
#define DVDD_MEMIF_1_pilv_ack                               (DVDD_BLK + DBG64SEL + (halDVDD_MEMIF_1<<BUS_STARTBIT) + 0x0026)
#define DVDD_MEMIF_1_dvd_vld_pilv                           (DVDD_BLK + DBG64SEL + (halDVDD_MEMIF_1<<BUS_STARTBIT) + 0x0025)
#define DVDD_MEMIF_1_polv_ack                               (DVDD_BLK + DBG64SEL + (halDVDD_MEMIF_1<<BUS_STARTBIT) + 0x0024)
#define DVDD_MEMIF_1_dvd_vld_polv                           (DVDD_BLK + DBG64SEL + (halDVDD_MEMIF_1<<BUS_STARTBIT) + 0x0023)
#define DVDD_MEMIF_1_polv_reset_from_memif                  (DVDD_BLK + DBG64SEL + (halDVDD_MEMIF_1<<BUS_STARTBIT) + 0x0022)
#define DVDD_MEMIF_1_regfile_overflow                       (DVDD_BLK + DBG64SEL + (halDVDD_MEMIF_1<<BUS_STARTBIT) + 0x0021)
#define DVDD_MEMIF_1_sync_skip                              (DVDD_BLK + DBG64SEL + (halDVDD_MEMIF_1<<BUS_STARTBIT) + 0x0020)
#define DVDD_MEMIF_1_sync_skip_write                        (DVDD_BLK + DBG64SEL + (halDVDD_MEMIF_1<<BUS_STARTBIT) + 0x001F)
#define DVDD_MEMIF_1_sync_skip_done                         (DVDD_BLK + DBG64SEL + (halDVDD_MEMIF_1<<BUS_STARTBIT) + 0x001E)
#define DVDD_MEMIF_1_flush_fifo                             (DVDD_BLK + DBG64SEL + (halDVDD_MEMIF_1<<BUS_STARTBIT) + 0x001D)
#define DVDD_MEMIF_1_demod_wr_pi_reset_del                  (DVDD_BLK + DBG64SEL + (halDVDD_MEMIF_1<<BUS_STARTBIT) + 0x001C)
#define DVDD_MEMIF_1_data_ready                             (DVDD_BLK + DBG64SEL + (halDVDD_MEMIF_1<<BUS_STARTBIT) + 0x001B)
#define DVDD_MEMIF_1_row_written                            (DVDD_BLK + DBG64SEL + (halDVDD_MEMIF_1<<BUS_STARTBIT) + 0x001A)
#define DVDD_MEMIF_1_read_pi_data                           (DVDD_BLK + DBG64SEL + (halDVDD_MEMIF_1<<BUS_STARTBIT) + 0x0019)
#define DVDD_MEMIF_1_fifo_wr                                (DVDD_BLK + DBG64SEL + (halDVDD_MEMIF_1<<BUS_STARTBIT) + 0x0018)
#define DVDD_MEMIF_1_read_elsi                              (DVDD_BLK + DBG64SEL + (halDVDD_MEMIF_1<<BUS_STARTBIT) + 0x0017)
#define DVDD_MEMIF_1_demod_wr_read_state4                   (DVDD_BLK + DBG64SEL + (halDVDD_MEMIF_1<<BUS_STARTBIT) + 0x0016)
#define DVDD_MEMIF_1_demod_wr_read_state3                   (DVDD_BLK + DBG64SEL + (halDVDD_MEMIF_1<<BUS_STARTBIT) + 0x0015)
#define DVDD_MEMIF_1_demod_wr_read_state2                   (DVDD_BLK + DBG64SEL + (halDVDD_MEMIF_1<<BUS_STARTBIT) + 0x0014)
#define DVDD_MEMIF_1_demod_wr_read_state1                   (DVDD_BLK + DBG64SEL + (halDVDD_MEMIF_1<<BUS_STARTBIT) + 0x0013)
#define DVDD_MEMIF_1_demod_wr_read_state0                   (DVDD_BLK + DBG64SEL + (halDVDD_MEMIF_1<<BUS_STARTBIT) + 0x0012)
#define DVDD_MEMIF_1_demod_wr_write_state5                  (DVDD_BLK + DBG64SEL + (halDVDD_MEMIF_1<<BUS_STARTBIT) + 0x0011)
#define DVDD_MEMIF_1_demod_wr_write_state4                  (DVDD_BLK + DBG64SEL + (halDVDD_MEMIF_1<<BUS_STARTBIT) + 0x0010)
#define DVDD_MEMIF_1_demod_wr_write_state3                  (DVDD_BLK + DBG64SEL + (halDVDD_MEMIF_1<<BUS_STARTBIT) + 0x000F)
#define DVDD_MEMIF_1_demod_wr_write_state2                  (DVDD_BLK + DBG64SEL + (halDVDD_MEMIF_1<<BUS_STARTBIT) + 0x000E)
#define DVDD_MEMIF_1_demod_wr_write_state1                  (DVDD_BLK + DBG64SEL + (halDVDD_MEMIF_1<<BUS_STARTBIT) + 0x000D)
#define DVDD_MEMIF_1_demod_wr_write_state0                  (DVDD_BLK + DBG64SEL + (halDVDD_MEMIF_1<<BUS_STARTBIT) + 0x000C)
#define DVDD_MEMIF_1_dvd_ack                                (DVDD_BLK + DBG64SEL + (halDVDD_MEMIF_1<<BUS_STARTBIT) + 0x000B)
#define DVDD_MEMIF_1_dvd_data_valid                         (DVDD_BLK + DBG64SEL + (halDVDD_MEMIF_1<<BUS_STARTBIT) + 0x000A)
#define DVDD_MEMIF_1_dvd_nw                                 (DVDD_BLK + DBG64SEL + (halDVDD_MEMIF_1<<BUS_STARTBIT) + 0x0009)
#define DVDD_MEMIF_1_current_req                            (DVDD_BLK + DBG64SEL + (halDVDD_MEMIF_1<<BUS_STARTBIT) + 0x0008)
#define DVDD_MEMIF_1_req_start                              (DVDD_BLK + DBG64SEL + (halDVDD_MEMIF_1<<BUS_STARTBIT) + 0x0007)
#define DVDD_MEMIF_1_req_state2                             (DVDD_BLK + DBG64SEL + (halDVDD_MEMIF_1<<BUS_STARTBIT) + 0x0006)
#define DVDD_MEMIF_1_req_state1                             (DVDD_BLK + DBG64SEL + (halDVDD_MEMIF_1<<BUS_STARTBIT) + 0x0005)
#define DVDD_MEMIF_1_req_state0                             (DVDD_BLK + DBG64SEL + (halDVDD_MEMIF_1<<BUS_STARTBIT) + 0x0004)
#define DVDD_MEMIF_1_rsp_state1                             (DVDD_BLK + DBG64SEL + (halDVDD_MEMIF_1<<BUS_STARTBIT) + 0x0003)
#define DVDD_MEMIF_1_rsp_state0                             (DVDD_BLK + DBG64SEL + (halDVDD_MEMIF_1<<BUS_STARTBIT) + 0x0002)
#define DVDD_MEMIF_1_sec_slip                               (DVDD_BLK + DBG64SEL + (halDVDD_MEMIF_1<<BUS_STARTBIT) + 0x0001)
#define DVDD_MEMIF_1_recc_start                             (DVDD_BLK + DBG64SEL + (halDVDD_MEMIF_1<<BUS_STARTBIT) + 0x0000)
//DVDD_MEMIF_2
#define DVDD_MEMIF_2_memif_is_idle                          (DVDD_BLK + DBG64SEL + (halDVDD_MEMIF_2<<BUS_STARTBIT) + 0x002F)
#define DVDD_MEMIF_2_demod_ld_seed                          (DVDD_BLK + DBG64SEL + (halDVDD_MEMIF_2<<BUS_STARTBIT) + 0x002E)
#define DVDD_MEMIF_2_polv_reset_from_memif                  (DVDD_BLK + DBG64SEL + (halDVDD_MEMIF_2<<BUS_STARTBIT) + 0x002D)
#define DVDD_MEMIF_2_pi_read_stalled                        (DVDD_BLK + DBG64SEL + (halDVDD_MEMIF_2<<BUS_STARTBIT) + 0x002C)
#define DVDD_MEMIF_2_sync_skip                              (DVDD_BLK + DBG64SEL + (halDVDD_MEMIF_2<<BUS_STARTBIT) + 0x002B)
#define DVDD_MEMIF_2_sync_skip_write                        (DVDD_BLK + DBG64SEL + (halDVDD_MEMIF_2<<BUS_STARTBIT) + 0x002A)
#define DVDD_MEMIF_2_sync_skip_done                         (DVDD_BLK + DBG64SEL + (halDVDD_MEMIF_2<<BUS_STARTBIT) + 0x0029)
#define DVDD_MEMIF_2_flush_fifo                             (DVDD_BLK + DBG64SEL + (halDVDD_MEMIF_2<<BUS_STARTBIT) + 0x0028)
#define DVDD_MEMIF_2_demod_wr_pi_reset_del                  (DVDD_BLK + DBG64SEL + (halDVDD_MEMIF_2<<BUS_STARTBIT) + 0x0027)
#define DVDD_MEMIF_2_i_ecci                                 (DVDD_BLK + DBG64SEL + (halDVDD_MEMIF_2<<BUS_STARTBIT) + 0x0026)
#define DVDD_MEMIF_2_edc_done                               (DVDD_BLK + DBG64SEL + (halDVDD_MEMIF_2<<BUS_STARTBIT) + 0x0025)
#define DVDD_MEMIF_2_data_ready                             (DVDD_BLK + DBG64SEL + (halDVDD_MEMIF_2<<BUS_STARTBIT) + 0x0024)
#define DVDD_MEMIF_2_row_written                            (DVDD_BLK + DBG64SEL + (halDVDD_MEMIF_2<<BUS_STARTBIT) + 0x0023)
#define DVDD_MEMIF_2_demod_wr_read_state4                   (DVDD_BLK + DBG64SEL + (halDVDD_MEMIF_2<<BUS_STARTBIT) + 0x0022)
#define DVDD_MEMIF_2_demod_wr_read_state3                   (DVDD_BLK + DBG64SEL + (halDVDD_MEMIF_2<<BUS_STARTBIT) + 0x0021)
#define DVDD_MEMIF_2_demod_wr_read_state2                   (DVDD_BLK + DBG64SEL + (halDVDD_MEMIF_2<<BUS_STARTBIT) + 0x0020)
#define DVDD_MEMIF_2_demod_wr_read_state1                   (DVDD_BLK + DBG64SEL + (halDVDD_MEMIF_2<<BUS_STARTBIT) + 0x001F)
#define DVDD_MEMIF_2_demod_wr_read_state0                   (DVDD_BLK + DBG64SEL + (halDVDD_MEMIF_2<<BUS_STARTBIT) + 0x001E)
#define DVDD_MEMIF_2_demod_wr_write_state5                  (DVDD_BLK + DBG64SEL + (halDVDD_MEMIF_2<<BUS_STARTBIT) + 0x001D)
#define DVDD_MEMIF_2_demod_wr_write_state4                  (DVDD_BLK + DBG64SEL + (halDVDD_MEMIF_2<<BUS_STARTBIT) + 0x001C)
#define DVDD_MEMIF_2_demod_wr_write_state3                  (DVDD_BLK + DBG64SEL + (halDVDD_MEMIF_2<<BUS_STARTBIT) + 0x001B)
#define DVDD_MEMIF_2_demod_wr_write_state2                  (DVDD_BLK + DBG64SEL + (halDVDD_MEMIF_2<<BUS_STARTBIT) + 0x001A)
#define DVDD_MEMIF_2_demod_wr_write_state1                  (DVDD_BLK + DBG64SEL + (halDVDD_MEMIF_2<<BUS_STARTBIT) + 0x0019)
#define DVDD_MEMIF_2_demod_wr_write_state0                  (DVDD_BLK + DBG64SEL + (halDVDD_MEMIF_2<<BUS_STARTBIT) + 0x0018)
#define DVDD_MEMIF_2_current_req_client2                    (DVDD_BLK + DBG64SEL + (halDVDD_MEMIF_2<<BUS_STARTBIT) + 0x0017)
#define DVDD_MEMIF_2_current_req_client1                    (DVDD_BLK + DBG64SEL + (halDVDD_MEMIF_2<<BUS_STARTBIT) + 0x0016)
#define DVDD_MEMIF_2_current_req_client0                    (DVDD_BLK + DBG64SEL + (halDVDD_MEMIF_2<<BUS_STARTBIT) + 0x0015)
#define DVDD_MEMIF_2_current_req                            (DVDD_BLK + DBG64SEL + (halDVDD_MEMIF_2<<BUS_STARTBIT) + 0x0014)
#define DVDD_MEMIF_2_req_start                              (DVDD_BLK + DBG64SEL + (halDVDD_MEMIF_2<<BUS_STARTBIT) + 0x0013)
#define DVDD_MEMIF_2_req_state2                             (DVDD_BLK + DBG64SEL + (halDVDD_MEMIF_2<<BUS_STARTBIT) + 0x0012)
#define DVDD_MEMIF_2_req_state1                             (DVDD_BLK + DBG64SEL + (halDVDD_MEMIF_2<<BUS_STARTBIT) + 0x0011)
#define DVDD_MEMIF_2_req_state0                             (DVDD_BLK + DBG64SEL + (halDVDD_MEMIF_2<<BUS_STARTBIT) + 0x0010)
#define DVDD_MEMIF_2_rsp_state1                             (DVDD_BLK + DBG64SEL + (halDVDD_MEMIF_2<<BUS_STARTBIT) + 0x000F)
#define DVDD_MEMIF_2_rsp_state0                             (DVDD_BLK + DBG64SEL + (halDVDD_MEMIF_2<<BUS_STARTBIT) + 0x000E)
#define DVDD_MEMIF_2_req_fifo_counter3                      (DVDD_BLK + DBG64SEL + (halDVDD_MEMIF_2<<BUS_STARTBIT) + 0x000D)
#define DVDD_MEMIF_2_req_fifo_counter2                      (DVDD_BLK + DBG64SEL + (halDVDD_MEMIF_2<<BUS_STARTBIT) + 0x000C)
#define DVDD_MEMIF_2_req_fifo_counter1                      (DVDD_BLK + DBG64SEL + (halDVDD_MEMIF_2<<BUS_STARTBIT) + 0x000B)
#define DVDD_MEMIF_2_req_fifo_counter0                      (DVDD_BLK + DBG64SEL + (halDVDD_MEMIF_2<<BUS_STARTBIT) + 0x000A)
#define DVDD_MEMIF_2_req_fifo_wr                            (DVDD_BLK + DBG64SEL + (halDVDD_MEMIF_2<<BUS_STARTBIT) + 0x0009)
#define DVDD_MEMIF_2_req_fifo_rd                            (DVDD_BLK + DBG64SEL + (halDVDD_MEMIF_2<<BUS_STARTBIT) + 0x0008)
#define DVDD_MEMIF_2_demod_wr_qualified                     (DVDD_BLK + DBG64SEL + (halDVDD_MEMIF_2<<BUS_STARTBIT) + 0x0007)
#define DVDD_MEMIF_2_pird_qualified                         (DVDD_BLK + DBG64SEL + (halDVDD_MEMIF_2<<BUS_STARTBIT) + 0x0006)
#define DVDD_MEMIF_2_pilv_qualified                         (DVDD_BLK + DBG64SEL + (halDVDD_MEMIF_2<<BUS_STARTBIT) + 0x0005)
#define DVDD_MEMIF_2_polv_qualified                         (DVDD_BLK + DBG64SEL + (halDVDD_MEMIF_2<<BUS_STARTBIT) + 0x0004)
#define DVDD_MEMIF_2_pilv_req_in_progress                   (DVDD_BLK + DBG64SEL + (halDVDD_MEMIF_2<<BUS_STARTBIT) + 0x0003)
#define DVDD_MEMIF_2_polv_req_in_progress                   (DVDD_BLK + DBG64SEL + (halDVDD_MEMIF_2<<BUS_STARTBIT) + 0x0002)
#define DVDD_MEMIF_2_slip_qualified                         (DVDD_BLK + DBG64SEL + (halDVDD_MEMIF_2<<BUS_STARTBIT) + 0x0001)
#define DVDD_MEMIF_2_recc_is_ing                            (DVDD_BLK + DBG64SEL + (halDVDD_MEMIF_2<<BUS_STARTBIT) + 0x0000)
//DVDD_PI_TOP
#define DVDD_PI_TOP_pi_reset_from_pi                        (DVDD_BLK + DBG64SEL + (halDVDD_PI_TOP<<BUS_STARTBIT) + 0x002F)
#define DVDD_PI_TOP_po_reset                                (DVDD_BLK + DBG64SEL + (halDVDD_PI_TOP<<BUS_STARTBIT) + 0x002E)
#define DVDD_PI_TOP_pi_rd_req                               (DVDD_BLK + DBG64SEL + (halDVDD_PI_TOP<<BUS_STARTBIT) + 0x002D)
#define DVDD_PI_TOP_pir_region2                             (DVDD_BLK + DBG64SEL + (halDVDD_PI_TOP<<BUS_STARTBIT) + 0x002C)
#define DVDD_PI_TOP_pir_region1                             (DVDD_BLK + DBG64SEL + (halDVDD_PI_TOP<<BUS_STARTBIT) + 0x002B)
#define DVDD_PI_TOP_pir_region0                             (DVDD_BLK + DBG64SEL + (halDVDD_PI_TOP<<BUS_STARTBIT) + 0x002A)
#define DVDD_PI_TOP_piw_region2                             (DVDD_BLK + DBG64SEL + (halDVDD_PI_TOP<<BUS_STARTBIT) + 0x0029)
#define DVDD_PI_TOP_piw_region1                             (DVDD_BLK + DBG64SEL + (halDVDD_PI_TOP<<BUS_STARTBIT) + 0x0028)
#define DVDD_PI_TOP_piw_region0                             (DVDD_BLK + DBG64SEL + (halDVDD_PI_TOP<<BUS_STARTBIT) + 0x0027)
#define DVDD_PI_TOP_pilv_st                                 (DVDD_BLK + DBG64SEL + (halDVDD_PI_TOP<<BUS_STARTBIT) + 0x0026)
#define DVDD_PI_TOP_pilv_req                                (DVDD_BLK + DBG64SEL + (halDVDD_PI_TOP<<BUS_STARTBIT) + 0x0025)
#define DVDD_PI_TOP_pilv_we                                 (DVDD_BLK + DBG64SEL + (halDVDD_PI_TOP<<BUS_STARTBIT) + 0x0024)
#define DVDD_PI_TOP_nw_to_edc                               (DVDD_BLK + DBG64SEL + (halDVDD_PI_TOP<<BUS_STARTBIT) + 0x0023)
#define DVDD_PI_TOP_pseudo_pib_start_for_pi                 (DVDD_BLK + DBG64SEL + (halDVDD_PI_TOP<<BUS_STARTBIT) + 0x0022)
#define DVDD_PI_TOP_pib_start_ib                            (DVDD_BLK + DBG64SEL + (halDVDD_PI_TOP<<BUS_STARTBIT) + 0x0021)
#define DVDD_PI_TOP_pi_ld_seed                              (DVDD_BLK + DBG64SEL + (halDVDD_PI_TOP<<BUS_STARTBIT) + 0x0020)
#define DVDD_PI_TOP_cs_of_pi5                               (DVDD_BLK + DBG64SEL + (halDVDD_PI_TOP<<BUS_STARTBIT) + 0x001F)
#define DVDD_PI_TOP_cs_of_pi4                               (DVDD_BLK + DBG64SEL + (halDVDD_PI_TOP<<BUS_STARTBIT) + 0x001E)
#define DVDD_PI_TOP_cs_of_pi3                               (DVDD_BLK + DBG64SEL + (halDVDD_PI_TOP<<BUS_STARTBIT) + 0x001D)
#define DVDD_PI_TOP_cs_of_pi2                               (DVDD_BLK + DBG64SEL + (halDVDD_PI_TOP<<BUS_STARTBIT) + 0x001C)
#define DVDD_PI_TOP_cs_of_pi1                               (DVDD_BLK + DBG64SEL + (halDVDD_PI_TOP<<BUS_STARTBIT) + 0x001B)
#define DVDD_PI_TOP_cs_of_pi0                               (DVDD_BLK + DBG64SEL + (halDVDD_PI_TOP<<BUS_STARTBIT) + 0x001A)
#define DVDD_PI_TOP_ib_secnum3                              (DVDD_BLK + DBG64SEL + (halDVDD_PI_TOP<<BUS_STARTBIT) + 0x0019)
#define DVDD_PI_TOP_ib_secnum2                              (DVDD_BLK + DBG64SEL + (halDVDD_PI_TOP<<BUS_STARTBIT) + 0x0018)
#define DVDD_PI_TOP_ib_secnum1                              (DVDD_BLK + DBG64SEL + (halDVDD_PI_TOP<<BUS_STARTBIT) + 0x0017)
#define DVDD_PI_TOP_ib_secnum0                              (DVDD_BLK + DBG64SEL + (halDVDD_PI_TOP<<BUS_STARTBIT) + 0x0016)
#define DVDD_PI_TOP_current_state_pi_db2                    (DVDD_BLK + DBG64SEL + (halDVDD_PI_TOP<<BUS_STARTBIT) + 0x0015)
#define DVDD_PI_TOP_current_state_pi_db1                    (DVDD_BLK + DBG64SEL + (halDVDD_PI_TOP<<BUS_STARTBIT) + 0x0014)
#define DVDD_PI_TOP_current_state_pi_db0                    (DVDD_BLK + DBG64SEL + (halDVDD_PI_TOP<<BUS_STARTBIT) + 0x0013)
#define DVDD_PI_TOP_current_state_pi_engine1                (DVDD_BLK + DBG64SEL + (halDVDD_PI_TOP<<BUS_STARTBIT) + 0x0012)
#define DVDD_PI_TOP_current_state_pi_engine0                (DVDD_BLK + DBG64SEL + (halDVDD_PI_TOP<<BUS_STARTBIT) + 0x0011)
#define DVDD_PI_TOP_data_en_ib                              (DVDD_BLK + DBG64SEL + (halDVDD_PI_TOP<<BUS_STARTBIT) + 0x0010)
#define DVDD_PI_TOP_data_prepared                           (DVDD_BLK + DBG64SEL + (halDVDD_PI_TOP<<BUS_STARTBIT) + 0x000F)
#define DVDD_PI_TOP_recc_start                              (DVDD_BLK + DBG64SEL + (halDVDD_PI_TOP<<BUS_STARTBIT) + 0x000E)
#define DVDD_PI_TOP_pseudo_pib_start_for_po                 (DVDD_BLK + DBG64SEL + (halDVDD_PI_TOP<<BUS_STARTBIT) + 0x000D)
#define DVDD_PI_TOP_start_sending_2                         (DVDD_BLK + DBG64SEL + (halDVDD_PI_TOP<<BUS_STARTBIT) + 0x000C)
#define DVDD_PI_TOP_ersr_init                               (DVDD_BLK + DBG64SEL + (halDVDD_PI_TOP<<BUS_STARTBIT) + 0x000B)
#define DVDD_PI_TOP_ersr_we                                 (DVDD_BLK + DBG64SEL + (halDVDD_PI_TOP<<BUS_STARTBIT) + 0x000A)
#define DVDD_PI_TOP_row_completed                           (DVDD_BLK + DBG64SEL + (halDVDD_PI_TOP<<BUS_STARTBIT) + 0x0009)
#define DVDD_PI_TOP_nedc_reset                              (DVDD_BLK + DBG64SEL + (halDVDD_PI_TOP<<BUS_STARTBIT) + 0x0008)
#define DVDD_PI_TOP_win_sel_for_po_reset1                   (DVDD_BLK + DBG64SEL + (halDVDD_PI_TOP<<BUS_STARTBIT) + 0x0007)
#define DVDD_PI_TOP_win_sel_for_po_reset0                   (DVDD_BLK + DBG64SEL + (halDVDD_PI_TOP<<BUS_STARTBIT) + 0x0006)
#define DVDD_PI_TOP_misc_lsb                                (DVDD_BLK + DBG64SEL + (halDVDD_PI_TOP<<BUS_STARTBIT) + 0x0005)
#define DVDD_PI_TOP_ld_misc_lsb                             (DVDD_BLK + DBG64SEL + (halDVDD_PI_TOP<<BUS_STARTBIT) + 0x0004)
#define DVDD_PI_TOP_right_frame_prev_from_pi                (DVDD_BLK + DBG64SEL + (halDVDD_PI_TOP<<BUS_STARTBIT) + 0x0003)
#define DVDD_PI_TOP_former_blk_from_pi                      (DVDD_BLK + DBG64SEL + (halDVDD_PI_TOP<<BUS_STARTBIT) + 0x0002)
#define DVDD_PI_TOP_hd_mid_row_jump_from_pi                 (DVDD_BLK + DBG64SEL + (halDVDD_PI_TOP<<BUS_STARTBIT) + 0x0001)
#define DVDD_PI_TOP_hd_row_jump_from_pi                     (DVDD_BLK + DBG64SEL + (halDVDD_PI_TOP<<BUS_STARTBIT) + 0x0000)
//DVDD_PO_TOP_1
#define DVDD_PO_TOP_1_edc_reset                             (DVDD_BLK + DBG64SEL + (halDVDD_PO_TOP_1<<BUS_STARTBIT) + 0x002F)
#define DVDD_PO_TOP_1_po_reset                              (DVDD_BLK + DBG64SEL + (halDVDD_PO_TOP_1<<BUS_STARTBIT) + 0x002E)
#define DVDD_PO_TOP_1_po_ld_seed                            (DVDD_BLK + DBG64SEL + (halDVDD_PO_TOP_1<<BUS_STARTBIT) + 0x002D)
#define DVDD_PO_TOP_1_polv_reset_from_po                    (DVDD_BLK + DBG64SEL + (halDVDD_PO_TOP_1<<BUS_STARTBIT) + 0x002C)
#define DVDD_PO_TOP_1_polv_st                               (DVDD_BLK + DBG64SEL + (halDVDD_PO_TOP_1<<BUS_STARTBIT) + 0x002B)
#define DVDD_PO_TOP_1_polv_req                              (DVDD_BLK + DBG64SEL + (halDVDD_PO_TOP_1<<BUS_STARTBIT) + 0x002A)
#define DVDD_PO_TOP_1_polv_we                               (DVDD_BLK + DBG64SEL + (halDVDD_PO_TOP_1<<BUS_STARTBIT) + 0x0029)
#define DVDD_PO_TOP_1_porw_rownum3                          (DVDD_BLK + DBG64SEL + (halDVDD_PO_TOP_1<<BUS_STARTBIT) + 0x0028)
#define DVDD_PO_TOP_1_porw_rownum2                          (DVDD_BLK + DBG64SEL + (halDVDD_PO_TOP_1<<BUS_STARTBIT) + 0x0027)
#define DVDD_PO_TOP_1_porw_rownum1                          (DVDD_BLK + DBG64SEL + (halDVDD_PO_TOP_1<<BUS_STARTBIT) + 0x0026)
#define DVDD_PO_TOP_1_porw_rownum0                          (DVDD_BLK + DBG64SEL + (halDVDD_PO_TOP_1<<BUS_STARTBIT) + 0x0025)
#define DVDD_PO_TOP_1_porw_secnum3                          (DVDD_BLK + DBG64SEL + (halDVDD_PO_TOP_1<<BUS_STARTBIT) + 0x0024)
#define DVDD_PO_TOP_1_porw_secnum2                          (DVDD_BLK + DBG64SEL + (halDVDD_PO_TOP_1<<BUS_STARTBIT) + 0x0023)
#define DVDD_PO_TOP_1_porw_secnum1                          (DVDD_BLK + DBG64SEL + (halDVDD_PO_TOP_1<<BUS_STARTBIT) + 0x0022)
#define DVDD_PO_TOP_1_porw_secnum0                          (DVDD_BLK + DBG64SEL + (halDVDD_PO_TOP_1<<BUS_STARTBIT) + 0x0021)
#define DVDD_PO_TOP_1_porw_region1                          (DVDD_BLK + DBG64SEL + (halDVDD_PO_TOP_1<<BUS_STARTBIT) + 0x0020)
#define DVDD_PO_TOP_1_porw_region0                          (DVDD_BLK + DBG64SEL + (halDVDD_PO_TOP_1<<BUS_STARTBIT) + 0x001F)
#define DVDD_PO_TOP_1_porw_region_flag                      (DVDD_BLK + DBG64SEL + (halDVDD_PO_TOP_1<<BUS_STARTBIT) + 0x001E)
#define DVDD_PO_TOP_1_recc_is_ing                           (DVDD_BLK + DBG64SEL + (halDVDD_PO_TOP_1<<BUS_STARTBIT) + 0x001D)
#define DVDD_PO_TOP_1_recc_for_hd_right_blk                 (DVDD_BLK + DBG64SEL + (halDVDD_PO_TOP_1<<BUS_STARTBIT) + 0x001C)
#define DVDD_PO_TOP_1_po_is_not_correcting                  (DVDD_BLK + DBG64SEL + (halDVDD_PO_TOP_1<<BUS_STARTBIT) + 0x001B)
#define DVDD_PO_TOP_1_po_done                               (DVDD_BLK + DBG64SEL + (halDVDD_PO_TOP_1<<BUS_STARTBIT) + 0x001A)
#define DVDD_PO_TOP_1_po_els_load                           (DVDD_BLK + DBG64SEL + (halDVDD_PO_TOP_1<<BUS_STARTBIT) + 0x0019)
#define DVDD_PO_TOP_1_po_has_err                            (DVDD_BLK + DBG64SEL + (halDVDD_PO_TOP_1<<BUS_STARTBIT) + 0x0018)
#define DVDD_PO_TOP_1_po_incomplete                         (DVDD_BLK + DBG64SEL + (halDVDD_PO_TOP_1<<BUS_STARTBIT) + 0x0017)
#define DVDD_PO_TOP_1_po_errata_out_for_edc7                (DVDD_BLK + DBG64SEL + (halDVDD_PO_TOP_1<<BUS_STARTBIT) + 0x0016)
#define DVDD_PO_TOP_1_po_errata_out_for_edc6                (DVDD_BLK + DBG64SEL + (halDVDD_PO_TOP_1<<BUS_STARTBIT) + 0x0015)
#define DVDD_PO_TOP_1_po_errata_out_for_edc5                (DVDD_BLK + DBG64SEL + (halDVDD_PO_TOP_1<<BUS_STARTBIT) + 0x0014)
#define DVDD_PO_TOP_1_po_errata_out_for_edc4                (DVDD_BLK + DBG64SEL + (halDVDD_PO_TOP_1<<BUS_STARTBIT) + 0x0013)
#define DVDD_PO_TOP_1_po_errata_out_for_edc3                (DVDD_BLK + DBG64SEL + (halDVDD_PO_TOP_1<<BUS_STARTBIT) + 0x0012)
#define DVDD_PO_TOP_1_po_errata_out_for_edc2                (DVDD_BLK + DBG64SEL + (halDVDD_PO_TOP_1<<BUS_STARTBIT) + 0x0011)
#define DVDD_PO_TOP_1_po_errata_out_for_edc1                (DVDD_BLK + DBG64SEL + (halDVDD_PO_TOP_1<<BUS_STARTBIT) + 0x0010)
#define DVDD_PO_TOP_1_po_errata_out_for_edc0                (DVDD_BLK + DBG64SEL + (halDVDD_PO_TOP_1<<BUS_STARTBIT) + 0x000F)
#define DVDD_PO_TOP_1_nebs                                  (DVDD_BLK + DBG64SEL + (halDVDD_PO_TOP_1<<BUS_STARTBIT) + 0x000E)
#define DVDD_PO_TOP_1_row0                                  (DVDD_BLK + DBG64SEL + (halDVDD_PO_TOP_1<<BUS_STARTBIT) + 0x000D)
#define DVDD_PO_TOP_1_area01                                (DVDD_BLK + DBG64SEL + (halDVDD_PO_TOP_1<<BUS_STARTBIT) + 0x000C)
#define DVDD_PO_TOP_1_last_blk                              (DVDD_BLK + DBG64SEL + (halDVDD_PO_TOP_1<<BUS_STARTBIT) + 0x000B)
#define DVDD_PO_TOP_1_ecc_cnt2                              (DVDD_BLK + DBG64SEL + (halDVDD_PO_TOP_1<<BUS_STARTBIT) + 0x000A)
#define DVDD_PO_TOP_1_ecc_cnt1                              (DVDD_BLK + DBG64SEL + (halDVDD_PO_TOP_1<<BUS_STARTBIT) + 0x0009)
#define DVDD_PO_TOP_1_ecc_cnt0                              (DVDD_BLK + DBG64SEL + (halDVDD_PO_TOP_1<<BUS_STARTBIT) + 0x0008)
#define DVDD_PO_TOP_1_start_correcting                      (DVDD_BLK + DBG64SEL + (halDVDD_PO_TOP_1<<BUS_STARTBIT) + 0x0007)
#define DVDD_PO_TOP_1_start_decoding                        (DVDD_BLK + DBG64SEL + (halDVDD_PO_TOP_1<<BUS_STARTBIT) + 0x0006)
#define DVDD_PO_TOP_1_chien_hold                            (DVDD_BLK + DBG64SEL + (halDVDD_PO_TOP_1<<BUS_STARTBIT) + 0x0005)
#define DVDD_PO_TOP_1_chien_idle                            (DVDD_BLK + DBG64SEL + (halDVDD_PO_TOP_1<<BUS_STARTBIT) + 0x0004)
#define DVDD_PO_TOP_1_poedc_inhibit                         (DVDD_BLK + DBG64SEL + (halDVDD_PO_TOP_1<<BUS_STARTBIT) + 0x0003)
#define DVDD_PO_TOP_1_right_frame_from_po                   (DVDD_BLK + DBG64SEL + (halDVDD_PO_TOP_1<<BUS_STARTBIT) + 0x0002)
#define DVDD_PO_TOP_1_former_blk_from_po                    (DVDD_BLK + DBG64SEL + (halDVDD_PO_TOP_1<<BUS_STARTBIT) + 0x0001)
#define DVDD_PO_TOP_1_edc_done                              (DVDD_BLK + DBG64SEL + (halDVDD_PO_TOP_1<<BUS_STARTBIT) + 0x0000)
//DVDD_PO_TOP_2
#define DVDD_PO_TOP_2_edc_reset                             (DVDD_BLK + DBG64SEL + (halDVDD_PO_TOP_2<<BUS_STARTBIT) + 0x002F)
#define DVDD_PO_TOP_2_po_reset                              (DVDD_BLK + DBG64SEL + (halDVDD_PO_TOP_2<<BUS_STARTBIT) + 0x002E)
#define DVDD_PO_TOP_2_po_ld_seed                            (DVDD_BLK + DBG64SEL + (halDVDD_PO_TOP_2<<BUS_STARTBIT) + 0x002D)
#define DVDD_PO_TOP_2_polv_reset_from_po                    (DVDD_BLK + DBG64SEL + (halDVDD_PO_TOP_2<<BUS_STARTBIT) + 0x002C)
#define DVDD_PO_TOP_2_polv_st                               (DVDD_BLK + DBG64SEL + (halDVDD_PO_TOP_2<<BUS_STARTBIT) + 0x002B)
#define DVDD_PO_TOP_2_polv_req                              (DVDD_BLK + DBG64SEL + (halDVDD_PO_TOP_2<<BUS_STARTBIT) + 0x002A)
#define DVDD_PO_TOP_2_polv_we                               (DVDD_BLK + DBG64SEL + (halDVDD_PO_TOP_2<<BUS_STARTBIT) + 0x0029)
#define DVDD_PO_TOP_2_porw_rownum3                          (DVDD_BLK + DBG64SEL + (halDVDD_PO_TOP_2<<BUS_STARTBIT) + 0x0028)
#define DVDD_PO_TOP_2_porw_rownum2                          (DVDD_BLK + DBG64SEL + (halDVDD_PO_TOP_2<<BUS_STARTBIT) + 0x0027)
#define DVDD_PO_TOP_2_porw_rownum1                          (DVDD_BLK + DBG64SEL + (halDVDD_PO_TOP_2<<BUS_STARTBIT) + 0x0026)
#define DVDD_PO_TOP_2_porw_rownum0                          (DVDD_BLK + DBG64SEL + (halDVDD_PO_TOP_2<<BUS_STARTBIT) + 0x0025)
#define DVDD_PO_TOP_2_porw_region1                          (DVDD_BLK + DBG64SEL + (halDVDD_PO_TOP_2<<BUS_STARTBIT) + 0x0024)
#define DVDD_PO_TOP_2_porw_region0                          (DVDD_BLK + DBG64SEL + (halDVDD_PO_TOP_2<<BUS_STARTBIT) + 0x0023)
#define DVDD_PO_TOP_2_edc_done                              (DVDD_BLK + DBG64SEL + (halDVDD_PO_TOP_2<<BUS_STARTBIT) + 0x0022)
#define DVDD_PO_TOP_2_edc_blki                              (DVDD_BLK + DBG64SEL + (halDVDD_PO_TOP_2<<BUS_STARTBIT) + 0x0021)
#define DVDD_PO_TOP_2_edc_status_vld                        (DVDD_BLK + DBG64SEL + (halDVDD_PO_TOP_2<<BUS_STARTBIT) + 0x0020)
#define DVDD_PO_TOP_2_recc_is_ing                           (DVDD_BLK + DBG64SEL + (halDVDD_PO_TOP_2<<BUS_STARTBIT) + 0x001F)
#define DVDD_PO_TOP_2_recc_for_hd_right_blk                 (DVDD_BLK + DBG64SEL + (halDVDD_PO_TOP_2<<BUS_STARTBIT) + 0x001E)
#define DVDD_PO_TOP_2_recc_start                            (DVDD_BLK + DBG64SEL + (halDVDD_PO_TOP_2<<BUS_STARTBIT) + 0x001D)
#define DVDD_PO_TOP_2_recc_is_ing1                          (DVDD_BLK + DBG64SEL + (halDVDD_PO_TOP_2<<BUS_STARTBIT) + 0x001C)
#define DVDD_PO_TOP_2_ecc_cnt2                              (DVDD_BLK + DBG64SEL + (halDVDD_PO_TOP_2<<BUS_STARTBIT) + 0x001B)
#define DVDD_PO_TOP_2_ecc_cnt1                              (DVDD_BLK + DBG64SEL + (halDVDD_PO_TOP_2<<BUS_STARTBIT) + 0x001A)
#define DVDD_PO_TOP_2_ecc_cnt0                              (DVDD_BLK + DBG64SEL + (halDVDD_PO_TOP_2<<BUS_STARTBIT) + 0x0019)
#define DVDD_PO_TOP_2_start_correcting                      (DVDD_BLK + DBG64SEL + (halDVDD_PO_TOP_2<<BUS_STARTBIT) + 0x0018)
#define DVDD_PO_TOP_2_start_decoding                        (DVDD_BLK + DBG64SEL + (halDVDD_PO_TOP_2<<BUS_STARTBIT) + 0x0017)
#define DVDD_PO_TOP_2_cs_of_po_euclid4                      (DVDD_BLK + DBG64SEL + (halDVDD_PO_TOP_2<<BUS_STARTBIT) + 0x0016)
#define DVDD_PO_TOP_2_cs_of_po_euclid3                      (DVDD_BLK + DBG64SEL + (halDVDD_PO_TOP_2<<BUS_STARTBIT) + 0x0015)
#define DVDD_PO_TOP_2_cs_of_po_euclid2                      (DVDD_BLK + DBG64SEL + (halDVDD_PO_TOP_2<<BUS_STARTBIT) + 0x0014)
#define DVDD_PO_TOP_2_cs_of_po_euclid1                      (DVDD_BLK + DBG64SEL + (halDVDD_PO_TOP_2<<BUS_STARTBIT) + 0x0013)
#define DVDD_PO_TOP_2_cs_of_po_euclid0                      (DVDD_BLK + DBG64SEL + (halDVDD_PO_TOP_2<<BUS_STARTBIT) + 0x0012)
#define DVDD_PO_TOP_2_cs_of_po_cs3                          (DVDD_BLK + DBG64SEL + (halDVDD_PO_TOP_2<<BUS_STARTBIT) + 0x0011)
#define DVDD_PO_TOP_2_cs_of_po_cs2                          (DVDD_BLK + DBG64SEL + (halDVDD_PO_TOP_2<<BUS_STARTBIT) + 0x0010)
#define DVDD_PO_TOP_2_cs_of_po_cs1                          (DVDD_BLK + DBG64SEL + (halDVDD_PO_TOP_2<<BUS_STARTBIT) + 0x000F)
#define DVDD_PO_TOP_2_cs_of_po_cs0                          (DVDD_BLK + DBG64SEL + (halDVDD_PO_TOP_2<<BUS_STARTBIT) + 0x000E)
#define DVDD_PO_TOP_2_cs_of_po_out3                         (DVDD_BLK + DBG64SEL + (halDVDD_PO_TOP_2<<BUS_STARTBIT) + 0x000D)
#define DVDD_PO_TOP_2_cs_of_po_out2                         (DVDD_BLK + DBG64SEL + (halDVDD_PO_TOP_2<<BUS_STARTBIT) + 0x000C)
#define DVDD_PO_TOP_2_cs_of_po_out1                         (DVDD_BLK + DBG64SEL + (halDVDD_PO_TOP_2<<BUS_STARTBIT) + 0x000B)
#define DVDD_PO_TOP_2_cs_of_po_out0                         (DVDD_BLK + DBG64SEL + (halDVDD_PO_TOP_2<<BUS_STARTBIT) + 0x000A)
#define DVDD_PO_TOP_2_sym_en_poedc                          (DVDD_BLK + DBG64SEL + (halDVDD_PO_TOP_2<<BUS_STARTBIT) + 0x0009)
#define DVDD_PO_TOP_2_po_errata_found                       (DVDD_BLK + DBG64SEL + (halDVDD_PO_TOP_2<<BUS_STARTBIT) + 0x0008)
#define DVDD_PO_TOP_2_chien_hold                            (DVDD_BLK + DBG64SEL + (halDVDD_PO_TOP_2<<BUS_STARTBIT) + 0x0007)
#define DVDD_PO_TOP_2_chien_idle                            (DVDD_BLK + DBG64SEL + (halDVDD_PO_TOP_2<<BUS_STARTBIT) + 0x0006)
#define DVDD_PO_TOP_2_poedc_inhibit                         (DVDD_BLK + DBG64SEL + (halDVDD_PO_TOP_2<<BUS_STARTBIT) + 0x0005)
#define DVDD_PO_TOP_2_hd_mid_row_jump_from_po               (DVDD_BLK + DBG64SEL + (halDVDD_PO_TOP_2<<BUS_STARTBIT) + 0x0004)
#define DVDD_PO_TOP_2_hd_row_jump_from_po                   (DVDD_BLK + DBG64SEL + (halDVDD_PO_TOP_2<<BUS_STARTBIT) + 0x0003)
#define DVDD_PO_TOP_2_right_frame_from_po                   (DVDD_BLK + DBG64SEL + (halDVDD_PO_TOP_2<<BUS_STARTBIT) + 0x0002)
#define DVDD_PO_TOP_2_former_blk_from_po                    (DVDD_BLK + DBG64SEL + (halDVDD_PO_TOP_2<<BUS_STARTBIT) + 0x0001)
#define DVDD_PO_TOP_2_po_done                               (DVDD_BLK + DBG64SEL + (halDVDD_PO_TOP_2<<BUS_STARTBIT) + 0x0000)
//DVDD_EDC_TOP
#define DVDD_EDC_TOP_poedc_idle                             (DVDD_BLK + DBG64SEL + (halDVDD_EDC_TOP<<BUS_STARTBIT) + 0x002F)
#define DVDD_EDC_TOP_nedc_sram_area                         (DVDD_BLK + DBG64SEL + (halDVDD_EDC_TOP<<BUS_STARTBIT) + 0x002E)
#define DVDD_EDC_TOP_poedc_sram_area                        (DVDD_BLK + DBG64SEL + (halDVDD_EDC_TOP<<BUS_STARTBIT) + 0x002D)
#define DVDD_EDC_TOP_ledc_to_redc                           (DVDD_BLK + DBG64SEL + (halDVDD_EDC_TOP<<BUS_STARTBIT) + 0x002C)
#define DVDD_EDC_TOP_ledc_to_redc_done                      (DVDD_BLK + DBG64SEL + (halDVDD_EDC_TOP<<BUS_STARTBIT) + 0x002B)
#define DVDD_EDC_TOP_nedc_done                              (DVDD_BLK + DBG64SEL + (halDVDD_EDC_TOP<<BUS_STARTBIT) + 0x002A)
#define DVDD_EDC_TOP_poedc_done                             (DVDD_BLK + DBG64SEL + (halDVDD_EDC_TOP<<BUS_STARTBIT) + 0x0029)
#define DVDD_EDC_TOP_sram1_out_en_b                         (DVDD_BLK + DBG64SEL + (halDVDD_EDC_TOP<<BUS_STARTBIT) + 0x0028)
#define DVDD_EDC_TOP_sram1_out_addr4                        (DVDD_BLK + DBG64SEL + (halDVDD_EDC_TOP<<BUS_STARTBIT) + 0x0027)
#define DVDD_EDC_TOP_sram1_out_addr3                        (DVDD_BLK + DBG64SEL + (halDVDD_EDC_TOP<<BUS_STARTBIT) + 0x0026)
#define DVDD_EDC_TOP_sram1_out_addr2                        (DVDD_BLK + DBG64SEL + (halDVDD_EDC_TOP<<BUS_STARTBIT) + 0x0025)
#define DVDD_EDC_TOP_sram1_out_addr1                        (DVDD_BLK + DBG64SEL + (halDVDD_EDC_TOP<<BUS_STARTBIT) + 0x0024)
#define DVDD_EDC_TOP_sram1_out_addr0                        (DVDD_BLK + DBG64SEL + (halDVDD_EDC_TOP<<BUS_STARTBIT) + 0x0023)
#define DVDD_EDC_TOP_sram1_in_en_b                          (DVDD_BLK + DBG64SEL + (halDVDD_EDC_TOP<<BUS_STARTBIT) + 0x0022)
#define DVDD_EDC_TOP_sram1_in_addr4                         (DVDD_BLK + DBG64SEL + (halDVDD_EDC_TOP<<BUS_STARTBIT) + 0x0021)
#define DVDD_EDC_TOP_sram1_in_addr3                         (DVDD_BLK + DBG64SEL + (halDVDD_EDC_TOP<<BUS_STARTBIT) + 0x0020)
#define DVDD_EDC_TOP_sram1_in_addr2                         (DVDD_BLK + DBG64SEL + (halDVDD_EDC_TOP<<BUS_STARTBIT) + 0x001F)
#define DVDD_EDC_TOP_sram1_in_addr1                         (DVDD_BLK + DBG64SEL + (halDVDD_EDC_TOP<<BUS_STARTBIT) + 0x001E)
#define DVDD_EDC_TOP_sram1_in_addr0                         (DVDD_BLK + DBG64SEL + (halDVDD_EDC_TOP<<BUS_STARTBIT) + 0x001D)
#define DVDD_EDC_TOP_sram2_out_en_b                         (DVDD_BLK + DBG64SEL + (halDVDD_EDC_TOP<<BUS_STARTBIT) + 0x001C)
#define DVDD_EDC_TOP_sram2_out_addr4                        (DVDD_BLK + DBG64SEL + (halDVDD_EDC_TOP<<BUS_STARTBIT) + 0x001B)
#define DVDD_EDC_TOP_sram2_out_addr3                        (DVDD_BLK + DBG64SEL + (halDVDD_EDC_TOP<<BUS_STARTBIT) + 0x001A)
#define DVDD_EDC_TOP_sram2_out_addr2                        (DVDD_BLK + DBG64SEL + (halDVDD_EDC_TOP<<BUS_STARTBIT) + 0x0019)
#define DVDD_EDC_TOP_sram2_out_addr1                        (DVDD_BLK + DBG64SEL + (halDVDD_EDC_TOP<<BUS_STARTBIT) + 0x0018)
#define DVDD_EDC_TOP_sram2_out_addr0                        (DVDD_BLK + DBG64SEL + (halDVDD_EDC_TOP<<BUS_STARTBIT) + 0x0017)
#define DVDD_EDC_TOP_sram2_in_en_b                          (DVDD_BLK + DBG64SEL + (halDVDD_EDC_TOP<<BUS_STARTBIT) + 0x0016)
#define DVDD_EDC_TOP_sram2_in_addr4                         (DVDD_BLK + DBG64SEL + (halDVDD_EDC_TOP<<BUS_STARTBIT) + 0x0015)
#define DVDD_EDC_TOP_sram2_in_addr3                         (DVDD_BLK + DBG64SEL + (halDVDD_EDC_TOP<<BUS_STARTBIT) + 0x0014)
#define DVDD_EDC_TOP_sram2_in_addr2                         (DVDD_BLK + DBG64SEL + (halDVDD_EDC_TOP<<BUS_STARTBIT) + 0x0013)
#define DVDD_EDC_TOP_sram2_in_addr1                         (DVDD_BLK + DBG64SEL + (halDVDD_EDC_TOP<<BUS_STARTBIT) + 0x0012)
#define DVDD_EDC_TOP_sram2_in_addr0                         (DVDD_BLK + DBG64SEL + (halDVDD_EDC_TOP<<BUS_STARTBIT) + 0x0011)
#define DVDD_EDC_TOP_hd_row_jump_from_edc                   (DVDD_BLK + DBG64SEL + (halDVDD_EDC_TOP<<BUS_STARTBIT) + 0x0010)
#define DVDD_EDC_TOP_sym_cnt_exp_nedc                       (DVDD_BLK + DBG64SEL + (halDVDD_EDC_TOP<<BUS_STARTBIT) + 0x000F)
#define DVDD_EDC_TOP_sec_start_nedc                         (DVDD_BLK + DBG64SEL + (halDVDD_EDC_TOP<<BUS_STARTBIT) + 0x000E)
#define DVDD_EDC_TOP_sec_cnt_exp_nedc                       (DVDD_BLK + DBG64SEL + (halDVDD_EDC_TOP<<BUS_STARTBIT) + 0x000D)
#define DVDD_EDC_TOP_hd_poedc_state2                        (DVDD_BLK + DBG64SEL + (halDVDD_EDC_TOP<<BUS_STARTBIT) + 0x000C)
#define DVDD_EDC_TOP_hd_poedc_state1                        (DVDD_BLK + DBG64SEL + (halDVDD_EDC_TOP<<BUS_STARTBIT) + 0x000B)
#define DVDD_EDC_TOP_hd_poedc_state0                        (DVDD_BLK + DBG64SEL + (halDVDD_EDC_TOP<<BUS_STARTBIT) + 0x000A)
#define DVDD_EDC_TOP_sym_cnt_exp_poedc                      (DVDD_BLK + DBG64SEL + (halDVDD_EDC_TOP<<BUS_STARTBIT) + 0x0009)
#define DVDD_EDC_TOP_sec_start_poedc                        (DVDD_BLK + DBG64SEL + (halDVDD_EDC_TOP<<BUS_STARTBIT) + 0x0008)
#define DVDD_EDC_TOP_sec_cnt_exp_poedc                      (DVDD_BLK + DBG64SEL + (halDVDD_EDC_TOP<<BUS_STARTBIT) + 0x0007)
#define DVDD_EDC_TOP_col_cnt_exp_poedc                      (DVDD_BLK + DBG64SEL + (halDVDD_EDC_TOP<<BUS_STARTBIT) + 0x0006)
#define DVDD_EDC_TOP_cpi_area                               (DVDD_BLK + DBG64SEL + (halDVDD_EDC_TOP<<BUS_STARTBIT) + 0x0005)
#define DVDD_EDC_TOP_edc_done                               (DVDD_BLK + DBG64SEL + (halDVDD_EDC_TOP<<BUS_STARTBIT) + 0x0004)
#define DVDD_EDC_TOP_edc_blki                               (DVDD_BLK + DBG64SEL + (halDVDD_EDC_TOP<<BUS_STARTBIT) + 0x0003)
#define DVDD_EDC_TOP_edc_status_vld                         (DVDD_BLK + DBG64SEL + (halDVDD_EDC_TOP<<BUS_STARTBIT) + 0x0002)
#define DVDD_EDC_TOP_medprot                                (DVDD_BLK + DBG64SEL + (halDVDD_EDC_TOP<<BUS_STARTBIT) + 0x0001)
#define DVDD_EDC_TOP_ld_acc                                 (DVDD_BLK + DBG64SEL + (halDVDD_EDC_TOP<<BUS_STARTBIT) + 0x0000)
//DVDD_DVD_MISC_1
#define DVDD_DVD_MISC_1_sysclk                              (DVDD_BLK + DBG64SEL + (halDVDD_DVD_MISC_1<<BUS_STARTBIT) + 0x002F)
#define DVDD_DVD_MISC_1_memif_is_idle                       (DVDD_BLK + DBG64SEL + (halDVDD_DVD_MISC_1<<BUS_STARTBIT) + 0x002E)
#define DVDD_DVD_MISC_1_sysclk_for_css                      (DVDD_BLK + DBG64SEL + (halDVDD_DVD_MISC_1<<BUS_STARTBIT) + 0x002D)
#define DVDD_DVD_MISC_1_demod_clk                           (DVDD_BLK + DBG64SEL + (halDVDD_DVD_MISC_1<<BUS_STARTBIT) + 0x002C)
#define DVDD_DVD_MISC_1_prst_n                              (DVDD_BLK + DBG64SEL + (halDVDD_DVD_MISC_1<<BUS_STARTBIT) + 0x002B)
#define DVDD_DVD_MISC_1_prst_test_n                         (DVDD_BLK + DBG64SEL + (halDVDD_DVD_MISC_1<<BUS_STARTBIT) + 0x002A)
#define DVDD_DVD_MISC_1_rstdsp                              (DVDD_BLK + DBG64SEL + (halDVDD_DVD_MISC_1<<BUS_STARTBIT) + 0x0029)
#define DVDD_DVD_MISC_1_rstsyn                              (DVDD_BLK + DBG64SEL + (halDVDD_DVD_MISC_1<<BUS_STARTBIT) + 0x0028)
#define DVDD_DVD_MISC_1_rstcss                              (DVDD_BLK + DBG64SEL + (halDVDD_DVD_MISC_1<<BUS_STARTBIT) + 0x0027)
#define DVDD_DVD_MISC_1_rst_pon_n                           (DVDD_BLK + DBG64SEL + (halDVDD_DVD_MISC_1<<BUS_STARTBIT) + 0x0026)
#define DVDD_DVD_MISC_1_rst_pondsp_n                        (DVDD_BLK + DBG64SEL + (halDVDD_DVD_MISC_1<<BUS_STARTBIT) + 0x0025)
#define DVDD_DVD_MISC_1_rst_pondsp104_n                     (DVDD_BLK + DBG64SEL + (halDVDD_DVD_MISC_1<<BUS_STARTBIT) + 0x0024)
#define DVDD_DVD_MISC_1_rst_pondspsyn_n                     (DVDD_BLK + DBG64SEL + (halDVDD_DVD_MISC_1<<BUS_STARTBIT) + 0x0023)
#define DVDD_DVD_MISC_1_rst_pondspsyn104_n                  (DVDD_BLK + DBG64SEL + (halDVDD_DVD_MISC_1<<BUS_STARTBIT) + 0x0022)
#define DVDD_DVD_MISC_1_rst_poncss_n                        (DVDD_BLK + DBG64SEL + (halDVDD_DVD_MISC_1<<BUS_STARTBIT) + 0x0021)
#define DVDD_DVD_MISC_1_halt_memif                          (DVDD_BLK + DBG64SEL + (halDVDD_DVD_MISC_1<<BUS_STARTBIT) + 0x0020)
#define DVDD_DVD_MISC_1_in_atpgtest                         (DVDD_BLK + DBG64SEL + (halDVDD_DVD_MISC_1<<BUS_STARTBIT) + 0x001F)
#define DVDD_DVD_MISC_1_discstd2                            (DVDD_BLK + DBG64SEL + (halDVDD_DVD_MISC_1<<BUS_STARTBIT) + 0x001E)
#define DVDD_DVD_MISC_1_discstd1                            (DVDD_BLK + DBG64SEL + (halDVDD_DVD_MISC_1<<BUS_STARTBIT) + 0x001D)
#define DVDD_DVD_MISC_1_discstd0                            (DVDD_BLK + DBG64SEL + (halDVDD_DVD_MISC_1<<BUS_STARTBIT) + 0x001C)
#define DVDD_DVD_MISC_1_discfmt3                            (DVDD_BLK + DBG64SEL + (halDVDD_DVD_MISC_1<<BUS_STARTBIT) + 0x001B)
#define DVDD_DVD_MISC_1_discfmt2                            (DVDD_BLK + DBG64SEL + (halDVDD_DVD_MISC_1<<BUS_STARTBIT) + 0x001A)
#define DVDD_DVD_MISC_1_discfmt1                            (DVDD_BLK + DBG64SEL + (halDVDD_DVD_MISC_1<<BUS_STARTBIT) + 0x0019)
#define DVDD_DVD_MISC_1_discfmt0                            (DVDD_BLK + DBG64SEL + (halDVDD_DVD_MISC_1<<BUS_STARTBIT) + 0x0018)
#define DVDD_DVD_MISC_1_demod_ld_seed                       (DVDD_BLK + DBG64SEL + (halDVDD_DVD_MISC_1<<BUS_STARTBIT) + 0x0017)
#define DVDD_DVD_MISC_1_iedcerr_and_edc_done                (DVDD_BLK + DBG64SEL + (halDVDD_DVD_MISC_1<<BUS_STARTBIT) + 0x0016)
#define DVDD_DVD_MISC_1_i_ecci                              (DVDD_BLK + DBG64SEL + (halDVDD_DVD_MISC_1<<BUS_STARTBIT) + 0x0015)
#define DVDD_DVD_MISC_1_hf_addr19                           (DVDD_BLK + DBG64SEL + (halDVDD_DVD_MISC_1<<BUS_STARTBIT) + 0x0014)
#define DVDD_DVD_MISC_1_hf_addr18                           (DVDD_BLK + DBG64SEL + (halDVDD_DVD_MISC_1<<BUS_STARTBIT) + 0x0013)
#define DVDD_DVD_MISC_1_hf_addr17                           (DVDD_BLK + DBG64SEL + (halDVDD_DVD_MISC_1<<BUS_STARTBIT) + 0x0012)
#define DVDD_DVD_MISC_1_hf_addr16                           (DVDD_BLK + DBG64SEL + (halDVDD_DVD_MISC_1<<BUS_STARTBIT) + 0x0011)
#define DVDD_DVD_MISC_1_hf_addr15                           (DVDD_BLK + DBG64SEL + (halDVDD_DVD_MISC_1<<BUS_STARTBIT) + 0x0010)
#define DVDD_DVD_MISC_1_hf_addr14                           (DVDD_BLK + DBG64SEL + (halDVDD_DVD_MISC_1<<BUS_STARTBIT) + 0x000F)
#define DVDD_DVD_MISC_1_hf_addr13                           (DVDD_BLK + DBG64SEL + (halDVDD_DVD_MISC_1<<BUS_STARTBIT) + 0x000E)
#define DVDD_DVD_MISC_1_hf_addr12                           (DVDD_BLK + DBG64SEL + (halDVDD_DVD_MISC_1<<BUS_STARTBIT) + 0x000D)
#define DVDD_DVD_MISC_1_hf_addr11                           (DVDD_BLK + DBG64SEL + (halDVDD_DVD_MISC_1<<BUS_STARTBIT) + 0x000C)
#define DVDD_DVD_MISC_1_hf_addr10                           (DVDD_BLK + DBG64SEL + (halDVDD_DVD_MISC_1<<BUS_STARTBIT) + 0x000B)
#define DVDD_DVD_MISC_1_hf_addr9                            (DVDD_BLK + DBG64SEL + (halDVDD_DVD_MISC_1<<BUS_STARTBIT) + 0x000A)
#define DVDD_DVD_MISC_1_hf_addr8                            (DVDD_BLK + DBG64SEL + (halDVDD_DVD_MISC_1<<BUS_STARTBIT) + 0x0009)
#define DVDD_DVD_MISC_1_hf_addr7                            (DVDD_BLK + DBG64SEL + (halDVDD_DVD_MISC_1<<BUS_STARTBIT) + 0x0008)
#define DVDD_DVD_MISC_1_hf_addr6                            (DVDD_BLK + DBG64SEL + (halDVDD_DVD_MISC_1<<BUS_STARTBIT) + 0x0007)
#define DVDD_DVD_MISC_1_hf_addr5                            (DVDD_BLK + DBG64SEL + (halDVDD_DVD_MISC_1<<BUS_STARTBIT) + 0x0006)
#define DVDD_DVD_MISC_1_hf_addr4                            (DVDD_BLK + DBG64SEL + (halDVDD_DVD_MISC_1<<BUS_STARTBIT) + 0x0005)
#define DVDD_DVD_MISC_1_hf_addr3                            (DVDD_BLK + DBG64SEL + (halDVDD_DVD_MISC_1<<BUS_STARTBIT) + 0x0004)
#define DVDD_DVD_MISC_1_hf_addr2                            (DVDD_BLK + DBG64SEL + (halDVDD_DVD_MISC_1<<BUS_STARTBIT) + 0x0003)
#define DVDD_DVD_MISC_1_hf_addr1                            (DVDD_BLK + DBG64SEL + (halDVDD_DVD_MISC_1<<BUS_STARTBIT) + 0x0002)
#define DVDD_DVD_MISC_1_hf_addr0                            (DVDD_BLK + DBG64SEL + (halDVDD_DVD_MISC_1<<BUS_STARTBIT) + 0x0001)
#define DVDD_DVD_MISC_1_hf_addr_valid                       (DVDD_BLK + DBG64SEL + (halDVDD_DVD_MISC_1<<BUS_STARTBIT) + 0x0000)
//DVDD_DVD_MISC_2
#define DVDD_DVD_MISC_2_sysclk                              (DVDD_BLK + DBG64SEL + (halDVDD_DVD_MISC_2<<BUS_STARTBIT) + 0x002F)
#define DVDD_DVD_MISC_2_sysclk_dvdram                       (DVDD_BLK + DBG64SEL + (halDVDD_DVD_MISC_2<<BUS_STARTBIT) + 0x002E)
#define DVDD_DVD_MISC_2_demod_clk                           (DVDD_BLK + DBG64SEL + (halDVDD_DVD_MISC_2<<BUS_STARTBIT) + 0x002D)
#define DVDD_DVD_MISC_2_sysclk_for_css                      (DVDD_BLK + DBG64SEL + (halDVDD_DVD_MISC_2<<BUS_STARTBIT) + 0x002C)
#define DVDD_DVD_MISC_2_memif_is_idle                       (DVDD_BLK + DBG64SEL + (halDVDD_DVD_MISC_2<<BUS_STARTBIT) + 0x002B)
#define DVDD_DVD_MISC_2_storing_data                        (DVDD_BLK + DBG64SEL + (halDVDD_DVD_MISC_2<<BUS_STARTBIT) + 0x002A)
#define DVDD_DVD_MISC_2_jump_back                           (DVDD_BLK + DBG64SEL + (halDVDD_DVD_MISC_2<<BUS_STARTBIT) + 0x0029)
#define DVDD_DVD_MISC_2_recc_start                          (DVDD_BLK + DBG64SEL + (halDVDD_DVD_MISC_2<<BUS_STARTBIT) + 0x0028)
#define DVDD_DVD_MISC_2_recc_is_ing                         (DVDD_BLK + DBG64SEL + (halDVDD_DVD_MISC_2<<BUS_STARTBIT) + 0x0027)
#define DVDD_DVD_MISC_2_halt_memif                          (DVDD_BLK + DBG64SEL + (halDVDD_DVD_MISC_2<<BUS_STARTBIT) + 0x0026)
#define DVDD_DVD_MISC_2_in_atpgtest                         (DVDD_BLK + DBG64SEL + (halDVDD_DVD_MISC_2<<BUS_STARTBIT) + 0x0025)
#define DVDD_DVD_MISC_2_demod_ld_seed                       (DVDD_BLK + DBG64SEL + (halDVDD_DVD_MISC_2<<BUS_STARTBIT) + 0x0024)
#define DVDD_DVD_MISC_2_bcamode                             (DVDD_BLK + DBG64SEL + (halDVDD_DVD_MISC_2<<BUS_STARTBIT) + 0x0023)
#define DVDD_DVD_MISC_2_demod_ld_seed2                      (DVDD_BLK + DBG64SEL + (halDVDD_DVD_MISC_2<<BUS_STARTBIT) + 0x0022)
#define DVDD_DVD_MISC_2_pi_ld_seed                          (DVDD_BLK + DBG64SEL + (halDVDD_DVD_MISC_2<<BUS_STARTBIT) + 0x0021)
#define DVDD_DVD_MISC_2_po_ld_seed                          (DVDD_BLK + DBG64SEL + (halDVDD_DVD_MISC_2<<BUS_STARTBIT) + 0x0020)
#define DVDD_DVD_MISC_2_hf_addr19                           (DVDD_BLK + DBG64SEL + (halDVDD_DVD_MISC_2<<BUS_STARTBIT) + 0x001F)
#define DVDD_DVD_MISC_2_hf_addr18                           (DVDD_BLK + DBG64SEL + (halDVDD_DVD_MISC_2<<BUS_STARTBIT) + 0x001E)
#define DVDD_DVD_MISC_2_hf_addr17                           (DVDD_BLK + DBG64SEL + (halDVDD_DVD_MISC_2<<BUS_STARTBIT) + 0x001D)
#define DVDD_DVD_MISC_2_hf_addr16                           (DVDD_BLK + DBG64SEL + (halDVDD_DVD_MISC_2<<BUS_STARTBIT) + 0x001C)
#define DVDD_DVD_MISC_2_hf_addr15                           (DVDD_BLK + DBG64SEL + (halDVDD_DVD_MISC_2<<BUS_STARTBIT) + 0x001B)
#define DVDD_DVD_MISC_2_hf_addr14                           (DVDD_BLK + DBG64SEL + (halDVDD_DVD_MISC_2<<BUS_STARTBIT) + 0x001A)
#define DVDD_DVD_MISC_2_hf_addr13                           (DVDD_BLK + DBG64SEL + (halDVDD_DVD_MISC_2<<BUS_STARTBIT) + 0x0019)
#define DVDD_DVD_MISC_2_hf_addr12                           (DVDD_BLK + DBG64SEL + (halDVDD_DVD_MISC_2<<BUS_STARTBIT) + 0x0018)
#define DVDD_DVD_MISC_2_hf_addr11                           (DVDD_BLK + DBG64SEL + (halDVDD_DVD_MISC_2<<BUS_STARTBIT) + 0x0017)
#define DVDD_DVD_MISC_2_hf_addr10                           (DVDD_BLK + DBG64SEL + (halDVDD_DVD_MISC_2<<BUS_STARTBIT) + 0x0016)
#define DVDD_DVD_MISC_2_hf_addr9                            (DVDD_BLK + DBG64SEL + (halDVDD_DVD_MISC_2<<BUS_STARTBIT) + 0x0015)
#define DVDD_DVD_MISC_2_hf_addr8                            (DVDD_BLK + DBG64SEL + (halDVDD_DVD_MISC_2<<BUS_STARTBIT) + 0x0014)
#define DVDD_DVD_MISC_2_hf_addr7                            (DVDD_BLK + DBG64SEL + (halDVDD_DVD_MISC_2<<BUS_STARTBIT) + 0x0013)
#define DVDD_DVD_MISC_2_hf_addr6                            (DVDD_BLK + DBG64SEL + (halDVDD_DVD_MISC_2<<BUS_STARTBIT) + 0x0012)
#define DVDD_DVD_MISC_2_hf_addr5                            (DVDD_BLK + DBG64SEL + (halDVDD_DVD_MISC_2<<BUS_STARTBIT) + 0x0011)
#define DVDD_DVD_MISC_2_hf_addr4                            (DVDD_BLK + DBG64SEL + (halDVDD_DVD_MISC_2<<BUS_STARTBIT) + 0x0010)
#define DVDD_DVD_MISC_2_hf_addr3                            (DVDD_BLK + DBG64SEL + (halDVDD_DVD_MISC_2<<BUS_STARTBIT) + 0x000F)
#define DVDD_DVD_MISC_2_hf_addr2                            (DVDD_BLK + DBG64SEL + (halDVDD_DVD_MISC_2<<BUS_STARTBIT) + 0x000E)
#define DVDD_DVD_MISC_2_hf_addr1                            (DVDD_BLK + DBG64SEL + (halDVDD_DVD_MISC_2<<BUS_STARTBIT) + 0x000D)
#define DVDD_DVD_MISC_2_hf_addr0                            (DVDD_BLK + DBG64SEL + (halDVDD_DVD_MISC_2<<BUS_STARTBIT) + 0x000C)
#define DVDD_DVD_MISC_2_hf_addr_valid                       (DVDD_BLK + DBG64SEL + (halDVDD_DVD_MISC_2<<BUS_STARTBIT) + 0x000B)
#define DVDD_DVD_MISC_2_ecc_cnt2                            (DVDD_BLK + DBG64SEL + (halDVDD_DVD_MISC_2<<BUS_STARTBIT) + 0x000A)
#define DVDD_DVD_MISC_2_ecc_cnt1                            (DVDD_BLK + DBG64SEL + (halDVDD_DVD_MISC_2<<BUS_STARTBIT) + 0x0009)
#define DVDD_DVD_MISC_2_ecc_cnt0                            (DVDD_BLK + DBG64SEL + (halDVDD_DVD_MISC_2<<BUS_STARTBIT) + 0x0008)
#define DVDD_DVD_MISC_2_i_ecci                              (DVDD_BLK + DBG64SEL + (halDVDD_DVD_MISC_2<<BUS_STARTBIT) + 0x0007)
#define DVDD_DVD_MISC_2_nedc_reset                          (DVDD_BLK + DBG64SEL + (halDVDD_DVD_MISC_2<<BUS_STARTBIT) + 0x0006)
#define DVDD_DVD_MISC_2_edc_done                            (DVDD_BLK + DBG64SEL + (halDVDD_DVD_MISC_2<<BUS_STARTBIT) + 0x0005)
#define DVDD_DVD_MISC_2_iedcerr_and_edc_done                (DVDD_BLK + DBG64SEL + (halDVDD_DVD_MISC_2<<BUS_STARTBIT) + 0x0004)
#define DVDD_DVD_MISC_2_pi_sw_0_A_and_pi_bst_dly            (DVDD_BLK + DBG64SEL + (halDVDD_DVD_MISC_2<<BUS_STARTBIT) + 0x0003)
#define DVDD_DVD_MISC_2_pi_sw_A_and_pi_bst_dly              (DVDD_BLK + DBG64SEL + (halDVDD_DVD_MISC_2<<BUS_STARTBIT) + 0x0002)
#define DVDD_DVD_MISC_2_po_sw_0_10_and_po_bst_dly           (DVDD_BLK + DBG64SEL + (halDVDD_DVD_MISC_2<<BUS_STARTBIT) + 0x0001)
#define DVDD_DVD_MISC_2_po_sw_10_and_po_bst_dly             (DVDD_BLK + DBG64SEL + (halDVDD_DVD_MISC_2<<BUS_STARTBIT) + 0x0000)
//DVDD_DVD_ROM_1
#define DVDD_DVD_ROM_1_demod_clk                            (DVDD_BLK + DBG64SEL + (halDVDD_DVD_ROM_1<<BUS_STARTBIT) + 0x002F)
#define DVDD_DVD_ROM_1_sysclk                               (DVDD_BLK + DBG64SEL + (halDVDD_DVD_ROM_1<<BUS_STARTBIT) + 0x002E)
#define DVDD_DVD_ROM_1_demod_data_valid                     (DVDD_BLK + DBG64SEL + (halDVDD_DVD_ROM_1<<BUS_STARTBIT) + 0x002D)
#define DVDD_DVD_ROM_1_demod_data7                          (DVDD_BLK + DBG64SEL + (halDVDD_DVD_ROM_1<<BUS_STARTBIT) + 0x002C)
#define DVDD_DVD_ROM_1_demod_data6                          (DVDD_BLK + DBG64SEL + (halDVDD_DVD_ROM_1<<BUS_STARTBIT) + 0x002B)
#define DVDD_DVD_ROM_1_demod_data5                          (DVDD_BLK + DBG64SEL + (halDVDD_DVD_ROM_1<<BUS_STARTBIT) + 0x002A)
#define DVDD_DVD_ROM_1_demod_data4                          (DVDD_BLK + DBG64SEL + (halDVDD_DVD_ROM_1<<BUS_STARTBIT) + 0x0029)
#define DVDD_DVD_ROM_1_demod_data3                          (DVDD_BLK + DBG64SEL + (halDVDD_DVD_ROM_1<<BUS_STARTBIT) + 0x0028)
#define DVDD_DVD_ROM_1_demod_data2                          (DVDD_BLK + DBG64SEL + (halDVDD_DVD_ROM_1<<BUS_STARTBIT) + 0x0027)
#define DVDD_DVD_ROM_1_demod_data1                          (DVDD_BLK + DBG64SEL + (halDVDD_DVD_ROM_1<<BUS_STARTBIT) + 0x0026)
#define DVDD_DVD_ROM_1_demod_data0                          (DVDD_BLK + DBG64SEL + (halDVDD_DVD_ROM_1<<BUS_STARTBIT) + 0x0025)
#define DVDD_DVD_ROM_1_demod_erasure_flag                   (DVDD_BLK + DBG64SEL + (halDVDD_DVD_ROM_1<<BUS_STARTBIT) + 0x0024)
#define DVDD_DVD_ROM_1_demod_frame_start                    (DVDD_BLK + DBG64SEL + (halDVDD_DVD_ROM_1<<BUS_STARTBIT) + 0x0023)
#define DVDD_DVD_ROM_1_demod_frame_sync                     (DVDD_BLK + DBG64SEL + (halDVDD_DVD_ROM_1<<BUS_STARTBIT) + 0x0022)
#define DVDD_DVD_ROM_1_demod_sector_start                   (DVDD_BLK + DBG64SEL + (halDVDD_DVD_ROM_1<<BUS_STARTBIT) + 0x0021)
#define DVDD_DVD_ROM_1_demod_dvdram_header_data_flag        (DVDD_BLK + DBG64SEL + (halDVDD_DVD_ROM_1<<BUS_STARTBIT) + 0x0020)
#define DVDD_DVD_ROM_1_demod_dvdram_header_id_start         (DVDD_BLK + DBG64SEL + (halDVDD_DVD_ROM_1<<BUS_STARTBIT) + 0x001F)
#define DVDD_DVD_ROM_1_demod_dvdram_header_window           (DVDD_BLK + DBG64SEL + (halDVDD_DVD_ROM_1<<BUS_STARTBIT) + 0x001E)
#define DVDD_DVD_ROM_1_demod_first_byte_of_cluster          (DVDD_BLK + DBG64SEL + (halDVDD_DVD_ROM_1<<BUS_STARTBIT) + 0x001D)
#define DVDD_DVD_ROM_1_demod_dvd_frameno4                   (DVDD_BLK + DBG64SEL + (halDVDD_DVD_ROM_1<<BUS_STARTBIT) + 0x001C)
#define DVDD_DVD_ROM_1_demod_dvd_frameno3                   (DVDD_BLK + DBG64SEL + (halDVDD_DVD_ROM_1<<BUS_STARTBIT) + 0x001B)
#define DVDD_DVD_ROM_1_demod_dvd_frameno2                   (DVDD_BLK + DBG64SEL + (halDVDD_DVD_ROM_1<<BUS_STARTBIT) + 0x001A)
#define DVDD_DVD_ROM_1_demod_dvd_frameno1                   (DVDD_BLK + DBG64SEL + (halDVDD_DVD_ROM_1<<BUS_STARTBIT) + 0x0019)
#define DVDD_DVD_ROM_1_demod_dvd_frameno0                   (DVDD_BLK + DBG64SEL + (halDVDD_DVD_ROM_1<<BUS_STARTBIT) + 0x0018)
#define DVDD_DVD_ROM_1_cid_lsb4                             (DVDD_BLK + DBG64SEL + (halDVDD_DVD_ROM_1<<BUS_STARTBIT) + 0x0017)
#define DVDD_DVD_ROM_1_cid_lsb3                             (DVDD_BLK + DBG64SEL + (halDVDD_DVD_ROM_1<<BUS_STARTBIT) + 0x0016)
#define DVDD_DVD_ROM_1_cid_lsb2                             (DVDD_BLK + DBG64SEL + (halDVDD_DVD_ROM_1<<BUS_STARTBIT) + 0x0015)
#define DVDD_DVD_ROM_1_cid_lsb1                             (DVDD_BLK + DBG64SEL + (halDVDD_DVD_ROM_1<<BUS_STARTBIT) + 0x0014)
#define DVDD_DVD_ROM_1_cid_lsb0                             (DVDD_BLK + DBG64SEL + (halDVDD_DVD_ROM_1<<BUS_STARTBIT) + 0x0013)
#define DVDD_DVD_ROM_1_ersr7                                (DVDD_BLK + DBG64SEL + (halDVDD_DVD_ROM_1<<BUS_STARTBIT) + 0x0012)
#define DVDD_DVD_ROM_1_ersr6                                (DVDD_BLK + DBG64SEL + (halDVDD_DVD_ROM_1<<BUS_STARTBIT) + 0x0011)
#define DVDD_DVD_ROM_1_ersr5                                (DVDD_BLK + DBG64SEL + (halDVDD_DVD_ROM_1<<BUS_STARTBIT) + 0x0010)
#define DVDD_DVD_ROM_1_sector_sync                          (DVDD_BLK + DBG64SEL + (halDVDD_DVD_ROM_1<<BUS_STARTBIT) + 0x000F)
#define DVDD_DVD_ROM_1_sync_skip                            (DVDD_BLK + DBG64SEL + (halDVDD_DVD_ROM_1<<BUS_STARTBIT) + 0x000E)
#define DVDD_DVD_ROM_1_sync_skip_done                       (DVDD_BLK + DBG64SEL + (halDVDD_DVD_ROM_1<<BUS_STARTBIT) + 0x000D)
#define DVDD_DVD_ROM_1_sync_skip_write                      (DVDD_BLK + DBG64SEL + (halDVDD_DVD_ROM_1<<BUS_STARTBIT) + 0x000C)
#define DVDD_DVD_ROM_1_row_written                          (DVDD_BLK + DBG64SEL + (halDVDD_DVD_ROM_1<<BUS_STARTBIT) + 0x000B)
#define DVDD_DVD_ROM_1_storing_data                         (DVDD_BLK + DBG64SEL + (halDVDD_DVD_ROM_1<<BUS_STARTBIT) + 0x000A)
#define DVDD_DVD_ROM_1_pib_start                            (DVDD_BLK + DBG64SEL + (halDVDD_DVD_ROM_1<<BUS_STARTBIT) + 0x0009)
#define DVDD_DVD_ROM_1_last_frame                           (DVDD_BLK + DBG64SEL + (halDVDD_DVD_ROM_1<<BUS_STARTBIT) + 0x0008)
#define DVDD_DVD_ROM_1_last_sector                          (DVDD_BLK + DBG64SEL + (halDVDD_DVD_ROM_1<<BUS_STARTBIT) + 0x0007)
#define DVDD_DVD_ROM_1_recc_start                           (DVDD_BLK + DBG64SEL + (halDVDD_DVD_ROM_1<<BUS_STARTBIT) + 0x0006)
#define DVDD_DVD_ROM_1_edc_done                             (DVDD_BLK + DBG64SEL + (halDVDD_DVD_ROM_1<<BUS_STARTBIT) + 0x0005)
#define DVDD_DVD_ROM_1_iedcerr_and_edc_done                 (DVDD_BLK + DBG64SEL + (halDVDD_DVD_ROM_1<<BUS_STARTBIT) + 0x0004)
#define DVDD_DVD_ROM_1_pi_sw_0_A_and_pi_bst_dly             (DVDD_BLK + DBG64SEL + (halDVDD_DVD_ROM_1<<BUS_STARTBIT) + 0x0003)
#define DVDD_DVD_ROM_1_pi_sw_A_and_pi_bst_dly               (DVDD_BLK + DBG64SEL + (halDVDD_DVD_ROM_1<<BUS_STARTBIT) + 0x0002)
#define DVDD_DVD_ROM_1_po_sw_0_10_and_po_bst_dly            (DVDD_BLK + DBG64SEL + (halDVDD_DVD_ROM_1<<BUS_STARTBIT) + 0x0001)
#define DVDD_DVD_ROM_1_po_sw_10_and_po_bst_dly              (DVDD_BLK + DBG64SEL + (halDVDD_DVD_ROM_1<<BUS_STARTBIT) + 0x0000)
//DVDD_DVD_ROM_2
#define DVDD_DVD_ROM_2_demod_clk                            (DVDD_BLK + DBG64SEL + (halDVDD_DVD_ROM_2<<BUS_STARTBIT) + 0x002F)
#define DVDD_DVD_ROM_2_sysclk                               (DVDD_BLK + DBG64SEL + (halDVDD_DVD_ROM_2<<BUS_STARTBIT) + 0x002E)
#define DVDD_DVD_ROM_2_demod_frame_start                    (DVDD_BLK + DBG64SEL + (halDVDD_DVD_ROM_2<<BUS_STARTBIT) + 0x002D)
#define DVDD_DVD_ROM_2_demod_frame_sync                     (DVDD_BLK + DBG64SEL + (halDVDD_DVD_ROM_2<<BUS_STARTBIT) + 0x002C)
#define DVDD_DVD_ROM_2_demod_sector_start                   (DVDD_BLK + DBG64SEL + (halDVDD_DVD_ROM_2<<BUS_STARTBIT) + 0x002B)
#define DVDD_DVD_ROM_2_demod_dvdram_header_id_start         (DVDD_BLK + DBG64SEL + (halDVDD_DVD_ROM_2<<BUS_STARTBIT) + 0x002A)
#define DVDD_DVD_ROM_2_demod_first_byte_of_cluster          (DVDD_BLK + DBG64SEL + (halDVDD_DVD_ROM_2<<BUS_STARTBIT) + 0x0029)
#define DVDD_DVD_ROM_2_storing_data                         (DVDD_BLK + DBG64SEL + (halDVDD_DVD_ROM_2<<BUS_STARTBIT) + 0x0028)
#define DVDD_DVD_ROM_2_raw_ecc_blk_sync                     (DVDD_BLK + DBG64SEL + (halDVDD_DVD_ROM_2<<BUS_STARTBIT) + 0x0027)
#define DVDD_DVD_ROM_2_demod_dvd_frameno4                   (DVDD_BLK + DBG64SEL + (halDVDD_DVD_ROM_2<<BUS_STARTBIT) + 0x0026)
#define DVDD_DVD_ROM_2_demod_dvd_frameno3                   (DVDD_BLK + DBG64SEL + (halDVDD_DVD_ROM_2<<BUS_STARTBIT) + 0x0025)
#define DVDD_DVD_ROM_2_demod_dvd_frameno2                   (DVDD_BLK + DBG64SEL + (halDVDD_DVD_ROM_2<<BUS_STARTBIT) + 0x0024)
#define DVDD_DVD_ROM_2_demod_dvd_frameno1                   (DVDD_BLK + DBG64SEL + (halDVDD_DVD_ROM_2<<BUS_STARTBIT) + 0x0023)
#define DVDD_DVD_ROM_2_demod_dvd_frameno0                   (DVDD_BLK + DBG64SEL + (halDVDD_DVD_ROM_2<<BUS_STARTBIT) + 0x0022)
#define DVDD_DVD_ROM_2_cid_lsb4                             (DVDD_BLK + DBG64SEL + (halDVDD_DVD_ROM_2<<BUS_STARTBIT) + 0x0021)
#define DVDD_DVD_ROM_2_cid_lsb3                             (DVDD_BLK + DBG64SEL + (halDVDD_DVD_ROM_2<<BUS_STARTBIT) + 0x0020)
#define DVDD_DVD_ROM_2_cid_lsb2                             (DVDD_BLK + DBG64SEL + (halDVDD_DVD_ROM_2<<BUS_STARTBIT) + 0x001F)
#define DVDD_DVD_ROM_2_cid_lsb1                             (DVDD_BLK + DBG64SEL + (halDVDD_DVD_ROM_2<<BUS_STARTBIT) + 0x001E)
#define DVDD_DVD_ROM_2_cid_lsb0                             (DVDD_BLK + DBG64SEL + (halDVDD_DVD_ROM_2<<BUS_STARTBIT) + 0x001D)
#define DVDD_DVD_ROM_2_pid_ok                               (DVDD_BLK + DBG64SEL + (halDVDD_DVD_ROM_2<<BUS_STARTBIT) + 0x001C)
#define DVDD_DVD_ROM_2_zero_elsi                            (DVDD_BLK + DBG64SEL + (halDVDD_DVD_ROM_2<<BUS_STARTBIT) + 0x001B)
#define DVDD_DVD_ROM_2_sync_skip                            (DVDD_BLK + DBG64SEL + (halDVDD_DVD_ROM_2<<BUS_STARTBIT) + 0x001A)
#define DVDD_DVD_ROM_2_sync_skip_write                      (DVDD_BLK + DBG64SEL + (halDVDD_DVD_ROM_2<<BUS_STARTBIT) + 0x0019)
#define DVDD_DVD_ROM_2_sync_skip_done                       (DVDD_BLK + DBG64SEL + (halDVDD_DVD_ROM_2<<BUS_STARTBIT) + 0x0018)
#define DVDD_DVD_ROM_2_flush_fifo                           (DVDD_BLK + DBG64SEL + (halDVDD_DVD_ROM_2<<BUS_STARTBIT) + 0x0017)
#define DVDD_DVD_ROM_2_demod_wr_pi_reset_del                (DVDD_BLK + DBG64SEL + (halDVDD_DVD_ROM_2<<BUS_STARTBIT) + 0x0016)
#define DVDD_DVD_ROM_2_row_written                          (DVDD_BLK + DBG64SEL + (halDVDD_DVD_ROM_2<<BUS_STARTBIT) + 0x0015)
#define DVDD_DVD_ROM_2_pi_reset_from_pi                     (DVDD_BLK + DBG64SEL + (halDVDD_DVD_ROM_2<<BUS_STARTBIT) + 0x0014)
#define DVDD_DVD_ROM_2_po_reset                             (DVDD_BLK + DBG64SEL + (halDVDD_DVD_ROM_2<<BUS_STARTBIT) + 0x0013)
#define DVDD_DVD_ROM_2_recc_start                           (DVDD_BLK + DBG64SEL + (halDVDD_DVD_ROM_2<<BUS_STARTBIT) + 0x0012)
#define DVDD_DVD_ROM_2_ersr7                                (DVDD_BLK + DBG64SEL + (halDVDD_DVD_ROM_2<<BUS_STARTBIT) + 0x0011)
#define DVDD_DVD_ROM_2_ersr6                                (DVDD_BLK + DBG64SEL + (halDVDD_DVD_ROM_2<<BUS_STARTBIT) + 0x0010)
#define DVDD_DVD_ROM_2_ersr5                                (DVDD_BLK + DBG64SEL + (halDVDD_DVD_ROM_2<<BUS_STARTBIT) + 0x000F)
#define DVDD_DVD_ROM_2_ersr4                                (DVDD_BLK + DBG64SEL + (halDVDD_DVD_ROM_2<<BUS_STARTBIT) + 0x000E)
#define DVDD_DVD_ROM_2_ersr3                                (DVDD_BLK + DBG64SEL + (halDVDD_DVD_ROM_2<<BUS_STARTBIT) + 0x000D)
#define DVDD_DVD_ROM_2_ersr2                                (DVDD_BLK + DBG64SEL + (halDVDD_DVD_ROM_2<<BUS_STARTBIT) + 0x000C)
#define DVDD_DVD_ROM_2_ersr1                                (DVDD_BLK + DBG64SEL + (halDVDD_DVD_ROM_2<<BUS_STARTBIT) + 0x000B)
#define DVDD_DVD_ROM_2_ersr0                                (DVDD_BLK + DBG64SEL + (halDVDD_DVD_ROM_2<<BUS_STARTBIT) + 0x000A)
#define DVDD_DVD_ROM_2_ersr_we                              (DVDD_BLK + DBG64SEL + (halDVDD_DVD_ROM_2<<BUS_STARTBIT) + 0x0009)
#define DVDD_DVD_ROM_2_right_frame_prev_from_pi             (DVDD_BLK + DBG64SEL + (halDVDD_DVD_ROM_2<<BUS_STARTBIT) + 0x0008)
#define DVDD_DVD_ROM_2_former_blk_from_pi                   (DVDD_BLK + DBG64SEL + (halDVDD_DVD_ROM_2<<BUS_STARTBIT) + 0x0007)
#define DVDD_DVD_ROM_2_hd_mid_row_jump_from_pi              (DVDD_BLK + DBG64SEL + (halDVDD_DVD_ROM_2<<BUS_STARTBIT) + 0x0006)
#define DVDD_DVD_ROM_2_hd_row_jump_from_pi                  (DVDD_BLK + DBG64SEL + (halDVDD_DVD_ROM_2<<BUS_STARTBIT) + 0x0005)
#define DVDD_DVD_ROM_2_iedcerr_and_edc_done                 (DVDD_BLK + DBG64SEL + (halDVDD_DVD_ROM_2<<BUS_STARTBIT) + 0x0004)
#define DVDD_DVD_ROM_2_pi_sw_0_A_and_pi_bst_dly             (DVDD_BLK + DBG64SEL + (halDVDD_DVD_ROM_2<<BUS_STARTBIT) + 0x0003)
#define DVDD_DVD_ROM_2_pi_sw_A_and_pi_bst_dly               (DVDD_BLK + DBG64SEL + (halDVDD_DVD_ROM_2<<BUS_STARTBIT) + 0x0002)
#define DVDD_DVD_ROM_2_po_sw_0_10_and_po_bst_dly            (DVDD_BLK + DBG64SEL + (halDVDD_DVD_ROM_2<<BUS_STARTBIT) + 0x0001)
#define DVDD_DVD_ROM_2_po_sw_10_and_po_bst_dly              (DVDD_BLK + DBG64SEL + (halDVDD_DVD_ROM_2<<BUS_STARTBIT) + 0x0000)
//DVDD_DVD_RAM_1
#define DVDD_DVD_RAM_1_demod_clk                            (DVDD_BLK + DBG64SEL + (halDVDD_DVD_RAM_1<<BUS_STARTBIT) + 0x002F)
#define DVDD_DVD_RAM_1_demod_data_valid                     (DVDD_BLK + DBG64SEL + (halDVDD_DVD_RAM_1<<BUS_STARTBIT) + 0x002E)
#define DVDD_DVD_RAM_1_demod_data7                          (DVDD_BLK + DBG64SEL + (halDVDD_DVD_RAM_1<<BUS_STARTBIT) + 0x002D)
#define DVDD_DVD_RAM_1_demod_data6                          (DVDD_BLK + DBG64SEL + (halDVDD_DVD_RAM_1<<BUS_STARTBIT) + 0x002C)
#define DVDD_DVD_RAM_1_demod_data5                          (DVDD_BLK + DBG64SEL + (halDVDD_DVD_RAM_1<<BUS_STARTBIT) + 0x002B)
#define DVDD_DVD_RAM_1_demod_data4                          (DVDD_BLK + DBG64SEL + (halDVDD_DVD_RAM_1<<BUS_STARTBIT) + 0x002A)
#define DVDD_DVD_RAM_1_demod_data3                          (DVDD_BLK + DBG64SEL + (halDVDD_DVD_RAM_1<<BUS_STARTBIT) + 0x0029)
#define DVDD_DVD_RAM_1_demod_data2                          (DVDD_BLK + DBG64SEL + (halDVDD_DVD_RAM_1<<BUS_STARTBIT) + 0x0028)
#define DVDD_DVD_RAM_1_demod_data1                          (DVDD_BLK + DBG64SEL + (halDVDD_DVD_RAM_1<<BUS_STARTBIT) + 0x0027)
#define DVDD_DVD_RAM_1_demod_data0                          (DVDD_BLK + DBG64SEL + (halDVDD_DVD_RAM_1<<BUS_STARTBIT) + 0x0026)
#define DVDD_DVD_RAM_1_demod_erasure_flag                   (DVDD_BLK + DBG64SEL + (halDVDD_DVD_RAM_1<<BUS_STARTBIT) + 0x0025)
#define DVDD_DVD_RAM_1_demod_frame_start                    (DVDD_BLK + DBG64SEL + (halDVDD_DVD_RAM_1<<BUS_STARTBIT) + 0x0024)
#define DVDD_DVD_RAM_1_demod_frame_sync                     (DVDD_BLK + DBG64SEL + (halDVDD_DVD_RAM_1<<BUS_STARTBIT) + 0x0023)
#define DVDD_DVD_RAM_1_demod_sector_start                   (DVDD_BLK + DBG64SEL + (halDVDD_DVD_RAM_1<<BUS_STARTBIT) + 0x0022)
#define DVDD_DVD_RAM_1_demod_dvdram_header_data_flag        (DVDD_BLK + DBG64SEL + (halDVDD_DVD_RAM_1<<BUS_STARTBIT) + 0x0021)
#define DVDD_DVD_RAM_1_demod_dvdram_header_id_start         (DVDD_BLK + DBG64SEL + (halDVDD_DVD_RAM_1<<BUS_STARTBIT) + 0x0020)
#define DVDD_DVD_RAM_1_demod_dvdram_header_window           (DVDD_BLK + DBG64SEL + (halDVDD_DVD_RAM_1<<BUS_STARTBIT) + 0x001F)
#define DVDD_DVD_RAM_1_demod_dvd_frameno4                   (DVDD_BLK + DBG64SEL + (halDVDD_DVD_RAM_1<<BUS_STARTBIT) + 0x001E)
#define DVDD_DVD_RAM_1_demod_dvd_frameno3                   (DVDD_BLK + DBG64SEL + (halDVDD_DVD_RAM_1<<BUS_STARTBIT) + 0x001D)
#define DVDD_DVD_RAM_1_demod_dvd_frameno2                   (DVDD_BLK + DBG64SEL + (halDVDD_DVD_RAM_1<<BUS_STARTBIT) + 0x001C)
#define DVDD_DVD_RAM_1_demod_dvd_frameno1                   (DVDD_BLK + DBG64SEL + (halDVDD_DVD_RAM_1<<BUS_STARTBIT) + 0x001B)
#define DVDD_DVD_RAM_1_demod_dvd_frameno0                   (DVDD_BLK + DBG64SEL + (halDVDD_DVD_RAM_1<<BUS_STARTBIT) + 0x001A)
#define DVDD_DVD_RAM_1_dvdram_landnotgroove                 (DVDD_BLK + DBG64SEL + (halDVDD_DVD_RAM_1<<BUS_STARTBIT) + 0x0019)
#define DVDD_DVD_RAM_1_dvdram_sector_tgl                    (DVDD_BLK + DBG64SEL + (halDVDD_DVD_RAM_1<<BUS_STARTBIT) + 0x0018)
#define DVDD_DVD_RAM_1_dvdram_header_window_front           (DVDD_BLK + DBG64SEL + (halDVDD_DVD_RAM_1<<BUS_STARTBIT) + 0x0017)
#define DVDD_DVD_RAM_1_hddvd_flywheel_addr_toggle           (DVDD_BLK + DBG64SEL + (halDVDD_DVD_RAM_1<<BUS_STARTBIT) + 0x0016)
#define DVDD_DVD_RAM_1_storing_data                         (DVDD_BLK + DBG64SEL + (halDVDD_DVD_RAM_1<<BUS_STARTBIT) + 0x0015)
#define DVDD_DVD_RAM_1_id_ecc_init                          (DVDD_BLK + DBG64SEL + (halDVDD_DVD_RAM_1<<BUS_STARTBIT) + 0x0014)
#define DVDD_DVD_RAM_1_id_data7                             (DVDD_BLK + DBG64SEL + (halDVDD_DVD_RAM_1<<BUS_STARTBIT) + 0x0013)
#define DVDD_DVD_RAM_1_id_data6                             (DVDD_BLK + DBG64SEL + (halDVDD_DVD_RAM_1<<BUS_STARTBIT) + 0x0012)
#define DVDD_DVD_RAM_1_id_data5                             (DVDD_BLK + DBG64SEL + (halDVDD_DVD_RAM_1<<BUS_STARTBIT) + 0x0011)
#define DVDD_DVD_RAM_1_id_data4                             (DVDD_BLK + DBG64SEL + (halDVDD_DVD_RAM_1<<BUS_STARTBIT) + 0x0010)
#define DVDD_DVD_RAM_1_id_data3                             (DVDD_BLK + DBG64SEL + (halDVDD_DVD_RAM_1<<BUS_STARTBIT) + 0x000F)
#define DVDD_DVD_RAM_1_id_data2                             (DVDD_BLK + DBG64SEL + (halDVDD_DVD_RAM_1<<BUS_STARTBIT) + 0x000E)
#define DVDD_DVD_RAM_1_id_data1                             (DVDD_BLK + DBG64SEL + (halDVDD_DVD_RAM_1<<BUS_STARTBIT) + 0x000D)
#define DVDD_DVD_RAM_1_id_data0                             (DVDD_BLK + DBG64SEL + (halDVDD_DVD_RAM_1<<BUS_STARTBIT) + 0x000C)
#define DVDD_DVD_RAM_1_idcc_valid                           (DVDD_BLK + DBG64SEL + (halDVDD_DVD_RAM_1<<BUS_STARTBIT) + 0x000B)
#define DVDD_DVD_RAM_1_pid_ok                               (DVDD_BLK + DBG64SEL + (halDVDD_DVD_RAM_1<<BUS_STARTBIT) + 0x000A)
#define DVDD_DVD_RAM_1_pid1_ok                              (DVDD_BLK + DBG64SEL + (halDVDD_DVD_RAM_1<<BUS_STARTBIT) + 0x0009)
#define DVDD_DVD_RAM_1_pid2_ok                              (DVDD_BLK + DBG64SEL + (halDVDD_DVD_RAM_1<<BUS_STARTBIT) + 0x0008)
#define DVDD_DVD_RAM_1_pid3_ok                              (DVDD_BLK + DBG64SEL + (halDVDD_DVD_RAM_1<<BUS_STARTBIT) + 0x0007)
#define DVDD_DVD_RAM_1_pid4_ok                              (DVDD_BLK + DBG64SEL + (halDVDD_DVD_RAM_1<<BUS_STARTBIT) + 0x0006)
#define DVDD_DVD_RAM_1_end_of_header                        (DVDD_BLK + DBG64SEL + (halDVDD_DVD_RAM_1<<BUS_STARTBIT) + 0x0005)
#define DVDD_DVD_RAM_1_good_pid                             (DVDD_BLK + DBG64SEL + (halDVDD_DVD_RAM_1<<BUS_STARTBIT) + 0x0004)
#define DVDD_DVD_RAM_1_good_pid_internal                    (DVDD_BLK + DBG64SEL + (halDVDD_DVD_RAM_1<<BUS_STARTBIT) + 0x0003)
#define DVDD_DVD_RAM_1_pi_sw_A_and_pi_bst_dly               (DVDD_BLK + DBG64SEL + (halDVDD_DVD_RAM_1<<BUS_STARTBIT) + 0x0002)
#define DVDD_DVD_RAM_1_po_sw_0_10_and_po_bst_dly            (DVDD_BLK + DBG64SEL + (halDVDD_DVD_RAM_1<<BUS_STARTBIT) + 0x0001)
#define DVDD_DVD_RAM_1_po_sw_10_and_po_bst_dly              (DVDD_BLK + DBG64SEL + (halDVDD_DVD_RAM_1<<BUS_STARTBIT) + 0x0000)
//DVDD_DVD_RAM_2
#define DVDD_DVD_RAM_2_demod_clk                            (DVDD_BLK + DBG64SEL + (halDVDD_DVD_RAM_2<<BUS_STARTBIT) + 0x002F)
#define DVDD_DVD_RAM_2_demod_data_valid                     (DVDD_BLK + DBG64SEL + (halDVDD_DVD_RAM_2<<BUS_STARTBIT) + 0x002E)
#define DVDD_DVD_RAM_2_demod_data1                          (DVDD_BLK + DBG64SEL + (halDVDD_DVD_RAM_2<<BUS_STARTBIT) + 0x002D)
#define DVDD_DVD_RAM_2_demod_data0                          (DVDD_BLK + DBG64SEL + (halDVDD_DVD_RAM_2<<BUS_STARTBIT) + 0x002C)
#define DVDD_DVD_RAM_2_demod_erasure_flag                   (DVDD_BLK + DBG64SEL + (halDVDD_DVD_RAM_2<<BUS_STARTBIT) + 0x002B)
#define DVDD_DVD_RAM_2_demod_dvdram_header_data_flag        (DVDD_BLK + DBG64SEL + (halDVDD_DVD_RAM_2<<BUS_STARTBIT) + 0x002A)
#define DVDD_DVD_RAM_2_dvdram_landnotgroove                 (DVDD_BLK + DBG64SEL + (halDVDD_DVD_RAM_2<<BUS_STARTBIT) + 0x0029)
#define DVDD_DVD_RAM_2_demod_frame_start                    (DVDD_BLK + DBG64SEL + (halDVDD_DVD_RAM_2<<BUS_STARTBIT) + 0x0028)
#define DVDD_DVD_RAM_2_demod_sector_start                   (DVDD_BLK + DBG64SEL + (halDVDD_DVD_RAM_2<<BUS_STARTBIT) + 0x0027)
#define DVDD_DVD_RAM_2_dvdram_sector_tgl                    (DVDD_BLK + DBG64SEL + (halDVDD_DVD_RAM_2<<BUS_STARTBIT) + 0x0026)
#define DVDD_DVD_RAM_2_dvdram_header_window_front           (DVDD_BLK + DBG64SEL + (halDVDD_DVD_RAM_2<<BUS_STARTBIT) + 0x0025)
#define DVDD_DVD_RAM_2_hddvd_flywheel_addr_toggle           (DVDD_BLK + DBG64SEL + (halDVDD_DVD_RAM_2<<BUS_STARTBIT) + 0x0024)
#define DVDD_DVD_RAM_2_storing_data                         (DVDD_BLK + DBG64SEL + (halDVDD_DVD_RAM_2<<BUS_STARTBIT) + 0x0023)
#define DVDD_DVD_RAM_2_id_ecc_init                          (DVDD_BLK + DBG64SEL + (halDVDD_DVD_RAM_2<<BUS_STARTBIT) + 0x0022)
#define DVDD_DVD_RAM_2_id_data3                             (DVDD_BLK + DBG64SEL + (halDVDD_DVD_RAM_2<<BUS_STARTBIT) + 0x0021)
#define DVDD_DVD_RAM_2_id_data2                             (DVDD_BLK + DBG64SEL + (halDVDD_DVD_RAM_2<<BUS_STARTBIT) + 0x0020)
#define DVDD_DVD_RAM_2_id_data1                             (DVDD_BLK + DBG64SEL + (halDVDD_DVD_RAM_2<<BUS_STARTBIT) + 0x001F)
#define DVDD_DVD_RAM_2_id_data0                             (DVDD_BLK + DBG64SEL + (halDVDD_DVD_RAM_2<<BUS_STARTBIT) + 0x001E)
#define DVDD_DVD_RAM_2_idcc_valid                           (DVDD_BLK + DBG64SEL + (halDVDD_DVD_RAM_2<<BUS_STARTBIT) + 0x001D)
#define DVDD_DVD_RAM_2_pid_ok                               (DVDD_BLK + DBG64SEL + (halDVDD_DVD_RAM_2<<BUS_STARTBIT) + 0x001C)
#define DVDD_DVD_RAM_2_block_outputs                        (DVDD_BLK + DBG64SEL + (halDVDD_DVD_RAM_2<<BUS_STARTBIT) + 0x001B)
#define DVDD_DVD_RAM_2_block_data_out                       (DVDD_BLK + DBG64SEL + (halDVDD_DVD_RAM_2<<BUS_STARTBIT) + 0x001A)
#define DVDD_DVD_RAM_2_certified_sectors                    (DVDD_BLK + DBG64SEL + (halDVDD_DVD_RAM_2<<BUS_STARTBIT) + 0x0019)
#define DVDD_DVD_RAM_2_pid1_ok                              (DVDD_BLK + DBG64SEL + (halDVDD_DVD_RAM_2<<BUS_STARTBIT) + 0x0018)
#define DVDD_DVD_RAM_2_pid2_ok                              (DVDD_BLK + DBG64SEL + (halDVDD_DVD_RAM_2<<BUS_STARTBIT) + 0x0017)
#define DVDD_DVD_RAM_2_pid3_ok                              (DVDD_BLK + DBG64SEL + (halDVDD_DVD_RAM_2<<BUS_STARTBIT) + 0x0016)
#define DVDD_DVD_RAM_2_pid4_ok                              (DVDD_BLK + DBG64SEL + (halDVDD_DVD_RAM_2<<BUS_STARTBIT) + 0x0015)
#define DVDD_DVD_RAM_2_end_of_header                        (DVDD_BLK + DBG64SEL + (halDVDD_DVD_RAM_2<<BUS_STARTBIT) + 0x0014)
#define DVDD_DVD_RAM_2_pid34_match                          (DVDD_BLK + DBG64SEL + (halDVDD_DVD_RAM_2<<BUS_STARTBIT) + 0x0013)
#define DVDD_DVD_RAM_2_pid12_match                          (DVDD_BLK + DBG64SEL + (halDVDD_DVD_RAM_2<<BUS_STARTBIT) + 0x0012)
#define DVDD_DVD_RAM_2_good_pid                             (DVDD_BLK + DBG64SEL + (halDVDD_DVD_RAM_2<<BUS_STARTBIT) + 0x0011)
#define DVDD_DVD_RAM_2_good_pid_internal                    (DVDD_BLK + DBG64SEL + (halDVDD_DVD_RAM_2<<BUS_STARTBIT) + 0x0010)
#define DVDD_DVD_RAM_2_track_size_vld                       (DVDD_BLK + DBG64SEL + (halDVDD_DVD_RAM_2<<BUS_STARTBIT) + 0x000F)
#define DVDD_DVD_RAM_2_found_track_size                     (DVDD_BLK + DBG64SEL + (halDVDD_DVD_RAM_2<<BUS_STARTBIT) + 0x000E)
#define DVDD_DVD_RAM_2_sectors_to_end1                      (DVDD_BLK + DBG64SEL + (halDVDD_DVD_RAM_2<<BUS_STARTBIT) + 0x000D)
#define DVDD_DVD_RAM_2_sectors_to_end0                      (DVDD_BLK + DBG64SEL + (halDVDD_DVD_RAM_2<<BUS_STARTBIT) + 0x000C)
#define DVDD_DVD_RAM_2_track_size_toggle                    (DVDD_BLK + DBG64SEL + (halDVDD_DVD_RAM_2<<BUS_STARTBIT) + 0x000B)
#define DVDD_DVD_RAM_2_end_of_track                         (DVDD_BLK + DBG64SEL + (halDVDD_DVD_RAM_2<<BUS_STARTBIT) + 0x000A)
#define DVDD_DVD_RAM_2_use_internal_land                    (DVDD_BLK + DBG64SEL + (halDVDD_DVD_RAM_2<<BUS_STARTBIT) + 0x0009)
#define DVDD_DVD_RAM_2_internal_land                        (DVDD_BLK + DBG64SEL + (halDVDD_DVD_RAM_2<<BUS_STARTBIT) + 0x0008)
#define DVDD_DVD_RAM_2_land                                 (DVDD_BLK + DBG64SEL + (halDVDD_DVD_RAM_2<<BUS_STARTBIT) + 0x0007)
#define DVDD_DVD_RAM_2_sec_slip                             (DVDD_BLK + DBG64SEL + (halDVDD_DVD_RAM_2<<BUS_STARTBIT) + 0x0006)
#define DVDD_DVD_RAM_2_dvdram_slip_for_dvde                 (DVDD_BLK + DBG64SEL + (halDVDD_DVD_RAM_2<<BUS_STARTBIT) + 0x0005)
#define DVDD_DVD_RAM_2_dvdram_slip_for_dvdd                 (DVDD_BLK + DBG64SEL + (halDVDD_DVD_RAM_2<<BUS_STARTBIT) + 0x0004)
#define DVDD_DVD_RAM_2_pi_sw_0_A_and_pi_bst_dly             (DVDD_BLK + DBG64SEL + (halDVDD_DVD_RAM_2<<BUS_STARTBIT) + 0x0003)
#define DVDD_DVD_RAM_2_pi_sw_A_and_pi_bst_dly               (DVDD_BLK + DBG64SEL + (halDVDD_DVD_RAM_2<<BUS_STARTBIT) + 0x0002)
#define DVDD_DVD_RAM_2_po_sw_10_and_po_bst_dly              (DVDD_BLK + DBG64SEL + (halDVDD_DVD_RAM_2<<BUS_STARTBIT) + 0x0001)
#define DVDD_DVD_RAM_2_zero_fill_flag                       (DVDD_BLK + DBG64SEL + (halDVDD_DVD_RAM_2<<BUS_STARTBIT) + 0x0000)
//DVDD_DVD_MULTIPASS_1
#define DVDD_DVD_MULTIPASS_1_sysclk                         (DVDD_BLK + DBG64SEL + (halDVDD_DVD_MULTIPASS_1<<BUS_STARTBIT) + 0x002F)
#define DVDD_DVD_MULTIPASS_1_demod_ds_seed_sel3             (DVDD_BLK + DBG64SEL + (halDVDD_DVD_MULTIPASS_1<<BUS_STARTBIT) + 0x002E)
#define DVDD_DVD_MULTIPASS_1_demod_ds_seed_sel2             (DVDD_BLK + DBG64SEL + (halDVDD_DVD_MULTIPASS_1<<BUS_STARTBIT) + 0x002D)
#define DVDD_DVD_MULTIPASS_1_demod_ds_seed_sel1             (DVDD_BLK + DBG64SEL + (halDVDD_DVD_MULTIPASS_1<<BUS_STARTBIT) + 0x002C)
#define DVDD_DVD_MULTIPASS_1_demod_ds_seed_sel0             (DVDD_BLK + DBG64SEL + (halDVDD_DVD_MULTIPASS_1<<BUS_STARTBIT) + 0x002B)
#define DVDD_DVD_MULTIPASS_1_sync_skip                      (DVDD_BLK + DBG64SEL + (halDVDD_DVD_MULTIPASS_1<<BUS_STARTBIT) + 0x002A)
#define DVDD_DVD_MULTIPASS_1_sync_skip_write                (DVDD_BLK + DBG64SEL + (halDVDD_DVD_MULTIPASS_1<<BUS_STARTBIT) + 0x0029)
#define DVDD_DVD_MULTIPASS_1_sync_skip_done                 (DVDD_BLK + DBG64SEL + (halDVDD_DVD_MULTIPASS_1<<BUS_STARTBIT) + 0x0028)
#define DVDD_DVD_MULTIPASS_1_flush_fifo                     (DVDD_BLK + DBG64SEL + (halDVDD_DVD_MULTIPASS_1<<BUS_STARTBIT) + 0x0027)
#define DVDD_DVD_MULTIPASS_1_demod_wr_pi_reset_del          (DVDD_BLK + DBG64SEL + (halDVDD_DVD_MULTIPASS_1<<BUS_STARTBIT) + 0x0026)
#define DVDD_DVD_MULTIPASS_1_row_written                    (DVDD_BLK + DBG64SEL + (halDVDD_DVD_MULTIPASS_1<<BUS_STARTBIT) + 0x0025)
#define DVDD_DVD_MULTIPASS_1_curbuf_neq_curecc              (DVDD_BLK + DBG64SEL + (halDVDD_DVD_MULTIPASS_1<<BUS_STARTBIT) + 0x0024)
#define DVDD_DVD_MULTIPASS_1_pi_reset_from_pi               (DVDD_BLK + DBG64SEL + (halDVDD_DVD_MULTIPASS_1<<BUS_STARTBIT) + 0x0023)
#define DVDD_DVD_MULTIPASS_1_pi_seed_sel_combine3           (DVDD_BLK + DBG64SEL + (halDVDD_DVD_MULTIPASS_1<<BUS_STARTBIT) + 0x0022)
#define DVDD_DVD_MULTIPASS_1_pi_seed_sel_combine2           (DVDD_BLK + DBG64SEL + (halDVDD_DVD_MULTIPASS_1<<BUS_STARTBIT) + 0x0021)
#define DVDD_DVD_MULTIPASS_1_pi_seed_sel_combine1           (DVDD_BLK + DBG64SEL + (halDVDD_DVD_MULTIPASS_1<<BUS_STARTBIT) + 0x0020)
#define DVDD_DVD_MULTIPASS_1_pi_seed_sel_combine0           (DVDD_BLK + DBG64SEL + (halDVDD_DVD_MULTIPASS_1<<BUS_STARTBIT) + 0x001F)
#define DVDD_DVD_MULTIPASS_1_ersr7                          (DVDD_BLK + DBG64SEL + (halDVDD_DVD_MULTIPASS_1<<BUS_STARTBIT) + 0x001E)
#define DVDD_DVD_MULTIPASS_1_ersr6                          (DVDD_BLK + DBG64SEL + (halDVDD_DVD_MULTIPASS_1<<BUS_STARTBIT) + 0x001D)
#define DVDD_DVD_MULTIPASS_1_ersr5                          (DVDD_BLK + DBG64SEL + (halDVDD_DVD_MULTIPASS_1<<BUS_STARTBIT) + 0x001C)
#define DVDD_DVD_MULTIPASS_1_ersr4                          (DVDD_BLK + DBG64SEL + (halDVDD_DVD_MULTIPASS_1<<BUS_STARTBIT) + 0x001B)
#define DVDD_DVD_MULTIPASS_1_ersr3                          (DVDD_BLK + DBG64SEL + (halDVDD_DVD_MULTIPASS_1<<BUS_STARTBIT) + 0x001A)
#define DVDD_DVD_MULTIPASS_1_ersr2                          (DVDD_BLK + DBG64SEL + (halDVDD_DVD_MULTIPASS_1<<BUS_STARTBIT) + 0x0019)
#define DVDD_DVD_MULTIPASS_1_ersr1                          (DVDD_BLK + DBG64SEL + (halDVDD_DVD_MULTIPASS_1<<BUS_STARTBIT) + 0x0018)
#define DVDD_DVD_MULTIPASS_1_ersr0                          (DVDD_BLK + DBG64SEL + (halDVDD_DVD_MULTIPASS_1<<BUS_STARTBIT) + 0x0017)
#define DVDD_DVD_MULTIPASS_1_ersr_we                        (DVDD_BLK + DBG64SEL + (halDVDD_DVD_MULTIPASS_1<<BUS_STARTBIT) + 0x0016)
#define DVDD_DVD_MULTIPASS_1_pseudo_pib_start_for_po        (DVDD_BLK + DBG64SEL + (halDVDD_DVD_MULTIPASS_1<<BUS_STARTBIT) + 0x0015)
#define DVDD_DVD_MULTIPASS_1_pib_start_ib                   (DVDD_BLK + DBG64SEL + (halDVDD_DVD_MULTIPASS_1<<BUS_STARTBIT) + 0x0014)
#define DVDD_DVD_MULTIPASS_1_ib_secnum3                     (DVDD_BLK + DBG64SEL + (halDVDD_DVD_MULTIPASS_1<<BUS_STARTBIT) + 0x0013)
#define DVDD_DVD_MULTIPASS_1_ib_secnum2                     (DVDD_BLK + DBG64SEL + (halDVDD_DVD_MULTIPASS_1<<BUS_STARTBIT) + 0x0012)
#define DVDD_DVD_MULTIPASS_1_ib_secnum1                     (DVDD_BLK + DBG64SEL + (halDVDD_DVD_MULTIPASS_1<<BUS_STARTBIT) + 0x0011)
#define DVDD_DVD_MULTIPASS_1_ib_secnum0                     (DVDD_BLK + DBG64SEL + (halDVDD_DVD_MULTIPASS_1<<BUS_STARTBIT) + 0x0010)
#define DVDD_DVD_MULTIPASS_1_ib_rownum3                     (DVDD_BLK + DBG64SEL + (halDVDD_DVD_MULTIPASS_1<<BUS_STARTBIT) + 0x000F)
#define DVDD_DVD_MULTIPASS_1_ib_rownum2                     (DVDD_BLK + DBG64SEL + (halDVDD_DVD_MULTIPASS_1<<BUS_STARTBIT) + 0x000E)
#define DVDD_DVD_MULTIPASS_1_ib_rownum1                     (DVDD_BLK + DBG64SEL + (halDVDD_DVD_MULTIPASS_1<<BUS_STARTBIT) + 0x000D)
#define DVDD_DVD_MULTIPASS_1_ib_rownum0                     (DVDD_BLK + DBG64SEL + (halDVDD_DVD_MULTIPASS_1<<BUS_STARTBIT) + 0x000C)
#define DVDD_DVD_MULTIPASS_1_recc_is_ing                    (DVDD_BLK + DBG64SEL + (halDVDD_DVD_MULTIPASS_1<<BUS_STARTBIT) + 0x000B)
#define DVDD_DVD_MULTIPASS_1_po_reset                       (DVDD_BLK + DBG64SEL + (halDVDD_DVD_MULTIPASS_1<<BUS_STARTBIT) + 0x000A)
#define DVDD_DVD_MULTIPASS_1_po_seed_sel_combine3           (DVDD_BLK + DBG64SEL + (halDVDD_DVD_MULTIPASS_1<<BUS_STARTBIT) + 0x0009)
#define DVDD_DVD_MULTIPASS_1_po_seed_sel_combine2           (DVDD_BLK + DBG64SEL + (halDVDD_DVD_MULTIPASS_1<<BUS_STARTBIT) + 0x0008)
#define DVDD_DVD_MULTIPASS_1_po_seed_sel_combine1           (DVDD_BLK + DBG64SEL + (halDVDD_DVD_MULTIPASS_1<<BUS_STARTBIT) + 0x0007)
#define DVDD_DVD_MULTIPASS_1_po_seed_sel_combine0           (DVDD_BLK + DBG64SEL + (halDVDD_DVD_MULTIPASS_1<<BUS_STARTBIT) + 0x0006)
#define DVDD_DVD_MULTIPASS_1_edc_done                       (DVDD_BLK + DBG64SEL + (halDVDD_DVD_MULTIPASS_1<<BUS_STARTBIT) + 0x0005)
#define DVDD_DVD_MULTIPASS_1_iedcerr_and_edc_done           (DVDD_BLK + DBG64SEL + (halDVDD_DVD_MULTIPASS_1<<BUS_STARTBIT) + 0x0004)
#define DVDD_DVD_MULTIPASS_1_pi_sw_0_A_and_pi_bst_dly       (DVDD_BLK + DBG64SEL + (halDVDD_DVD_MULTIPASS_1<<BUS_STARTBIT) + 0x0003)
#define DVDD_DVD_MULTIPASS_1_pi_sw_A_and_pi_bst_dly         (DVDD_BLK + DBG64SEL + (halDVDD_DVD_MULTIPASS_1<<BUS_STARTBIT) + 0x0002)
#define DVDD_DVD_MULTIPASS_1_po_sw_0_10_and_po_bst_dly      (DVDD_BLK + DBG64SEL + (halDVDD_DVD_MULTIPASS_1<<BUS_STARTBIT) + 0x0001)
#define DVDD_DVD_MULTIPASS_1_po_sw_10_and_po_bst_dly        (DVDD_BLK + DBG64SEL + (halDVDD_DVD_MULTIPASS_1<<BUS_STARTBIT) + 0x0000)
//DVDD_DVD_MULTIPASS_2
#define DVDD_DVD_MULTIPASS_2_sysclk                         (DVDD_BLK + DBG64SEL + (halDVDD_DVD_MULTIPASS_2<<BUS_STARTBIT) + 0x002F)
#define DVDD_DVD_MULTIPASS_2_demod_ds_seed_sel3             (DVDD_BLK + DBG64SEL + (halDVDD_DVD_MULTIPASS_2<<BUS_STARTBIT) + 0x002E)
#define DVDD_DVD_MULTIPASS_2_demod_ds_seed_sel2             (DVDD_BLK + DBG64SEL + (halDVDD_DVD_MULTIPASS_2<<BUS_STARTBIT) + 0x002D)
#define DVDD_DVD_MULTIPASS_2_demod_ds_seed_sel1             (DVDD_BLK + DBG64SEL + (halDVDD_DVD_MULTIPASS_2<<BUS_STARTBIT) + 0x002C)
#define DVDD_DVD_MULTIPASS_2_demod_ds_seed_sel0             (DVDD_BLK + DBG64SEL + (halDVDD_DVD_MULTIPASS_2<<BUS_STARTBIT) + 0x002B)
#define DVDD_DVD_MULTIPASS_2_sync_skip                      (DVDD_BLK + DBG64SEL + (halDVDD_DVD_MULTIPASS_2<<BUS_STARTBIT) + 0x002A)
#define DVDD_DVD_MULTIPASS_2_pi_reset_from_pi               (DVDD_BLK + DBG64SEL + (halDVDD_DVD_MULTIPASS_2<<BUS_STARTBIT) + 0x0029)
#define DVDD_DVD_MULTIPASS_2_pi_seed_sel_combine3           (DVDD_BLK + DBG64SEL + (halDVDD_DVD_MULTIPASS_2<<BUS_STARTBIT) + 0x0028)
#define DVDD_DVD_MULTIPASS_2_pi_seed_sel_combine2           (DVDD_BLK + DBG64SEL + (halDVDD_DVD_MULTIPASS_2<<BUS_STARTBIT) + 0x0027)
#define DVDD_DVD_MULTIPASS_2_pi_seed_sel_combine1           (DVDD_BLK + DBG64SEL + (halDVDD_DVD_MULTIPASS_2<<BUS_STARTBIT) + 0x0026)
#define DVDD_DVD_MULTIPASS_2_pi_seed_sel_combine0           (DVDD_BLK + DBG64SEL + (halDVDD_DVD_MULTIPASS_2<<BUS_STARTBIT) + 0x0025)
#define DVDD_DVD_MULTIPASS_2_pib_start_ib                   (DVDD_BLK + DBG64SEL + (halDVDD_DVD_MULTIPASS_2<<BUS_STARTBIT) + 0x0024)
#define DVDD_DVD_MULTIPASS_2_ib_secnum3                     (DVDD_BLK + DBG64SEL + (halDVDD_DVD_MULTIPASS_2<<BUS_STARTBIT) + 0x0023)
#define DVDD_DVD_MULTIPASS_2_ib_secnum2                     (DVDD_BLK + DBG64SEL + (halDVDD_DVD_MULTIPASS_2<<BUS_STARTBIT) + 0x0022)
#define DVDD_DVD_MULTIPASS_2_ib_secnum1                     (DVDD_BLK + DBG64SEL + (halDVDD_DVD_MULTIPASS_2<<BUS_STARTBIT) + 0x0021)
#define DVDD_DVD_MULTIPASS_2_ib_secnum0                     (DVDD_BLK + DBG64SEL + (halDVDD_DVD_MULTIPASS_2<<BUS_STARTBIT) + 0x0020)
#define DVDD_DVD_MULTIPASS_2_ib_rownum3                     (DVDD_BLK + DBG64SEL + (halDVDD_DVD_MULTIPASS_2<<BUS_STARTBIT) + 0x001F)
#define DVDD_DVD_MULTIPASS_2_ib_rownum2                     (DVDD_BLK + DBG64SEL + (halDVDD_DVD_MULTIPASS_2<<BUS_STARTBIT) + 0x001E)
#define DVDD_DVD_MULTIPASS_2_ib_rownum1                     (DVDD_BLK + DBG64SEL + (halDVDD_DVD_MULTIPASS_2<<BUS_STARTBIT) + 0x001D)
#define DVDD_DVD_MULTIPASS_2_ib_rownum0                     (DVDD_BLK + DBG64SEL + (halDVDD_DVD_MULTIPASS_2<<BUS_STARTBIT) + 0x001C)
#define DVDD_DVD_MULTIPASS_2_right_frame_prev_from_pi       (DVDD_BLK + DBG64SEL + (halDVDD_DVD_MULTIPASS_2<<BUS_STARTBIT) + 0x001B)
#define DVDD_DVD_MULTIPASS_2_former_blk_from_pi             (DVDD_BLK + DBG64SEL + (halDVDD_DVD_MULTIPASS_2<<BUS_STARTBIT) + 0x001A)
#define DVDD_DVD_MULTIPASS_2_hd_mid_row_jump_from_pi        (DVDD_BLK + DBG64SEL + (halDVDD_DVD_MULTIPASS_2<<BUS_STARTBIT) + 0x0019)
#define DVDD_DVD_MULTIPASS_2_hd_row_jump_from_pi            (DVDD_BLK + DBG64SEL + (halDVDD_DVD_MULTIPASS_2<<BUS_STARTBIT) + 0x0018)
#define DVDD_DVD_MULTIPASS_2_po_reset                       (DVDD_BLK + DBG64SEL + (halDVDD_DVD_MULTIPASS_2<<BUS_STARTBIT) + 0x0017)
#define DVDD_DVD_MULTIPASS_2_po_seed_sel_combine3           (DVDD_BLK + DBG64SEL + (halDVDD_DVD_MULTIPASS_2<<BUS_STARTBIT) + 0x0016)
#define DVDD_DVD_MULTIPASS_2_po_seed_sel_combine2           (DVDD_BLK + DBG64SEL + (halDVDD_DVD_MULTIPASS_2<<BUS_STARTBIT) + 0x0015)
#define DVDD_DVD_MULTIPASS_2_po_seed_sel_combine1           (DVDD_BLK + DBG64SEL + (halDVDD_DVD_MULTIPASS_2<<BUS_STARTBIT) + 0x0014)
#define DVDD_DVD_MULTIPASS_2_po_seed_sel_combine0           (DVDD_BLK + DBG64SEL + (halDVDD_DVD_MULTIPASS_2<<BUS_STARTBIT) + 0x0013)
#define DVDD_DVD_MULTIPASS_2_right_frame_from_po            (DVDD_BLK + DBG64SEL + (halDVDD_DVD_MULTIPASS_2<<BUS_STARTBIT) + 0x0012)
#define DVDD_DVD_MULTIPASS_2_former_blk_from_po             (DVDD_BLK + DBG64SEL + (halDVDD_DVD_MULTIPASS_2<<BUS_STARTBIT) + 0x0011)
#define DVDD_DVD_MULTIPASS_2_hd_mid_row_jump_from_po        (DVDD_BLK + DBG64SEL + (halDVDD_DVD_MULTIPASS_2<<BUS_STARTBIT) + 0x0010)
#define DVDD_DVD_MULTIPASS_2_hd_row_jump_from_po            (DVDD_BLK + DBG64SEL + (halDVDD_DVD_MULTIPASS_2<<BUS_STARTBIT) + 0x000F)
#define DVDD_DVD_MULTIPASS_2_numersrgtrflag                 (DVDD_BLK + DBG64SEL + (halDVDD_DVD_MULTIPASS_2<<BUS_STARTBIT) + 0x000E)
#define DVDD_DVD_MULTIPASS_2_last_blk                       (DVDD_BLK + DBG64SEL + (halDVDD_DVD_MULTIPASS_2<<BUS_STARTBIT) + 0x000D)
#define DVDD_DVD_MULTIPASS_2_recc_for_hd_right_blk          (DVDD_BLK + DBG64SEL + (halDVDD_DVD_MULTIPASS_2<<BUS_STARTBIT) + 0x000C)
#define DVDD_DVD_MULTIPASS_2_po_is_not_correcting           (DVDD_BLK + DBG64SEL + (halDVDD_DVD_MULTIPASS_2<<BUS_STARTBIT) + 0x000B)
#define DVDD_DVD_MULTIPASS_2_po_done                        (DVDD_BLK + DBG64SEL + (halDVDD_DVD_MULTIPASS_2<<BUS_STARTBIT) + 0x000A)
#define DVDD_DVD_MULTIPASS_2_recc_is_ing                    (DVDD_BLK + DBG64SEL + (halDVDD_DVD_MULTIPASS_2<<BUS_STARTBIT) + 0x0009)
#define DVDD_DVD_MULTIPASS_2_recc_start                     (DVDD_BLK + DBG64SEL + (halDVDD_DVD_MULTIPASS_2<<BUS_STARTBIT) + 0x0008)
#define DVDD_DVD_MULTIPASS_2_start_correcting               (DVDD_BLK + DBG64SEL + (halDVDD_DVD_MULTIPASS_2<<BUS_STARTBIT) + 0x0007)
#define DVDD_DVD_MULTIPASS_2_nedc_reset                     (DVDD_BLK + DBG64SEL + (halDVDD_DVD_MULTIPASS_2<<BUS_STARTBIT) + 0x0006)
#define DVDD_DVD_MULTIPASS_2_edc_done                       (DVDD_BLK + DBG64SEL + (halDVDD_DVD_MULTIPASS_2<<BUS_STARTBIT) + 0x0005)
#define DVDD_DVD_MULTIPASS_2_iedcerr_and_edc_done           (DVDD_BLK + DBG64SEL + (halDVDD_DVD_MULTIPASS_2<<BUS_STARTBIT) + 0x0004)
#define DVDD_DVD_MULTIPASS_2_pi_sw_0_A_and_pi_bst_dly       (DVDD_BLK + DBG64SEL + (halDVDD_DVD_MULTIPASS_2<<BUS_STARTBIT) + 0x0003)
#define DVDD_DVD_MULTIPASS_2_pi_sw_A_and_pi_bst_dly         (DVDD_BLK + DBG64SEL + (halDVDD_DVD_MULTIPASS_2<<BUS_STARTBIT) + 0x0002)
#define DVDD_DVD_MULTIPASS_2_po_sw_0_10_and_po_bst_dly      (DVDD_BLK + DBG64SEL + (halDVDD_DVD_MULTIPASS_2<<BUS_STARTBIT) + 0x0001)
#define DVDD_DVD_MULTIPASS_2_po_sw_10_and_po_bst_dly        (DVDD_BLK + DBG64SEL + (halDVDD_DVD_MULTIPASS_2<<BUS_STARTBIT) + 0x0000)
//DVDD_SYNC_JUMP
#define DVDD_SYNC_JUMP_last_frame                           (DVDD_BLK + DBG64SEL + (halDVDD_SYNC_JUMP<<BUS_STARTBIT) + 0x002F)
#define DVDD_SYNC_JUMP_last_sector                          (DVDD_BLK + DBG64SEL + (halDVDD_SYNC_JUMP<<BUS_STARTBIT) + 0x002E)
#define DVDD_SYNC_JUMP_sector_sync                          (DVDD_BLK + DBG64SEL + (halDVDD_SYNC_JUMP<<BUS_STARTBIT) + 0x002D)
#define DVDD_SYNC_JUMP_pib_start                            (DVDD_BLK + DBG64SEL + (halDVDD_SYNC_JUMP<<BUS_STARTBIT) + 0x002C)
#define DVDD_SYNC_JUMP_jump_across_sector                   (DVDD_BLK + DBG64SEL + (halDVDD_SYNC_JUMP<<BUS_STARTBIT) + 0x002B)
#define DVDD_SYNC_JUMP_jump_back                            (DVDD_BLK + DBG64SEL + (halDVDD_SYNC_JUMP<<BUS_STARTBIT) + 0x002A)
#define DVDD_SYNC_JUMP_storing_data                         (DVDD_BLK + DBG64SEL + (halDVDD_SYNC_JUMP<<BUS_STARTBIT) + 0x0029)
#define DVDD_SYNC_JUMP_raw_ecc_blk_sync                     (DVDD_BLK + DBG64SEL + (halDVDD_SYNC_JUMP<<BUS_STARTBIT) + 0x0028)
#define DVDD_SYNC_JUMP_pi_reset_from_demod                  (DVDD_BLK + DBG64SEL + (halDVDD_SYNC_JUMP<<BUS_STARTBIT) + 0x0027)
#define DVDD_SYNC_JUMP_curbuf_neq_curecc                    (DVDD_BLK + DBG64SEL + (halDVDD_SYNC_JUMP<<BUS_STARTBIT) + 0x0026)
#define DVDD_SYNC_JUMP_demod_wr_pi_reset_del                (DVDD_BLK + DBG64SEL + (halDVDD_SYNC_JUMP<<BUS_STARTBIT) + 0x0025)
#define DVDD_SYNC_JUMP_demod_pi_row_written                 (DVDD_BLK + DBG64SEL + (halDVDD_SYNC_JUMP<<BUS_STARTBIT) + 0x0024)
#define DVDD_SYNC_JUMP_demod_po_row_written                 (DVDD_BLK + DBG64SEL + (halDVDD_SYNC_JUMP<<BUS_STARTBIT) + 0x0023)
#define DVDD_SYNC_JUMP_demod_ecc_block_written              (DVDD_BLK + DBG64SEL + (halDVDD_SYNC_JUMP<<BUS_STARTBIT) + 0x0022)
#define DVDD_SYNC_JUMP_row_no_reg3                          (DVDD_BLK + DBG64SEL + (halDVDD_SYNC_JUMP<<BUS_STARTBIT) + 0x0021)
#define DVDD_SYNC_JUMP_row_no_reg2                          (DVDD_BLK + DBG64SEL + (halDVDD_SYNC_JUMP<<BUS_STARTBIT) + 0x0020)
#define DVDD_SYNC_JUMP_row_no_reg1                          (DVDD_BLK + DBG64SEL + (halDVDD_SYNC_JUMP<<BUS_STARTBIT) + 0x001F)
#define DVDD_SYNC_JUMP_row_no_reg0                          (DVDD_BLK + DBG64SEL + (halDVDD_SYNC_JUMP<<BUS_STARTBIT) + 0x001E)
#define DVDD_SYNC_JUMP_row_count3                           (DVDD_BLK + DBG64SEL + (halDVDD_SYNC_JUMP<<BUS_STARTBIT) + 0x001D)
#define DVDD_SYNC_JUMP_row_count2                           (DVDD_BLK + DBG64SEL + (halDVDD_SYNC_JUMP<<BUS_STARTBIT) + 0x001C)
#define DVDD_SYNC_JUMP_row_count1                           (DVDD_BLK + DBG64SEL + (halDVDD_SYNC_JUMP<<BUS_STARTBIT) + 0x001B)
#define DVDD_SYNC_JUMP_row_count0                           (DVDD_BLK + DBG64SEL + (halDVDD_SYNC_JUMP<<BUS_STARTBIT) + 0x001A)
#define DVDD_SYNC_JUMP_sector_no_reg3                       (DVDD_BLK + DBG64SEL + (halDVDD_SYNC_JUMP<<BUS_STARTBIT) + 0x0019)
#define DVDD_SYNC_JUMP_sector_no_reg2                       (DVDD_BLK + DBG64SEL + (halDVDD_SYNC_JUMP<<BUS_STARTBIT) + 0x0018)
#define DVDD_SYNC_JUMP_sector_no_reg1                       (DVDD_BLK + DBG64SEL + (halDVDD_SYNC_JUMP<<BUS_STARTBIT) + 0x0017)
#define DVDD_SYNC_JUMP_sector_no_reg0                       (DVDD_BLK + DBG64SEL + (halDVDD_SYNC_JUMP<<BUS_STARTBIT) + 0x0016)
#define DVDD_SYNC_JUMP_sector_count3                        (DVDD_BLK + DBG64SEL + (halDVDD_SYNC_JUMP<<BUS_STARTBIT) + 0x0015)
#define DVDD_SYNC_JUMP_sector_count2                        (DVDD_BLK + DBG64SEL + (halDVDD_SYNC_JUMP<<BUS_STARTBIT) + 0x0014)
#define DVDD_SYNC_JUMP_sector_count1                        (DVDD_BLK + DBG64SEL + (halDVDD_SYNC_JUMP<<BUS_STARTBIT) + 0x0013)
#define DVDD_SYNC_JUMP_sector_count0                        (DVDD_BLK + DBG64SEL + (halDVDD_SYNC_JUMP<<BUS_STARTBIT) + 0x0012)
#define DVDD_SYNC_JUMP_sync_skip                            (DVDD_BLK + DBG64SEL + (halDVDD_SYNC_JUMP<<BUS_STARTBIT) + 0x0011)
#define DVDD_SYNC_JUMP_sync_skip_write                      (DVDD_BLK + DBG64SEL + (halDVDD_SYNC_JUMP<<BUS_STARTBIT) + 0x0010)
#define DVDD_SYNC_JUMP_sync_skip_done                       (DVDD_BLK + DBG64SEL + (halDVDD_SYNC_JUMP<<BUS_STARTBIT) + 0x000F)
#define DVDD_SYNC_JUMP_sync_skip_this_row3                  (DVDD_BLK + DBG64SEL + (halDVDD_SYNC_JUMP<<BUS_STARTBIT) + 0x000E)
#define DVDD_SYNC_JUMP_sync_skip_this_row2                  (DVDD_BLK + DBG64SEL + (halDVDD_SYNC_JUMP<<BUS_STARTBIT) + 0x000D)
#define DVDD_SYNC_JUMP_sync_skip_this_row1                  (DVDD_BLK + DBG64SEL + (halDVDD_SYNC_JUMP<<BUS_STARTBIT) + 0x000C)
#define DVDD_SYNC_JUMP_sync_skip_this_row0                  (DVDD_BLK + DBG64SEL + (halDVDD_SYNC_JUMP<<BUS_STARTBIT) + 0x000B)
#define DVDD_SYNC_JUMP_demod_wr_read_state4                 (DVDD_BLK + DBG64SEL + (halDVDD_SYNC_JUMP<<BUS_STARTBIT) + 0x000A)
#define DVDD_SYNC_JUMP_demod_wr_read_state3                 (DVDD_BLK + DBG64SEL + (halDVDD_SYNC_JUMP<<BUS_STARTBIT) + 0x0009)
#define DVDD_SYNC_JUMP_demod_wr_read_state2                 (DVDD_BLK + DBG64SEL + (halDVDD_SYNC_JUMP<<BUS_STARTBIT) + 0x0008)
#define DVDD_SYNC_JUMP_demod_wr_read_state1                 (DVDD_BLK + DBG64SEL + (halDVDD_SYNC_JUMP<<BUS_STARTBIT) + 0x0007)
#define DVDD_SYNC_JUMP_demod_wr_read_state0                 (DVDD_BLK + DBG64SEL + (halDVDD_SYNC_JUMP<<BUS_STARTBIT) + 0x0006)
#define DVDD_SYNC_JUMP_demod_wr_write_state5                (DVDD_BLK + DBG64SEL + (halDVDD_SYNC_JUMP<<BUS_STARTBIT) + 0x0005)
#define DVDD_SYNC_JUMP_demod_wr_write_state4                (DVDD_BLK + DBG64SEL + (halDVDD_SYNC_JUMP<<BUS_STARTBIT) + 0x0004)
#define DVDD_SYNC_JUMP_demod_wr_write_state3                (DVDD_BLK + DBG64SEL + (halDVDD_SYNC_JUMP<<BUS_STARTBIT) + 0x0003)
#define DVDD_SYNC_JUMP_demod_wr_write_state2                (DVDD_BLK + DBG64SEL + (halDVDD_SYNC_JUMP<<BUS_STARTBIT) + 0x0002)
#define DVDD_SYNC_JUMP_demod_wr_write_state1                (DVDD_BLK + DBG64SEL + (halDVDD_SYNC_JUMP<<BUS_STARTBIT) + 0x0001)
#define DVDD_SYNC_JUMP_demod_wr_write_state0                (DVDD_BLK + DBG64SEL + (halDVDD_SYNC_JUMP<<BUS_STARTBIT) + 0x0000)
//DVDD_CSS_1
#define DVDD_CSS_1_sysclk                                   (DVDD_BLK + DBG64SEL + (halDVDD_CSS_1<<BUS_STARTBIT) + 0x002F)
#define DVDD_CSS_1_demod_clk                                (DVDD_BLK + DBG64SEL + (halDVDD_CSS_1<<BUS_STARTBIT) + 0x002E)
#define DVDD_CSS_1_demod_data_valid                         (DVDD_BLK + DBG64SEL + (halDVDD_CSS_1<<BUS_STARTBIT) + 0x002D)
#define DVDD_CSS_1_demod_data7                              (DVDD_BLK + DBG64SEL + (halDVDD_CSS_1<<BUS_STARTBIT) + 0x002C)
#define DVDD_CSS_1_demod_data6                              (DVDD_BLK + DBG64SEL + (halDVDD_CSS_1<<BUS_STARTBIT) + 0x002B)
#define DVDD_CSS_1_demod_data5                              (DVDD_BLK + DBG64SEL + (halDVDD_CSS_1<<BUS_STARTBIT) + 0x002A)
#define DVDD_CSS_1_demod_data4                              (DVDD_BLK + DBG64SEL + (halDVDD_CSS_1<<BUS_STARTBIT) + 0x0029)
#define DVDD_CSS_1_demod_data3                              (DVDD_BLK + DBG64SEL + (halDVDD_CSS_1<<BUS_STARTBIT) + 0x0028)
#define DVDD_CSS_1_demod_data2                              (DVDD_BLK + DBG64SEL + (halDVDD_CSS_1<<BUS_STARTBIT) + 0x0027)
#define DVDD_CSS_1_demod_data1                              (DVDD_BLK + DBG64SEL + (halDVDD_CSS_1<<BUS_STARTBIT) + 0x0026)
#define DVDD_CSS_1_demod_data0                              (DVDD_BLK + DBG64SEL + (halDVDD_CSS_1<<BUS_STARTBIT) + 0x0025)
#define DVDD_CSS_1_demod_erasure_flag                       (DVDD_BLK + DBG64SEL + (halDVDD_CSS_1<<BUS_STARTBIT) + 0x0024)
#define DVDD_CSS_1_demod_frame_start                        (DVDD_BLK + DBG64SEL + (halDVDD_CSS_1<<BUS_STARTBIT) + 0x0023)
#define DVDD_CSS_1_demod_frame_sync                         (DVDD_BLK + DBG64SEL + (halDVDD_CSS_1<<BUS_STARTBIT) + 0x0022)
#define DVDD_CSS_1_demod_sector_start                       (DVDD_BLK + DBG64SEL + (halDVDD_CSS_1<<BUS_STARTBIT) + 0x0021)
#define DVDD_CSS_1_demod_dvdram_header_data_flag            (DVDD_BLK + DBG64SEL + (halDVDD_CSS_1<<BUS_STARTBIT) + 0x0020)
#define DVDD_CSS_1_demod_dvdram_header_id_start             (DVDD_BLK + DBG64SEL + (halDVDD_CSS_1<<BUS_STARTBIT) + 0x001F)
#define DVDD_CSS_1_demod_dvdram_header_window               (DVDD_BLK + DBG64SEL + (halDVDD_CSS_1<<BUS_STARTBIT) + 0x001E)
#define DVDD_CSS_1_demod_first_byte_of_cluster              (DVDD_BLK + DBG64SEL + (halDVDD_CSS_1<<BUS_STARTBIT) + 0x001D)
#define DVDD_CSS_1_demod_dvd_frameno4                       (DVDD_BLK + DBG64SEL + (halDVDD_CSS_1<<BUS_STARTBIT) + 0x001C)
#define DVDD_CSS_1_demod_dvd_frameno3                       (DVDD_BLK + DBG64SEL + (halDVDD_CSS_1<<BUS_STARTBIT) + 0x001B)
#define DVDD_CSS_1_demod_dvd_frameno2                       (DVDD_BLK + DBG64SEL + (halDVDD_CSS_1<<BUS_STARTBIT) + 0x001A)
#define DVDD_CSS_1_demod_dvd_frameno1                       (DVDD_BLK + DBG64SEL + (halDVDD_CSS_1<<BUS_STARTBIT) + 0x0019)
#define DVDD_CSS_1_demod_dvd_frameno0                       (DVDD_BLK + DBG64SEL + (halDVDD_CSS_1<<BUS_STARTBIT) + 0x0018)
#define DVDD_CSS_1_i_csscmd2                                (DVDD_BLK + DBG64SEL + (halDVDD_CSS_1<<BUS_STARTBIT) + 0x0017)
#define DVDD_CSS_1_i_csscmd1                                (DVDD_BLK + DBG64SEL + (halDVDD_CSS_1<<BUS_STARTBIT) + 0x0016)
#define DVDD_CSS_1_i_csscmd0                                (DVDD_BLK + DBG64SEL + (halDVDD_CSS_1<<BUS_STARTBIT) + 0x0015)
#define DVDD_CSS_1_i_run                                    (DVDD_BLK + DBG64SEL + (halDVDD_CSS_1<<BUS_STARTBIT) + 0x0014)
#define DVDD_CSS_1_o_clr_run                                (DVDD_BLK + DBG64SEL + (halDVDD_CSS_1<<BUS_STARTBIT) + 0x0013)
#define DVDD_CSS_1_o_get_drv_res                            (DVDD_BLK + DBG64SEL + (halDVDD_CSS_1<<BUS_STARTBIT) + 0x0012)
#define DVDD_CSS_1_i_done_drv_res                           (DVDD_BLK + DBG64SEL + (halDVDD_CSS_1<<BUS_STARTBIT) + 0x0011)
#define DVDD_CSS_1_o_get_dec_chal                           (DVDD_BLK + DBG64SEL + (halDVDD_CSS_1<<BUS_STARTBIT) + 0x0010)
#define DVDD_CSS_1_i_done_dec_chal                          (DVDD_BLK + DBG64SEL + (halDVDD_CSS_1<<BUS_STARTBIT) + 0x000F)
#define DVDD_CSS_1_o_check_dec_res                          (DVDD_BLK + DBG64SEL + (halDVDD_CSS_1<<BUS_STARTBIT) + 0x000E)
#define DVDD_CSS_1_i_done_dec_res                           (DVDD_BLK + DBG64SEL + (halDVDD_CSS_1<<BUS_STARTBIT) + 0x000D)
#define DVDD_CSS_1_o_get_buskey                             (DVDD_BLK + DBG64SEL + (halDVDD_CSS_1<<BUS_STARTBIT) + 0x000C)
#define DVDD_CSS_1_i_done_get_key                           (DVDD_BLK + DBG64SEL + (halDVDD_CSS_1<<BUS_STARTBIT) + 0x000B)
#define DVDD_CSS_1_o_get_cprm_mac                           (DVDD_BLK + DBG64SEL + (halDVDD_CSS_1<<BUS_STARTBIT) + 0x000A)
#define DVDD_CSS_1_i_done_cprm_mac                          (DVDD_BLK + DBG64SEL + (halDVDD_CSS_1<<BUS_STARTBIT) + 0x0009)
#define DVDD_CSS_1_o_get_random                             (DVDD_BLK + DBG64SEL + (halDVDD_CSS_1<<BUS_STARTBIT) + 0x0008)
#define DVDD_CSS_1_i_done_random                            (DVDD_BLK + DBG64SEL + (halDVDD_CSS_1<<BUS_STARTBIT) + 0x0007)
#define DVDD_CSS_1_sysclk_for_css                           (DVDD_BLK + DBG64SEL + (halDVDD_CSS_1<<BUS_STARTBIT) + 0x0006)
#define DVDD_CSS_1_i_rstauth                                (DVDD_BLK + DBG64SEL + (halDVDD_CSS_1<<BUS_STARTBIT) + 0x0005)
#define DVDD_CSS_1_i_pseudorandom                           (DVDD_BLK + DBG64SEL + (halDVDD_CSS_1<<BUS_STARTBIT) + 0x0004)
#define DVDD_CSS_1_i_get_drv_res                            (DVDD_BLK + DBG64SEL + (halDVDD_CSS_1<<BUS_STARTBIT) + 0x0003)
#define DVDD_CSS_1_o_done_drv_res                           (DVDD_BLK + DBG64SEL + (halDVDD_CSS_1<<BUS_STARTBIT) + 0x0002)
#define DVDD_CSS_1_i_get_dec_chal                           (DVDD_BLK + DBG64SEL + (halDVDD_CSS_1<<BUS_STARTBIT) + 0x0001)
#define DVDD_CSS_1_o_done_dec_chal                          (DVDD_BLK + DBG64SEL + (halDVDD_CSS_1<<BUS_STARTBIT) + 0x0000)
//DVDD_CSS_2
#define DVDD_CSS_2_sysclk                                   (DVDD_BLK + DBG64SEL + (halDVDD_CSS_2<<BUS_STARTBIT) + 0x002F)
#define DVDD_CSS_2_demod_clk                                (DVDD_BLK + DBG64SEL + (halDVDD_CSS_2<<BUS_STARTBIT) + 0x002E)
#define DVDD_CSS_2_demod_data_valid                         (DVDD_BLK + DBG64SEL + (halDVDD_CSS_2<<BUS_STARTBIT) + 0x002D)
#define DVDD_CSS_2_demod_data7                              (DVDD_BLK + DBG64SEL + (halDVDD_CSS_2<<BUS_STARTBIT) + 0x002C)
#define DVDD_CSS_2_demod_data6                              (DVDD_BLK + DBG64SEL + (halDVDD_CSS_2<<BUS_STARTBIT) + 0x002B)
#define DVDD_CSS_2_demod_data5                              (DVDD_BLK + DBG64SEL + (halDVDD_CSS_2<<BUS_STARTBIT) + 0x002A)
#define DVDD_CSS_2_demod_data4                              (DVDD_BLK + DBG64SEL + (halDVDD_CSS_2<<BUS_STARTBIT) + 0x0029)
#define DVDD_CSS_2_demod_data3                              (DVDD_BLK + DBG64SEL + (halDVDD_CSS_2<<BUS_STARTBIT) + 0x0028)
#define DVDD_CSS_2_demod_data2                              (DVDD_BLK + DBG64SEL + (halDVDD_CSS_2<<BUS_STARTBIT) + 0x0027)
#define DVDD_CSS_2_demod_data1                              (DVDD_BLK + DBG64SEL + (halDVDD_CSS_2<<BUS_STARTBIT) + 0x0026)
#define DVDD_CSS_2_demod_data0                              (DVDD_BLK + DBG64SEL + (halDVDD_CSS_2<<BUS_STARTBIT) + 0x0025)
#define DVDD_CSS_2_demod_frame_start                        (DVDD_BLK + DBG64SEL + (halDVDD_CSS_2<<BUS_STARTBIT) + 0x0024)
#define DVDD_CSS_2_demod_frame_sync                         (DVDD_BLK + DBG64SEL + (halDVDD_CSS_2<<BUS_STARTBIT) + 0x0023)
#define DVDD_CSS_2_demod_sector_start                       (DVDD_BLK + DBG64SEL + (halDVDD_CSS_2<<BUS_STARTBIT) + 0x0022)
#define DVDD_CSS_2_demod_dvdram_header_data_flag            (DVDD_BLK + DBG64SEL + (halDVDD_CSS_2<<BUS_STARTBIT) + 0x0021)
#define DVDD_CSS_2_demod_dvdram_header_id_start             (DVDD_BLK + DBG64SEL + (halDVDD_CSS_2<<BUS_STARTBIT) + 0x0020)
#define DVDD_CSS_2_demod_dvdram_header_window               (DVDD_BLK + DBG64SEL + (halDVDD_CSS_2<<BUS_STARTBIT) + 0x001F)
#define DVDD_CSS_2_demod_first_byte_of_cluster              (DVDD_BLK + DBG64SEL + (halDVDD_CSS_2<<BUS_STARTBIT) + 0x001E)
#define DVDD_CSS_2_demod_dvd_frameno4                       (DVDD_BLK + DBG64SEL + (halDVDD_CSS_2<<BUS_STARTBIT) + 0x001D)
#define DVDD_CSS_2_demod_dvd_frameno3                       (DVDD_BLK + DBG64SEL + (halDVDD_CSS_2<<BUS_STARTBIT) + 0x001C)
#define DVDD_CSS_2_demod_dvd_frameno2                       (DVDD_BLK + DBG64SEL + (halDVDD_CSS_2<<BUS_STARTBIT) + 0x001B)
#define DVDD_CSS_2_demod_dvd_frameno1                       (DVDD_BLK + DBG64SEL + (halDVDD_CSS_2<<BUS_STARTBIT) + 0x001A)
#define DVDD_CSS_2_demod_dvd_frameno0                       (DVDD_BLK + DBG64SEL + (halDVDD_CSS_2<<BUS_STARTBIT) + 0x0019)
#define DVDD_CSS_2_sysclk_for_css                           (DVDD_BLK + DBG64SEL + (halDVDD_CSS_2<<BUS_STARTBIT) + 0x0018)
#define DVDD_CSS_2_i_origacc_4                              (DVDD_BLK + DBG64SEL + (halDVDD_CSS_2<<BUS_STARTBIT) + 0x0017)
#define DVDD_CSS_2_i_origacc_3                              (DVDD_BLK + DBG64SEL + (halDVDD_CSS_2<<BUS_STARTBIT) + 0x0016)
#define DVDD_CSS_2_i_origacc_2                              (DVDD_BLK + DBG64SEL + (halDVDD_CSS_2<<BUS_STARTBIT) + 0x0015)
#define DVDD_CSS_2_i_origacc_1                              (DVDD_BLK + DBG64SEL + (halDVDD_CSS_2<<BUS_STARTBIT) + 0x0014)
#define DVDD_CSS_2_i_origacc_0                              (DVDD_BLK + DBG64SEL + (halDVDD_CSS_2<<BUS_STARTBIT) + 0x0013)
#define DVDD_CSS_2_o_iacc_4                                 (DVDD_BLK + DBG64SEL + (halDVDD_CSS_2<<BUS_STARTBIT) + 0x0012)
#define DVDD_CSS_2_o_iacc_3                                 (DVDD_BLK + DBG64SEL + (halDVDD_CSS_2<<BUS_STARTBIT) + 0x0011)
#define DVDD_CSS_2_o_iacc_2                                 (DVDD_BLK + DBG64SEL + (halDVDD_CSS_2<<BUS_STARTBIT) + 0x0010)
#define DVDD_CSS_2_o_iacc_1                                 (DVDD_BLK + DBG64SEL + (halDVDD_CSS_2<<BUS_STARTBIT) + 0x000F)
#define DVDD_CSS_2_o_iacc_0                                 (DVDD_BLK + DBG64SEL + (halDVDD_CSS_2<<BUS_STARTBIT) + 0x000E)
#define DVDD_CSS_2_i_check_dec_res                          (DVDD_BLK + DBG64SEL + (halDVDD_CSS_2<<BUS_STARTBIT) + 0x000D)
#define DVDD_CSS_2_o_done_check_dec_res                     (DVDD_BLK + DBG64SEL + (halDVDD_CSS_2<<BUS_STARTBIT) + 0x000C)
#define DVDD_CSS_2_o_authfail                               (DVDD_BLK + DBG64SEL + (halDVDD_CSS_2<<BUS_STARTBIT) + 0x000B)
#define DVDD_CSS_2_i_get_buskey                             (DVDD_BLK + DBG64SEL + (halDVDD_CSS_2<<BUS_STARTBIT) + 0x000A)
#define DVDD_CSS_2_o_done_get_key                           (DVDD_BLK + DBG64SEL + (halDVDD_CSS_2<<BUS_STARTBIT) + 0x0009)
#define DVDD_CSS_2_i_get_cprm_mac                           (DVDD_BLK + DBG64SEL + (halDVDD_CSS_2<<BUS_STARTBIT) + 0x0008)
#define DVDD_CSS_2_o_done_cprm_mac                          (DVDD_BLK + DBG64SEL + (halDVDD_CSS_2<<BUS_STARTBIT) + 0x0007)
#define DVDD_CSS_2_i_get_random                             (DVDD_BLK + DBG64SEL + (halDVDD_CSS_2<<BUS_STARTBIT) + 0x0006)
#define DVDD_CSS_2_o_done_random                            (DVDD_BLK + DBG64SEL + (halDVDD_CSS_2<<BUS_STARTBIT) + 0x0005)
#define DVDD_CSS_2_accode4                                  (DVDD_BLK + DBG64SEL + (halDVDD_CSS_2<<BUS_STARTBIT) + 0x0004)
#define DVDD_CSS_2_accode3                                  (DVDD_BLK + DBG64SEL + (halDVDD_CSS_2<<BUS_STARTBIT) + 0x0003)
#define DVDD_CSS_2_accode2                                  (DVDD_BLK + DBG64SEL + (halDVDD_CSS_2<<BUS_STARTBIT) + 0x0002)
#define DVDD_CSS_2_accode1                                  (DVDD_BLK + DBG64SEL + (halDVDD_CSS_2<<BUS_STARTBIT) + 0x0001)
#define DVDD_CSS_2_accode0                                  (DVDD_BLK + DBG64SEL + (halDVDD_CSS_2<<BUS_STARTBIT) + 0x0000)
//DVDD_BCA_1
#define DVDD_BCA_1_demod_clk                                (DVDD_BLK + DBG64SEL + (halDVDD_BCA_1<<BUS_STARTBIT) + 0x002F)
#define DVDD_BCA_1_demod_data_valid                         (DVDD_BLK + DBG64SEL + (halDVDD_BCA_1<<BUS_STARTBIT) + 0x002E)
#define DVDD_BCA_1_demod_data7                              (DVDD_BLK + DBG64SEL + (halDVDD_BCA_1<<BUS_STARTBIT) + 0x002D)
#define DVDD_BCA_1_demod_data6                              (DVDD_BLK + DBG64SEL + (halDVDD_BCA_1<<BUS_STARTBIT) + 0x002C)
#define DVDD_BCA_1_demod_data5                              (DVDD_BLK + DBG64SEL + (halDVDD_BCA_1<<BUS_STARTBIT) + 0x002B)
#define DVDD_BCA_1_demod_data4                              (DVDD_BLK + DBG64SEL + (halDVDD_BCA_1<<BUS_STARTBIT) + 0x002A)
#define DVDD_BCA_1_demod_data3                              (DVDD_BLK + DBG64SEL + (halDVDD_BCA_1<<BUS_STARTBIT) + 0x0029)
#define DVDD_BCA_1_demod_data2                              (DVDD_BLK + DBG64SEL + (halDVDD_BCA_1<<BUS_STARTBIT) + 0x0028)
#define DVDD_BCA_1_demod_data1                              (DVDD_BLK + DBG64SEL + (halDVDD_BCA_1<<BUS_STARTBIT) + 0x0027)
#define DVDD_BCA_1_demod_data0                              (DVDD_BLK + DBG64SEL + (halDVDD_BCA_1<<BUS_STARTBIT) + 0x0026)
#define DVDD_BCA_1_demod_erasure_flag                       (DVDD_BLK + DBG64SEL + (halDVDD_BCA_1<<BUS_STARTBIT) + 0x0025)
#define DVDD_BCA_1_demod_frame_start                        (DVDD_BLK + DBG64SEL + (halDVDD_BCA_1<<BUS_STARTBIT) + 0x0024)
#define DVDD_BCA_1_demod_frame_sync                         (DVDD_BLK + DBG64SEL + (halDVDD_BCA_1<<BUS_STARTBIT) + 0x0023)
#define DVDD_BCA_1_demod_sector_start                       (DVDD_BLK + DBG64SEL + (halDVDD_BCA_1<<BUS_STARTBIT) + 0x0022)
#define DVDD_BCA_1_bca_sync_phase1                          (DVDD_BLK + DBG64SEL + (halDVDD_BCA_1<<BUS_STARTBIT) + 0x0021)
#define DVDD_BCA_1_bca_sync_phase0                          (DVDD_BLK + DBG64SEL + (halDVDD_BCA_1<<BUS_STARTBIT) + 0x0020)
#define DVDD_BCA_1_bca_n3                                   (DVDD_BLK + DBG64SEL + (halDVDD_BCA_1<<BUS_STARTBIT) + 0x001F)
#define DVDD_BCA_1_bca_n2                                   (DVDD_BLK + DBG64SEL + (halDVDD_BCA_1<<BUS_STARTBIT) + 0x001E)
#define DVDD_BCA_1_bca_n1                                   (DVDD_BLK + DBG64SEL + (halDVDD_BCA_1<<BUS_STARTBIT) + 0x001D)
#define DVDD_BCA_1_bca_n0                                   (DVDD_BLK + DBG64SEL + (halDVDD_BCA_1<<BUS_STARTBIT) + 0x001C)
#define DVDD_BCA_1_bca_sync_color_found                     (DVDD_BLK + DBG64SEL + (halDVDD_BCA_1<<BUS_STARTBIT) + 0x001B)
#define DVDD_BCA_1_bca_n13                                  (DVDD_BLK + DBG64SEL + (halDVDD_BCA_1<<BUS_STARTBIT) + 0x001A)
#define DVDD_BCA_1_bca_byte_count2                          (DVDD_BLK + DBG64SEL + (halDVDD_BCA_1<<BUS_STARTBIT) + 0x0019)
#define DVDD_BCA_1_bca_byte_count1                          (DVDD_BLK + DBG64SEL + (halDVDD_BCA_1<<BUS_STARTBIT) + 0x0018)
#define DVDD_BCA_1_bca_byte_count0                          (DVDD_BLK + DBG64SEL + (halDVDD_BCA_1<<BUS_STARTBIT) + 0x0017)
#define DVDD_BCA_1_bca_n_val                                (DVDD_BLK + DBG64SEL + (halDVDD_BCA_1<<BUS_STARTBIT) + 0x0016)
#define DVDD_BCA_1_mpi_data_lb1                             (DVDD_BLK + DBG64SEL + (halDVDD_BCA_1<<BUS_STARTBIT) + 0x0015)
#define DVDD_BCA_1_mpi_data_lb0                             (DVDD_BLK + DBG64SEL + (halDVDD_BCA_1<<BUS_STARTBIT) + 0x0014)
#define DVDD_BCA_1_mpi_data_word_en                         (DVDD_BLK + DBG64SEL + (halDVDD_BCA_1<<BUS_STARTBIT) + 0x0013)
#define DVDD_BCA_1_bca_count5                               (DVDD_BLK + DBG64SEL + (halDVDD_BCA_1<<BUS_STARTBIT) + 0x0012)
#define DVDD_BCA_1_bca_count4                               (DVDD_BLK + DBG64SEL + (halDVDD_BCA_1<<BUS_STARTBIT) + 0x0011)
#define DVDD_BCA_1_bca_count3                               (DVDD_BLK + DBG64SEL + (halDVDD_BCA_1<<BUS_STARTBIT) + 0x0010)
#define DVDD_BCA_1_bca_count2                               (DVDD_BLK + DBG64SEL + (halDVDD_BCA_1<<BUS_STARTBIT) + 0x000F)
#define DVDD_BCA_1_bca_count1                               (DVDD_BLK + DBG64SEL + (halDVDD_BCA_1<<BUS_STARTBIT) + 0x000E)
#define DVDD_BCA_1_bca_count0                               (DVDD_BLK + DBG64SEL + (halDVDD_BCA_1<<BUS_STARTBIT) + 0x000D)
#define DVDD_BCA_1_bca_rownum5                              (DVDD_BLK + DBG64SEL + (halDVDD_BCA_1<<BUS_STARTBIT) + 0x000C)
#define DVDD_BCA_1_bca_rownum4                              (DVDD_BLK + DBG64SEL + (halDVDD_BCA_1<<BUS_STARTBIT) + 0x000B)
#define DVDD_BCA_1_bca_rownum3                              (DVDD_BLK + DBG64SEL + (halDVDD_BCA_1<<BUS_STARTBIT) + 0x000A)
#define DVDD_BCA_1_bca_rownum2                              (DVDD_BLK + DBG64SEL + (halDVDD_BCA_1<<BUS_STARTBIT) + 0x0009)
#define DVDD_BCA_1_bca_rownum1                              (DVDD_BLK + DBG64SEL + (halDVDD_BCA_1<<BUS_STARTBIT) + 0x0008)
#define DVDD_BCA_1_bca_rownum0                              (DVDD_BLK + DBG64SEL + (halDVDD_BCA_1<<BUS_STARTBIT) + 0x0007)
#define DVDD_BCA_1_bca_done                                 (DVDD_BLK + DBG64SEL + (halDVDD_BCA_1<<BUS_STARTBIT) + 0x0006)
#define DVDD_BCA_1_bca_row_written                          (DVDD_BLK + DBG64SEL + (halDVDD_BCA_1<<BUS_STARTBIT) + 0x0005)
#define DVDD_BCA_1_mpi_bend                                 (DVDD_BLK + DBG64SEL + (halDVDD_BCA_1<<BUS_STARTBIT) + 0x0004)
#define DVDD_BCA_1_po_sw_0_10_and_po_bst_dly                (DVDD_BLK + DBG64SEL + (halDVDD_BCA_1<<BUS_STARTBIT) + 0x0003)
#define DVDD_BCA_1_po_sw_10_and_po_bst_dly                  (DVDD_BLK + DBG64SEL + (halDVDD_BCA_1<<BUS_STARTBIT) + 0x0002)
#define DVDD_BCA_1_d_wbcaerr                                (DVDD_BLK + DBG64SEL + (halDVDD_BCA_1<<BUS_STARTBIT) + 0x0001)
#define DVDD_BCA_1_i_bcaerr_and_d_wbcaerr                   (DVDD_BLK + DBG64SEL + (halDVDD_BCA_1<<BUS_STARTBIT) + 0x0000)
//DVDD_BCA_2
#define DVDD_BCA_2_demod_clk                                (DVDD_BLK + DBG64SEL + (halDVDD_BCA_2<<BUS_STARTBIT) + 0x002F)
#define DVDD_BCA_2_demod_data_valid                         (DVDD_BLK + DBG64SEL + (halDVDD_BCA_2<<BUS_STARTBIT) + 0x002E)
#define DVDD_BCA_2_demod_data7                              (DVDD_BLK + DBG64SEL + (halDVDD_BCA_2<<BUS_STARTBIT) + 0x002D)
#define DVDD_BCA_2_demod_data6                              (DVDD_BLK + DBG64SEL + (halDVDD_BCA_2<<BUS_STARTBIT) + 0x002C)
#define DVDD_BCA_2_demod_data5                              (DVDD_BLK + DBG64SEL + (halDVDD_BCA_2<<BUS_STARTBIT) + 0x002B)
#define DVDD_BCA_2_demod_data4                              (DVDD_BLK + DBG64SEL + (halDVDD_BCA_2<<BUS_STARTBIT) + 0x002A)
#define DVDD_BCA_2_demod_data3                              (DVDD_BLK + DBG64SEL + (halDVDD_BCA_2<<BUS_STARTBIT) + 0x0029)
#define DVDD_BCA_2_demod_data2                              (DVDD_BLK + DBG64SEL + (halDVDD_BCA_2<<BUS_STARTBIT) + 0x0028)
#define DVDD_BCA_2_demod_data1                              (DVDD_BLK + DBG64SEL + (halDVDD_BCA_2<<BUS_STARTBIT) + 0x0027)
#define DVDD_BCA_2_demod_data0                              (DVDD_BLK + DBG64SEL + (halDVDD_BCA_2<<BUS_STARTBIT) + 0x0026)
#define DVDD_BCA_2_demod_frame_start                        (DVDD_BLK + DBG64SEL + (halDVDD_BCA_2<<BUS_STARTBIT) + 0x0025)
#define DVDD_BCA_2_demod_frame_sync                         (DVDD_BLK + DBG64SEL + (halDVDD_BCA_2<<BUS_STARTBIT) + 0x0024)
#define DVDD_BCA_2_demod_sector_start                       (DVDD_BLK + DBG64SEL + (halDVDD_BCA_2<<BUS_STARTBIT) + 0x0023)
#define DVDD_BCA_2_bca_count5                               (DVDD_BLK + DBG64SEL + (halDVDD_BCA_2<<BUS_STARTBIT) + 0x0022)
#define DVDD_BCA_2_bca_count4                               (DVDD_BLK + DBG64SEL + (halDVDD_BCA_2<<BUS_STARTBIT) + 0x0021)
#define DVDD_BCA_2_bca_count3                               (DVDD_BLK + DBG64SEL + (halDVDD_BCA_2<<BUS_STARTBIT) + 0x0020)
#define DVDD_BCA_2_bca_count2                               (DVDD_BLK + DBG64SEL + (halDVDD_BCA_2<<BUS_STARTBIT) + 0x001F)
#define DVDD_BCA_2_bca_count1                               (DVDD_BLK + DBG64SEL + (halDVDD_BCA_2<<BUS_STARTBIT) + 0x001E)
#define DVDD_BCA_2_bca_count0                               (DVDD_BLK + DBG64SEL + (halDVDD_BCA_2<<BUS_STARTBIT) + 0x001D)
#define DVDD_BCA_2_demod_ecc_block_written                  (DVDD_BLK + DBG64SEL + (halDVDD_BCA_2<<BUS_STARTBIT) + 0x001C)
#define DVDD_BCA_2_demod_wr_read_state4                     (DVDD_BLK + DBG64SEL + (halDVDD_BCA_2<<BUS_STARTBIT) + 0x001B)
#define DVDD_BCA_2_demod_wr_read_state3                     (DVDD_BLK + DBG64SEL + (halDVDD_BCA_2<<BUS_STARTBIT) + 0x001A)
#define DVDD_BCA_2_demod_wr_read_state2                     (DVDD_BLK + DBG64SEL + (halDVDD_BCA_2<<BUS_STARTBIT) + 0x0019)
#define DVDD_BCA_2_demod_wr_read_state1                     (DVDD_BLK + DBG64SEL + (halDVDD_BCA_2<<BUS_STARTBIT) + 0x0018)
#define DVDD_BCA_2_demod_wr_read_state0                     (DVDD_BLK + DBG64SEL + (halDVDD_BCA_2<<BUS_STARTBIT) + 0x0017)
#define DVDD_BCA_2_demod_wr_write_state5                    (DVDD_BLK + DBG64SEL + (halDVDD_BCA_2<<BUS_STARTBIT) + 0x0016)
#define DVDD_BCA_2_demod_wr_write_state4                    (DVDD_BLK + DBG64SEL + (halDVDD_BCA_2<<BUS_STARTBIT) + 0x0015)
#define DVDD_BCA_2_demod_wr_write_state3                    (DVDD_BLK + DBG64SEL + (halDVDD_BCA_2<<BUS_STARTBIT) + 0x0014)
#define DVDD_BCA_2_demod_wr_write_state2                    (DVDD_BLK + DBG64SEL + (halDVDD_BCA_2<<BUS_STARTBIT) + 0x0013)
#define DVDD_BCA_2_demod_wr_write_state1                    (DVDD_BLK + DBG64SEL + (halDVDD_BCA_2<<BUS_STARTBIT) + 0x0012)
#define DVDD_BCA_2_demod_wr_write_state0                    (DVDD_BLK + DBG64SEL + (halDVDD_BCA_2<<BUS_STARTBIT) + 0x0011)
#define DVDD_BCA_2_bca_sync_color_found                     (DVDD_BLK + DBG64SEL + (halDVDD_BCA_2<<BUS_STARTBIT) + 0x0010)
#define DVDD_BCA_2_bca_n13                                  (DVDD_BLK + DBG64SEL + (halDVDD_BCA_2<<BUS_STARTBIT) + 0x000F)
#define DVDD_BCA_2_m_bca_n_p45                              (DVDD_BLK + DBG64SEL + (halDVDD_BCA_2<<BUS_STARTBIT) + 0x000E)
#define DVDD_BCA_2_m_bca_n_p44                              (DVDD_BLK + DBG64SEL + (halDVDD_BCA_2<<BUS_STARTBIT) + 0x000D)
#define DVDD_BCA_2_m_bca_n_p43                              (DVDD_BLK + DBG64SEL + (halDVDD_BCA_2<<BUS_STARTBIT) + 0x000C)
#define DVDD_BCA_2_m_bca_n_p42                              (DVDD_BLK + DBG64SEL + (halDVDD_BCA_2<<BUS_STARTBIT) + 0x000B)
#define DVDD_BCA_2_m_bca_n_p41                              (DVDD_BLK + DBG64SEL + (halDVDD_BCA_2<<BUS_STARTBIT) + 0x000A)
#define DVDD_BCA_2_m_bca_n_p40                              (DVDD_BLK + DBG64SEL + (halDVDD_BCA_2<<BUS_STARTBIT) + 0x0009)
#define DVDD_BCA_2_bca_edc_vld                              (DVDD_BLK + DBG64SEL + (halDVDD_BCA_2<<BUS_STARTBIT) + 0x0008)
#define DVDD_BCA_2_bca_edc_status                           (DVDD_BLK + DBG64SEL + (halDVDD_BCA_2<<BUS_STARTBIT) + 0x0007)
#define DVDD_BCA_2_po_reset_for_bca                         (DVDD_BLK + DBG64SEL + (halDVDD_BCA_2<<BUS_STARTBIT) + 0x0006)
#define DVDD_BCA_2_current_state_bca1                       (DVDD_BLK + DBG64SEL + (halDVDD_BCA_2<<BUS_STARTBIT) + 0x0005)
#define DVDD_BCA_2_current_state_bca0                       (DVDD_BLK + DBG64SEL + (halDVDD_BCA_2<<BUS_STARTBIT) + 0x0004)
#define DVDD_BCA_2_bca_done                                 (DVDD_BLK + DBG64SEL + (halDVDD_BCA_2<<BUS_STARTBIT) + 0x0003)
#define DVDD_BCA_2_mpi_bend                                 (DVDD_BLK + DBG64SEL + (halDVDD_BCA_2<<BUS_STARTBIT) + 0x0002)
#define DVDD_BCA_2_d_wbcaerr                                (DVDD_BLK + DBG64SEL + (halDVDD_BCA_2<<BUS_STARTBIT) + 0x0001)
#define DVDD_BCA_2_i_bcaerr_and_d_wbcaerr                   (DVDD_BLK + DBG64SEL + (halDVDD_BCA_2<<BUS_STARTBIT) + 0x0000)

/****************************************************************************
* DGB64 BUS DVDE BLOCK
****************************************************************************/
//DVDE_GENERIC1
#define DVDE_GENERIC1_bf_ack_ec                             (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_GENERIC1 + 0)<<BUS_STARTBIT) + 0x002F)
#define DVDE_GENERIC1_bf_ack_md                             (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_GENERIC1 + 0)<<BUS_STARTBIT) + 0x002E)
#define DVDE_GENERIC1_bf_nxword                             (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_GENERIC1 + 0)<<BUS_STARTBIT) + 0x002D)
#define DVDE_GENERIC1_ec_inc_sec_num                        (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_GENERIC1 + 0)<<BUS_STARTBIT) + 0x002C)
#define DVDE_GENERIC1_ec_ecc_inc                            (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_GENERIC1 + 0)<<BUS_STARTBIT) + 0x002B)
#define DVDE_GENERIC1_ec_en_ll_rd                           (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_GENERIC1 + 0)<<BUS_STARTBIT) + 0x002A)
#define DVDE_GENERIC1_ec_llo_end_p                          (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_GENERIC1 + 0)<<BUS_STARTBIT) + 0x0029)
#define DVDE_GENERIC1_ec_m_llj                              (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_GENERIC1 + 0)<<BUS_STARTBIT) + 0x0028)
#define DVDE_GENERIC1_ec_m_llo                              (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_GENERIC1 + 0)<<BUS_STARTBIT) + 0x0027)
#define DVDE_GENERIC1_ec_rd_16_host_sect                    (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_GENERIC1 + 0)<<BUS_STARTBIT) + 0x0026)
#define DVDE_GENERIC1_ec_ecc_done_p                         (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_GENERIC1 + 0)<<BUS_STARTBIT) + 0x0025)
#define DVDE_GENERIC1_ec_hdata_rd_done                      (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_GENERIC1 + 0)<<BUS_STARTBIT) + 0x0024)
#define DVDE_GENERIC1_en_ecc                                (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_GENERIC1 + 0)<<BUS_STARTBIT) + 0x0023)
#define DVDE_GENERIC1_start_first_ecc                       (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_GENERIC1 + 0)<<BUS_STARTBIT) + 0x0022)
#define DVDE_GENERIC1_dvde_enable                           (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_GENERIC1 + 0)<<BUS_STARTBIT) + 0x0021)
#define DVDE_GENERIC1_sram_wen                              (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_GENERIC1 + 0)<<BUS_STARTBIT) + 0x0020)
#define DVDE_GENERIC1_sy_write_cutoff                       (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_GENERIC1 + 0)<<BUS_STARTBIT) + 0x001F)
#define DVDE_GENERIC1_block_done_toggle                     (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_GENERIC1 + 0)<<BUS_STARTBIT) + 0x001E)
#define DVDE_GENERIC1_sector_done_toggle                    (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_GENERIC1 + 0)<<BUS_STARTBIT) + 0x001D)
#define DVDE_GENERIC1_uint                                  (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_GENERIC1 + 0)<<BUS_STARTBIT) + 0x001C)
#define DVDE_GENERIC1_target_match                          (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_GENERIC1 + 0)<<BUS_STARTBIT) + 0x001B)
#define DVDE_GENERIC1_blk_sync                              (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_GENERIC1 + 0)<<BUS_STARTBIT) + 0x001A)
#define DVDE_GENERIC1_dvde_block_start_toggle               (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_GENERIC1 + 0)<<BUS_STARTBIT) + 0x0019)
#define DVDE_GENERIC1_md_ws_data3                           (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_GENERIC1 + 0)<<BUS_STARTBIT) + 0x0018)
#define DVDE_GENERIC1_md_ws_data2                           (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_GENERIC1 + 0)<<BUS_STARTBIT) + 0x0017)
#define DVDE_GENERIC1_md_ws_data1                           (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_GENERIC1 + 0)<<BUS_STARTBIT) + 0x0016)
#define DVDE_GENERIC1_md_ws_data0                           (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_GENERIC1 + 0)<<BUS_STARTBIT) + 0x0015)
#define DVDE_GENERIC1_sy_write_start_phase3                 (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_GENERIC1 + 0)<<BUS_STARTBIT) + 0x0014)
#define DVDE_GENERIC1_sy_write_start_phase2                 (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_GENERIC1 + 0)<<BUS_STARTBIT) + 0x0013)
#define DVDE_GENERIC1_sy_write_start_phase1                 (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_GENERIC1 + 0)<<BUS_STARTBIT) + 0x0012)
#define DVDE_GENERIC1_sy_write_start_phase0                 (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_GENERIC1 + 0)<<BUS_STARTBIT) + 0x0011)
#define DVDE_GENERIC1_sy_session_wgate                      (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_GENERIC1 + 0)<<BUS_STARTBIT) + 0x0010)
#define DVDE_GENERIC1_sy_write_gate                         (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_GENERIC1 + 0)<<BUS_STARTBIT) + 0x000F)
#define DVDE_GENERIC1_servo_event                           (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_GENERIC1 + 0)<<BUS_STARTBIT) + 0x000E)
#define DVDE_GENERIC1_opc_dis_enc_wr                        (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_GENERIC1 + 0)<<BUS_STARTBIT) + 0x000D)
#define DVDE_GENERIC1_dvd_block_addr_valid                  (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_GENERIC1 + 0)<<BUS_STARTBIT) + 0x000C)
#define DVDE_GENERIC1_dvd_bsync_out_lock                    (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_GENERIC1 + 0)<<BUS_STARTBIT) + 0x000B)
#define DVDE_GENERIC1_dvd_wsync_out_lock                    (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_GENERIC1 + 0)<<BUS_STARTBIT) + 0x000A)
#define DVDE_GENERIC1_dvd_address_out_lock                  (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_GENERIC1 + 0)<<BUS_STARTBIT) + 0x0009)
#define DVDE_GENERIC1_dvdram_header_out_lock                (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_GENERIC1 + 0)<<BUS_STARTBIT) + 0x0008)
#define DVDE_GENERIC1_nra                                   (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_GENERIC1 + 0)<<BUS_STARTBIT) + 0x0007)
#define DVDE_GENERIC1_dvdram_header_window_fron             (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_GENERIC1 + 0)<<BUS_STARTBIT) + 0x0006)
#define DVDE_GENERIC1_dvdram_sector_slip                    (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_GENERIC1 + 0)<<BUS_STARTBIT) + 0x0005)
#define DVDE_GENERIC1_hddvd_wsync_out_lock                  (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_GENERIC1 + 0)<<BUS_STARTBIT) + 0x0004)
#define DVDE_GENERIC1_hddvd_address_out_lock                (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_GENERIC1 + 0)<<BUS_STARTBIT) + 0x0003)
#define DVDE_GENERIC1_hddvd_address_valid                   (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_GENERIC1 + 0)<<BUS_STARTBIT) + 0x0002)
#define DVDE_GENERIC1_wrclkd4                               (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_GENERIC1 + 0)<<BUS_STARTBIT) + 0x0001)
#define DVDE_GENERIC1_sysclk                                (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_GENERIC1 + 0)<<BUS_STARTBIT) + 0x0000)
//DVDE_GENERIC2
#define DVDE_GENERIC2_sy_normal_stop_p                      (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_GENERIC2 + 0)<<BUS_STARTBIT) + 0x002F)
#define DVDE_GENERIC2_sy_start_ok_p                         (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_GENERIC2 + 0)<<BUS_STARTBIT) + 0x002E)
#define DVDE_GENERIC2_sy_xfr_int_p                          (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_GENERIC2 + 0)<<BUS_STARTBIT) + 0x002D)
#define DVDE_GENERIC2_sy_ba_int_p                           (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_GENERIC2 + 0)<<BUS_STARTBIT) + 0x002C)
#define DVDE_GENERIC2_sy_lb_int_p                           (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_GENERIC2 + 0)<<BUS_STARTBIT) + 0x002B)
#define DVDE_GENERIC2_sy_start_error_p                      (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_GENERIC2 + 0)<<BUS_STARTBIT) + 0x002A)
#define DVDE_GENERIC2_sy_cond_stop_p                        (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_GENERIC2 + 0)<<BUS_STARTBIT) + 0x0029)
#define DVDE_GENERIC2_sy_servo_p                            (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_GENERIC2 + 0)<<BUS_STARTBIT) + 0x0028)
#define DVDE_GENERIC2_sy_md_underrun_p                      (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_GENERIC2 + 0)<<BUS_STARTBIT) + 0x0027)
#define DVDE_GENERIC2_sy_ecc_underrun_p                     (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_GENERIC2 + 0)<<BUS_STARTBIT) + 0x0026)
#define DVDE_GENERIC2_sy_tgt_lt_real_p                      (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_GENERIC2 + 0)<<BUS_STARTBIT) + 0x0025)
#define DVDE_GENERIC2_md_buf_udrn                           (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_GENERIC2 + 0)<<BUS_STARTBIT) + 0x0024)
#define DVDE_GENERIC2_md_block_done                         (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_GENERIC2 + 0)<<BUS_STARTBIT) + 0x0023)
#define DVDE_GENERIC2_md_ws_data_rdy                        (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_GENERIC2 + 0)<<BUS_STARTBIT) + 0x0022)
#define DVDE_GENERIC2_dvde_enable                           (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_GENERIC2 + 0)<<BUS_STARTBIT) + 0x0021)
#define DVDE_GENERIC2_sy_write_cutoff                       (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_GENERIC2 + 0)<<BUS_STARTBIT) + 0x0020)
#define DVDE_GENERIC2_block_done_toggle                     (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_GENERIC2 + 0)<<BUS_STARTBIT) + 0x001F)
#define DVDE_GENERIC2_sector_done_toggle                    (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_GENERIC2 + 0)<<BUS_STARTBIT) + 0x001E)
#define DVDE_GENERIC2_uint                                  (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_GENERIC2 + 0)<<BUS_STARTBIT) + 0x001D)
#define DVDE_GENERIC2_target_match                          (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_GENERIC2 + 0)<<BUS_STARTBIT) + 0x001C)
#define DVDE_GENERIC2_blk_sync                              (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_GENERIC2 + 0)<<BUS_STARTBIT) + 0x001B)
#define DVDE_GENERIC2_dvde_block_start_toggle               (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_GENERIC2 + 0)<<BUS_STARTBIT) + 0x001A)
#define DVDE_GENERIC2_md_ws_data3                           (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_GENERIC2 + 0)<<BUS_STARTBIT) + 0x0019)
#define DVDE_GENERIC2_md_ws_data2                           (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_GENERIC2 + 0)<<BUS_STARTBIT) + 0x0018)
#define DVDE_GENERIC2_md_ws_data1                           (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_GENERIC2 + 0)<<BUS_STARTBIT) + 0x0017)
#define DVDE_GENERIC2_md_ws_data0                           (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_GENERIC2 + 0)<<BUS_STARTBIT) + 0x0016)
#define DVDE_GENERIC2_sy_write_start_phase3                 (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_GENERIC2 + 0)<<BUS_STARTBIT) + 0x0015)
#define DVDE_GENERIC2_sy_write_start_phase2                 (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_GENERIC2 + 0)<<BUS_STARTBIT) + 0x0014)
#define DVDE_GENERIC2_sy_write_start_phase1                 (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_GENERIC2 + 0)<<BUS_STARTBIT) + 0x0013)
#define DVDE_GENERIC2_sy_write_start_phase0                 (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_GENERIC2 + 0)<<BUS_STARTBIT) + 0x0012)
#define DVDE_GENERIC2_sy_session_wgate                      (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_GENERIC2 + 0)<<BUS_STARTBIT) + 0x0011)
#define DVDE_GENERIC2_sy_write_gate                         (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_GENERIC2 + 0)<<BUS_STARTBIT) + 0x0010)
#define DVDE_GENERIC2_servo_event                           (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_GENERIC2 + 0)<<BUS_STARTBIT) + 0x000F)
#define DVDE_GENERIC2_opc_dis_enc_wr                        (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_GENERIC2 + 0)<<BUS_STARTBIT) + 0x000E)
#define DVDE_GENERIC2_dvd_block_addr_valid                  (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_GENERIC2 + 0)<<BUS_STARTBIT) + 0x000D)
#define DVDE_GENERIC2_dvd_bsync_out_lock                    (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_GENERIC2 + 0)<<BUS_STARTBIT) + 0x000D)
#define DVDE_GENERIC2_dvd_wsync_out_lock                    (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_GENERIC2 + 0)<<BUS_STARTBIT) + 0x000B)
#define DVDE_GENERIC2_dvd_address_out_lock                  (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_GENERIC2 + 0)<<BUS_STARTBIT) + 0x000A)
#define DVDE_GENERIC2_dvdram_header_out_lock                (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_GENERIC2 + 0)<<BUS_STARTBIT) + 0x0009)
#define DVDE_GENERIC2_nra                                   (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_GENERIC2 + 0)<<BUS_STARTBIT) + 0x0008)
#define DVDE_GENERIC2_dvdram_header_window_fron             (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_GENERIC2 + 0)<<BUS_STARTBIT) + 0x0007)
#define DVDE_GENERIC2_dvdram_sector_slip                    (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_GENERIC2 + 0)<<BUS_STARTBIT) + 0x0006)
#define DVDE_GENERIC2_hddvd_wsync_out_lock                  (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_GENERIC2 + 0)<<BUS_STARTBIT) + 0x0005)
#define DVDE_GENERIC2_hddvd_address_out_lock                (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_GENERIC2 + 0)<<BUS_STARTBIT) + 0x0004)
#define DVDE_GENERIC2_hddvd_address_valid                   (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_GENERIC2 + 0)<<BUS_STARTBIT) + 0x0003)
#define DVDE_GENERIC2_scan_test_mode                        (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_GENERIC2 + 0)<<BUS_STARTBIT) + 0x0002)
#define DVDE_GENERIC2_wrclkd4                               (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_GENERIC2 + 0)<<BUS_STARTBIT) + 0x0001)
#define DVDE_GENERIC2_wrclkd2                               (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_GENERIC2 + 0)<<BUS_STARTBIT) + 0x0000)
//DVDE_GENERIC3
#define DVDE_GENERIC3_ll_reg_empty                          (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_GENERIC3 + 0)<<BUS_STARTBIT) + 0x003F)
#define DVDE_GENERIC3_ec_rrw                                (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_GENERIC3 + 0)<<BUS_STARTBIT) + 0x003E)
#define DVDE_GENERIC3_ec_inc_sec_num                        (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_GENERIC3 + 0)<<BUS_STARTBIT) + 0x003D)
#define DVDE_GENERIC3_ec_ecc_inc                            (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_GENERIC3 + 0)<<BUS_STARTBIT) + 0x003C)
#define DVDE_GENERIC3_ec_en_ll_rd                           (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_GENERIC3 + 0)<<BUS_STARTBIT) + 0x003B)
#define DVDE_GENERIC3_ec_llo_end_p                          (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_GENERIC3 + 0)<<BUS_STARTBIT) + 0x003A)
#define DVDE_GENERIC3_ec_m_llj                              (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_GENERIC3 + 0)<<BUS_STARTBIT) + 0x0039)
#define DVDE_GENERIC3_ec_m_llo                              (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_GENERIC3 + 0)<<BUS_STARTBIT) + 0x0038)
#define DVDE_GENERIC3_ec_rd_16_host_sect                    (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_GENERIC3 + 0)<<BUS_STARTBIT) + 0x0037)
#define DVDE_GENERIC3_ec_ecc_done_p                         (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_GENERIC3 + 0)<<BUS_STARTBIT) + 0x0036)
#define DVDE_GENERIC3_ec_hdata_rd_done                      (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_GENERIC3 + 0)<<BUS_STARTBIT) + 0x0035)
#define DVDE_GENERIC3_en_ecc                                (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_GENERIC3 + 0)<<BUS_STARTBIT) + 0x0034)
#define DVDE_GENERIC3_start_first_ecc                       (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_GENERIC3 + 0)<<BUS_STARTBIT) + 0x0033)
#define DVDE_GENERIC3_sy_wr_cmd_clr                         (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_GENERIC3 + 0)<<BUS_STARTBIT) + 0x0032)
#define DVDE_GENERIC3_sy_normal_stop_p                      (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_GENERIC3 + 0)<<BUS_STARTBIT) + 0x0031)
#define DVDE_GENERIC3_sy_start_ok_p                         (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_GENERIC3 + 0)<<BUS_STARTBIT) + 0x0030)
#define DVDE_GENERIC3_sy_xfr_int_p                          (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_GENERIC3 + 0)<<BUS_STARTBIT) + 0x002F)
#define DVDE_GENERIC3_sy_ba_int_p                           (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_GENERIC3 + 0)<<BUS_STARTBIT) + 0x002E)
#define DVDE_GENERIC3_sy_lb_int_p                           (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_GENERIC3 + 0)<<BUS_STARTBIT) + 0x002D)
#define DVDE_GENERIC3_sy_start_error_p                      (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_GENERIC3 + 0)<<BUS_STARTBIT) + 0x002C)
#define DVDE_GENERIC3_sy_cond_stop_p                        (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_GENERIC3 + 0)<<BUS_STARTBIT) + 0x002B)
#define DVDE_GENERIC3_sy_servo_p                            (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_GENERIC3 + 0)<<BUS_STARTBIT) + 0x002A)
#define DVDE_GENERIC3_sy_md_underrun_p                      (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_GENERIC3 + 0)<<BUS_STARTBIT) + 0x0029)
#define DVDE_GENERIC3_sy_ecc_underrun_p                     (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_GENERIC3 + 0)<<BUS_STARTBIT) + 0x0028)
#define DVDE_GENERIC3_sy_tgt_lt_real_p                      (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_GENERIC3 + 0)<<BUS_STARTBIT) + 0x0027)
#define DVDE_GENERIC3_md_buf_udrn                           (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_GENERIC3 + 0)<<BUS_STARTBIT) + 0x0026)
#define DVDE_GENERIC3_md_block_done                         (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_GENERIC3 + 0)<<BUS_STARTBIT) + 0x0025)
#define DVDE_GENERIC3_md_ws_data_rdy                        (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_GENERIC3 + 0)<<BUS_STARTBIT) + 0x0024)
#define DVDE_GENERIC3_md_req                                (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_GENERIC3 + 0)<<BUS_STARTBIT) + 0x0023)
#define DVDE_GENERIC3_md_rrwb                               (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_GENERIC3 + 0)<<BUS_STARTBIT) + 0x0022)
#define DVDE_GENERIC3_dvde_enable                           (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_GENERIC3 + 0)<<BUS_STARTBIT) + 0x0021)
#define DVDE_GENERIC3_sy_write_cutoff                       (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_GENERIC3 + 0)<<BUS_STARTBIT) + 0x0020)
#define DVDE_GENERIC3_block_done_toggle                     (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_GENERIC3 + 0)<<BUS_STARTBIT) + 0x001F)
#define DVDE_GENERIC3_sector_done_toggle                    (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_GENERIC3 + 0)<<BUS_STARTBIT) + 0x001E)
#define DVDE_GENERIC3_uint                                  (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_GENERIC3 + 0)<<BUS_STARTBIT) + 0x001D)
#define DVDE_GENERIC3_target_match                          (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_GENERIC3 + 0)<<BUS_STARTBIT) + 0x001C)
#define DVDE_GENERIC3_blk_sync                              (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_GENERIC3 + 0)<<BUS_STARTBIT) + 0x001B)
#define DVDE_GENERIC3_dvde_block_start_toggle               (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_GENERIC3 + 0)<<BUS_STARTBIT) + 0x001A)
#define DVDE_GENERIC3_md_ws_data3                           (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_GENERIC3 + 0)<<BUS_STARTBIT) + 0x0019)
#define DVDE_GENERIC3_md_ws_data2                           (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_GENERIC3 + 0)<<BUS_STARTBIT) + 0x0018)
#define DVDE_GENERIC3_md_ws_data1                           (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_GENERIC3 + 0)<<BUS_STARTBIT) + 0x0017)
#define DVDE_GENERIC3_md_ws_data0                           (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_GENERIC3 + 0)<<BUS_STARTBIT) + 0x0016)
#define DVDE_GENERIC3_sy_write_start_phase3                 (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_GENERIC3 + 0)<<BUS_STARTBIT) + 0x0015)
#define DVDE_GENERIC3_sy_write_start_phase2                 (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_GENERIC3 + 0)<<BUS_STARTBIT) + 0x0014)
#define DVDE_GENERIC3_sy_write_start_phase1                 (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_GENERIC3 + 0)<<BUS_STARTBIT) + 0x0013)
#define DVDE_GENERIC3_sy_write_start_phase0                 (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_GENERIC3 + 0)<<BUS_STARTBIT) + 0x0012)
#define DVDE_GENERIC3_sy_session_wgate                      (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_GENERIC3 + 0)<<BUS_STARTBIT) + 0x0011)
#define DVDE_GENERIC3_sy_write_gate                         (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_GENERIC3 + 0)<<BUS_STARTBIT) + 0x0010)
#define DVDE_GENERIC3_servo_event                           (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_GENERIC3 + 0)<<BUS_STARTBIT) + 0x000F)
#define DVDE_GENERIC3_opc_dis_enc_wr                        (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_GENERIC3 + 0)<<BUS_STARTBIT) + 0x000E)
#define DVDE_GENERIC3_dvd_block_addr_valid                  (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_GENERIC3 + 0)<<BUS_STARTBIT) + 0x000D)
#define DVDE_GENERIC3_dvd_bsync_out_lock                    (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_GENERIC3 + 0)<<BUS_STARTBIT) + 0x000D)
#define DVDE_GENERIC3_dvd_wsync_out_lock                    (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_GENERIC3 + 0)<<BUS_STARTBIT) + 0x000B)
#define DVDE_GENERIC3_dvd_address_out_lock                  (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_GENERIC3 + 0)<<BUS_STARTBIT) + 0x000A)
#define DVDE_GENERIC3_dvdram_header_out_lock                (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_GENERIC3 + 0)<<BUS_STARTBIT) + 0x0009)
#define DVDE_GENERIC3_nra                                   (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_GENERIC3 + 0)<<BUS_STARTBIT) + 0x0008)
#define DVDE_GENERIC3_dvdram_header_window_fron             (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_GENERIC3 + 0)<<BUS_STARTBIT) + 0x0007)
#define DVDE_GENERIC3_dvdram_sector_slip                    (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_GENERIC3 + 0)<<BUS_STARTBIT) + 0x0006)
#define DVDE_GENERIC3_hddvd_wsync_out_lock                  (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_GENERIC3 + 0)<<BUS_STARTBIT) + 0x0005)
#define DVDE_GENERIC3_hddvd_address_out_lock                (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_GENERIC3 + 0)<<BUS_STARTBIT) + 0x0004)
#define DVDE_GENERIC3_hddvd_address_valid                   (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_GENERIC3 + 0)<<BUS_STARTBIT) + 0x0003)
#define DVDE_GENERIC3_scan_test_mode                        (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_GENERIC3 + 0)<<BUS_STARTBIT) + 0x0002)
#define DVDE_GENERIC3_wrclkd4                               (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_GENERIC3 + 0)<<BUS_STARTBIT) + 0x0001)
#define DVDE_GENERIC3_wrclkd2                               (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_GENERIC3 + 0)<<BUS_STARTBIT) + 0x0000)
//DVDE_SYNC SLOT0
#define DVDE_SYNC_SLOT0_wrclkd2                             (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_SYNC + 16*halDVDE_DVDEDbgSel_SLOT0)<<BUS_STARTBIT) + 0x002F)
#define DVDE_SYNC_SLOT0_sy_write_gate                       (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_SYNC + 16*halDVDE_DVDEDbgSel_SLOT0)<<BUS_STARTBIT) + 0x002E)
#define DVDE_SYNC_SLOT0_dvd_block_addr_valid                (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_SYNC + 16*halDVDE_DVDEDbgSel_SLOT0)<<BUS_STARTBIT) + 0x002D)
#define DVDE_SYNC_SLOT0_nra                                 (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_SYNC + 16*halDVDE_DVDEDbgSel_SLOT0)<<BUS_STARTBIT) + 0x002C)
#define DVDE_SYNC_SLOT0_wrclkd4                             (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_SYNC + 16*halDVDE_DVDEDbgSel_SLOT0)<<BUS_STARTBIT) + 0x002B)
#define DVDE_SYNC_SLOT0_sync_state2                         (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_SYNC + 16*halDVDE_DVDEDbgSel_SLOT0)<<BUS_STARTBIT) + 0x002A)
#define DVDE_SYNC_SLOT0_sync_state1                         (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_SYNC + 16*halDVDE_DVDEDbgSel_SLOT0)<<BUS_STARTBIT) + 0x0029)
#define DVDE_SYNC_SLOT0_sync_state0                         (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_SYNC + 16*halDVDE_DVDEDbgSel_SLOT0)<<BUS_STARTBIT) + 0x0028)
#define DVDE_SYNC_SLOT0_write_gate                          (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_SYNC + 16*halDVDE_DVDEDbgSel_SLOT0)<<BUS_STARTBIT) + 0x0027)
#define DVDE_SYNC_SLOT0_sy_pre_extra_blk                    (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_SYNC + 16*halDVDE_DVDEDbgSel_SLOT0)<<BUS_STARTBIT) + 0x0026)
#define DVDE_SYNC_SLOT0_addr_real_pre_tgt                   (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_SYNC + 16*halDVDE_DVDEDbgSel_SLOT0)<<BUS_STARTBIT) + 0x0025)
#define DVDE_SYNC_SLOT0_addr_real_eqt_tgt                   (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_SYNC + 16*halDVDE_DVDEDbgSel_SLOT0)<<BUS_STARTBIT) + 0x0024)
#define DVDE_SYNC_SLOT0_dvde_mrw                            (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_SYNC + 16*halDVDE_DVDEDbgSel_SLOT0)<<BUS_STARTBIT) + 0x0023)
#define DVDE_SYNC_SLOT0_sy_start_error                      (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_SYNC + 16*halDVDE_DVDEDbgSel_SLOT0)<<BUS_STARTBIT) + 0x0022)
#define DVDE_SYNC_SLOT0_sy_cond_stop                        (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_SYNC + 16*halDVDE_DVDEDbgSel_SLOT0)<<BUS_STARTBIT) + 0x0021)
#define DVDE_SYNC_SLOT0_sy_normal_stop                      (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_SYNC + 16*halDVDE_DVDEDbgSel_SLOT0)<<BUS_STARTBIT) + 0x0020)
#define DVDE_SYNC_SLOT0_sy_start_ok_p                       (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_SYNC + 16*halDVDE_DVDEDbgSel_SLOT0)<<BUS_STARTBIT) + 0x001F)
#define DVDE_SYNC_SLOT0_sy_normal_stop_p                    (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_SYNC + 16*halDVDE_DVDEDbgSel_SLOT0)<<BUS_STARTBIT) + 0x001E)
#define DVDE_SYNC_SLOT0_sy_start_errorx                     (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_SYNC + 16*halDVDE_DVDEDbgSel_SLOT0)<<BUS_STARTBIT) + 0x001D)
#define DVDE_SYNC_SLOT0_sy_cond_stop_p                      (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_SYNC + 16*halDVDE_DVDEDbgSel_SLOT0)<<BUS_STARTBIT) + 0x001C)
#define DVDE_SYNC_SLOT0_sy_xfr_int_p                        (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_SYNC + 16*halDVDE_DVDEDbgSel_SLOT0)<<BUS_STARTBIT) + 0x001B)
#define DVDE_SYNC_SLOT0_sy_ba_int_p                         (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_SYNC + 16*halDVDE_DVDEDbgSel_SLOT0)<<BUS_STARTBIT) + 0x001A)
#define DVDE_SYNC_SLOT0_sy_lb_int_p                         (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_SYNC + 16*halDVDE_DVDEDbgSel_SLOT0)<<BUS_STARTBIT) + 0x0019)
#define DVDE_SYNC_SLOT0_nra_blk                             (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_SYNC + 16*halDVDE_DVDEDbgSel_SLOT0)<<BUS_STARTBIT) + 0x0018)
#define DVDE_SYNC_SLOT0_sy_ecc_underrun_p                   (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_SYNC + 16*halDVDE_DVDEDbgSel_SLOT0)<<BUS_STARTBIT) + 0x0017)
#define DVDE_SYNC_SLOT0_sy_md_underrun_p                    (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_SYNC + 16*halDVDE_DVDEDbgSel_SLOT0)<<BUS_STARTBIT) + 0x0016)
#define DVDE_SYNC_SLOT0_sy_host_underrun_p                  (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_SYNC + 16*halDVDE_DVDEDbgSel_SLOT0)<<BUS_STARTBIT) + 0x0015)
#define DVDE_SYNC_SLOT0_sy_tgt_lt_real_p                    (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_SYNC + 16*halDVDE_DVDEDbgSel_SLOT0)<<BUS_STARTBIT) + 0x0014)
#define DVDE_SYNC_SLOT0_target_match                        (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_SYNC + 16*halDVDE_DVDEDbgSel_SLOT0)<<BUS_STARTBIT) + 0x0013)
#define DVDE_SYNC_SLOT0_blk_sync                            (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_SYNC + 16*halDVDE_DVDEDbgSel_SLOT0)<<BUS_STARTBIT) + 0x0012)
#define DVDE_SYNC_SLOT0_last_wr_bit                         (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_SYNC + 16*halDVDE_DVDEDbgSel_SLOT0)<<BUS_STARTBIT) + 0x0011)
#define DVDE_SYNC_SLOT0_sy_servo_p                          (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_SYNC + 16*halDVDE_DVDEDbgSel_SLOT0)<<BUS_STARTBIT) + 0x0010)
#define DVDE_SYNC_SLOT0_block_address_latch3                (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_SYNC + 16*halDVDE_DVDEDbgSel_SLOT0)<<BUS_STARTBIT) + 0x000F)
#define DVDE_SYNC_SLOT0_block_address_latch2                (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_SYNC + 16*halDVDE_DVDEDbgSel_SLOT0)<<BUS_STARTBIT) + 0x000E)
#define DVDE_SYNC_SLOT0_block_address_latch1                (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_SYNC + 16*halDVDE_DVDEDbgSel_SLOT0)<<BUS_STARTBIT) + 0x000D)
#define DVDE_SYNC_SLOT0_block_address_latch0                (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_SYNC + 16*halDVDE_DVDEDbgSel_SLOT0)<<BUS_STARTBIT) + 0x000C)
#define DVDE_SYNC_SLOT0_dvde_prw                            (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_SYNC + 16*halDVDE_DVDEDbgSel_SLOT0)<<BUS_STARTBIT) + 0x000B)
#define DVDE_SYNC_SLOT0_nra_start                           (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_SYNC + 16*halDVDE_DVDEDbgSel_SLOT0)<<BUS_STARTBIT) + 0x000A)
#define DVDE_SYNC_SLOT0_w4_bsync_out_lock                   (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_SYNC + 16*halDVDE_DVDEDbgSel_SLOT0)<<BUS_STARTBIT) + 0x0009)
#define DVDE_SYNC_SLOT0_w4_sync_lost                        (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_SYNC + 16*halDVDE_DVDEDbgSel_SLOT0)<<BUS_STARTBIT) + 0x0008)
#define DVDE_SYNC_SLOT0_md_ws_data_rdy                      (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_SYNC + 16*halDVDE_DVDEDbgSel_SLOT0)<<BUS_STARTBIT) + 0x0007)
#define DVDE_SYNC_SLOT0_md_buf_udrn                         (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_SYNC + 16*halDVDE_DVDEDbgSel_SLOT0)<<BUS_STARTBIT) + 0x0006)
#define DVDE_SYNC_SLOT0_dis_enc_wr                          (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_SYNC + 16*halDVDE_DVDEDbgSel_SLOT0)<<BUS_STARTBIT) + 0x0005)
#define DVDE_SYNC_SLOT0_dvdplnk                             (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_SYNC + 16*halDVDE_DVDEDbgSel_SLOT0)<<BUS_STARTBIT) + 0x0004)
#define DVDE_SYNC_SLOT0_nra_end                             (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_SYNC + 16*halDVDE_DVDEDbgSel_SLOT0)<<BUS_STARTBIT) + 0x0003)
#define DVDE_SYNC_SLOT0_w4_address_out_lock                 (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_SYNC + 16*halDVDE_DVDEDbgSel_SLOT0)<<BUS_STARTBIT) + 0x0002)
#define DVDE_SYNC_SLOT0_servo_event                         (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_SYNC + 16*halDVDE_DVDEDbgSel_SLOT0)<<BUS_STARTBIT) + 0x0001)
#define DVDE_SYNC_SLOT0_wrclkd4x                            (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_SYNC + 16*halDVDE_DVDEDbgSel_SLOT0)<<BUS_STARTBIT) + 0x0000)
//DVDE_SYNC SLOT1
#define DVDE_SYNC_SLOT1_w4_ecc_block_addr7                  (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_SYNC + 16*halDVDE_DVDEDbgSel_SLOT1)<<BUS_STARTBIT) + 0x002F)
#define DVDE_SYNC_SLOT1_w4_ecc_block_addr6                  (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_SYNC + 16*halDVDE_DVDEDbgSel_SLOT1)<<BUS_STARTBIT) + 0x002E)
#define DVDE_SYNC_SLOT1_w4_ecc_block_addr5                  (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_SYNC + 16*halDVDE_DVDEDbgSel_SLOT1)<<BUS_STARTBIT) + 0x002D)
#define DVDE_SYNC_SLOT1_w4_ecc_block_addr4                  (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_SYNC + 16*halDVDE_DVDEDbgSel_SLOT1)<<BUS_STARTBIT) + 0x002C)
#define DVDE_SYNC_SLOT1_w4_ecc_block_addr3                  (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_SYNC + 16*halDVDE_DVDEDbgSel_SLOT1)<<BUS_STARTBIT) + 0x002B)
#define DVDE_SYNC_SLOT1_w4_ecc_block_addr2                  (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_SYNC + 16*halDVDE_DVDEDbgSel_SLOT1)<<BUS_STARTBIT) + 0x002A)
#define DVDE_SYNC_SLOT1_w4_ecc_block_addr1                  (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_SYNC + 16*halDVDE_DVDEDbgSel_SLOT1)<<BUS_STARTBIT) + 0x0029)
#define DVDE_SYNC_SLOT1_w4_ecc_block_addr0                  (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_SYNC + 16*halDVDE_DVDEDbgSel_SLOT1)<<BUS_STARTBIT) + 0x0028)
#define DVDE_SYNC_SLOT1_w4_id_sector_cnt3                   (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_SYNC + 16*halDVDE_DVDEDbgSel_SLOT1)<<BUS_STARTBIT) + 0x0027)
#define DVDE_SYNC_SLOT1_w4_id_sector_cnt2                   (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_SYNC + 16*halDVDE_DVDEDbgSel_SLOT1)<<BUS_STARTBIT) + 0x0026)
#define DVDE_SYNC_SLOT1_w4_id_sector_cnt1                   (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_SYNC + 16*halDVDE_DVDEDbgSel_SLOT1)<<BUS_STARTBIT) + 0x0025)
#define DVDE_SYNC_SLOT1_w4_id_sector_cnt0                   (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_SYNC + 16*halDVDE_DVDEDbgSel_SLOT1)<<BUS_STARTBIT) + 0x0024)
#define DVDE_SYNC_SLOT1_w4_id_sector_t3                     (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_SYNC + 16*halDVDE_DVDEDbgSel_SLOT1)<<BUS_STARTBIT) + 0x0023)
#define DVDE_SYNC_SLOT1_w4_id_sector_t2                     (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_SYNC + 16*halDVDE_DVDEDbgSel_SLOT1)<<BUS_STARTBIT) + 0x0022)
#define DVDE_SYNC_SLOT1_w4_id_sector_t1                     (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_SYNC + 16*halDVDE_DVDEDbgSel_SLOT1)<<BUS_STARTBIT) + 0x0021)
#define DVDE_SYNC_SLOT1_w4_id_sector_t0                     (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_SYNC + 16*halDVDE_DVDEDbgSel_SLOT1)<<BUS_STARTBIT) + 0x0020)
#define DVDE_SYNC_SLOT1_sy_cur_addr_sect7                   (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_SYNC + 16*halDVDE_DVDEDbgSel_SLOT1)<<BUS_STARTBIT) + 0x001F)
#define DVDE_SYNC_SLOT1_sy_cur_addr_sect6                   (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_SYNC + 16*halDVDE_DVDEDbgSel_SLOT1)<<BUS_STARTBIT) + 0x001E)
#define DVDE_SYNC_SLOT1_sy_cur_addr_sect5                   (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_SYNC + 16*halDVDE_DVDEDbgSel_SLOT1)<<BUS_STARTBIT) + 0x001D)
#define DVDE_SYNC_SLOT1_sy_cur_addr_sect4                   (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_SYNC + 16*halDVDE_DVDEDbgSel_SLOT1)<<BUS_STARTBIT) + 0x001C)
#define DVDE_SYNC_SLOT1_sy_cur_addr_sect3                   (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_SYNC + 16*halDVDE_DVDEDbgSel_SLOT1)<<BUS_STARTBIT) + 0x001B)
#define DVDE_SYNC_SLOT1_sy_cur_addr_sect2                   (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_SYNC + 16*halDVDE_DVDEDbgSel_SLOT1)<<BUS_STARTBIT) + 0x001A)
#define DVDE_SYNC_SLOT1_sy_cur_addr_sect1                   (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_SYNC + 16*halDVDE_DVDEDbgSel_SLOT1)<<BUS_STARTBIT) + 0x0019)
#define DVDE_SYNC_SLOT1_sy_cur_addr_sect0                   (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_SYNC + 16*halDVDE_DVDEDbgSel_SLOT1)<<BUS_STARTBIT) + 0x0018)
#define DVDE_SYNC_SLOT1_sy_cur_frame3                       (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_SYNC + 16*halDVDE_DVDEDbgSel_SLOT1)<<BUS_STARTBIT) + 0x0017)
#define DVDE_SYNC_SLOT1_sy_cur_frame2                       (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_SYNC + 16*halDVDE_DVDEDbgSel_SLOT1)<<BUS_STARTBIT) + 0x0016)
#define DVDE_SYNC_SLOT1_sy_cur_frame1                       (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_SYNC + 16*halDVDE_DVDEDbgSel_SLOT1)<<BUS_STARTBIT) + 0x0015)
#define DVDE_SYNC_SLOT1_sy_cur_frame0                       (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_SYNC + 16*halDVDE_DVDEDbgSel_SLOT1)<<BUS_STARTBIT) + 0x0014)
#define DVDE_SYNC_SLOT1_sy_cur_bit3                         (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_SYNC + 16*halDVDE_DVDEDbgSel_SLOT1)<<BUS_STARTBIT) + 0x0013)
#define DVDE_SYNC_SLOT1_sy_cur_bit2                         (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_SYNC + 16*halDVDE_DVDEDbgSel_SLOT1)<<BUS_STARTBIT) + 0x0012)
#define DVDE_SYNC_SLOT1_sy_cur_bit1                         (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_SYNC + 16*halDVDE_DVDEDbgSel_SLOT1)<<BUS_STARTBIT) + 0x0011)
#define DVDE_SYNC_SLOT1_sy_cur_bit0                         (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_SYNC + 16*halDVDE_DVDEDbgSel_SLOT1)<<BUS_STARTBIT) + 0x0010)
#define DVDE_SYNC_SLOT1_wr_addr3                            (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_SYNC + 16*halDVDE_DVDEDbgSel_SLOT1)<<BUS_STARTBIT) + 0x000F)
#define DVDE_SYNC_SLOT1_wr_addr2                            (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_SYNC + 16*halDVDE_DVDEDbgSel_SLOT1)<<BUS_STARTBIT) + 0x000E)
#define DVDE_SYNC_SLOT1_wr_addr1                            (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_SYNC + 16*halDVDE_DVDEDbgSel_SLOT1)<<BUS_STARTBIT) + 0x000D)
#define DVDE_SYNC_SLOT1_wr_addr0                            (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_SYNC + 16*halDVDE_DVDEDbgSel_SLOT1)<<BUS_STARTBIT) + 0x000C)
#define DVDE_SYNC_SLOT1_wr_sect3                            (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_SYNC + 16*halDVDE_DVDEDbgSel_SLOT1)<<BUS_STARTBIT) + 0x000B)
#define DVDE_SYNC_SLOT1_wr_sect2                            (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_SYNC + 16*halDVDE_DVDEDbgSel_SLOT1)<<BUS_STARTBIT) + 0x000A)
#define DVDE_SYNC_SLOT1_wr_sect1                            (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_SYNC + 16*halDVDE_DVDEDbgSel_SLOT1)<<BUS_STARTBIT) + 0x0009)
#define DVDE_SYNC_SLOT1_wr_sect0                            (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_SYNC + 16*halDVDE_DVDEDbgSel_SLOT1)<<BUS_STARTBIT) + 0x0008)
#define DVDE_SYNC_SLOT1_wr_frame3                           (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_SYNC + 16*halDVDE_DVDEDbgSel_SLOT1)<<BUS_STARTBIT) + 0x0007)
#define DVDE_SYNC_SLOT1_wr_frame2                           (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_SYNC + 16*halDVDE_DVDEDbgSel_SLOT1)<<BUS_STARTBIT) + 0x0006)
#define DVDE_SYNC_SLOT1_wr_frame1                           (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_SYNC + 16*halDVDE_DVDEDbgSel_SLOT1)<<BUS_STARTBIT) + 0x0005)
#define DVDE_SYNC_SLOT1_wr_frame0                           (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_SYNC + 16*halDVDE_DVDEDbgSel_SLOT1)<<BUS_STARTBIT) + 0x0004)
#define DVDE_SYNC_SLOT1_wr_bit1                             (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_SYNC + 16*halDVDE_DVDEDbgSel_SLOT1)<<BUS_STARTBIT) + 0x0003)
#define DVDE_SYNC_SLOT1_wr_bit0                             (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_SYNC + 16*halDVDE_DVDEDbgSel_SLOT1)<<BUS_STARTBIT) + 0x0002)
#define DVDE_SYNC_SLOT1_wrclkd2                             (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_SYNC + 16*halDVDE_DVDEDbgSel_SLOT1)<<BUS_STARTBIT) + 0x0001)
#define DVDE_SYNC_SLOT1_wrclkd4                             (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_SYNC + 16*halDVDE_DVDEDbgSel_SLOT1)<<BUS_STARTBIT) + 0x0000)
//DVDE_SYNC SLOT2
#define DVDE_SYNC_SLOT2_sy_stpsta15                         (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_SYNC + 16*halDVDE_DVDEDbgSel_SLOT2)<<BUS_STARTBIT) + 0x002F)
#define DVDE_SYNC_SLOT2_sy_stpsta14                         (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_SYNC + 16*halDVDE_DVDEDbgSel_SLOT2)<<BUS_STARTBIT) + 0x002E)
#define DVDE_SYNC_SLOT2_sy_stpsta13                         (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_SYNC + 16*halDVDE_DVDEDbgSel_SLOT2)<<BUS_STARTBIT) + 0x002D)
#define DVDE_SYNC_SLOT2_sy_stpsta12                         (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_SYNC + 16*halDVDE_DVDEDbgSel_SLOT2)<<BUS_STARTBIT) + 0x002C)
#define DVDE_SYNC_SLOT2_sy_stpsta11                         (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_SYNC + 16*halDVDE_DVDEDbgSel_SLOT2)<<BUS_STARTBIT) + 0x002B)
#define DVDE_SYNC_SLOT2_sy_stpsta10                         (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_SYNC + 16*halDVDE_DVDEDbgSel_SLOT2)<<BUS_STARTBIT) + 0x002A)
#define DVDE_SYNC_SLOT2_sy_stpsta9                          (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_SYNC + 16*halDVDE_DVDEDbgSel_SLOT2)<<BUS_STARTBIT) + 0x0029)
#define DVDE_SYNC_SLOT2_sy_stpsta8                          (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_SYNC + 16*halDVDE_DVDEDbgSel_SLOT2)<<BUS_STARTBIT) + 0x0028)
#define DVDE_SYNC_SLOT2_sy_stpsta7                          (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_SYNC + 16*halDVDE_DVDEDbgSel_SLOT2)<<BUS_STARTBIT) + 0x0027)
#define DVDE_SYNC_SLOT2_sy_stpsta6                          (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_SYNC + 16*halDVDE_DVDEDbgSel_SLOT2)<<BUS_STARTBIT) + 0x0026)
#define DVDE_SYNC_SLOT2_sy_stpsta5                          (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_SYNC + 16*halDVDE_DVDEDbgSel_SLOT2)<<BUS_STARTBIT) + 0x0025)
#define DVDE_SYNC_SLOT2_sy_stpsta4                          (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_SYNC + 16*halDVDE_DVDEDbgSel_SLOT2)<<BUS_STARTBIT) + 0x0024)
#define DVDE_SYNC_SLOT2_sy_stpsta3                          (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_SYNC + 16*halDVDE_DVDEDbgSel_SLOT2)<<BUS_STARTBIT) + 0x0023)
#define DVDE_SYNC_SLOT2_sy_stpsta2                          (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_SYNC + 16*halDVDE_DVDEDbgSel_SLOT2)<<BUS_STARTBIT) + 0x0022)
#define DVDE_SYNC_SLOT2_sy_stpsta1                          (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_SYNC + 16*halDVDE_DVDEDbgSel_SLOT2)<<BUS_STARTBIT) + 0x0021)
#define DVDE_SYNC_SLOT2_sy_stpsta0                          (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_SYNC + 16*halDVDE_DVDEDbgSel_SLOT2)<<BUS_STARTBIT) + 0x0020)
#define DVDE_SYNC_SLOT2_sy_strtsta7                         (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_SYNC + 16*halDVDE_DVDEDbgSel_SLOT2)<<BUS_STARTBIT) + 0x001F)
#define DVDE_SYNC_SLOT2_sy_strtsta6                         (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_SYNC + 16*halDVDE_DVDEDbgSel_SLOT2)<<BUS_STARTBIT) + 0x001E)
#define DVDE_SYNC_SLOT2_sy_strtsta5                         (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_SYNC + 16*halDVDE_DVDEDbgSel_SLOT2)<<BUS_STARTBIT) + 0x001D)
#define DVDE_SYNC_SLOT2_sy_strtsta4                         (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_SYNC + 16*halDVDE_DVDEDbgSel_SLOT2)<<BUS_STARTBIT) + 0x001C)
#define DVDE_SYNC_SLOT2_sy_strtsta3                         (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_SYNC + 16*halDVDE_DVDEDbgSel_SLOT2)<<BUS_STARTBIT) + 0x001B)
#define DVDE_SYNC_SLOT2_sy_strtsta2                         (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_SYNC + 16*halDVDE_DVDEDbgSel_SLOT2)<<BUS_STARTBIT) + 0x001A)
#define DVDE_SYNC_SLOT2_sy_strtsta1                         (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_SYNC + 16*halDVDE_DVDEDbgSel_SLOT2)<<BUS_STARTBIT) + 0x0019)
#define DVDE_SYNC_SLOT2_sy_strtsta0                         (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_SYNC + 16*halDVDE_DVDEDbgSel_SLOT2)<<BUS_STARTBIT) + 0x0018)
#define DVDE_SYNC_SLOT2_sy_xfr_cnt3                         (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_SYNC + 16*halDVDE_DVDEDbgSel_SLOT2)<<BUS_STARTBIT) + 0x0017)
#define DVDE_SYNC_SLOT2_sy_xfr_cnt2                         (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_SYNC + 16*halDVDE_DVDEDbgSel_SLOT2)<<BUS_STARTBIT) + 0x0016)
#define DVDE_SYNC_SLOT2_sy_xfr_cnt1                         (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_SYNC + 16*halDVDE_DVDEDbgSel_SLOT2)<<BUS_STARTBIT) + 0x0015)
#define DVDE_SYNC_SLOT2_sy_xfr_cnt0                         (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_SYNC + 16*halDVDE_DVDEDbgSel_SLOT2)<<BUS_STARTBIT) + 0x0014)
#define DVDE_SYNC_SLOT2_sy_xfr_done_cnt3                    (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_SYNC + 16*halDVDE_DVDEDbgSel_SLOT2)<<BUS_STARTBIT) + 0x0013)
#define DVDE_SYNC_SLOT2_sy_xfr_done_cnt2                    (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_SYNC + 16*halDVDE_DVDEDbgSel_SLOT2)<<BUS_STARTBIT) + 0x0012)
#define DVDE_SYNC_SLOT2_sy_xfr_done_cnt1                    (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_SYNC + 16*halDVDE_DVDEDbgSel_SLOT2)<<BUS_STARTBIT) + 0x0011)
#define DVDE_SYNC_SLOT2_sy_xfr_done_cnt0                    (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_SYNC + 16*halDVDE_DVDEDbgSel_SLOT2)<<BUS_STARTBIT) + 0x0010)
#define DVDE_SYNC_SLOT2_sy_write_end_phase3                 (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_SYNC + 16*halDVDE_DVDEDbgSel_SLOT2)<<BUS_STARTBIT) + 0x000F)
#define DVDE_SYNC_SLOT2_sy_write_end_phase2                 (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_SYNC + 16*halDVDE_DVDEDbgSel_SLOT2)<<BUS_STARTBIT) + 0x000E)
#define DVDE_SYNC_SLOT2_sy_write_end_phase1                 (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_SYNC + 16*halDVDE_DVDEDbgSel_SLOT2)<<BUS_STARTBIT) + 0x000D)
#define DVDE_SYNC_SLOT2_sy_write_end_phase0                 (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_SYNC + 16*halDVDE_DVDEDbgSel_SLOT2)<<BUS_STARTBIT) + 0x000C)
#define DVDE_SYNC_SLOT2_sy_nra_cnt3                         (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_SYNC + 16*halDVDE_DVDEDbgSel_SLOT2)<<BUS_STARTBIT) + 0x000B)
#define DVDE_SYNC_SLOT2_sy_nra_cnt2                         (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_SYNC + 16*halDVDE_DVDEDbgSel_SLOT2)<<BUS_STARTBIT) + 0x000A)
#define DVDE_SYNC_SLOT2_sy_nra_cnt1                         (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_SYNC + 16*halDVDE_DVDEDbgSel_SLOT2)<<BUS_STARTBIT) + 0x0009)
#define DVDE_SYNC_SLOT2_sy_nra_cnt0                         (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_SYNC + 16*halDVDE_DVDEDbgSel_SLOT2)<<BUS_STARTBIT) + 0x0008)
#define DVDE_SYNC_SLOT2_addr_valid_offset3                  (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_SYNC + 16*halDVDE_DVDEDbgSel_SLOT2)<<BUS_STARTBIT) + 0x0007)
#define DVDE_SYNC_SLOT2_addr_valid_offset2                  (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_SYNC + 16*halDVDE_DVDEDbgSel_SLOT2)<<BUS_STARTBIT) + 0x0006)
#define DVDE_SYNC_SLOT2_addr_valid_offset1                  (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_SYNC + 16*halDVDE_DVDEDbgSel_SLOT2)<<BUS_STARTBIT) + 0x0005)
#define DVDE_SYNC_SLOT2_addr_valid_offset0                  (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_SYNC + 16*halDVDE_DVDEDbgSel_SLOT2)<<BUS_STARTBIT) + 0x0004)
#define DVDE_SYNC_SLOT2_addr_remainder1                     (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_SYNC + 16*halDVDE_DVDEDbgSel_SLOT2)<<BUS_STARTBIT) + 0x0003)
#define DVDE_SYNC_SLOT2_addr_remainder0                     (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_SYNC + 16*halDVDE_DVDEDbgSel_SLOT2)<<BUS_STARTBIT) + 0x0002)
#define DVDE_SYNC_SLOT2_wrclkd2                             (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_SYNC + 16*halDVDE_DVDEDbgSel_SLOT2)<<BUS_STARTBIT) + 0x0001)
#define DVDE_SYNC_SLOT2_wrclkd4                             (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_SYNC + 16*halDVDE_DVDEDbgSel_SLOT2)<<BUS_STARTBIT) + 0x0000)
//DVDE_SYNC SLOT3
#define DVDE_SYNC_SLOT3_w4_seek_match                       (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_SYNC + 16*halDVDE_DVDEDbgSel_SLOT3)<<BUS_STARTBIT) + 0x002F)
#define DVDE_SYNC_SLOT3_w4_prewr_skew_match                 (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_SYNC + 16*halDVDE_DVDEDbgSel_SLOT3)<<BUS_STARTBIT) + 0x002E)
#define DVDE_SYNC_SLOT3_w4_prewr_match                      (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_SYNC + 16*halDVDE_DVDEDbgSel_SLOT3)<<BUS_STARTBIT) + 0x002D)
#define DVDE_SYNC_SLOT3_w4_dvdram_seek_match                (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_SYNC + 16*halDVDE_DVDEDbgSel_SLOT3)<<BUS_STARTBIT) + 0x002C)
#define DVDE_SYNC_SLOT3_sy_write_gate                       (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_SYNC + 16*halDVDE_DVDEDbgSel_SLOT3)<<BUS_STARTBIT) + 0x002B)
#define DVDE_SYNC_SLOT3_sy_write_cutoff                     (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_SYNC + 16*halDVDE_DVDEDbgSel_SLOT3)<<BUS_STARTBIT) + 0x002A)
#define DVDE_SYNC_SLOT3_start_skew_match                    (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_SYNC + 16*halDVDE_DVDEDbgSel_SLOT3)<<BUS_STARTBIT) + 0x0029)
#define DVDE_SYNC_SLOT3_w4_gate_end_match                   (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_SYNC + 16*halDVDE_DVDEDbgSel_SLOT3)<<BUS_STARTBIT) + 0x0028)
#define DVDE_SYNC_SLOT3_w4_addr_valid                       (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_SYNC + 16*halDVDE_DVDEDbgSel_SLOT3)<<BUS_STARTBIT) + 0x0027)
#define DVDE_SYNC_SLOT3_dvd_block_addr_valid                (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_SYNC + 16*halDVDE_DVDEDbgSel_SLOT3)<<BUS_STARTBIT) + 0x0026)
#define DVDE_SYNC_SLOT3_dvdram_sy_write_gate                (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_SYNC + 16*halDVDE_DVDEDbgSel_SLOT3)<<BUS_STARTBIT) + 0x0025)
#define DVDE_SYNC_SLOT3_l_w4_dvdram_slip                    (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_SYNC + 16*halDVDE_DVDEDbgSel_SLOT3)<<BUS_STARTBIT) + 0x0024)
#define DVDE_SYNC_SLOT3_dvdhdram_slip                       (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_SYNC + 16*halDVDE_DVDEDbgSel_SLOT3)<<BUS_STARTBIT) + 0x0023)
#define DVDE_SYNC_SLOT3_dvdram_sync_state2                  (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_SYNC + 16*halDVDE_DVDEDbgSel_SLOT3)<<BUS_STARTBIT) + 0x0022)
#define DVDE_SYNC_SLOT3_dvdram_sync_state1                  (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_SYNC + 16*halDVDE_DVDEDbgSel_SLOT3)<<BUS_STARTBIT) + 0x0021)
#define DVDE_SYNC_SLOT3_dvdram_sync_state0                  (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_SYNC + 16*halDVDE_DVDEDbgSel_SLOT3)<<BUS_STARTBIT) + 0x0020)
#define DVDE_SYNC_SLOT3_l_w2_dvdram_header_window_front     (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_SYNC + 16*halDVDE_DVDEDbgSel_SLOT3)<<BUS_STARTBIT) + 0x001F)
#define DVDE_SYNC_SLOT3_l_dvdram_sy_write_gate_clr          (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_SYNC + 16*halDVDE_DVDEDbgSel_SLOT3)<<BUS_STARTBIT) + 0x001E)
#define DVDE_SYNC_SLOT3_dvdram_sy_write_gate_clr            (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_SYNC + 16*halDVDE_DVDEDbgSel_SLOT3)<<BUS_STARTBIT) + 0x001D)
#define DVDE_SYNC_SLOT3_w4_dvdram_sector_addr_valid         (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_SYNC + 16*halDVDE_DVDEDbgSel_SLOT3)<<BUS_STARTBIT) + 0x001C)
#define DVDE_SYNC_SLOT3_w4_dvdram_sector_addr7              (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_SYNC + 16*halDVDE_DVDEDbgSel_SLOT3)<<BUS_STARTBIT) + 0x001B)
#define DVDE_SYNC_SLOT3_w4_dvdram_sector_addr6              (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_SYNC + 16*halDVDE_DVDEDbgSel_SLOT3)<<BUS_STARTBIT) + 0x001A)
#define DVDE_SYNC_SLOT3_w4_dvdram_sector_addr5              (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_SYNC + 16*halDVDE_DVDEDbgSel_SLOT3)<<BUS_STARTBIT) + 0x0019)
#define DVDE_SYNC_SLOT3_w4_dvdram_sector_addr4              (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_SYNC + 16*halDVDE_DVDEDbgSel_SLOT3)<<BUS_STARTBIT) + 0x0018)
#define DVDE_SYNC_SLOT3_w4_dvdram_sector_addr3              (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_SYNC + 16*halDVDE_DVDEDbgSel_SLOT3)<<BUS_STARTBIT) + 0x0017)
#define DVDE_SYNC_SLOT3_w4_dvdram_sector_addr2              (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_SYNC + 16*halDVDE_DVDEDbgSel_SLOT3)<<BUS_STARTBIT) + 0x0016)
#define DVDE_SYNC_SLOT3_w4_dvdram_sector_addr1              (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_SYNC + 16*halDVDE_DVDEDbgSel_SLOT3)<<BUS_STARTBIT) + 0x0015)
#define DVDE_SYNC_SLOT3_w4_dvdram_sector_addr0              (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_SYNC + 16*halDVDE_DVDEDbgSel_SLOT3)<<BUS_STARTBIT) + 0x0014)
#define DVDE_SYNC_SLOT3_w4_dvdram_sector_t3                 (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_SYNC + 16*halDVDE_DVDEDbgSel_SLOT3)<<BUS_STARTBIT) + 0x0013)
#define DVDE_SYNC_SLOT3_w4_dvdram_sector_t2                 (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_SYNC + 16*halDVDE_DVDEDbgSel_SLOT3)<<BUS_STARTBIT) + 0x0012)
#define DVDE_SYNC_SLOT3_w4_dvdram_sector_t1                 (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_SYNC + 16*halDVDE_DVDEDbgSel_SLOT3)<<BUS_STARTBIT) + 0x0011)
#define DVDE_SYNC_SLOT3_w4_dvdram_sector_t0                 (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_SYNC + 16*halDVDE_DVDEDbgSel_SLOT3)<<BUS_STARTBIT) + 0x0010)
#define DVDE_SYNC_SLOT3_w4_dvdram_wr_bit3                   (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_SYNC + 16*halDVDE_DVDEDbgSel_SLOT3)<<BUS_STARTBIT) + 0x000F)
#define DVDE_SYNC_SLOT3_w4_dvdram_wr_bit2                   (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_SYNC + 16*halDVDE_DVDEDbgSel_SLOT3)<<BUS_STARTBIT) + 0x000E)
#define DVDE_SYNC_SLOT3_w4_dvdram_wr_bit1                   (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_SYNC + 16*halDVDE_DVDEDbgSel_SLOT3)<<BUS_STARTBIT) + 0x000D)
#define DVDE_SYNC_SLOT3_w4_dvdram_wr_bit0                   (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_SYNC + 16*halDVDE_DVDEDbgSel_SLOT3)<<BUS_STARTBIT) + 0x000C)
#define DVDE_SYNC_SLOT3_dvdram_sector_wr_cnt3               (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_SYNC + 16*halDVDE_DVDEDbgSel_SLOT3)<<BUS_STARTBIT) + 0x000B)
#define DVDE_SYNC_SLOT3_dvdram_sector_wr_cnt2               (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_SYNC + 16*halDVDE_DVDEDbgSel_SLOT3)<<BUS_STARTBIT) + 0x000A)
#define DVDE_SYNC_SLOT3_dvdram_sector_wr_cnt1               (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_SYNC + 16*halDVDE_DVDEDbgSel_SLOT3)<<BUS_STARTBIT) + 0x0009)
#define DVDE_SYNC_SLOT3_dvdram_sector_wr_cnt0               (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_SYNC + 16*halDVDE_DVDEDbgSel_SLOT3)<<BUS_STARTBIT) + 0x0008)
#define DVDE_SYNC_SLOT3_dvdram_write_start_phase3           (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_SYNC + 16*halDVDE_DVDEDbgSel_SLOT3)<<BUS_STARTBIT) + 0x0007)
#define DVDE_SYNC_SLOT3_dvdram_write_start_phase2           (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_SYNC + 16*halDVDE_DVDEDbgSel_SLOT3)<<BUS_STARTBIT) + 0x0006)
#define DVDE_SYNC_SLOT3_dvdram_write_start_phase1           (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_SYNC + 16*halDVDE_DVDEDbgSel_SLOT3)<<BUS_STARTBIT) + 0x0005)
#define DVDE_SYNC_SLOT3_dvdram_write_start_phase0           (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_SYNC + 16*halDVDE_DVDEDbgSel_SLOT3)<<BUS_STARTBIT) + 0x0004)
#define DVDE_SYNC_SLOT3_dvdram_write_end_phase3             (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_SYNC + 16*halDVDE_DVDEDbgSel_SLOT3)<<BUS_STARTBIT) + 0x0003)
#define DVDE_SYNC_SLOT3_dvdram_write_end_phase2             (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_SYNC + 16*halDVDE_DVDEDbgSel_SLOT3)<<BUS_STARTBIT) + 0x0002)
#define DVDE_SYNC_SLOT3_dvdram_write_end_phase1             (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_SYNC + 16*halDVDE_DVDEDbgSel_SLOT3)<<BUS_STARTBIT) + 0x0001)
#define DVDE_SYNC_SLOT3_dvdram_write_end_phase0             (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_SYNC + 16*halDVDE_DVDEDbgSel_SLOT3)<<BUS_STARTBIT) + 0x0000)
//DVDE_MOD SLOT0
#define DVDE_MOD_SLOT0_next_mlut_state_dvdeval1             (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_MOD + 16*halDVDE_DVDEDbgSel_SLOT0)<<BUS_STARTBIT) + 0x002F)
#define DVDE_MOD_SLOT0_next_mlut_state_dvdeval0             (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_MOD + 16*halDVDE_DVDEDbgSel_SLOT0)<<BUS_STARTBIT) + 0x002E)
#define DVDE_MOD_SLOT0_get_databyte_dvdeval1                (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_MOD + 16*halDVDE_DVDEDbgSel_SLOT0)<<BUS_STARTBIT) + 0x002D)
#define DVDE_MOD_SLOT0_get_databyte_dvdeval0                (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_MOD + 16*halDVDE_DVDEDbgSel_SLOT0)<<BUS_STARTBIT) + 0x002C)
#define DVDE_MOD_SLOT0_frame_cnt_eval3                      (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_MOD + 16*halDVDE_DVDEDbgSel_SLOT0)<<BUS_STARTBIT) + 0x002B)
#define DVDE_MOD_SLOT0_frame_cnt_eval2                      (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_MOD + 16*halDVDE_DVDEDbgSel_SLOT0)<<BUS_STARTBIT) + 0x002A)
#define DVDE_MOD_SLOT0_frame_cnt_eval1                      (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_MOD + 16*halDVDE_DVDEDbgSel_SLOT0)<<BUS_STARTBIT) + 0x0029)
#define DVDE_MOD_SLOT0_frame_cnt_eval0                      (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_MOD + 16*halDVDE_DVDEDbgSel_SLOT0)<<BUS_STARTBIT) + 0x0028)
#define DVDE_MOD_SLOT0_frame_cnt_eval4                      (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_MOD + 16*halDVDE_DVDEDbgSel_SLOT0)<<BUS_STARTBIT) + 0x0027)
#define DVDE_MOD_SLOT0_frame_cnt_eval3x                     (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_MOD + 16*halDVDE_DVDEDbgSel_SLOT0)<<BUS_STARTBIT) + 0x0026)
#define DVDE_MOD_SLOT0_recording_block_done_eval            (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_MOD + 16*halDVDE_DVDEDbgSel_SLOT0)<<BUS_STARTBIT) + 0x0025)
#define DVDE_MOD_SLOT0_frame_done_dvdeval                   (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_MOD + 16*halDVDE_DVDEDbgSel_SLOT0)<<BUS_STARTBIT) + 0x0024)
#define DVDE_MOD_SLOT0_frame_cnt_pro3                       (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_MOD + 16*halDVDE_DVDEDbgSel_SLOT0)<<BUS_STARTBIT) + 0x0023)
#define DVDE_MOD_SLOT0_frame_cnt_pro2                       (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_MOD + 16*halDVDE_DVDEDbgSel_SLOT0)<<BUS_STARTBIT) + 0x0022)
#define DVDE_MOD_SLOT0_frame_cnt_pro1                       (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_MOD + 16*halDVDE_DVDEDbgSel_SLOT0)<<BUS_STARTBIT) + 0x0021)
#define DVDE_MOD_SLOT0_frame_cnt_pro0                       (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_MOD + 16*halDVDE_DVDEDbgSel_SLOT0)<<BUS_STARTBIT) + 0x0020)
#define DVDE_MOD_SLOT0_frame_cnt_pro4                       (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_MOD + 16*halDVDE_DVDEDbgSel_SLOT0)<<BUS_STARTBIT) + 0x001F)
#define DVDE_MOD_SLOT0_frame_cnt_pro3x                      (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_MOD + 16*halDVDE_DVDEDbgSel_SLOT0)<<BUS_STARTBIT) + 0x001E)
#define DVDE_MOD_SLOT0_recording_block_done_pro             (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_MOD + 16*halDVDE_DVDEDbgSel_SLOT0)<<BUS_STARTBIT) + 0x001D)
#define DVDE_MOD_SLOT0_frame_done_dvdproc                   (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_MOD + 16*halDVDE_DVDEDbgSel_SLOT0)<<BUS_STARTBIT) + 0x001C)
#define DVDE_MOD_SLOT0_no_record_block_eval3                (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_MOD + 16*halDVDE_DVDEDbgSel_SLOT0)<<BUS_STARTBIT) + 0x001B)
#define DVDE_MOD_SLOT0_no_record_block_eval2                (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_MOD + 16*halDVDE_DVDEDbgSel_SLOT0)<<BUS_STARTBIT) + 0x001A)
#define DVDE_MOD_SLOT0_no_record_block_eval1                (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_MOD + 16*halDVDE_DVDEDbgSel_SLOT0)<<BUS_STARTBIT) + 0x0019)
#define DVDE_MOD_SLOT0_no_record_block_eval0                (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_MOD + 16*halDVDE_DVDEDbgSel_SLOT0)<<BUS_STARTBIT) + 0x0018)
#define DVDE_MOD_SLOT0_no_record_block_pro3                 (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_MOD + 16*halDVDE_DVDEDbgSel_SLOT0)<<BUS_STARTBIT) + 0x0017)
#define DVDE_MOD_SLOT0_no_record_block_pro2                 (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_MOD + 16*halDVDE_DVDEDbgSel_SLOT0)<<BUS_STARTBIT) + 0x0016)
#define DVDE_MOD_SLOT0_no_record_block_pro1                 (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_MOD + 16*halDVDE_DVDEDbgSel_SLOT0)<<BUS_STARTBIT) + 0x0015)
#define DVDE_MOD_SLOT0_no_record_block_pro0                 (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_MOD + 16*halDVDE_DVDEDbgSel_SLOT0)<<BUS_STARTBIT) + 0x0014)
#define DVDE_MOD_SLOT0_byte_cnt_eval_inc                    (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_MOD + 16*halDVDE_DVDEDbgSel_SLOT0)<<BUS_STARTBIT) + 0x0013)
#define DVDE_MOD_SLOT0_0                                    (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_MOD + 16*halDVDE_DVDEDbgSel_SLOT0)<<BUS_STARTBIT) + 0x0012)
#define DVDE_MOD_SLOT0_last_byte_eval                       (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_MOD + 16*halDVDE_DVDEDbgSel_SLOT0)<<BUS_STARTBIT) + 0x0011)
#define DVDE_MOD_SLOT0_byte_cnt_eval                        (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_MOD + 16*halDVDE_DVDEDbgSel_SLOT0)<<BUS_STARTBIT) + 0x0010)
#define DVDE_MOD_SLOT0_byte_cnt_eval_incx                   (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_MOD + 16*halDVDE_DVDEDbgSel_SLOT0)<<BUS_STARTBIT) + 0x000F)
#define DVDE_MOD_SLOT0_byte_cnt_eval4                       (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_MOD + 16*halDVDE_DVDEDbgSel_SLOT0)<<BUS_STARTBIT) + 0x000E)
#define DVDE_MOD_SLOT0_byte_cnt_eval3                       (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_MOD + 16*halDVDE_DVDEDbgSel_SLOT0)<<BUS_STARTBIT) + 0x000D)
#define DVDE_MOD_SLOT0_byte_cnt_eval2                       (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_MOD + 16*halDVDE_DVDEDbgSel_SLOT0)<<BUS_STARTBIT) + 0x000C)
#define DVDE_MOD_SLOT0_byte_cnt_eval_incy                   (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_MOD + 16*halDVDE_DVDEDbgSel_SLOT0)<<BUS_STARTBIT) + 0x000B)
#define DVDE_MOD_SLOT0_byte_cnt_eval6                       (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_MOD + 16*halDVDE_DVDEDbgSel_SLOT0)<<BUS_STARTBIT) + 0x000A)
#define DVDE_MOD_SLOT0_byte_cnt_eval5                       (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_MOD + 16*halDVDE_DVDEDbgSel_SLOT0)<<BUS_STARTBIT) + 0x0009)
#define DVDE_MOD_SLOT0_byte_cnt_eval4x                      (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_MOD + 16*halDVDE_DVDEDbgSel_SLOT0)<<BUS_STARTBIT) + 0x0008)
#define DVDE_MOD_SLOT0_byte_cnt_pro_inc                     (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_MOD + 16*halDVDE_DVDEDbgSel_SLOT0)<<BUS_STARTBIT) + 0x0007)
#define DVDE_MOD_SLOT0_0x                                   (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_MOD + 16*halDVDE_DVDEDbgSel_SLOT0)<<BUS_STARTBIT) + 0x0006)
#define DVDE_MOD_SLOT0_last_byte_pro                        (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_MOD + 16*halDVDE_DVDEDbgSel_SLOT0)<<BUS_STARTBIT) + 0x0005)
#define DVDE_MOD_SLOT0_byte_cnt_pro0                        (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_MOD + 16*halDVDE_DVDEDbgSel_SLOT0)<<BUS_STARTBIT) + 0x0004)
#define DVDE_MOD_SLOT0_byte_cnt_pro_incx                    (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_MOD + 16*halDVDE_DVDEDbgSel_SLOT0)<<BUS_STARTBIT) + 0x0003)
#define DVDE_MOD_SLOT0_byte_cnt_pro4                        (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_MOD + 16*halDVDE_DVDEDbgSel_SLOT0)<<BUS_STARTBIT) + 0x0002)
#define DVDE_MOD_SLOT0_byte_cnt_pro3                        (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_MOD + 16*halDVDE_DVDEDbgSel_SLOT0)<<BUS_STARTBIT) + 0x0001)
#define DVDE_MOD_SLOT0_byte_cnt_pro2                        (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_MOD + 16*halDVDE_DVDEDbgSel_SLOT0)<<BUS_STARTBIT) + 0x0000)
//DVDE_MOD SLOT1
#define DVDE_MOD_SLOT1_byte_cnt_pro_inc                     (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_MOD + 16*halDVDE_DVDEDbgSel_SLOT1)<<BUS_STARTBIT) + 0x002F)
#define DVDE_MOD_SLOT1_byte_cnt_pro6                        (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_MOD + 16*halDVDE_DVDEDbgSel_SLOT1)<<BUS_STARTBIT) + 0x002E)
#define DVDE_MOD_SLOT1_byte_cnt_pro5                        (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_MOD + 16*halDVDE_DVDEDbgSel_SLOT1)<<BUS_STARTBIT) + 0x002D)
#define DVDE_MOD_SLOT1_byte_cnt_pro4                        (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_MOD + 16*halDVDE_DVDEDbgSel_SLOT1)<<BUS_STARTBIT) + 0x002C)
#define DVDE_MOD_SLOT1_level_1_req_1                        (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_MOD + 16*halDVDE_DVDEDbgSel_SLOT1)<<BUS_STARTBIT) + 0x002B)
#define DVDE_MOD_SLOT1_level_2_req_1                        (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_MOD + 16*halDVDE_DVDEDbgSel_SLOT1)<<BUS_STARTBIT) + 0x002A)
#define DVDE_MOD_SLOT1_level_3_req_1                        (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_MOD + 16*halDVDE_DVDEDbgSel_SLOT1)<<BUS_STARTBIT) + 0x0029)
#define DVDE_MOD_SLOT1_burst_done_wclk                      (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_MOD + 16*halDVDE_DVDEDbgSel_SLOT1)<<BUS_STARTBIT) + 0x0028)
#define DVDE_MOD_SLOT1_level_1_req_2                        (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_MOD + 16*halDVDE_DVDEDbgSel_SLOT1)<<BUS_STARTBIT) + 0x0027)
#define DVDE_MOD_SLOT1_level_2_req_2                        (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_MOD + 16*halDVDE_DVDEDbgSel_SLOT1)<<BUS_STARTBIT) + 0x0026)
#define DVDE_MOD_SLOT1_level_3_req_2                        (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_MOD + 16*halDVDE_DVDEDbgSel_SLOT1)<<BUS_STARTBIT) + 0x0025)
#define DVDE_MOD_SLOT1_burst_done_wclkx                     (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_MOD + 16*halDVDE_DVDEDbgSel_SLOT1)<<BUS_STARTBIT) + 0x0024)
#define DVDE_MOD_SLOT1_wrclkd4                              (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_MOD + 16*halDVDE_DVDEDbgSel_SLOT1)<<BUS_STARTBIT) + 0x0023)
#define DVDE_MOD_SLOT1_set_level_1_bypass_wclk              (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_MOD + 16*halDVDE_DVDEDbgSel_SLOT1)<<BUS_STARTBIT) + 0x0022)
#define DVDE_MOD_SLOT1_0                                    (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_MOD + 16*halDVDE_DVDEDbgSel_SLOT1)<<BUS_STARTBIT) + 0x0021)
#define DVDE_MOD_SLOT1_0a                                   (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_MOD + 16*halDVDE_DVDEDbgSel_SLOT1)<<BUS_STARTBIT) + 0x0020)
#define DVDE_MOD_SLOT1_wrclkd4a                             (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_MOD + 16*halDVDE_DVDEDbgSel_SLOT1)<<BUS_STARTBIT) + 0x001F)
#define DVDE_MOD_SLOT1_set_level_2_bypass_wclk              (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_MOD + 16*halDVDE_DVDEDbgSel_SLOT1)<<BUS_STARTBIT) + 0x001E)
#define DVDE_MOD_SLOT1_0b                                   (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_MOD + 16*halDVDE_DVDEDbgSel_SLOT1)<<BUS_STARTBIT) + 0x001D)
#define DVDE_MOD_SLOT1_0c                                   (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_MOD + 16*halDVDE_DVDEDbgSel_SLOT1)<<BUS_STARTBIT) + 0x001C)
#define DVDE_MOD_SLOT1_wrclkd4b                             (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_MOD + 16*halDVDE_DVDEDbgSel_SLOT1)<<BUS_STARTBIT) + 0x001B)
#define DVDE_MOD_SLOT1_set_level_3_bypass_wclk              (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_MOD + 16*halDVDE_DVDEDbgSel_SLOT1)<<BUS_STARTBIT) + 0x001A)
#define DVDE_MOD_SLOT1_0d                                   (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_MOD + 16*halDVDE_DVDEDbgSel_SLOT1)<<BUS_STARTBIT) + 0x0019)
#define DVDE_MOD_SLOT1_0e                                   (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_MOD + 16*halDVDE_DVDEDbgSel_SLOT1)<<BUS_STARTBIT) + 0x0018)
#define DVDE_MOD_SLOT1_wrclkd4c                             (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_MOD + 16*halDVDE_DVDEDbgSel_SLOT1)<<BUS_STARTBIT) + 0x0017)
#define DVDE_MOD_SLOT1_set_level_4_bypass_wclk              (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_MOD + 16*halDVDE_DVDEDbgSel_SLOT1)<<BUS_STARTBIT) + 0x0016)
#define DVDE_MOD_SLOT1_0f                                   (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_MOD + 16*halDVDE_DVDEDbgSel_SLOT1)<<BUS_STARTBIT) + 0x0015)
#define DVDE_MOD_SLOT1_0g                                   (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_MOD + 16*halDVDE_DVDEDbgSel_SLOT1)<<BUS_STARTBIT) + 0x0014)
#define DVDE_MOD_SLOT1_wrclkd4d                             (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_MOD + 16*halDVDE_DVDEDbgSel_SLOT1)<<BUS_STARTBIT) + 0x0013)
#define DVDE_MOD_SLOT1_set_level_5_bypass_wclk              (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_MOD + 16*halDVDE_DVDEDbgSel_SLOT1)<<BUS_STARTBIT) + 0x0012)
#define DVDE_MOD_SLOT1_0i                                   (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_MOD + 16*halDVDE_DVDEDbgSel_SLOT1)<<BUS_STARTBIT) + 0x0011)
#define DVDE_MOD_SLOT1_0j                                   (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_MOD + 16*halDVDE_DVDEDbgSel_SLOT1)<<BUS_STARTBIT) + 0x0010)
#define DVDE_MOD_SLOT1_wrclkd4e                             (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_MOD + 16*halDVDE_DVDEDbgSel_SLOT1)<<BUS_STARTBIT) + 0x000F)
#define DVDE_MOD_SLOT1_set_level_6_bypass_wclk              (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_MOD + 16*halDVDE_DVDEDbgSel_SLOT1)<<BUS_STARTBIT) + 0x000E)
#define DVDE_MOD_SLOT1_0k                                   (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_MOD + 16*halDVDE_DVDEDbgSel_SLOT1)<<BUS_STARTBIT) + 0x000D)
#define DVDE_MOD_SLOT1_0l                                   (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_MOD + 16*halDVDE_DVDEDbgSel_SLOT1)<<BUS_STARTBIT) + 0x000C)
#define DVDE_MOD_SLOT1_wrclkd4f                             (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_MOD + 16*halDVDE_DVDEDbgSel_SLOT1)<<BUS_STARTBIT) + 0x000B)
#define DVDE_MOD_SLOT1_set_level_7_bypass_wclk              (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_MOD + 16*halDVDE_DVDEDbgSel_SLOT1)<<BUS_STARTBIT) + 0x000A)
#define DVDE_MOD_SLOT1_0m                                   (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_MOD + 16*halDVDE_DVDEDbgSel_SLOT1)<<BUS_STARTBIT) + 0x0009)
#define DVDE_MOD_SLOT1_0n                                   (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_MOD + 16*halDVDE_DVDEDbgSel_SLOT1)<<BUS_STARTBIT) + 0x0008)
#define DVDE_MOD_SLOT1_wrclkd4g                             (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_MOD + 16*halDVDE_DVDEDbgSel_SLOT1)<<BUS_STARTBIT) + 0x0007)
#define DVDE_MOD_SLOT1_set_level_8_bypass_wclk              (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_MOD + 16*halDVDE_DVDEDbgSel_SLOT1)<<BUS_STARTBIT) + 0x0006)
#define DVDE_MOD_SLOT1_0o                                   (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_MOD + 16*halDVDE_DVDEDbgSel_SLOT1)<<BUS_STARTBIT) + 0x0005)
#define DVDE_MOD_SLOT1_0p                                   (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_MOD + 16*halDVDE_DVDEDbgSel_SLOT1)<<BUS_STARTBIT) + 0x0004)
#define DVDE_MOD_SLOT1_bit_match                            (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_MOD + 16*halDVDE_DVDEDbgSel_SLOT1)<<BUS_STARTBIT) + 0x0003)
#define DVDE_MOD_SLOT1_frame_match                          (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_MOD + 16*halDVDE_DVDEDbgSel_SLOT1)<<BUS_STARTBIT) + 0x0002)
#define DVDE_MOD_SLOT1_sector_match                         (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_MOD + 16*halDVDE_DVDEDbgSel_SLOT1)<<BUS_STARTBIT) + 0x0001)
#define DVDE_MOD_SLOT1_address_match                        (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_MOD + 16*halDVDE_DVDEDbgSel_SLOT1)<<BUS_STARTBIT) + 0x0000)
//DVDE_MOD SLOT2
#define DVDE_MOD_SLOT2_ecc_data_rdy                         (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_MOD + 16*halDVDE_DVDEDbgSel_SLOT2)<<BUS_STARTBIT) + 0x002F)
#define DVDE_MOD_SLOT2_cur_state_dram_req2                  (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_MOD + 16*halDVDE_DVDEDbgSel_SLOT2)<<BUS_STARTBIT) + 0x002E)
#define DVDE_MOD_SLOT2_cur_state_dram_req1                  (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_MOD + 16*halDVDE_DVDEDbgSel_SLOT2)<<BUS_STARTBIT) + 0x002D)
#define DVDE_MOD_SLOT2_cur_state_dram_req0                  (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_MOD + 16*halDVDE_DVDEDbgSel_SLOT2)<<BUS_STARTBIT) + 0x002C)
#define DVDE_MOD_SLOT2_bf_ack_md                            (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_MOD + 16*halDVDE_DVDEDbgSel_SLOT2)<<BUS_STARTBIT) + 0x002B)
#define DVDE_MOD_SLOT2_cur_state_dram_add2                  (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_MOD + 16*halDVDE_DVDEDbgSel_SLOT2)<<BUS_STARTBIT) + 0x002A)
#define DVDE_MOD_SLOT2_cur_state_dram_add1                  (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_MOD + 16*halDVDE_DVDEDbgSel_SLOT2)<<BUS_STARTBIT) + 0x0029)
#define DVDE_MOD_SLOT2_cur_state_dram_add0                  (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_MOD + 16*halDVDE_DVDEDbgSel_SLOT2)<<BUS_STARTBIT) + 0x0028)
#define DVDE_MOD_SLOT2_md_burst3                            (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_MOD + 16*halDVDE_DVDEDbgSel_SLOT2)<<BUS_STARTBIT) + 0x0027)
#define DVDE_MOD_SLOT2_md_burst2                            (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_MOD + 16*halDVDE_DVDEDbgSel_SLOT2)<<BUS_STARTBIT) + 0x0026)
#define DVDE_MOD_SLOT2_md_burst1                            (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_MOD + 16*halDVDE_DVDEDbgSel_SLOT2)<<BUS_STARTBIT) + 0x0025)
#define DVDE_MOD_SLOT2_md_burst0                            (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_MOD + 16*halDVDE_DVDEDbgSel_SLOT2)<<BUS_STARTBIT) + 0x0024)
#define DVDE_MOD_SLOT2_cur_level_st2                        (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_MOD + 16*halDVDE_DVDEDbgSel_SLOT2)<<BUS_STARTBIT) + 0x0023)
#define DVDE_MOD_SLOT2_cur_level_st1                        (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_MOD + 16*halDVDE_DVDEDbgSel_SLOT2)<<BUS_STARTBIT) + 0x0022)
#define DVDE_MOD_SLOT2_cur_level_st0                        (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_MOD + 16*halDVDE_DVDEDbgSel_SLOT2)<<BUS_STARTBIT) + 0x0021)
#define DVDE_MOD_SLOT2_first_pass                           (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_MOD + 16*halDVDE_DVDEDbgSel_SLOT2)<<BUS_STARTBIT) + 0x0020)
#define DVDE_MOD_SLOT2_mod_cena_ram0                        (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_MOD + 16*halDVDE_DVDEDbgSel_SLOT2)<<BUS_STARTBIT) + 0x001F)
#define DVDE_MOD_SLOT2_mod_sram_wr_add2                     (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_MOD + 16*halDVDE_DVDEDbgSel_SLOT2)<<BUS_STARTBIT) + 0x001E)
#define DVDE_MOD_SLOT2_mod_sram_wr_add1                     (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_MOD + 16*halDVDE_DVDEDbgSel_SLOT2)<<BUS_STARTBIT) + 0x001D)
#define DVDE_MOD_SLOT2_mod_sram_wr_add0                     (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_MOD + 16*halDVDE_DVDEDbgSel_SLOT2)<<BUS_STARTBIT) + 0x001C)
#define DVDE_MOD_SLOT2_mod_cena_ram1                        (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_MOD + 16*halDVDE_DVDEDbgSel_SLOT2)<<BUS_STARTBIT) + 0x001B)
#define DVDE_MOD_SLOT2_mod_sram_wr_add2a                    (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_MOD + 16*halDVDE_DVDEDbgSel_SLOT2)<<BUS_STARTBIT) + 0x001A)
#define DVDE_MOD_SLOT2_mod_sram_wr_add1a                    (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_MOD + 16*halDVDE_DVDEDbgSel_SLOT2)<<BUS_STARTBIT) + 0x0019)
#define DVDE_MOD_SLOT2_mod_sram_wr_add0a                    (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_MOD + 16*halDVDE_DVDEDbgSel_SLOT2)<<BUS_STARTBIT) + 0x0018)
#define DVDE_MOD_SLOT2_dvdeval_state3                       (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_MOD + 16*halDVDE_DVDEDbgSel_SLOT2)<<BUS_STARTBIT) + 0x0017)
#define DVDE_MOD_SLOT2_dvdeval_state2                       (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_MOD + 16*halDVDE_DVDEDbgSel_SLOT2)<<BUS_STARTBIT) + 0x0016)
#define DVDE_MOD_SLOT2_dvdeval_state1                       (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_MOD + 16*halDVDE_DVDEDbgSel_SLOT2)<<BUS_STARTBIT) + 0x0015)
#define DVDE_MOD_SLOT2_dvdeval_state0                       (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_MOD + 16*halDVDE_DVDEDbgSel_SLOT2)<<BUS_STARTBIT) + 0x0014)
#define DVDE_MOD_SLOT2_dvdproc_state3                       (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_MOD + 16*halDVDE_DVDEDbgSel_SLOT2)<<BUS_STARTBIT) + 0x0013)
#define DVDE_MOD_SLOT2_dvdproc_state2                       (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_MOD + 16*halDVDE_DVDEDbgSel_SLOT2)<<BUS_STARTBIT) + 0x0012)
#define DVDE_MOD_SLOT2_dvdproc_state1                       (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_MOD + 16*halDVDE_DVDEDbgSel_SLOT2)<<BUS_STARTBIT) + 0x0011)
#define DVDE_MOD_SLOT2_dvdproc_state0                       (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_MOD + 16*halDVDE_DVDEDbgSel_SLOT2)<<BUS_STARTBIT) + 0x0010)
#define DVDE_MOD_SLOT2_cur_state_ws_interf2                 (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_MOD + 16*halDVDE_DVDEDbgSel_SLOT2)<<BUS_STARTBIT) + 0x000F)
#define DVDE_MOD_SLOT2_cur_state_ws_interf1                 (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_MOD + 16*halDVDE_DVDEDbgSel_SLOT2)<<BUS_STARTBIT) + 0x000E)
#define DVDE_MOD_SLOT2_cur_state_ws_interf0                 (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_MOD + 16*halDVDE_DVDEDbgSel_SLOT2)<<BUS_STARTBIT) + 0x000D)
#define DVDE_MOD_SLOT2_sy_write_gate                        (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_MOD + 16*halDVDE_DVDEDbgSel_SLOT2)<<BUS_STARTBIT) + 0x000C)
#define DVDE_MOD_SLOT2_extra_data_cnt3                      (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_MOD + 16*halDVDE_DVDEDbgSel_SLOT2)<<BUS_STARTBIT) + 0x000B)
#define DVDE_MOD_SLOT2_extra_data_cnt2                      (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_MOD + 16*halDVDE_DVDEDbgSel_SLOT2)<<BUS_STARTBIT) + 0x000A)
#define DVDE_MOD_SLOT2_extra_data_cnt1                      (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_MOD + 16*halDVDE_DVDEDbgSel_SLOT2)<<BUS_STARTBIT) + 0x0009)
#define DVDE_MOD_SLOT2_extra_data_cnt0                      (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_MOD + 16*halDVDE_DVDEDbgSel_SLOT2)<<BUS_STARTBIT) + 0x0008)
#define DVDE_MOD_SLOT2_prefix_cnt2                          (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_MOD + 16*halDVDE_DVDEDbgSel_SLOT2)<<BUS_STARTBIT) + 0x0007)
#define DVDE_MOD_SLOT2_prefix_cnt1                          (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_MOD + 16*halDVDE_DVDEDbgSel_SLOT2)<<BUS_STARTBIT) + 0x0006)
#define DVDE_MOD_SLOT2_prefix_cnt0                          (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_MOD + 16*halDVDE_DVDEDbgSel_SLOT2)<<BUS_STARTBIT) + 0x0005)
#define DVDE_MOD_SLOT2_check_exacwrite_dvdeval              (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_MOD + 16*halDVDE_DVDEDbgSel_SLOT2)<<BUS_STARTBIT) + 0x0004)
#define DVDE_MOD_SLOT2_fifo_status2                         (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_MOD + 16*halDVDE_DVDEDbgSel_SLOT2)<<BUS_STARTBIT) + 0x0003)
#define DVDE_MOD_SLOT2_fifo_status1                         (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_MOD + 16*halDVDE_DVDEDbgSel_SLOT2)<<BUS_STARTBIT) + 0x0002)
#define DVDE_MOD_SLOT2_fifo_status0                         (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_MOD + 16*halDVDE_DVDEDbgSel_SLOT2)<<BUS_STARTBIT) + 0x0001)
#define DVDE_MOD_SLOT2_ldfifo_and_addrmatch_or_wsfifo_rdinc (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_MOD + 16*halDVDE_DVDEDbgSel_SLOT2)<<BUS_STARTBIT) + 0x0000)
//DVDE_MOD SLOT3
#define DVDE_MOD_SLOT3_ws_data3                             (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_MOD + 16*halDVDE_DVDEDbgSel_SLOT3)<<BUS_STARTBIT) + 0x002F)
#define DVDE_MOD_SLOT3_ws_data2                             (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_MOD + 16*halDVDE_DVDEDbgSel_SLOT3)<<BUS_STARTBIT) + 0x002E)
#define DVDE_MOD_SLOT3_ws_data1                             (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_MOD + 16*halDVDE_DVDEDbgSel_SLOT3)<<BUS_STARTBIT) + 0x002D)
#define DVDE_MOD_SLOT3_ws_data0                             (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_MOD + 16*halDVDE_DVDEDbgSel_SLOT3)<<BUS_STARTBIT) + 0x002C)
#define DVDE_MOD_SLOT3_random_t_13                          (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_MOD + 16*halDVDE_DVDEDbgSel_SLOT3)<<BUS_STARTBIT) + 0x002B)
#define DVDE_MOD_SLOT3_random_t_12                          (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_MOD + 16*halDVDE_DVDEDbgSel_SLOT3)<<BUS_STARTBIT) + 0x002A)
#define DVDE_MOD_SLOT3_random_t_11                          (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_MOD + 16*halDVDE_DVDEDbgSel_SLOT3)<<BUS_STARTBIT) + 0x0029)
#define DVDE_MOD_SLOT3_random_t_10                          (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_MOD + 16*halDVDE_DVDEDbgSel_SLOT3)<<BUS_STARTBIT) + 0x0028)
#define DVDE_MOD_SLOT3_random_t_23                          (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_MOD + 16*halDVDE_DVDEDbgSel_SLOT3)<<BUS_STARTBIT) + 0x0027)
#define DVDE_MOD_SLOT3_random_t_22                          (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_MOD + 16*halDVDE_DVDEDbgSel_SLOT3)<<BUS_STARTBIT) + 0x0026)
#define DVDE_MOD_SLOT3_random_t_21                          (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_MOD + 16*halDVDE_DVDEDbgSel_SLOT3)<<BUS_STARTBIT) + 0x0025)
#define DVDE_MOD_SLOT3_random_t_20                          (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_MOD + 16*halDVDE_DVDEDbgSel_SLOT3)<<BUS_STARTBIT) + 0x0024)
#define DVDE_MOD_SLOT3_dsv_count3                           (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_MOD + 16*halDVDE_DVDEDbgSel_SLOT3)<<BUS_STARTBIT) + 0x0023)
#define DVDE_MOD_SLOT3_dsv_count2                           (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_MOD + 16*halDVDE_DVDEDbgSel_SLOT3)<<BUS_STARTBIT) + 0x0022)
#define DVDE_MOD_SLOT3_dsv_count1                           (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_MOD + 16*halDVDE_DVDEDbgSel_SLOT3)<<BUS_STARTBIT) + 0x0021)
#define DVDE_MOD_SLOT3_dsv_count0                           (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_MOD + 16*halDVDE_DVDEDbgSel_SLOT3)<<BUS_STARTBIT) + 0x0020)
#define DVDE_MOD_SLOT3_random_t_13a                         (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_MOD + 16*halDVDE_DVDEDbgSel_SLOT3)<<BUS_STARTBIT) + 0x001F)
#define DVDE_MOD_SLOT3_random_t_12a                         (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_MOD + 16*halDVDE_DVDEDbgSel_SLOT3)<<BUS_STARTBIT) + 0x001E)
#define DVDE_MOD_SLOT3_random_t_11a                         (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_MOD + 16*halDVDE_DVDEDbgSel_SLOT3)<<BUS_STARTBIT) + 0x001D)
#define DVDE_MOD_SLOT3_random_t_10a                         (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_MOD + 16*halDVDE_DVDEDbgSel_SLOT3)<<BUS_STARTBIT) + 0x001C)
#define DVDE_MOD_SLOT3_random_t_13b                         (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_MOD + 16*halDVDE_DVDEDbgSel_SLOT3)<<BUS_STARTBIT) + 0x001B)
#define DVDE_MOD_SLOT3_random_t_12b                         (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_MOD + 16*halDVDE_DVDEDbgSel_SLOT3)<<BUS_STARTBIT) + 0x001A)
#define DVDE_MOD_SLOT3_random_t_11b                         (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_MOD + 16*halDVDE_DVDEDbgSel_SLOT3)<<BUS_STARTBIT) + 0x0019)
#define DVDE_MOD_SLOT3_random_t_10b                         (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_MOD + 16*halDVDE_DVDEDbgSel_SLOT3)<<BUS_STARTBIT) + 0x0018)
#define DVDE_MOD_SLOT3_next_mark_length3                    (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_MOD + 16*halDVDE_DVDEDbgSel_SLOT3)<<BUS_STARTBIT) + 0x0017)
#define DVDE_MOD_SLOT3_next_mark_length2                    (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_MOD + 16*halDVDE_DVDEDbgSel_SLOT3)<<BUS_STARTBIT) + 0x0016)
#define DVDE_MOD_SLOT3_next_mark_length1                    (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_MOD + 16*halDVDE_DVDEDbgSel_SLOT3)<<BUS_STARTBIT) + 0x0015)
#define DVDE_MOD_SLOT3_next_mark_length0                    (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_MOD + 16*halDVDE_DVDEDbgSel_SLOT3)<<BUS_STARTBIT) + 0x0014)
#define DVDE_MOD_SLOT3_next_space_length3                   (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_MOD + 16*halDVDE_DVDEDbgSel_SLOT3)<<BUS_STARTBIT) + 0x0013)
#define DVDE_MOD_SLOT3_next_space_length2                   (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_MOD + 16*halDVDE_DVDEDbgSel_SLOT3)<<BUS_STARTBIT) + 0x0012)
#define DVDE_MOD_SLOT3_next_space_length1                   (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_MOD + 16*halDVDE_DVDEDbgSel_SLOT3)<<BUS_STARTBIT) + 0x0011)
#define DVDE_MOD_SLOT3_next_space_length0                   (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_MOD + 16*halDVDE_DVDEDbgSel_SLOT3)<<BUS_STARTBIT) + 0x0010)
#define DVDE_MOD_SLOT3_mark_bit_cnt3                        (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_MOD + 16*halDVDE_DVDEDbgSel_SLOT3)<<BUS_STARTBIT) + 0x000F)
#define DVDE_MOD_SLOT3_mark_bit_cnt2                        (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_MOD + 16*halDVDE_DVDEDbgSel_SLOT3)<<BUS_STARTBIT) + 0x000E)
#define DVDE_MOD_SLOT3_mark_bit_cnt1                        (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_MOD + 16*halDVDE_DVDEDbgSel_SLOT3)<<BUS_STARTBIT) + 0x000D)
#define DVDE_MOD_SLOT3_mark_bit_cnt0                        (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_MOD + 16*halDVDE_DVDEDbgSel_SLOT3)<<BUS_STARTBIT) + 0x000C)
#define DVDE_MOD_SLOT3_space_bit_cnt3                       (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_MOD + 16*halDVDE_DVDEDbgSel_SLOT3)<<BUS_STARTBIT) + 0x000B)
#define DVDE_MOD_SLOT3_space_bit_cnt2                       (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_MOD + 16*halDVDE_DVDEDbgSel_SLOT3)<<BUS_STARTBIT) + 0x000A)
#define DVDE_MOD_SLOT3_space_bit_cnt1                       (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_MOD + 16*halDVDE_DVDEDbgSel_SLOT3)<<BUS_STARTBIT) + 0x0009)
#define DVDE_MOD_SLOT3_space_bit_cnt0                       (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_MOD + 16*halDVDE_DVDEDbgSel_SLOT3)<<BUS_STARTBIT) + 0x0008)
#define DVDE_MOD_SLOT3_w4_random_g                          (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_MOD + 16*halDVDE_DVDEDbgSel_SLOT3)<<BUS_STARTBIT) + 0x0007)
#define DVDE_MOD_SLOT3_random_t_state2                      (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_MOD + 16*halDVDE_DVDEDbgSel_SLOT3)<<BUS_STARTBIT) + 0x0006)
#define DVDE_MOD_SLOT3_random_t_state1                      (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_MOD + 16*halDVDE_DVDEDbgSel_SLOT3)<<BUS_STARTBIT) + 0x0005)
#define DVDE_MOD_SLOT3_random_t_state0                      (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_MOD + 16*halDVDE_DVDEDbgSel_SLOT3)<<BUS_STARTBIT) + 0x0004)
#define DVDE_MOD_SLOT3_random_data_wsfifo3                  (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_MOD + 16*halDVDE_DVDEDbgSel_SLOT3)<<BUS_STARTBIT) + 0x0003)
#define DVDE_MOD_SLOT3_random_data_wsfifo2                  (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_MOD + 16*halDVDE_DVDEDbgSel_SLOT3)<<BUS_STARTBIT) + 0x0002)
#define DVDE_MOD_SLOT3_random_data_wsfifo1                  (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_MOD + 16*halDVDE_DVDEDbgSel_SLOT3)<<BUS_STARTBIT) + 0x0001)
#define DVDE_MOD_SLOT3_random_data_wsfifo0                  (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_MOD + 16*halDVDE_DVDEDbgSel_SLOT3)<<BUS_STARTBIT) + 0x0000)
//DVDE_MOD SLOT4
#define DVDE_MOD_SLOT4_next_space_length3                   (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_MOD + 16*halDVDE_DVDEDbgSel_SLOT4)<<BUS_STARTBIT) + 0x002F)
#define DVDE_MOD_SLOT4_next_space_length2                   (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_MOD + 16*halDVDE_DVDEDbgSel_SLOT4)<<BUS_STARTBIT) + 0x002E)
#define DVDE_MOD_SLOT4_next_space_length1                   (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_MOD + 16*halDVDE_DVDEDbgSel_SLOT4)<<BUS_STARTBIT) + 0x002D)
#define DVDE_MOD_SLOT4_next_space_length0                   (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_MOD + 16*halDVDE_DVDEDbgSel_SLOT4)<<BUS_STARTBIT) + 0x002C)
#define DVDE_MOD_SLOT4_mark_bit_cnt3                        (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_MOD + 16*halDVDE_DVDEDbgSel_SLOT4)<<BUS_STARTBIT) + 0x002B)
#define DVDE_MOD_SLOT4_mark_bit_cnt2                        (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_MOD + 16*halDVDE_DVDEDbgSel_SLOT4)<<BUS_STARTBIT) + 0x002A)
#define DVDE_MOD_SLOT4_mark_bit_cnt1                        (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_MOD + 16*halDVDE_DVDEDbgSel_SLOT4)<<BUS_STARTBIT) + 0x0029)
#define DVDE_MOD_SLOT4_mark_bit_cnt0                        (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_MOD + 16*halDVDE_DVDEDbgSel_SLOT4)<<BUS_STARTBIT) + 0x0028)
#define DVDE_MOD_SLOT4_space_bit_cnt3                       (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_MOD + 16*halDVDE_DVDEDbgSel_SLOT4)<<BUS_STARTBIT) + 0x0027)
#define DVDE_MOD_SLOT4_space_bit_cnt2                       (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_MOD + 16*halDVDE_DVDEDbgSel_SLOT4)<<BUS_STARTBIT) + 0x0026)
#define DVDE_MOD_SLOT4_space_bit_cnt1                       (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_MOD + 16*halDVDE_DVDEDbgSel_SLOT4)<<BUS_STARTBIT) + 0x0025)
#define DVDE_MOD_SLOT4_space_bit_cnt0                       (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_MOD + 16*halDVDE_DVDEDbgSel_SLOT4)<<BUS_STARTBIT) + 0x0024)
#define DVDE_MOD_SLOT4_w4_random_g                          (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_MOD + 16*halDVDE_DVDEDbgSel_SLOT4)<<BUS_STARTBIT) + 0x0023)
#define DVDE_MOD_SLOT4_random_t_state2                      (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_MOD + 16*halDVDE_DVDEDbgSel_SLOT4)<<BUS_STARTBIT) + 0x0022)
#define DVDE_MOD_SLOT4_random_t_state1                      (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_MOD + 16*halDVDE_DVDEDbgSel_SLOT4)<<BUS_STARTBIT) + 0x0021)
#define DVDE_MOD_SLOT4_random_t_state0                      (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_MOD + 16*halDVDE_DVDEDbgSel_SLOT4)<<BUS_STARTBIT) + 0x0020)
#define DVDE_MOD_SLOT4_random_data_wsfifo3                  (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_MOD + 16*halDVDE_DVDEDbgSel_SLOT4)<<BUS_STARTBIT) + 0x001F)
#define DVDE_MOD_SLOT4_random_data_wsfifo2                  (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_MOD + 16*halDVDE_DVDEDbgSel_SLOT4)<<BUS_STARTBIT) + 0x001E)
#define DVDE_MOD_SLOT4_random_data_wsfifo1                  (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_MOD + 16*halDVDE_DVDEDbgSel_SLOT4)<<BUS_STARTBIT) + 0x001D)
#define DVDE_MOD_SLOT4_random_data_wsfifo0                  (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_MOD + 16*halDVDE_DVDEDbgSel_SLOT4)<<BUS_STARTBIT) + 0x001C)
#define DVDE_MOD_SLOT4_rand_nibble3                         (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_MOD + 16*halDVDE_DVDEDbgSel_SLOT4)<<BUS_STARTBIT) + 0x001B)
#define DVDE_MOD_SLOT4_rand_nibble2                         (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_MOD + 16*halDVDE_DVDEDbgSel_SLOT4)<<BUS_STARTBIT) + 0x001A)
#define DVDE_MOD_SLOT4_rand_nibble1                         (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_MOD + 16*halDVDE_DVDEDbgSel_SLOT4)<<BUS_STARTBIT) + 0x0019)
#define DVDE_MOD_SLOT4_rand_nibble0                         (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_MOD + 16*halDVDE_DVDEDbgSel_SLOT4)<<BUS_STARTBIT) + 0x0018)
#define DVDE_MOD_SLOT4_sync_lsb_high                        (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_MOD + 16*halDVDE_DVDEDbgSel_SLOT4)<<BUS_STARTBIT) + 0x0017)
#define DVDE_MOD_SLOT4_data_lsb_high                        (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_MOD + 16*halDVDE_DVDEDbgSel_SLOT4)<<BUS_STARTBIT) + 0x0016)
#define DVDE_MOD_SLOT4_l_pre_data_done                      (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_MOD + 16*halDVDE_DVDEDbgSel_SLOT4)<<BUS_STARTBIT) + 0x0015)
#define DVDE_MOD_SLOT4_l_main_data_done                     (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_MOD + 16*halDVDE_DVDEDbgSel_SLOT4)<<BUS_STARTBIT) + 0x0014)
#define DVDE_MOD_SLOT4_channel_8_bit_cnt3                   (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_MOD + 16*halDVDE_DVDEDbgSel_SLOT4)<<BUS_STARTBIT) + 0x0013)
#define DVDE_MOD_SLOT4_channel_8_bit_cnt2                   (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_MOD + 16*halDVDE_DVDEDbgSel_SLOT4)<<BUS_STARTBIT) + 0x0012)
#define DVDE_MOD_SLOT4_channel_8_bit_cnt1                   (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_MOD + 16*halDVDE_DVDEDbgSel_SLOT4)<<BUS_STARTBIT) + 0x0011)
#define DVDE_MOD_SLOT4_channel_8_bit_cnt0                   (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_MOD + 16*halDVDE_DVDEDbgSel_SLOT4)<<BUS_STARTBIT) + 0x0010)
#define DVDE_MOD_SLOT4_channel_8_bit_cnt7                   (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_MOD + 16*halDVDE_DVDEDbgSel_SLOT4)<<BUS_STARTBIT) + 0x000F)
#define DVDE_MOD_SLOT4_channel_8_bit_cnt6                   (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_MOD + 16*halDVDE_DVDEDbgSel_SLOT4)<<BUS_STARTBIT) + 0x000E)
#define DVDE_MOD_SLOT4_channel_8_bit_cnt5                   (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_MOD + 16*halDVDE_DVDEDbgSel_SLOT4)<<BUS_STARTBIT) + 0x000D)
#define DVDE_MOD_SLOT4_channel_8_bit_cnt4                   (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_MOD + 16*halDVDE_DVDEDbgSel_SLOT4)<<BUS_STARTBIT) + 0x000C)
#define DVDE_MOD_SLOT4_channel_8_bit_cnt11                  (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_MOD + 16*halDVDE_DVDEDbgSel_SLOT4)<<BUS_STARTBIT) + 0x000B)
#define DVDE_MOD_SLOT4_channel_8_bit_cnt10                  (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_MOD + 16*halDVDE_DVDEDbgSel_SLOT4)<<BUS_STARTBIT) + 0x000A)
#define DVDE_MOD_SLOT4_channel_8_bit_cnt9                   (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_MOD + 16*halDVDE_DVDEDbgSel_SLOT4)<<BUS_STARTBIT) + 0x0009)
#define DVDE_MOD_SLOT4_channel_8_bit_cnt8                   (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_MOD + 16*halDVDE_DVDEDbgSel_SLOT4)<<BUS_STARTBIT) + 0x0008)
#define DVDE_MOD_SLOT4_hdeval_state3                        (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_MOD + 16*halDVDE_DVDEDbgSel_SLOT4)<<BUS_STARTBIT) + 0x0007)
#define DVDE_MOD_SLOT4_hdeval_state2                        (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_MOD + 16*halDVDE_DVDEDbgSel_SLOT4)<<BUS_STARTBIT) + 0x0006)
#define DVDE_MOD_SLOT4_hdeval_state1                        (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_MOD + 16*halDVDE_DVDEDbgSel_SLOT4)<<BUS_STARTBIT) + 0x0005)
#define DVDE_MOD_SLOT4_hdeval_state0                        (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_MOD + 16*halDVDE_DVDEDbgSel_SLOT4)<<BUS_STARTBIT) + 0x0004)
#define DVDE_MOD_SLOT4_hdproc_state3                        (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_MOD + 16*halDVDE_DVDEDbgSel_SLOT4)<<BUS_STARTBIT) + 0x0003)
#define DVDE_MOD_SLOT4_hdproc_state2                        (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_MOD + 16*halDVDE_DVDEDbgSel_SLOT4)<<BUS_STARTBIT) + 0x0002)
#define DVDE_MOD_SLOT4_hdproc_state1                        (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_MOD + 16*halDVDE_DVDEDbgSel_SLOT4)<<BUS_STARTBIT) + 0x0001)
#define DVDE_MOD_SLOT4_hdproc_state0                        (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_MOD + 16*halDVDE_DVDEDbgSel_SLOT4)<<BUS_STARTBIT) + 0x0000)
//DVDE_ECC SLOT0
#define DVDE_ECC_SLOT0_id_sysclk_and_reset_n                (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_ECC + 16*halDVDE_DVDEDbgSel_SLOT0)<<BUS_STARTBIT) + 0x002F)
#define DVDE_ECC_SLOT0_id_state2                            (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_ECC + 16*halDVDE_DVDEDbgSel_SLOT0)<<BUS_STARTBIT) + 0x002E)
#define DVDE_ECC_SLOT0_id_state1                            (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_ECC + 16*halDVDE_DVDEDbgSel_SLOT0)<<BUS_STARTBIT) + 0x002D)
#define DVDE_ECC_SLOT0_id_state0                            (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_ECC + 16*halDVDE_DVDEDbgSel_SLOT0)<<BUS_STARTBIT) + 0x002C)
#define DVDE_ECC_SLOT0_id_start                             (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_ECC + 16*halDVDE_DVDEDbgSel_SLOT0)<<BUS_STARTBIT) + 0x002B)
#define DVDE_ECC_SLOT0_id_sel_id                            (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_ECC + 16*halDVDE_DVDEDbgSel_SLOT0)<<BUS_STARTBIT) + 0x002A)
#define DVDE_ECC_SLOT0_id_inc_sec_num                       (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_ECC + 16*halDVDE_DVDEDbgSel_SLOT0)<<BUS_STARTBIT) + 0x0029)
#define DVDE_ECC_SLOT0_id_im_id_ack                         (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_ECC + 16*halDVDE_DVDEDbgSel_SLOT0)<<BUS_STARTBIT) + 0x0028)
#define DVDE_ECC_SLOT0_id_ecc_data7                         (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_ECC + 16*halDVDE_DVDEDbgSel_SLOT0)<<BUS_STARTBIT) + 0x0027)
#define DVDE_ECC_SLOT0_id_ecc_data6                         (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_ECC + 16*halDVDE_DVDEDbgSel_SLOT0)<<BUS_STARTBIT) + 0x0026)
#define DVDE_ECC_SLOT0_id_ecc_data5                         (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_ECC + 16*halDVDE_DVDEDbgSel_SLOT0)<<BUS_STARTBIT) + 0x0025)
#define DVDE_ECC_SLOT0_id_ecc_data4                         (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_ECC + 16*halDVDE_DVDEDbgSel_SLOT0)<<BUS_STARTBIT) + 0x0024)
#define DVDE_ECC_SLOT0_id_ecc_data3                         (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_ECC + 16*halDVDE_DVDEDbgSel_SLOT0)<<BUS_STARTBIT) + 0x0023)
#define DVDE_ECC_SLOT0_id_ecc_data2                         (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_ECC + 16*halDVDE_DVDEDbgSel_SLOT0)<<BUS_STARTBIT) + 0x0022)
#define DVDE_ECC_SLOT0_id_ecc_data1                         (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_ECC + 16*halDVDE_DVDEDbgSel_SLOT0)<<BUS_STARTBIT) + 0x0021)
#define DVDE_ECC_SLOT0_id_ecc_data0                         (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_ECC + 16*halDVDE_DVDEDbgSel_SLOT0)<<BUS_STARTBIT) + 0x0020)
#define DVDE_ECC_SLOT0_im_state1                            (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_ECC + 16*halDVDE_DVDEDbgSel_SLOT0)<<BUS_STARTBIT) + 0x001F)
#define DVDE_ECC_SLOT0_im_state0                            (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_ECC + 16*halDVDE_DVDEDbgSel_SLOT0)<<BUS_STARTBIT) + 0x001E)
#define DVDE_ECC_SLOT0_dwm_b2                               (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_ECC + 16*halDVDE_DVDEDbgSel_SLOT0)<<BUS_STARTBIT) + 0x001D)
#define DVDE_ECC_SLOT0_dwm_b1                               (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_ECC + 16*halDVDE_DVDEDbgSel_SLOT0)<<BUS_STARTBIT) + 0x001C)
#define DVDE_ECC_SLOT0_sel_cprmai                           (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_ECC + 16*halDVDE_DVDEDbgSel_SLOT0)<<BUS_STARTBIT) + 0x001B)
#define DVDE_ECC_SLOT0_rd_im_out1                           (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_ECC + 16*halDVDE_DVDEDbgSel_SLOT0)<<BUS_STARTBIT) + 0x001A)
#define DVDE_ECC_SLOT0_rd_im_out0                           (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_ECC + 16*halDVDE_DVDEDbgSel_SLOT0)<<BUS_STARTBIT) + 0x0019)
#define DVDE_ECC_SLOT0_inc_colcnt                           (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_ECC + 16*halDVDE_DVDEDbgSel_SLOT0)<<BUS_STARTBIT) + 0x0018)
#define DVDE_ECC_SLOT0_edc_din7                             (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_ECC + 16*halDVDE_DVDEDbgSel_SLOT0)<<BUS_STARTBIT) + 0x0017)
#define DVDE_ECC_SLOT0_edc_din6                             (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_ECC + 16*halDVDE_DVDEDbgSel_SLOT0)<<BUS_STARTBIT) + 0x0016)
#define DVDE_ECC_SLOT0_edc_din5                             (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_ECC + 16*halDVDE_DVDEDbgSel_SLOT0)<<BUS_STARTBIT) + 0x0015)
#define DVDE_ECC_SLOT0_edc_din4                             (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_ECC + 16*halDVDE_DVDEDbgSel_SLOT0)<<BUS_STARTBIT) + 0x0014)
#define DVDE_ECC_SLOT0_edc_din3                             (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_ECC + 16*halDVDE_DVDEDbgSel_SLOT0)<<BUS_STARTBIT) + 0x0013)
#define DVDE_ECC_SLOT0_edc_din2                             (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_ECC + 16*halDVDE_DVDEDbgSel_SLOT0)<<BUS_STARTBIT) + 0x0012)
#define DVDE_ECC_SLOT0_edc_din1                             (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_ECC + 16*halDVDE_DVDEDbgSel_SLOT0)<<BUS_STARTBIT) + 0x0011)
#define DVDE_ECC_SLOT0_edc_din0                             (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_ECC + 16*halDVDE_DVDEDbgSel_SLOT0)<<BUS_STARTBIT) + 0x0010)
#define DVDE_ECC_SLOT0_im_rdy                               (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_ECC + 16*halDVDE_DVDEDbgSel_SLOT0)<<BUS_STARTBIT) + 0x000F)
#define DVDE_ECC_SLOT0_im_id_ack                            (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_ECC + 16*halDVDE_DVDEDbgSel_SLOT0)<<BUS_STARTBIT) + 0x000E)
#define DVDE_ECC_SLOT0_im_if_ack                            (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_ECC + 16*halDVDE_DVDEDbgSel_SLOT0)<<BUS_STARTBIT) + 0x000D)
#define DVDE_ECC_SLOT0_im_ack                               (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_ECC + 16*halDVDE_DVDEDbgSel_SLOT0)<<BUS_STARTBIT) + 0x000C)
#define DVDE_ECC_SLOT0_pi_im_ack                            (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_ECC + 16*halDVDE_DVDEDbgSel_SLOT0)<<BUS_STARTBIT) + 0x000B)
#define DVDE_ECC_SLOT0_sel_im_out                           (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_ECC + 16*halDVDE_DVDEDbgSel_SLOT0)<<BUS_STARTBIT) + 0x000A)
#define DVDE_ECC_SLOT0_im_colcnt1                           (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_ECC + 16*halDVDE_DVDEDbgSel_SLOT0)<<BUS_STARTBIT) + 0x0009)
#define DVDE_ECC_SLOT0_im_colcnt0                           (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_ECC + 16*halDVDE_DVDEDbgSel_SLOT0)<<BUS_STARTBIT) + 0x0008)
#define DVDE_ECC_SLOT0_im_data_out7                         (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_ECC + 16*halDVDE_DVDEDbgSel_SLOT0)<<BUS_STARTBIT) + 0x0007)
#define DVDE_ECC_SLOT0_im_data_out6                         (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_ECC + 16*halDVDE_DVDEDbgSel_SLOT0)<<BUS_STARTBIT) + 0x0006)
#define DVDE_ECC_SLOT0_im_data_out5                         (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_ECC + 16*halDVDE_DVDEDbgSel_SLOT0)<<BUS_STARTBIT) + 0x0005)
#define DVDE_ECC_SLOT0_im_data_out4                         (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_ECC + 16*halDVDE_DVDEDbgSel_SLOT0)<<BUS_STARTBIT) + 0x0004)
#define DVDE_ECC_SLOT0_im_data_out3                         (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_ECC + 16*halDVDE_DVDEDbgSel_SLOT0)<<BUS_STARTBIT) + 0x0003)
#define DVDE_ECC_SLOT0_im_data_out2                         (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_ECC + 16*halDVDE_DVDEDbgSel_SLOT0)<<BUS_STARTBIT) + 0x0002)
#define DVDE_ECC_SLOT0_im_data_out1                         (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_ECC + 16*halDVDE_DVDEDbgSel_SLOT0)<<BUS_STARTBIT) + 0x0001)
#define DVDE_ECC_SLOT0_im_data_out0                         (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_ECC + 16*halDVDE_DVDEDbgSel_SLOT0)<<BUS_STARTBIT) + 0x0000)
//DVDE_ECC SLOT1
#define DVDE_ECC_SLOT1_pi_state1                            (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_ECC + 16*halDVDE_DVDEDbgSel_SLOT1)<<BUS_STARTBIT) + 0x002F)
#define DVDE_ECC_SLOT1_pi_state0                            (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_ECC + 16*halDVDE_DVDEDbgSel_SLOT1)<<BUS_STARTBIT) + 0x002E)
#define DVDE_ECC_SLOT1_pi_rdy                               (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_ECC + 16*halDVDE_DVDEDbgSel_SLOT1)<<BUS_STARTBIT) + 0x002D)
#define DVDE_ECC_SLOT1_pi_idle                              (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_ECC + 16*halDVDE_DVDEDbgSel_SLOT1)<<BUS_STARTBIT) + 0x002C)
#define DVDE_ECC_SLOT1_pi_start_ecc                         (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_ECC + 16*halDVDE_DVDEDbgSel_SLOT1)<<BUS_STARTBIT) + 0x002B)
#define DVDE_ECC_SLOT1_start_po                             (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_ECC + 16*halDVDE_DVDEDbgSel_SLOT1)<<BUS_STARTBIT) + 0x002A)
#define DVDE_ECC_SLOT1_pi_sel_pi_out                        (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_ECC + 16*halDVDE_DVDEDbgSel_SLOT1)<<BUS_STARTBIT) + 0x0029)
#define DVDE_ECC_SLOT1_po_pi_ack                            (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_ECC + 16*halDVDE_DVDEDbgSel_SLOT1)<<BUS_STARTBIT) + 0x0028)
#define DVDE_ECC_SLOT1_pi_data_out7                         (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_ECC + 16*halDVDE_DVDEDbgSel_SLOT1)<<BUS_STARTBIT) + 0x0027)
#define DVDE_ECC_SLOT1_pi_data_out6                         (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_ECC + 16*halDVDE_DVDEDbgSel_SLOT1)<<BUS_STARTBIT) + 0x0026)
#define DVDE_ECC_SLOT1_pi_data_out5                         (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_ECC + 16*halDVDE_DVDEDbgSel_SLOT1)<<BUS_STARTBIT) + 0x0025)
#define DVDE_ECC_SLOT1_pi_data_out4                         (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_ECC + 16*halDVDE_DVDEDbgSel_SLOT1)<<BUS_STARTBIT) + 0x0024)
#define DVDE_ECC_SLOT1_pi_data_out3                         (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_ECC + 16*halDVDE_DVDEDbgSel_SLOT1)<<BUS_STARTBIT) + 0x0023)
#define DVDE_ECC_SLOT1_pi_data_out2                         (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_ECC + 16*halDVDE_DVDEDbgSel_SLOT1)<<BUS_STARTBIT) + 0x0022)
#define DVDE_ECC_SLOT1_pi_data_out1                         (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_ECC + 16*halDVDE_DVDEDbgSel_SLOT1)<<BUS_STARTBIT) + 0x0021)
#define DVDE_ECC_SLOT1_pi_data_out0                         (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_ECC + 16*halDVDE_DVDEDbgSel_SLOT1)<<BUS_STARTBIT) + 0x0020)
#define DVDE_ECC_SLOT1_po_idle                              (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_ECC + 16*halDVDE_DVDEDbgSel_SLOT1)<<BUS_STARTBIT) + 0x001F)
#define DVDE_ECC_SLOT1_ld_po_out                            (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_ECC + 16*halDVDE_DVDEDbgSel_SLOT1)<<BUS_STARTBIT) + 0x001E)
#define DVDE_ECC_SLOT1_sram_web                             (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_ECC + 16*halDVDE_DVDEDbgSel_SLOT1)<<BUS_STARTBIT) + 0x001D)
#define DVDE_ECC_SLOT1_sram_oeb                             (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_ECC + 16*halDVDE_DVDEDbgSel_SLOT1)<<BUS_STARTBIT) + 0x001C)
#define DVDE_ECC_SLOT1_po_chk_req                           (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_ECC + 16*halDVDE_DVDEDbgSel_SLOT1)<<BUS_STARTBIT) + 0x001B)
#define DVDE_ECC_SLOT1_po_chk_rwb                           (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_ECC + 16*halDVDE_DVDEDbgSel_SLOT1)<<BUS_STARTBIT) + 0x001A)
#define DVDE_ECC_SLOT1_clr_last_wr_colcnt                   (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_ECC + 16*halDVDE_DVDEDbgSel_SLOT1)<<BUS_STARTBIT) + 0x0019)
#define DVDE_ECC_SLOT1_clr_last_wr_rowcnt                   (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_ECC + 16*halDVDE_DVDEDbgSel_SLOT1)<<BUS_STARTBIT) + 0x0018)
#define DVDE_ECC_SLOT1_inc_wr_colcnt                        (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_ECC + 16*halDVDE_DVDEDbgSel_SLOT1)<<BUS_STARTBIT) + 0x0017)
#define DVDE_ECC_SLOT1_poc_state2                           (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_ECC + 16*halDVDE_DVDEDbgSel_SLOT1)<<BUS_STARTBIT) + 0x0016)
#define DVDE_ECC_SLOT1_poc_state1                           (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_ECC + 16*halDVDE_DVDEDbgSel_SLOT1)<<BUS_STARTBIT) + 0x0015)
#define DVDE_ECC_SLOT1_poc_state0                           (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_ECC + 16*halDVDE_DVDEDbgSel_SLOT1)<<BUS_STARTBIT) + 0x0014)
#define DVDE_ECC_SLOT1_pod_state3                           (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_ECC + 16*halDVDE_DVDEDbgSel_SLOT1)<<BUS_STARTBIT) + 0x0013)
#define DVDE_ECC_SLOT1_pod_state2                           (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_ECC + 16*halDVDE_DVDEDbgSel_SLOT1)<<BUS_STARTBIT) + 0x0012)
#define DVDE_ECC_SLOT1_pod_state1                           (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_ECC + 16*halDVDE_DVDEDbgSel_SLOT1)<<BUS_STARTBIT) + 0x0011)
#define DVDE_ECC_SLOT1_pod_state0                           (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_ECC + 16*halDVDE_DVDEDbgSel_SLOT1)<<BUS_STARTBIT) + 0x0010)
#define DVDE_ECC_SLOT1_sram_webx                            (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_ECC + 16*halDVDE_DVDEDbgSel_SLOT1)<<BUS_STARTBIT) + 0x000F)
#define DVDE_ECC_SLOT1_sram_data1                           (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_ECC + 16*halDVDE_DVDEDbgSel_SLOT1)<<BUS_STARTBIT) + 0x000E)
#define DVDE_ECC_SLOT1_sram_data0                           (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_ECC + 16*halDVDE_DVDEDbgSel_SLOT1)<<BUS_STARTBIT) + 0x000D)
#define DVDE_ECC_SLOT1_sram_data_d4                         (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_ECC + 16*halDVDE_DVDEDbgSel_SLOT1)<<BUS_STARTBIT) + 0x000C)
#define DVDE_ECC_SLOT1_sram_data_d3                         (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_ECC + 16*halDVDE_DVDEDbgSel_SLOT1)<<BUS_STARTBIT) + 0x000B)
#define DVDE_ECC_SLOT1_sram_data_d2                         (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_ECC + 16*halDVDE_DVDEDbgSel_SLOT1)<<BUS_STARTBIT) + 0x000A)
#define DVDE_ECC_SLOT1_sram_data_d1                         (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_ECC + 16*halDVDE_DVDEDbgSel_SLOT1)<<BUS_STARTBIT) + 0x0009)
#define DVDE_ECC_SLOT1_sram_data_d0                         (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_ECC + 16*halDVDE_DVDEDbgSel_SLOT1)<<BUS_STARTBIT) + 0x0008)
#define DVDE_ECC_SLOT1_sram_addr7                           (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_ECC + 16*halDVDE_DVDEDbgSel_SLOT1)<<BUS_STARTBIT) + 0x0007)
#define DVDE_ECC_SLOT1_sram_addr6                           (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_ECC + 16*halDVDE_DVDEDbgSel_SLOT1)<<BUS_STARTBIT) + 0x0006)
#define DVDE_ECC_SLOT1_sram_addr5                           (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_ECC + 16*halDVDE_DVDEDbgSel_SLOT1)<<BUS_STARTBIT) + 0x0005)
#define DVDE_ECC_SLOT1_sram_addr4                           (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_ECC + 16*halDVDE_DVDEDbgSel_SLOT1)<<BUS_STARTBIT) + 0x0004)
#define DVDE_ECC_SLOT1_sram_addr3                           (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_ECC + 16*halDVDE_DVDEDbgSel_SLOT1)<<BUS_STARTBIT) + 0x0003)
#define DVDE_ECC_SLOT1_sram_addr2                           (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_ECC + 16*halDVDE_DVDEDbgSel_SLOT1)<<BUS_STARTBIT) + 0x0002)
#define DVDE_ECC_SLOT1_sram_addr1                           (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_ECC + 16*halDVDE_DVDEDbgSel_SLOT1)<<BUS_STARTBIT) + 0x0001)
#define DVDE_ECC_SLOT1_sram_addr0                           (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_ECC + 16*halDVDE_DVDEDbgSel_SLOT1)<<BUS_STARTBIT) + 0x0000)
//DVDE_ECC SLOT2
#define DVDE_ECC_SLOT2_memh_empty                           (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_ECC + 16*halDVDE_DVDEDbgSel_SLOT2)<<BUS_STARTBIT) + 0x002F)
#define DVDE_ECC_SLOT2_memh_wr_eb                           (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_ECC + 16*halDVDE_DVDEDbgSel_SLOT2)<<BUS_STARTBIT) + 0x002E)
#define DVDE_ECC_SLOT2_memh_wr_addr4                        (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_ECC + 16*halDVDE_DVDEDbgSel_SLOT2)<<BUS_STARTBIT) + 0x002D)
#define DVDE_ECC_SLOT2_memh_rd_addr4                        (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_ECC + 16*halDVDE_DVDEDbgSel_SLOT2)<<BUS_STARTBIT) + 0x002C)
#define DVDE_ECC_SLOT2_memh_wr_addr3                        (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_ECC + 16*halDVDE_DVDEDbgSel_SLOT2)<<BUS_STARTBIT) + 0x002B)
#define DVDE_ECC_SLOT2_memh_wr_addr2                        (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_ECC + 16*halDVDE_DVDEDbgSel_SLOT2)<<BUS_STARTBIT) + 0x002A)
#define DVDE_ECC_SLOT2_memh_wr_addr1                        (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_ECC + 16*halDVDE_DVDEDbgSel_SLOT2)<<BUS_STARTBIT) + 0x0029)
#define DVDE_ECC_SLOT2_memh_wr_addr0                        (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_ECC + 16*halDVDE_DVDEDbgSel_SLOT2)<<BUS_STARTBIT) + 0x0028)
#define DVDE_ECC_SLOT2_memh_rd_addr3                        (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_ECC + 16*halDVDE_DVDEDbgSel_SLOT2)<<BUS_STARTBIT) + 0x0027)
#define DVDE_ECC_SLOT2_memh_rd_addr2                        (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_ECC + 16*halDVDE_DVDEDbgSel_SLOT2)<<BUS_STARTBIT) + 0x0026)
#define DVDE_ECC_SLOT2_memh_rd_addr1                        (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_ECC + 16*halDVDE_DVDEDbgSel_SLOT2)<<BUS_STARTBIT) + 0x0025)
#define DVDE_ECC_SLOT2_memh_rd_addr0                        (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_ECC + 16*halDVDE_DVDEDbgSel_SLOT2)<<BUS_STARTBIT) + 0x0024)
#define DVDE_ECC_SLOT2_memh_data_q1                         (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_ECC + 16*halDVDE_DVDEDbgSel_SLOT2)<<BUS_STARTBIT) + 0x0023)
#define DVDE_ECC_SLOT2_memh_data_q0                         (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_ECC + 16*halDVDE_DVDEDbgSel_SLOT2)<<BUS_STARTBIT) + 0x0022)
#define DVDE_ECC_SLOT2_memh_wr_hdata1                       (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_ECC + 16*halDVDE_DVDEDbgSel_SLOT2)<<BUS_STARTBIT) + 0x0021)
#define DVDE_ECC_SLOT2_memh_wr_hdata0                       (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_ECC + 16*halDVDE_DVDEDbgSel_SLOT2)<<BUS_STARTBIT) + 0x0020)
#define DVDE_ECC_SLOT2_meme_empty                           (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_ECC + 16*halDVDE_DVDEDbgSel_SLOT2)<<BUS_STARTBIT) + 0x001F)
#define DVDE_ECC_SLOT2_meme_wr_eb                           (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_ECC + 16*halDVDE_DVDEDbgSel_SLOT2)<<BUS_STARTBIT) + 0x001E)
#define DVDE_ECC_SLOT2_meme_wr_addr4                        (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_ECC + 16*halDVDE_DVDEDbgSel_SLOT2)<<BUS_STARTBIT) + 0x001D)
#define DVDE_ECC_SLOT2_edata_wr_cnt4                        (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_ECC + 16*halDVDE_DVDEDbgSel_SLOT2)<<BUS_STARTBIT) + 0x001C)
#define DVDE_ECC_SLOT2_meme_wr_addr3                        (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_ECC + 16*halDVDE_DVDEDbgSel_SLOT2)<<BUS_STARTBIT) + 0x001B)
#define DVDE_ECC_SLOT2_meme_wr_addr2                        (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_ECC + 16*halDVDE_DVDEDbgSel_SLOT2)<<BUS_STARTBIT) + 0x001A)
#define DVDE_ECC_SLOT2_meme_wr_addr1                        (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_ECC + 16*halDVDE_DVDEDbgSel_SLOT2)<<BUS_STARTBIT) + 0x0019)
#define DVDE_ECC_SLOT2_meme_wr_addr0                        (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_ECC + 16*halDVDE_DVDEDbgSel_SLOT2)<<BUS_STARTBIT) + 0x0018)
#define DVDE_ECC_SLOT2_edata_wr_cnt3                        (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_ECC + 16*halDVDE_DVDEDbgSel_SLOT2)<<BUS_STARTBIT) + 0x0017)
#define DVDE_ECC_SLOT2_edata_wr_cnt2                        (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_ECC + 16*halDVDE_DVDEDbgSel_SLOT2)<<BUS_STARTBIT) + 0x0016)
#define DVDE_ECC_SLOT2_edata_wr_cnt1                        (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_ECC + 16*halDVDE_DVDEDbgSel_SLOT2)<<BUS_STARTBIT) + 0x0015)
#define DVDE_ECC_SLOT2_edata_wr_cnt0                        (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_ECC + 16*halDVDE_DVDEDbgSel_SLOT2)<<BUS_STARTBIT) + 0x0014)
#define DVDE_ECC_SLOT2_ec_datawr1                           (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_ECC + 16*halDVDE_DVDEDbgSel_SLOT2)<<BUS_STARTBIT) + 0x0013)
#define DVDE_ECC_SLOT2_ec_datawr0                           (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_ECC + 16*halDVDE_DVDEDbgSel_SLOT2)<<BUS_STARTBIT) + 0x0012)
#define DVDE_ECC_SLOT2_meme_wr_edata1                       (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_ECC + 16*halDVDE_DVDEDbgSel_SLOT2)<<BUS_STARTBIT) + 0x0011)
#define DVDE_ECC_SLOT2_meme_wr_edata0                       (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_ECC + 16*halDVDE_DVDEDbgSel_SLOT2)<<BUS_STARTBIT) + 0x0010)
#define DVDE_ECC_SLOT2_md_block_done                        (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_ECC + 16*halDVDE_DVDEDbgSel_SLOT2)<<BUS_STARTBIT) + 0x000F)
#define DVDE_ECC_SLOT2_md_ws1flg                            (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_ECC + 16*halDVDE_DVDEDbgSel_SLOT2)<<BUS_STARTBIT) + 0x000E)
#define DVDE_ECC_SLOT2_md_ws2flg                            (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_ECC + 16*halDVDE_DVDEDbgSel_SLOT2)<<BUS_STARTBIT) + 0x000D)
#define DVDE_ECC_SLOT2_bf_ack_ec                            (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_ECC + 16*halDVDE_DVDEDbgSel_SLOT2)<<BUS_STARTBIT) + 0x000C)
#define DVDE_ECC_SLOT2_bf_nxword                            (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_ECC + 16*halDVDE_DVDEDbgSel_SLOT2)<<BUS_STARTBIT) + 0x000B)
#define DVDE_ECC_SLOT2_bf_rwdval_ec                         (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_ECC + 16*halDVDE_DVDEDbgSel_SLOT2)<<BUS_STARTBIT) + 0x000A)
#define DVDE_ECC_SLOT2_sy_pre_extra_blk                     (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_ECC + 16*halDVDE_DVDEDbgSel_SLOT2)<<BUS_STARTBIT) + 0x0009)
#define DVDE_ECC_SLOT2_ll_reg_empty                         (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_ECC + 16*halDVDE_DVDEDbgSel_SLOT2)<<BUS_STARTBIT) + 0x0008)
#define DVDE_ECC_SLOT2_ll_rd_til_end_d                      (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_ECC + 16*halDVDE_DVDEDbgSel_SLOT2)<<BUS_STARTBIT) + 0x0007)
#define DVDE_ECC_SLOT2_disable_encoder                      (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_ECC + 16*halDVDE_DVDEDbgSel_SLOT2)<<BUS_STARTBIT) + 0x0006)
#define DVDE_ECC_SLOT2_w4_ec_host_underrun                  (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_ECC + 16*halDVDE_DVDEDbgSel_SLOT2)<<BUS_STARTBIT) + 0x0005)
#define DVDE_ECC_SLOT2_t_first_ecc_blk                      (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_ECC + 16*halDVDE_DVDEDbgSel_SLOT2)<<BUS_STARTBIT) + 0x0004)
#define DVDE_ECC_SLOT2_first_ecc_done                       (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_ECC + 16*halDVDE_DVDEDbgSel_SLOT2)<<BUS_STARTBIT) + 0x0003)
#define DVDE_ECC_SLOT2_ecc_inc_err_p0                       (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_ECC + 16*halDVDE_DVDEDbgSel_SLOT2)<<BUS_STARTBIT) + 0x0002)
#define DVDE_ECC_SLOT2_ec_ecc_inc                           (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_ECC + 16*halDVDE_DVDEDbgSel_SLOT2)<<BUS_STARTBIT) + 0x0001)
#define DVDE_ECC_SLOT2_sysclk                               (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_ECC + 16*halDVDE_DVDEDbgSel_SLOT2)<<BUS_STARTBIT) + 0x0000)
//DVDE_ECC SLOT3
#define DVDE_ECC_SLOT3_rcz_scr_inh                          (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_ECC + 16*halDVDE_DVDEDbgSel_SLOT3)<<BUS_STARTBIT) + 0x002F)
#define DVDE_ECC_SLOT3_rcz_match                            (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_ECC + 16*halDVDE_DVDEDbgSel_SLOT3)<<BUS_STARTBIT) + 0x002E)
#define DVDE_ECC_SLOT3_autopad_cnt_full                     (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_ECC + 16*halDVDE_DVDEDbgSel_SLOT3)<<BUS_STARTBIT) + 0x002D)
#define DVDE_ECC_SLOT3_t_autopad1                           (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_ECC + 16*halDVDE_DVDEDbgSel_SLOT3)<<BUS_STARTBIT) + 0x002C)
#define DVDE_ECC_SLOT3_t_autopad2                           (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_ECC + 16*halDVDE_DVDEDbgSel_SLOT3)<<BUS_STARTBIT) + 0x002B)
#define DVDE_ECC_SLOT3_autopad_match1                       (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_ECC + 16*halDVDE_DVDEDbgSel_SLOT3)<<BUS_STARTBIT) + 0x002A)
#define DVDE_ECC_SLOT3_autopad_match2                       (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_ECC + 16*halDVDE_DVDEDbgSel_SLOT3)<<BUS_STARTBIT) + 0x0029)
#define DVDE_ECC_SLOT3_ec_ecc_done_p                        (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_ECC + 16*halDVDE_DVDEDbgSel_SLOT3)<<BUS_STARTBIT) + 0x0028)
#define DVDE_ECC_SLOT3_sel_dsa                              (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_ECC + 16*halDVDE_DVDEDbgSel_SLOT3)<<BUS_STARTBIT) + 0x0027)
#define DVDE_ECC_SLOT3_l_wcmdst                             (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_ECC + 16*halDVDE_DVDEDbgSel_SLOT3)<<BUS_STARTBIT) + 0x0026)
#define DVDE_ECC_SLOT3_ec_tecc                              (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_ECC + 16*halDVDE_DVDEDbgSel_SLOT3)<<BUS_STARTBIT) + 0x0025)
#define DVDE_ECC_SLOT3_start_ecc0                           (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_ECC + 16*halDVDE_DVDEDbgSel_SLOT3)<<BUS_STARTBIT) + 0x0024)
#define DVDE_ECC_SLOT3_start_ecc1                           (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_ECC + 16*halDVDE_DVDEDbgSel_SLOT3)<<BUS_STARTBIT) + 0x0023)
#define DVDE_ECC_SLOT3_start_ecc                            (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_ECC + 16*halDVDE_DVDEDbgSel_SLOT3)<<BUS_STARTBIT) + 0x0022)
#define DVDE_ECC_SLOT3_ec_llo_end                           (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_ECC + 16*halDVDE_DVDEDbgSel_SLOT3)<<BUS_STARTBIT) + 0x0021)
#define DVDE_ECC_SLOT3_ec_llo_pad_end                       (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_ECC + 16*halDVDE_DVDEDbgSel_SLOT3)<<BUS_STARTBIT) + 0x0020)
#define DVDE_ECC_SLOT3_ec_llo_end_p                         (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_ECC + 16*halDVDE_DVDEDbgSel_SLOT3)<<BUS_STARTBIT) + 0x001F)
#define DVDE_ECC_SLOT3_en_ll_rd                             (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_ECC + 16*halDVDE_DVDEDbgSel_SLOT3)<<BUS_STARTBIT) + 0x001E)
#define DVDE_ECC_SLOT3_ll_rd_til_end                        (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_ECC + 16*halDVDE_DVDEDbgSel_SLOT3)<<BUS_STARTBIT) + 0x001D)
#define DVDE_ECC_SLOT3_head_rd_done                         (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_ECC + 16*halDVDE_DVDEDbgSel_SLOT3)<<BUS_STARTBIT) + 0x001C)
#define DVDE_ECC_SLOT3_swop_wsb12                           (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_ECC + 16*halDVDE_DVDEDbgSel_SLOT3)<<BUS_STARTBIT) + 0x001B)
#define DVDE_ECC_SLOT3_t_head_rd                            (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_ECC + 16*halDVDE_DVDEDbgSel_SLOT3)<<BUS_STARTBIT) + 0x001A)
#define DVDE_ECC_SLOT3_head_rd_req                          (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_ECC + 16*halDVDE_DVDEDbgSel_SLOT3)<<BUS_STARTBIT) + 0x0019)
#define DVDE_ECC_SLOT3_head_rd_donex                        (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_ECC + 16*halDVDE_DVDEDbgSel_SLOT3)<<BUS_STARTBIT) + 0x0018)
#define DVDE_ECC_SLOT3_memh_rd_val                          (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_ECC + 16*halDVDE_DVDEDbgSel_SLOT3)<<BUS_STARTBIT) + 0x0017)
#define DVDE_ECC_SLOT3_ws1flg                               (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_ECC + 16*halDVDE_DVDEDbgSel_SLOT3)<<BUS_STARTBIT) + 0x0016)
#define DVDE_ECC_SLOT3_ws2flg                               (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_ECC + 16*halDVDE_DVDEDbgSel_SLOT3)<<BUS_STARTBIT) + 0x0015)
#define DVDE_ECC_SLOT3_hwrap_sig_val                        (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_ECC + 16*halDVDE_DVDEDbgSel_SLOT3)<<BUS_STARTBIT) + 0x0014)
#define DVDE_ECC_SLOT3_l_hwrap_sig                          (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_ECC + 16*halDVDE_DVDEDbgSel_SLOT3)<<BUS_STARTBIT) + 0x0013)
#define DVDE_ECC_SLOT3_ec_host_underrun_d                   (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_ECC + 16*halDVDE_DVDEDbgSel_SLOT3)<<BUS_STARTBIT) + 0x0012)
#define DVDE_ECC_SLOT3_ec_host_underrun                     (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_ECC + 16*halDVDE_DVDEDbgSel_SLOT3)<<BUS_STARTBIT) + 0x0011)
#define DVDE_ECC_SLOT3_ec_mddone                            (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_ECC + 16*halDVDE_DVDEDbgSel_SLOT3)<<BUS_STARTBIT) + 0x0010)
#define DVDE_ECC_SLOT3_md_block_done                        (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_ECC + 16*halDVDE_DVDEDbgSel_SLOT3)<<BUS_STARTBIT) + 0x000F)
#define DVDE_ECC_SLOT3_md_ws1flg                            (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_ECC + 16*halDVDE_DVDEDbgSel_SLOT3)<<BUS_STARTBIT) + 0x000E)
#define DVDE_ECC_SLOT3_md_ws2flg                            (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_ECC + 16*halDVDE_DVDEDbgSel_SLOT3)<<BUS_STARTBIT) + 0x000D)
#define DVDE_ECC_SLOT3_bf_ack_ec                            (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_ECC + 16*halDVDE_DVDEDbgSel_SLOT3)<<BUS_STARTBIT) + 0x000C)
#define DVDE_ECC_SLOT3_bf_nxword                            (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_ECC + 16*halDVDE_DVDEDbgSel_SLOT3)<<BUS_STARTBIT) + 0x000B)
#define DVDE_ECC_SLOT3_bf_rwdval_ec                         (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_ECC + 16*halDVDE_DVDEDbgSel_SLOT3)<<BUS_STARTBIT) + 0x000A)
#define DVDE_ECC_SLOT3_sy_pre_extra_blk                     (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_ECC + 16*halDVDE_DVDEDbgSel_SLOT3)<<BUS_STARTBIT) + 0x0009)
#define DVDE_ECC_SLOT3_ll_reg_empty                         (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_ECC + 16*halDVDE_DVDEDbgSel_SLOT3)<<BUS_STARTBIT) + 0x0008)
#define DVDE_ECC_SLOT3_ll_rd_til_end_d                      (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_ECC + 16*halDVDE_DVDEDbgSel_SLOT3)<<BUS_STARTBIT) + 0x0007)
#define DVDE_ECC_SLOT3_disable_encoder                      (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_ECC + 16*halDVDE_DVDEDbgSel_SLOT3)<<BUS_STARTBIT) + 0x0006)
#define DVDE_ECC_SLOT3_w4_ec_host_underrun                  (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_ECC + 16*halDVDE_DVDEDbgSel_SLOT3)<<BUS_STARTBIT) + 0x0005)
#define DVDE_ECC_SLOT3_t_first_ecc_blk                      (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_ECC + 16*halDVDE_DVDEDbgSel_SLOT3)<<BUS_STARTBIT) + 0x0004)
#define DVDE_ECC_SLOT3_first_ecc_done                       (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_ECC + 16*halDVDE_DVDEDbgSel_SLOT3)<<BUS_STARTBIT) + 0x0003)
#define DVDE_ECC_SLOT3_ecc_inc_err_p0                       (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_ECC + 16*halDVDE_DVDEDbgSel_SLOT3)<<BUS_STARTBIT) + 0x0002)
#define DVDE_ECC_SLOT3_ec_ecc_inc                           (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_ECC + 16*halDVDE_DVDEDbgSel_SLOT3)<<BUS_STARTBIT) + 0x0001)
#define DVDE_ECC_SLOT3_sysclk                               (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_ECC + 16*halDVDE_DVDEDbgSel_SLOT3)<<BUS_STARTBIT) + 0x0000)
//DVDE_BUF SLOT0
#define DVDE_BUF_SLOT0_encoder_cmdval                       (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_BUF + 16*halDVDE_DVDEDbgSel_SLOT0)<<BUS_STARTBIT) + 0x002F)
#define DVDE_BUF_SLOT0_encoder_cmdack                       (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_BUF + 16*halDVDE_DVDEDbgSel_SLOT0)<<BUS_STARTBIT) + 0x002E)
#define DVDE_BUF_SLOT0_encoder_address1                     (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_BUF + 16*halDVDE_DVDEDbgSel_SLOT0)<<BUS_STARTBIT) + 0x002D)
#define DVDE_BUF_SLOT0_encoder_eop                          (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_BUF + 16*halDVDE_DVDEDbgSel_SLOT0)<<BUS_STARTBIT) + 0x002C)
#define DVDE_BUF_SLOT0_encoder_rspval                       (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_BUF + 16*halDVDE_DVDEDbgSel_SLOT0)<<BUS_STARTBIT) + 0x002B)
#define DVDE_BUF_SLOT0_encoder_rspack                       (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_BUF + 16*halDVDE_DVDEDbgSel_SLOT0)<<BUS_STARTBIT) + 0x002A)
#define DVDE_BUF_SLOT0_encoder_reop                         (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_BUF + 16*halDVDE_DVDEDbgSel_SLOT0)<<BUS_STARTBIT) + 0x0029)
#define DVDE_BUF_SLOT0_rsp_count0                           (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_BUF + 16*halDVDE_DVDEDbgSel_SLOT0)<<BUS_STARTBIT) + 0x0028)
#define DVDE_BUF_SLOT0_bf_state3                            (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_BUF + 16*halDVDE_DVDEDbgSel_SLOT0)<<BUS_STARTBIT) + 0x0027)
#define DVDE_BUF_SLOT0_bf_state2                            (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_BUF + 16*halDVDE_DVDEDbgSel_SLOT0)<<BUS_STARTBIT) + 0x0026)
#define DVDE_BUF_SLOT0_bf_state1                            (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_BUF + 16*halDVDE_DVDEDbgSel_SLOT0)<<BUS_STARTBIT) + 0x0025)
#define DVDE_BUF_SLOT0_bf_state0                            (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_BUF + 16*halDVDE_DVDEDbgSel_SLOT0)<<BUS_STARTBIT) + 0x0024)
#define DVDE_BUF_SLOT0_ec_req                               (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_BUF + 16*halDVDE_DVDEDbgSel_SLOT0)<<BUS_STARTBIT) + 0x0023)
#define DVDE_BUF_SLOT0_bf_ack_ec                            (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_BUF + 16*halDVDE_DVDEDbgSel_SLOT0)<<BUS_STARTBIT) + 0x0022)
#define DVDE_BUF_SLOT0_bf_rwdval_ec                         (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_BUF + 16*halDVDE_DVDEDbgSel_SLOT0)<<BUS_STARTBIT) + 0x0021)
#define DVDE_BUF_SLOT0_bf_nxword                            (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_BUF + 16*halDVDE_DVDEDbgSel_SLOT0)<<BUS_STARTBIT) + 0x0020)
#define DVDE_BUF_SLOT0_wr_fifo_full                         (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_BUF + 16*halDVDE_DVDEDbgSel_SLOT0)<<BUS_STARTBIT) + 0x001F)
#define DVDE_BUF_SLOT0_wr_count2                            (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_BUF + 16*halDVDE_DVDEDbgSel_SLOT0)<<BUS_STARTBIT) + 0x001E)
#define DVDE_BUF_SLOT0_wr_count1                            (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_BUF + 16*halDVDE_DVDEDbgSel_SLOT0)<<BUS_STARTBIT) + 0x001D)
#define DVDE_BUF_SLOT0_wr_count0                            (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_BUF + 16*halDVDE_DVDEDbgSel_SLOT0)<<BUS_STARTBIT) + 0x001C)
#define DVDE_BUF_SLOT0_ec_req_state1                        (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_BUF + 16*halDVDE_DVDEDbgSel_SLOT0)<<BUS_STARTBIT) + 0x001B)
#define DVDE_BUF_SLOT0_ec_req_state0                        (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_BUF + 16*halDVDE_DVDEDbgSel_SLOT0)<<BUS_STARTBIT) + 0x001A)
#define DVDE_BUF_SLOT0_md_req_state1                        (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_BUF + 16*halDVDE_DVDEDbgSel_SLOT0)<<BUS_STARTBIT) + 0x0019)
#define DVDE_BUF_SLOT0_md_req_state0                        (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_BUF + 16*halDVDE_DVDEDbgSel_SLOT0)<<BUS_STARTBIT) + 0x0018)
#define DVDE_BUF_SLOT0_md_req                               (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_BUF + 16*halDVDE_DVDEDbgSel_SLOT0)<<BUS_STARTBIT) + 0x0017)
#define DVDE_BUF_SLOT0_bf_ack_md                            (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_BUF + 16*halDVDE_DVDEDbgSel_SLOT0)<<BUS_STARTBIT) + 0x0016)
#define DVDE_BUF_SLOT0_md_addr1                             (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_BUF + 16*halDVDE_DVDEDbgSel_SLOT0)<<BUS_STARTBIT) + 0x0015)
#define DVDE_BUF_SLOT0_bf_rwdval_md                         (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_BUF + 16*halDVDE_DVDEDbgSel_SLOT0)<<BUS_STARTBIT) + 0x0014)
#define DVDE_BUF_SLOT0_ec_burst3                            (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_BUF + 16*halDVDE_DVDEDbgSel_SLOT0)<<BUS_STARTBIT) + 0x0013)
#define DVDE_BUF_SLOT0_ec_burst2                            (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_BUF + 16*halDVDE_DVDEDbgSel_SLOT0)<<BUS_STARTBIT) + 0x0012)
#define DVDE_BUF_SLOT0_ec_burst1                            (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_BUF + 16*halDVDE_DVDEDbgSel_SLOT0)<<BUS_STARTBIT) + 0x0011)
#define DVDE_BUF_SLOT0_ec_burst0                            (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_BUF + 16*halDVDE_DVDEDbgSel_SLOT0)<<BUS_STARTBIT) + 0x0010)
#define DVDE_BUF_SLOT0_md_burst3                            (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_BUF + 16*halDVDE_DVDEDbgSel_SLOT0)<<BUS_STARTBIT) + 0x000F)
#define DVDE_BUF_SLOT0_md_burst2                            (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_BUF + 16*halDVDE_DVDEDbgSel_SLOT0)<<BUS_STARTBIT) + 0x000E)
#define DVDE_BUF_SLOT0_md_burst1                            (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_BUF + 16*halDVDE_DVDEDbgSel_SLOT0)<<BUS_STARTBIT) + 0x000D)
#define DVDE_BUF_SLOT0_md_burst0                            (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_BUF + 16*halDVDE_DVDEDbgSel_SLOT0)<<BUS_STARTBIT) + 0x000C)
#define DVDE_BUF_SLOT0_l_ecc                                (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_BUF + 16*halDVDE_DVDEDbgSel_SLOT0)<<BUS_STARTBIT) + 0x000B)
#define DVDE_BUF_SLOT0_l_burst2                             (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_BUF + 16*halDVDE_DVDEDbgSel_SLOT0)<<BUS_STARTBIT) + 0x000A)
#define DVDE_BUF_SLOT0_l_burst1                             (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_BUF + 16*halDVDE_DVDEDbgSel_SLOT0)<<BUS_STARTBIT) + 0x0009)
#define DVDE_BUF_SLOT0_l_burst0                             (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_BUF + 16*halDVDE_DVDEDbgSel_SLOT0)<<BUS_STARTBIT) + 0x0008)
#define DVDE_BUF_SLOT0_fradr1                               (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_BUF + 16*halDVDE_DVDEDbgSel_SLOT0)<<BUS_STARTBIT) + 0x0007)
#define DVDE_BUF_SLOT0_fradr0                               (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_BUF + 16*halDVDE_DVDEDbgSel_SLOT0)<<BUS_STARTBIT) + 0x0006)
#define DVDE_BUF_SLOT0_fwadr1                               (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_BUF + 16*halDVDE_DVDEDbgSel_SLOT0)<<BUS_STARTBIT) + 0x0005)
#define DVDE_BUF_SLOT0_fwadr0                               (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_BUF + 16*halDVDE_DVDEDbgSel_SLOT0)<<BUS_STARTBIT) + 0x0004)
#define DVDE_BUF_SLOT0_n_bf_rwdval_ec                       (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_BUF + 16*halDVDE_DVDEDbgSel_SLOT0)<<BUS_STARTBIT) + 0x0003)
#define DVDE_BUF_SLOT0_cmd_inc                              (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_BUF + 16*halDVDE_DVDEDbgSel_SLOT0)<<BUS_STARTBIT) + 0x0002)
#define DVDE_BUF_SLOT0_cmd_dec                              (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_BUF + 16*halDVDE_DVDEDbgSel_SLOT0)<<BUS_STARTBIT) + 0x0001)
#define DVDE_BUF_SLOT0_sysclk                               (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_BUF + 16*halDVDE_DVDEDbgSel_SLOT0)<<BUS_STARTBIT) + 0x0000)

//DVDE_BUF SLOT1
#define DVDE_BUF_SLOT1_encoderRdata31                       (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_BUF + 16*halDVDE_DVDEDbgSel_SLOT1)<<BUS_STARTBIT) + 0x002F)
#define DVDE_BUF_SLOT1_encoderRdata30                       (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_BUF + 16*halDVDE_DVDEDbgSel_SLOT1)<<BUS_STARTBIT) + 0x002E)
#define DVDE_BUF_SLOT1_encoderRdata29                       (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_BUF + 16*halDVDE_DVDEDbgSel_SLOT1)<<BUS_STARTBIT) + 0x002D)
#define DVDE_BUF_SLOT1_encoderRdata28                       (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_BUF + 16*halDVDE_DVDEDbgSel_SLOT1)<<BUS_STARTBIT) + 0x002C)
#define DVDE_BUF_SLOT1_encoderRdata27                       (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_BUF + 16*halDVDE_DVDEDbgSel_SLOT1)<<BUS_STARTBIT) + 0x002B)
#define DVDE_BUF_SLOT1_encoderRdata26                       (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_BUF + 16*halDVDE_DVDEDbgSel_SLOT1)<<BUS_STARTBIT) + 0x002A)
#define DVDE_BUF_SLOT1_encoderRdata25                       (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_BUF + 16*halDVDE_DVDEDbgSel_SLOT1)<<BUS_STARTBIT) + 0x0029)
#define DVDE_BUF_SLOT1_encoderRdata24                       (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_BUF + 16*halDVDE_DVDEDbgSel_SLOT1)<<BUS_STARTBIT) + 0x0028)
#define DVDE_BUF_SLOT1_encoderRdata23                       (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_BUF + 16*halDVDE_DVDEDbgSel_SLOT1)<<BUS_STARTBIT) + 0x0027)
#define DVDE_BUF_SLOT1_encoderRdata22                       (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_BUF + 16*halDVDE_DVDEDbgSel_SLOT1)<<BUS_STARTBIT) + 0x0026)
#define DVDE_BUF_SLOT1_encoderRdata21                       (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_BUF + 16*halDVDE_DVDEDbgSel_SLOT1)<<BUS_STARTBIT) + 0x0025)
#define DVDE_BUF_SLOT1_encoderRdata20                       (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_BUF + 16*halDVDE_DVDEDbgSel_SLOT1)<<BUS_STARTBIT) + 0x0024)
#define DVDE_BUF_SLOT1_encoderRdata19                       (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_BUF + 16*halDVDE_DVDEDbgSel_SLOT1)<<BUS_STARTBIT) + 0x0023)
#define DVDE_BUF_SLOT1_encoderRdata18                       (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_BUF + 16*halDVDE_DVDEDbgSel_SLOT1)<<BUS_STARTBIT) + 0x0022)
#define DVDE_BUF_SLOT1_encoderRdata17                       (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_BUF + 16*halDVDE_DVDEDbgSel_SLOT1)<<BUS_STARTBIT) + 0x0021)
#define DVDE_BUF_SLOT1_encoderRdata16                       (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_BUF + 16*halDVDE_DVDEDbgSel_SLOT1)<<BUS_STARTBIT) + 0x0020)
#define DVDE_BUF_SLOT1_encoderRdata15                       (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_BUF + 16*halDVDE_DVDEDbgSel_SLOT1)<<BUS_STARTBIT) + 0x001F)
#define DVDE_BUF_SLOT1_encoderRdata14                       (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_BUF + 16*halDVDE_DVDEDbgSel_SLOT1)<<BUS_STARTBIT) + 0x001E)
#define DVDE_BUF_SLOT1_encoderRdata13                       (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_BUF + 16*halDVDE_DVDEDbgSel_SLOT1)<<BUS_STARTBIT) + 0x001D)
#define DVDE_BUF_SLOT1_encoderRdata12                       (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_BUF + 16*halDVDE_DVDEDbgSel_SLOT1)<<BUS_STARTBIT) + 0x001C)
#define DVDE_BUF_SLOT1_encoderRdata11                       (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_BUF + 16*halDVDE_DVDEDbgSel_SLOT1)<<BUS_STARTBIT) + 0x001B)
#define DVDE_BUF_SLOT1_encoderRdata10                       (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_BUF + 16*halDVDE_DVDEDbgSel_SLOT1)<<BUS_STARTBIT) + 0x001A)
#define DVDE_BUF_SLOT1_encoderRdata9                        (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_BUF + 16*halDVDE_DVDEDbgSel_SLOT1)<<BUS_STARTBIT) + 0x0019)
#define DVDE_BUF_SLOT1_encoderRdata8                        (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_BUF + 16*halDVDE_DVDEDbgSel_SLOT1)<<BUS_STARTBIT) + 0x0018)
#define DVDE_BUF_SLOT1_encoderRdata7                        (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_BUF + 16*halDVDE_DVDEDbgSel_SLOT1)<<BUS_STARTBIT) + 0x0017)
#define DVDE_BUF_SLOT1_encoderRdata6                        (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_BUF + 16*halDVDE_DVDEDbgSel_SLOT1)<<BUS_STARTBIT) + 0x0016)
#define DVDE_BUF_SLOT1_encoderRdata5                        (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_BUF + 16*halDVDE_DVDEDbgSel_SLOT1)<<BUS_STARTBIT) + 0x0015)
#define DVDE_BUF_SLOT1_encoderRdata4                        (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_BUF + 16*halDVDE_DVDEDbgSel_SLOT1)<<BUS_STARTBIT) + 0x0014)
#define DVDE_BUF_SLOT1_encoderRdata3                        (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_BUF + 16*halDVDE_DVDEDbgSel_SLOT1)<<BUS_STARTBIT) + 0x0013)
#define DVDE_BUF_SLOT1_encoderRdata2                        (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_BUF + 16*halDVDE_DVDEDbgSel_SLOT1)<<BUS_STARTBIT) + 0x0012)
#define DVDE_BUF_SLOT1_encoderRdata1                        (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_BUF + 16*halDVDE_DVDEDbgSel_SLOT1)<<BUS_STARTBIT) + 0x0011)
#define DVDE_BUF_SLOT1_encoderRdata0                        (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_BUF + 16*halDVDE_DVDEDbgSel_SLOT1)<<BUS_STARTBIT) + 0x0010)
#define DVDE_BUF_SLOT1_encoder_eop                          (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_BUF + 16*halDVDE_DVDEDbgSel_SLOT1)<<BUS_STARTBIT) + 0x000F)
#define DVDE_BUF_SLOT1_encoder_cmdval                       (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_BUF + 16*halDVDE_DVDEDbgSel_SLOT1)<<BUS_STARTBIT) + 0x000E)
#define DVDE_BUF_SLOT1_encoder_rspval                       (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_BUF + 16*halDVDE_DVDEDbgSel_SLOT1)<<BUS_STARTBIT) + 0x000D)
#define DVDE_BUF_SLOT1_encoder_reop                         (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_BUF + 16*halDVDE_DVDEDbgSel_SLOT1)<<BUS_STARTBIT) + 0x000C)
#define DVDE_BUF_SLOT1_encoder_cmdack                       (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_BUF + 16*halDVDE_DVDEDbgSel_SLOT1)<<BUS_STARTBIT) + 0x000B)
#define DVDE_BUF_SLOT1_encoder_cmd1                         (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_BUF + 16*halDVDE_DVDEDbgSel_SLOT1)<<BUS_STARTBIT) + 0x000A)
#define DVDE_BUF_SLOT1_encoder_cmd0                         (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_BUF + 16*halDVDE_DVDEDbgSel_SLOT1)<<BUS_STARTBIT) + 0x0009)
#define DVDE_BUF_SLOT1_encoder_be2                          (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_BUF + 16*halDVDE_DVDEDbgSel_SLOT1)<<BUS_STARTBIT) + 0x0008)
#define DVDE_BUF_SLOT1_encoder_be0                          (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_BUF + 16*halDVDE_DVDEDbgSel_SLOT1)<<BUS_STARTBIT) + 0x0007)
#define DVDE_BUF_SLOT1_encoder_address8                     (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_BUF + 16*halDVDE_DVDEDbgSel_SLOT1)<<BUS_STARTBIT) + 0x0006)
#define DVDE_BUF_SLOT1_encoder_address7                     (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_BUF + 16*halDVDE_DVDEDbgSel_SLOT1)<<BUS_STARTBIT) + 0x0005)
#define DVDE_BUF_SLOT1_encoder_address6                     (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_BUF + 16*halDVDE_DVDEDbgSel_SLOT1)<<BUS_STARTBIT) + 0x0004)
#define DVDE_BUF_SLOT1_encoder_address5                     (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_BUF + 16*halDVDE_DVDEDbgSel_SLOT1)<<BUS_STARTBIT) + 0x0003)
#define DVDE_BUF_SLOT1_encoder_address4                     (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_BUF + 16*halDVDE_DVDEDbgSel_SLOT1)<<BUS_STARTBIT) + 0x0002)
#define DVDE_BUF_SLOT1_encoder_address3                     (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_BUF + 16*halDVDE_DVDEDbgSel_SLOT1)<<BUS_STARTBIT) + 0x0001)
#define DVDE_BUF_SLOT1_encoder_address2                     (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_BUF + 16*halDVDE_DVDEDbgSel_SLOT1)<<BUS_STARTBIT) + 0x0000)
//DVDE_BUF SLOT2
#define DVDE_BUF_SLOT2_encoderWdata31                       (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_BUF + 16*halDVDE_DVDEDbgSel_SLOT2)<<BUS_STARTBIT) + 0x002F)
#define DVDE_BUF_SLOT2_encoderWdata30                       (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_BUF + 16*halDVDE_DVDEDbgSel_SLOT2)<<BUS_STARTBIT) + 0x002E)
#define DVDE_BUF_SLOT2_encoderWdata29                       (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_BUF + 16*halDVDE_DVDEDbgSel_SLOT2)<<BUS_STARTBIT) + 0x002D)
#define DVDE_BUF_SLOT2_encoderWdata28                       (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_BUF + 16*halDVDE_DVDEDbgSel_SLOT2)<<BUS_STARTBIT) + 0x002C)
#define DVDE_BUF_SLOT2_encoderWdata27                       (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_BUF + 16*halDVDE_DVDEDbgSel_SLOT2)<<BUS_STARTBIT) + 0x002B)
#define DVDE_BUF_SLOT2_encoderWdata26                       (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_BUF + 16*halDVDE_DVDEDbgSel_SLOT2)<<BUS_STARTBIT) + 0x002A)
#define DVDE_BUF_SLOT2_encoderWdata25                       (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_BUF + 16*halDVDE_DVDEDbgSel_SLOT2)<<BUS_STARTBIT) + 0x0029)
#define DVDE_BUF_SLOT2_encoderWdata24                       (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_BUF + 16*halDVDE_DVDEDbgSel_SLOT2)<<BUS_STARTBIT) + 0x0028)
#define DVDE_BUF_SLOT2_encoderWdata23                       (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_BUF + 16*halDVDE_DVDEDbgSel_SLOT2)<<BUS_STARTBIT) + 0x0027)
#define DVDE_BUF_SLOT2_encoderWdata22                       (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_BUF + 16*halDVDE_DVDEDbgSel_SLOT2)<<BUS_STARTBIT) + 0x0026)
#define DVDE_BUF_SLOT2_encoderWdata21                       (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_BUF + 16*halDVDE_DVDEDbgSel_SLOT2)<<BUS_STARTBIT) + 0x0025)
#define DVDE_BUF_SLOT2_encoderWdata20                       (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_BUF + 16*halDVDE_DVDEDbgSel_SLOT2)<<BUS_STARTBIT) + 0x0024)
#define DVDE_BUF_SLOT2_encoderWdata19                       (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_BUF + 16*halDVDE_DVDEDbgSel_SLOT2)<<BUS_STARTBIT) + 0x0023)
#define DVDE_BUF_SLOT2_encoderWdata18                       (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_BUF + 16*halDVDE_DVDEDbgSel_SLOT2)<<BUS_STARTBIT) + 0x0022)
#define DVDE_BUF_SLOT2_encoderWdata17                       (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_BUF + 16*halDVDE_DVDEDbgSel_SLOT2)<<BUS_STARTBIT) + 0x0021)
#define DVDE_BUF_SLOT2_encoderWdata16                       (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_BUF + 16*halDVDE_DVDEDbgSel_SLOT2)<<BUS_STARTBIT) + 0x0020)
#define DVDE_BUF_SLOT2_encoderWdata15                       (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_BUF + 16*halDVDE_DVDEDbgSel_SLOT2)<<BUS_STARTBIT) + 0x001F)
#define DVDE_BUF_SLOT2_encoderWdata14                       (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_BUF + 16*halDVDE_DVDEDbgSel_SLOT2)<<BUS_STARTBIT) + 0x001E)
#define DVDE_BUF_SLOT2_encoderWdata13                       (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_BUF + 16*halDVDE_DVDEDbgSel_SLOT2)<<BUS_STARTBIT) + 0x001D)
#define DVDE_BUF_SLOT2_encoderWdata12                       (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_BUF + 16*halDVDE_DVDEDbgSel_SLOT2)<<BUS_STARTBIT) + 0x001C)
#define DVDE_BUF_SLOT2_encoderWdata11                       (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_BUF + 16*halDVDE_DVDEDbgSel_SLOT2)<<BUS_STARTBIT) + 0x001B)
#define DVDE_BUF_SLOT2_encoderWdata10                       (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_BUF + 16*halDVDE_DVDEDbgSel_SLOT2)<<BUS_STARTBIT) + 0x001A)
#define DVDE_BUF_SLOT2_encoderWdata9                        (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_BUF + 16*halDVDE_DVDEDbgSel_SLOT2)<<BUS_STARTBIT) + 0x0019)
#define DVDE_BUF_SLOT2_encoderWdata8                        (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_BUF + 16*halDVDE_DVDEDbgSel_SLOT2)<<BUS_STARTBIT) + 0x0018)
#define DVDE_BUF_SLOT2_encoderWdata7                        (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_BUF + 16*halDVDE_DVDEDbgSel_SLOT2)<<BUS_STARTBIT) + 0x0017)
#define DVDE_BUF_SLOT2_encoderWdata6                        (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_BUF + 16*halDVDE_DVDEDbgSel_SLOT2)<<BUS_STARTBIT) + 0x0016)
#define DVDE_BUF_SLOT2_encoderWdata5                        (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_BUF + 16*halDVDE_DVDEDbgSel_SLOT2)<<BUS_STARTBIT) + 0x0015)
#define DVDE_BUF_SLOT2_encoderWdata4                        (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_BUF + 16*halDVDE_DVDEDbgSel_SLOT2)<<BUS_STARTBIT) + 0x0014)
#define DVDE_BUF_SLOT2_encoderWdata3                        (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_BUF + 16*halDVDE_DVDEDbgSel_SLOT2)<<BUS_STARTBIT) + 0x0013)
#define DVDE_BUF_SLOT2_encoderWdata2                        (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_BUF + 16*halDVDE_DVDEDbgSel_SLOT2)<<BUS_STARTBIT) + 0x0012)
#define DVDE_BUF_SLOT2_encoderWdata1                        (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_BUF + 16*halDVDE_DVDEDbgSel_SLOT2)<<BUS_STARTBIT) + 0x0011)
#define DVDE_BUF_SLOT2_encoderWdata0                        (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_BUF + 16*halDVDE_DVDEDbgSel_SLOT2)<<BUS_STARTBIT) + 0x0010)
#define DVDE_BUF_SLOT2_encoder_eop                          (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_BUF + 16*halDVDE_DVDEDbgSel_SLOT2)<<BUS_STARTBIT) + 0x000F)
#define DVDE_BUF_SLOT2_encoder_cmdval                       (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_BUF + 16*halDVDE_DVDEDbgSel_SLOT2)<<BUS_STARTBIT) + 0x000E)
#define DVDE_BUF_SLOT2_encoder_rspval                       (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_BUF + 16*halDVDE_DVDEDbgSel_SLOT2)<<BUS_STARTBIT) + 0x000D)
#define DVDE_BUF_SLOT2_encoder_reop                         (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_BUF + 16*halDVDE_DVDEDbgSel_SLOT2)<<BUS_STARTBIT) + 0x000C)
#define DVDE_BUF_SLOT2_encoder_cmdack                       (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_BUF + 16*halDVDE_DVDEDbgSel_SLOT2)<<BUS_STARTBIT) + 0x000B)
#define DVDE_BUF_SLOT2_encoder_cmd1                         (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_BUF + 16*halDVDE_DVDEDbgSel_SLOT2)<<BUS_STARTBIT) + 0x000A)
#define DVDE_BUF_SLOT2_encoder_cmd0                         (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_BUF + 16*halDVDE_DVDEDbgSel_SLOT2)<<BUS_STARTBIT) + 0x0009)
#define DVDE_BUF_SLOT2_encoder_be2                          (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_BUF + 16*halDVDE_DVDEDbgSel_SLOT2)<<BUS_STARTBIT) + 0x0008)
#define DVDE_BUF_SLOT2_encoder_be0                          (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_BUF + 16*halDVDE_DVDEDbgSel_SLOT2)<<BUS_STARTBIT) + 0x0007)
#define DVDE_BUF_SLOT2_encoder_address8                     (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_BUF + 16*halDVDE_DVDEDbgSel_SLOT2)<<BUS_STARTBIT) + 0x0006)
#define DVDE_BUF_SLOT2_encoder_address7                     (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_BUF + 16*halDVDE_DVDEDbgSel_SLOT2)<<BUS_STARTBIT) + 0x0005)
#define DVDE_BUF_SLOT2_encoder_address6                     (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_BUF + 16*halDVDE_DVDEDbgSel_SLOT2)<<BUS_STARTBIT) + 0x0004)
#define DVDE_BUF_SLOT2_encoder_address5                     (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_BUF + 16*halDVDE_DVDEDbgSel_SLOT2)<<BUS_STARTBIT) + 0x0003)
#define DVDE_BUF_SLOT2_encoder_address4                     (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_BUF + 16*halDVDE_DVDEDbgSel_SLOT2)<<BUS_STARTBIT) + 0x0002)
#define DVDE_BUF_SLOT2_encoder_address3                     (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_BUF + 16*halDVDE_DVDEDbgSel_SLOT2)<<BUS_STARTBIT) + 0x0001)
#define DVDE_BUF_SLOT2_encoder_address2                     (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_BUF + 16*halDVDE_DVDEDbgSel_SLOT2)<<BUS_STARTBIT) + 0x0000)
//DVDE_BUF SLOT3
#define DVDE_BUF_SLOT3_encoder_address23                    (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_BUF + 16*halDVDE_DVDEDbgSel_SLOT3)<<BUS_STARTBIT) + 0x002F)
#define DVDE_BUF_SLOT3_encoder_address22                    (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_BUF + 16*halDVDE_DVDEDbgSel_SLOT3)<<BUS_STARTBIT) + 0x002E)
#define DVDE_BUF_SLOT3_encoder_address21                    (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_BUF + 16*halDVDE_DVDEDbgSel_SLOT3)<<BUS_STARTBIT) + 0x002D)
#define DVDE_BUF_SLOT3_encoder_address20                    (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_BUF + 16*halDVDE_DVDEDbgSel_SLOT3)<<BUS_STARTBIT) + 0x002C)
#define DVDE_BUF_SLOT3_encoder_address19                    (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_BUF + 16*halDVDE_DVDEDbgSel_SLOT3)<<BUS_STARTBIT) + 0x002B)
#define DVDE_BUF_SLOT3_encoder_address18                    (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_BUF + 16*halDVDE_DVDEDbgSel_SLOT3)<<BUS_STARTBIT) + 0x002A)
#define DVDE_BUF_SLOT3_encoder_address17                    (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_BUF + 16*halDVDE_DVDEDbgSel_SLOT3)<<BUS_STARTBIT) + 0x0029)
#define DVDE_BUF_SLOT3_encoder_address16                    (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_BUF + 16*halDVDE_DVDEDbgSel_SLOT3)<<BUS_STARTBIT) + 0x0028)
#define DVDE_BUF_SLOT3_encoder_address15                    (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_BUF + 16*halDVDE_DVDEDbgSel_SLOT3)<<BUS_STARTBIT) + 0x0027)
#define DVDE_BUF_SLOT3_encoder_address14                    (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_BUF + 16*halDVDE_DVDEDbgSel_SLOT3)<<BUS_STARTBIT) + 0x0026)
#define DVDE_BUF_SLOT3_encoder_address13                    (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_BUF + 16*halDVDE_DVDEDbgSel_SLOT3)<<BUS_STARTBIT) + 0x0025)
#define DVDE_BUF_SLOT3_encoder_address12                    (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_BUF + 16*halDVDE_DVDEDbgSel_SLOT3)<<BUS_STARTBIT) + 0x0024)
#define DVDE_BUF_SLOT3_encoder_address11                    (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_BUF + 16*halDVDE_DVDEDbgSel_SLOT3)<<BUS_STARTBIT) + 0x0023)
#define DVDE_BUF_SLOT3_encoder_address10                    (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_BUF + 16*halDVDE_DVDEDbgSel_SLOT3)<<BUS_STARTBIT) + 0x0022)
#define DVDE_BUF_SLOT3_encoder_address9                     (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_BUF + 16*halDVDE_DVDEDbgSel_SLOT3)<<BUS_STARTBIT) + 0x0021)
#define DVDE_BUF_SLOT3_encoder_address8                     (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_BUF + 16*halDVDE_DVDEDbgSel_SLOT3)<<BUS_STARTBIT) + 0x0020)
#define DVDE_BUF_SLOT3_encoder_address7                     (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_BUF + 16*halDVDE_DVDEDbgSel_SLOT3)<<BUS_STARTBIT) + 0x001F)
#define DVDE_BUF_SLOT3_encoder_address6                     (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_BUF + 16*halDVDE_DVDEDbgSel_SLOT3)<<BUS_STARTBIT) + 0x001E)
#define DVDE_BUF_SLOT3_encoder_address5                     (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_BUF + 16*halDVDE_DVDEDbgSel_SLOT3)<<BUS_STARTBIT) + 0x001D)
#define DVDE_BUF_SLOT3_encoder_address4                     (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_BUF + 16*halDVDE_DVDEDbgSel_SLOT3)<<BUS_STARTBIT) + 0x001C)
#define DVDE_BUF_SLOT3_encoder_address3                     (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_BUF + 16*halDVDE_DVDEDbgSel_SLOT3)<<BUS_STARTBIT) + 0x001B)
#define DVDE_BUF_SLOT3_encoder_address2                     (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_BUF + 16*halDVDE_DVDEDbgSel_SLOT3)<<BUS_STARTBIT) + 0x001A)
#define DVDE_BUF_SLOT3_encoderWdata7                        (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_BUF + 16*halDVDE_DVDEDbgSel_SLOT3)<<BUS_STARTBIT) + 0x0019)
#define DVDE_BUF_SLOT3_encoderWdata6                        (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_BUF + 16*halDVDE_DVDEDbgSel_SLOT3)<<BUS_STARTBIT) + 0x0018)
#define DVDE_BUF_SLOT3_encoderWdata5                        (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_BUF + 16*halDVDE_DVDEDbgSel_SLOT3)<<BUS_STARTBIT) + 0x0017)
#define DVDE_BUF_SLOT3_encoderWdata4                        (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_BUF + 16*halDVDE_DVDEDbgSel_SLOT3)<<BUS_STARTBIT) + 0x0016)
#define DVDE_BUF_SLOT3_encoderWdata3                        (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_BUF + 16*halDVDE_DVDEDbgSel_SLOT3)<<BUS_STARTBIT) + 0x0015)
#define DVDE_BUF_SLOT3_encoderWdata2                        (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_BUF + 16*halDVDE_DVDEDbgSel_SLOT3)<<BUS_STARTBIT) + 0x0014)
#define DVDE_BUF_SLOT3_encoderWdata1                        (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_BUF + 16*halDVDE_DVDEDbgSel_SLOT3)<<BUS_STARTBIT) + 0x0013)
#define DVDE_BUF_SLOT3_encoderWdata0                        (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_BUF + 16*halDVDE_DVDEDbgSel_SLOT3)<<BUS_STARTBIT) + 0x0012)
#define DVDE_BUF_SLOT3_encoderRdata7                        (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_BUF + 16*halDVDE_DVDEDbgSel_SLOT3)<<BUS_STARTBIT) + 0x0011)
#define DVDE_BUF_SLOT3_encoderRdata6                        (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_BUF + 16*halDVDE_DVDEDbgSel_SLOT3)<<BUS_STARTBIT) + 0x0010)
#define DVDE_BUF_SLOT3_encoderRdata5                        (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_BUF + 16*halDVDE_DVDEDbgSel_SLOT3)<<BUS_STARTBIT) + 0x000F)
#define DVDE_BUF_SLOT3_encoderRdata4                        (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_BUF + 16*halDVDE_DVDEDbgSel_SLOT3)<<BUS_STARTBIT) + 0x000E)
#define DVDE_BUF_SLOT3_encoderRdata3                        (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_BUF + 16*halDVDE_DVDEDbgSel_SLOT3)<<BUS_STARTBIT) + 0x000D)
#define DVDE_BUF_SLOT3_encoderRdata2                        (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_BUF + 16*halDVDE_DVDEDbgSel_SLOT3)<<BUS_STARTBIT) + 0x000C)
#define DVDE_BUF_SLOT3_encoderRdata1                        (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_BUF + 16*halDVDE_DVDEDbgSel_SLOT3)<<BUS_STARTBIT) + 0x000B)
#define DVDE_BUF_SLOT3_encoderRdata0                        (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_BUF + 16*halDVDE_DVDEDbgSel_SLOT3)<<BUS_STARTBIT) + 0x000A)
#define DVDE_BUF_SLOT3_encoder_eop                          (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_BUF + 16*halDVDE_DVDEDbgSel_SLOT3)<<BUS_STARTBIT) + 0x0009)
#define DVDE_BUF_SLOT3_encoder_cmdval                       (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_BUF + 16*halDVDE_DVDEDbgSel_SLOT3)<<BUS_STARTBIT) + 0x0008)
#define DVDE_BUF_SLOT3_encoder_rspval                       (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_BUF + 16*halDVDE_DVDEDbgSel_SLOT3)<<BUS_STARTBIT) + 0x0007)
#define DVDE_BUF_SLOT3_encoder_reop                         (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_BUF + 16*halDVDE_DVDEDbgSel_SLOT3)<<BUS_STARTBIT) + 0x0006)
#define DVDE_BUF_SLOT3_encoder_cmdack                       (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_BUF + 16*halDVDE_DVDEDbgSel_SLOT3)<<BUS_STARTBIT) + 0x0005)
#define DVDE_BUF_SLOT3_encoder_cmd1                         (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_BUF + 16*halDVDE_DVDEDbgSel_SLOT3)<<BUS_STARTBIT) + 0x0004)
#define DVDE_BUF_SLOT3_encoder_cmd0                         (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_BUF + 16*halDVDE_DVDEDbgSel_SLOT3)<<BUS_STARTBIT) + 0x0003)
#define DVDE_BUF_SLOT3_encoder_be2                          (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_BUF + 16*halDVDE_DVDEDbgSel_SLOT3)<<BUS_STARTBIT) + 0x0002)
#define DVDE_BUF_SLOT3_encoder_be0                          (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_BUF + 16*halDVDE_DVDEDbgSel_SLOT3)<<BUS_STARTBIT) + 0x0001)
#define DVDE_BUF_SLOT3_sysclk                               (DVDE_BLK + DBG64SEL + ((halDVDE_DVDEDbgMode_BUF + 16*halDVDE_DVDEDbgSel_SLOT3)<<BUS_STARTBIT) + 0x0000)

/****************************************************************************
* DGB64 BUS WS BLOCK
****************************************************************************/
//DBG1
#define WS_DBG1_smp1_to                     (WS_BLK + DBG64SEL + (1<<BUS_STARTBIT) + 0x000F) //15:smp1 output
#define WS_DBG1_smp2_to                     (WS_BLK + DBG64SEL + (1<<BUS_STARTBIT) + 0x000E) //14:smp2 output
#define WS_DBG1_smp3_to                     (WS_BLK + DBG64SEL + (1<<BUS_STARTBIT) + 0x000D) //13:smp3 output
#define WS_DBG1_smp4_to                     (WS_BLK + DBG64SEL + (1<<BUS_STARTBIT) + 0x000C) //12:smp4 output
#define WS_DBG1_smp5_to                     (WS_BLK + DBG64SEL + (1<<BUS_STARTBIT) + 0x000B) //11:smp5 output
#define WS_DBG1_efm1_to                     (WS_BLK + DBG64SEL + (1<<BUS_STARTBIT) + 0x000A) //10:efm1 output
#define WS_DBG1_efm2_to                     (WS_BLK + DBG64SEL + (1<<BUS_STARTBIT) + 0x0009) // 9:efm2 output
#define WS_DBG1_efm3_to                     (WS_BLK + DBG64SEL + (1<<BUS_STARTBIT) + 0x0008) // 8:efm3 output
#define WS_DBG1_oscen                       (WS_BLK + DBG64SEL + (1<<BUS_STARTBIT) + 0x0007) // 7:oscen output
#define WS_DBG1_rb_clock                    (WS_BLK + DBG64SEL + (1<<BUS_STARTBIT) + 0x0004) // 4:sysclk input for up i/f
#define WS_DBG1_ws_pr_clk                   (WS_BLK + DBG64SEL + (1<<BUS_STARTBIT) + 0x0003) // 3:WS clock variable divide from tclk
#define WS_DBG1_ws_write_clk                (WS_BLK + DBG64SEL + (1<<BUS_STARTBIT) + 0x0002) // 2:T clock
#define WS_DBG1_tbgclk                      (WS_BLK + DBG64SEL + (1<<BUS_STARTBIT) + 0x0001) // 1:divided clock used during clock/cd boot md
#define WS_DBG1_tbgclk_raw                  (WS_BLK + DBG64SEL + (1<<BUS_STARTBIT) + 0x0000) // 0:raw (high-speed) tbgclk from tbgpll
//DBG2
#define WS_DBG2_smp1_rst1                   (WS_BLK + DBG64SEL + (2<<BUS_STARTBIT) + 0x000F) //15~14:smp1 space reset
#define WS_DBG2_smp1_rst0                   (WS_BLK + DBG64SEL + (2<<BUS_STARTBIT) + 0x000E) //15~14:smp1 space reset
#define WS_DBG2_smp1_inst_d1                (WS_BLK + DBG64SEL + (2<<BUS_STARTBIT) + 0x000D) //13:smp1 instruction
#define WS_DBG2_smp1_inst_c1                (WS_BLK + DBG64SEL + (2<<BUS_STARTBIT) + 0x000C) //12:smp1 instruction
#define WS_DBG2_smp1_inst_b1                (WS_BLK + DBG64SEL + (2<<BUS_STARTBIT) + 0x000B) //11:smp1 instruction
#define WS_DBG2_smp1_inst_a1                (WS_BLK + DBG64SEL + (2<<BUS_STARTBIT) + 0x000A) //10:smp1 instruction
#define WS_DBG2_efm1_t32_d1                 (WS_BLK + DBG64SEL + (2<<BUS_STARTBIT) + 0x0009) // 9~8:efm1 t32 offset
#define WS_DBG2_efm1_t32_d0                 (WS_BLK + DBG64SEL + (2<<BUS_STARTBIT) + 0x0008) // 9~8:efm1 t32 offset
#define WS_DBG2_efm1_t32_c1                 (WS_BLK + DBG64SEL + (2<<BUS_STARTBIT) + 0x0007) // 7~6:efm1 t32 offset
#define WS_DBG2_efm1_t32_c0                 (WS_BLK + DBG64SEL + (2<<BUS_STARTBIT) + 0x0006) // 7~6:efm1 t32 offset
#define WS_DBG2_efm1_t32_b1                 (WS_BLK + DBG64SEL + (2<<BUS_STARTBIT) + 0x0005) // 5~4:efm1 t32 offset
#define WS_DBG2_efm1_t32_b0                 (WS_BLK + DBG64SEL + (2<<BUS_STARTBIT) + 0x0004) // 5~4:efm1 t32 offset
#define WS_DBG2_efm1_t32_a1                 (WS_BLK + DBG64SEL + (2<<BUS_STARTBIT) + 0x0003) // 3~2:efm1 t32 offset
#define WS_DBG2_efm1_t32_a0                 (WS_BLK + DBG64SEL + (2<<BUS_STARTBIT) + 0x0002) // 3~2:efm1 t32 offset
#define WS_DBG2_efm1_rst1                   (WS_BLK + DBG64SEL + (2<<BUS_STARTBIT) + 0x0001) // 1~0:efm1 R
#define WS_DBG2_efm1_rst0                   (WS_BLK + DBG64SEL + (2<<BUS_STARTBIT) + 0x0000) // 1~0:efm1 R
//DBG3
#define WS_DBG3_smp2_rst1                   (WS_BLK + DBG64SEL + (3<<BUS_STARTBIT) + 0x000F) //15~14:smp2 space reset
#define WS_DBG3_smp2_rst0                   (WS_BLK + DBG64SEL + (3<<BUS_STARTBIT) + 0x000E) //15~14:smp2 space reset
#define WS_DBG3_smp2_inst_d1                (WS_BLK + DBG64SEL + (3<<BUS_STARTBIT) + 0x000D) //13:smp2 instruction
#define WS_DBG3_smp2_inst_c1                (WS_BLK + DBG64SEL + (3<<BUS_STARTBIT) + 0x000C) //12:smp2 instruction
#define WS_DBG3_smp2_inst_b1                (WS_BLK + DBG64SEL + (3<<BUS_STARTBIT) + 0x000B) //11:smp2 instruction
#define WS_DBG3_smp2_inst_a1                (WS_BLK + DBG64SEL + (3<<BUS_STARTBIT) + 0x000A) //10:smp2 instruction
#define WS_DBG3_efm2_t32_d1                 (WS_BLK + DBG64SEL + (3<<BUS_STARTBIT) + 0x0009) // 9~8:efm2 t32 offset
#define WS_DBG3_efm2_t32_d0                 (WS_BLK + DBG64SEL + (3<<BUS_STARTBIT) + 0x0008) // 9~8:efm2 t32 offset
#define WS_DBG3_efm2_t32_c1                 (WS_BLK + DBG64SEL + (3<<BUS_STARTBIT) + 0x0007) // 7~6:efm2 t32 offset
#define WS_DBG3_efm2_t32_c0                 (WS_BLK + DBG64SEL + (3<<BUS_STARTBIT) + 0x0006) // 7~6:efm2 t32 offset
#define WS_DBG3_efm2_t32_b1                 (WS_BLK + DBG64SEL + (3<<BUS_STARTBIT) + 0x0005) // 5~4:efm2 t32 offset
#define WS_DBG3_efm2_t32_b0                 (WS_BLK + DBG64SEL + (3<<BUS_STARTBIT) + 0x0004) // 5~4:efm2 t32 offset
#define WS_DBG3_efm2_t32_a1                 (WS_BLK + DBG64SEL + (3<<BUS_STARTBIT) + 0x0003) // 3~2:efm2 t32 offset
#define WS_DBG3_efm2_t32_a0                 (WS_BLK + DBG64SEL + (3<<BUS_STARTBIT) + 0x0002) // 3~2:efm2 t32 offset
#define WS_DBG3_efm2_rst1                   (WS_BLK + DBG64SEL + (3<<BUS_STARTBIT) + 0x0001) // 1~0:efm2 R
#define WS_DBG3_efm2_rst0                   (WS_BLK + DBG64SEL + (3<<BUS_STARTBIT) + 0x0000) // 1~0:efm2 R
//DBG4
#define WS_DBG4_smp3_rst1                   (WS_BLK + DBG64SEL + (4<<BUS_STARTBIT) + 0x000F) //15~14:smp3 space reset
#define WS_DBG4_smp3_rst0                   (WS_BLK + DBG64SEL + (4<<BUS_STARTBIT) + 0x000E) //15~14:smp3 space reset
#define WS_DBG4_smp3_inst_d1                (WS_BLK + DBG64SEL + (4<<BUS_STARTBIT) + 0x000D) //13:smp3 instruction
#define WS_DBG4_smp3_inst_c1                (WS_BLK + DBG64SEL + (4<<BUS_STARTBIT) + 0x000C) //12:smp3 instruction
#define WS_DBG4_smp3_inst_b1                (WS_BLK + DBG64SEL + (4<<BUS_STARTBIT) + 0x000B) //11:smp3 instruction
#define WS_DBG4_smp3_inst_a1                (WS_BLK + DBG64SEL + (4<<BUS_STARTBIT) + 0x000A) //10:smp3 instruction
#define WS_DBG4_efm3_t32_d1                 (WS_BLK + DBG64SEL + (4<<BUS_STARTBIT) + 0x0009) // 9~8:efm3 t32 offset
#define WS_DBG4_efm3_t32_d0                 (WS_BLK + DBG64SEL + (4<<BUS_STARTBIT) + 0x0008) // 9~8:efm3 t32 offset
#define WS_DBG4_efm3_t32_c1                 (WS_BLK + DBG64SEL + (4<<BUS_STARTBIT) + 0x0007) // 7~6:efm3 t32 offset
#define WS_DBG4_efm3_t32_c0                 (WS_BLK + DBG64SEL + (4<<BUS_STARTBIT) + 0x0006) // 7~6:efm3 t32 offset
#define WS_DBG4_efm3_t32_b1                 (WS_BLK + DBG64SEL + (4<<BUS_STARTBIT) + 0x0005) // 5~4:efm3 t32 offset
#define WS_DBG4_efm3_t32_b0                 (WS_BLK + DBG64SEL + (4<<BUS_STARTBIT) + 0x0004) // 5~4:efm3 t32 offset
#define WS_DBG4_efm3_t32_a1                 (WS_BLK + DBG64SEL + (4<<BUS_STARTBIT) + 0x0003) // 3~2:efm3 t32 offset
#define WS_DBG4_efm3_t32_a0                 (WS_BLK + DBG64SEL + (4<<BUS_STARTBIT) + 0x0002) // 3~2:efm3 t32 offset
#define WS_DBG4_efm3_rst1                   (WS_BLK + DBG64SEL + (4<<BUS_STARTBIT) + 0x0001) // 1~0:efm3 R
#define WS_DBG4_efm3_rst0                   (WS_BLK + DBG64SEL + (4<<BUS_STARTBIT) + 0x0000) // 1~0:efm3 R
//DBG5
#define WS_DBG5_efm1_inst_d5                (WS_BLK + DBG64SEL + (5<<BUS_STARTBIT) + 0x000F) //efm1 instruction
#define WS_DBG5_efm1_inst_d2                (WS_BLK + DBG64SEL + (5<<BUS_STARTBIT) + 0x000E) //efm1 instruction
#define WS_DBG5_efm1_inst_c5                (WS_BLK + DBG64SEL + (5<<BUS_STARTBIT) + 0x000D) //efm1 instruction
#define WS_DBG5_efm1_inst_c2                (WS_BLK + DBG64SEL + (5<<BUS_STARTBIT) + 0x000C) //efm1 instruction
#define WS_DBG5_efm1_inst_b5                (WS_BLK + DBG64SEL + (5<<BUS_STARTBIT) + 0x000B) //efm1 instruction
#define WS_DBG5_efm1_inst_b2                (WS_BLK + DBG64SEL + (5<<BUS_STARTBIT) + 0x000A) //efm1 instruction
#define WS_DBG5_efm1_inst_a5                (WS_BLK + DBG64SEL + (5<<BUS_STARTBIT) + 0x0009) //efm1 instruction
#define WS_DBG5_efm1_inst_a2                (WS_BLK + DBG64SEL + (5<<BUS_STARTBIT) + 0x0008) //efm1 instruction
#define WS_DBG5_efm2_inst_d5                (WS_BLK + DBG64SEL + (5<<BUS_STARTBIT) + 0x0007) //efm2 instruction
#define WS_DBG5_efm2_inst_d2                (WS_BLK + DBG64SEL + (5<<BUS_STARTBIT) + 0x0006) //efm2 instruction
#define WS_DBG5_efm2_inst_c5                (WS_BLK + DBG64SEL + (5<<BUS_STARTBIT) + 0x0005) //efm2 instruction
#define WS_DBG5_efm2_inst_c2                (WS_BLK + DBG64SEL + (5<<BUS_STARTBIT) + 0x0004) //efm2 instruction
#define WS_DBG5_efm2_inst_b5                (WS_BLK + DBG64SEL + (5<<BUS_STARTBIT) + 0x0003) //efm2 instruction
#define WS_DBG5_efm2_inst_b2                (WS_BLK + DBG64SEL + (5<<BUS_STARTBIT) + 0x0002) //efm2 instruction
#define WS_DBG5_efm2_inst_a5                (WS_BLK + DBG64SEL + (5<<BUS_STARTBIT) + 0x0001) //efm2 instruction
#define WS_DBG5_efm2_inst_a2                (WS_BLK + DBG64SEL + (5<<BUS_STARTBIT) + 0x0000) //efm2 instruction
//DBG6
#define WS_DBG6_efm3_inst_d5                (WS_BLK + DBG64SEL + (6<<BUS_STARTBIT) + 0x000F) //efm3 instruction
#define WS_DBG6_efm3_inst_d2                (WS_BLK + DBG64SEL + (6<<BUS_STARTBIT) + 0x000E) //efm3 instruction
#define WS_DBG6_efm3_inst_c5                (WS_BLK + DBG64SEL + (6<<BUS_STARTBIT) + 0x000D) //efm3 instruction
#define WS_DBG6_efm3_inst_c2                (WS_BLK + DBG64SEL + (6<<BUS_STARTBIT) + 0x000C) //efm3 instruction
#define WS_DBG6_efm3_inst_b5                (WS_BLK + DBG64SEL + (6<<BUS_STARTBIT) + 0x000B) //efm3 instruction
#define WS_DBG6_efm3_inst_b2                (WS_BLK + DBG64SEL + (6<<BUS_STARTBIT) + 0x000A) //efm3 instruction
#define WS_DBG6_efm3_inst_a5                (WS_BLK + DBG64SEL + (6<<BUS_STARTBIT) + 0x0009) //efm3 instruction
#define WS_DBG6_efm3_inst_a2                (WS_BLK + DBG64SEL + (6<<BUS_STARTBIT) + 0x0008) //efm3 instruction
#define WS_DBG6_slipa_out                   (WS_BLK + DBG64SEL + (6<<BUS_STARTBIT) + 0x0004)
#define WS_DBG6_slipb_out                   (WS_BLK + DBG64SEL + (6<<BUS_STARTBIT) + 0x0003)
#define WS_DBG6_slipc_out                   (WS_BLK + DBG64SEL + (6<<BUS_STARTBIT) + 0x0002)
#define WS_DBG6_slipd_out                   (WS_BLK + DBG64SEL + (6<<BUS_STARTBIT) + 0x0001)
#define WS_DBG6_test_scanmode               (WS_BLK + DBG64SEL + (6<<BUS_STARTBIT) + 0x0000)
//DBG7
#define WS_DBG7_bd_data3                    (WS_BLK + DBG64SEL + (7<<BUS_STARTBIT) + 0x000F) //15~12:bd efm input nrz-i.
#define WS_DBG7_bd_data2                    (WS_BLK + DBG64SEL + (7<<BUS_STARTBIT) + 0x000E) //15~12:bd efm input nrz-i.
#define WS_DBG7_bd_data1                    (WS_BLK + DBG64SEL + (7<<BUS_STARTBIT) + 0x000D) //15~12:bd efm input nrz-i.
#define WS_DBG7_bd_data0                    (WS_BLK + DBG64SEL + (7<<BUS_STARTBIT) + 0x000C) //15~12:bd efm input nrz-i.
#define WS_DBG7_dvd_data3                   (WS_BLK + DBG64SEL + (7<<BUS_STARTBIT) + 0x000B) //11~8:dvd efm input nrz-i.
#define WS_DBG7_dvd_data2                   (WS_BLK + DBG64SEL + (7<<BUS_STARTBIT) + 0x000A) //11~8:dvd efm input nrz-i.
#define WS_DBG7_dvd_data1                   (WS_BLK + DBG64SEL + (7<<BUS_STARTBIT) + 0x0009) //11~8:dvd efm input nrz-i.
#define WS_DBG7_dvd_data0                   (WS_BLK + DBG64SEL + (7<<BUS_STARTBIT) + 0x0008) //11~8:dvd efm input nrz-i.
#define WS_DBG7_wgate_pr3                   (WS_BLK + DBG64SEL + (7<<BUS_STARTBIT) + 0x0007) // 7~4:write gate P&R to custom
#define WS_DBG7_wgate_pr2                   (WS_BLK + DBG64SEL + (7<<BUS_STARTBIT) + 0x0006) // 7~4:write gate P&R to custom
#define WS_DBG7_wgate_pr1                   (WS_BLK + DBG64SEL + (7<<BUS_STARTBIT) + 0x0005) // 7~4:write gate P&R to custom
#define WS_DBG7_wgate_pr0                   (WS_BLK + DBG64SEL + (7<<BUS_STARTBIT) + 0x0004) // 7~4:write gate P&R to custom
#define WS_DBG7_efmsri                      (WS_BLK + DBG64SEL + (7<<BUS_STARTBIT) + 0x0003) // 3:efm input nrz-i.
#define WS_DBG7_lsdata                      (WS_BLK + DBG64SEL + (7<<BUS_STARTBIT) + 0x0002) // 2:lightscribe data
//DBG8
#define WS_DBG8_wgate_cd                    (WS_BLK + DBG64SEL + (8<<BUS_STARTBIT) + 0x000F) //15:write enable from encoder
#define WS_DBG8_wgate_cutoff_cd             (WS_BLK + DBG64SEL + (8<<BUS_STARTBIT) + 0x000E)
#define WS_DBG8_wgate_dvd                   (WS_BLK + DBG64SEL + (8<<BUS_STARTBIT) + 0x000D) //13:dvd write gate on div4 clock
#define WS_DBG8_wgate_cutoff_dvd            (WS_BLK + DBG64SEL + (8<<BUS_STARTBIT) + 0x000C)
#define WS_DBG8_wgate_bd                    (WS_BLK + DBG64SEL + (8<<BUS_STARTBIT) + 0x000B) //11:write enable from encoder
#define WS_DBG8_wgate_cutoff_bd             (WS_BLK + DBG64SEL + (8<<BUS_STARTBIT) + 0x000A)
#define WS_DBG8_wgate_cus                   (WS_BLK + DBG64SEL + (8<<BUS_STARTBIT) + 0x0009) // 9:write gate to other block
#define WS_DBG8_wgate_out                   (WS_BLK + DBG64SEL + (8<<BUS_STARTBIT) + 0x0008) // 8:write gate to custom
#define WS_DBG8_wgate_delayed               (WS_BLK + DBG64SEL + (8<<BUS_STARTBIT) + 0x0007) // 7:delayed write gate
#define WS_DBG8_lswgate                     (WS_BLK + DBG64SEL + (8<<BUS_STARTBIT) + 0x0006) // 6:lightscribe wgate
#define WS_DBG8_session_wgate               (WS_BLK + DBG64SEL + (8<<BUS_STARTBIT) + 0x0005) // 5:session-level wgate signal for DVD-RAM
#define WS_DBG8_trerr                       (WS_BLK + DBG64SEL + (8<<BUS_STARTBIT) + 0x0004) // 4:transfer error
#define WS_DBG8_slpupi_cus                  (WS_BLK + DBG64SEL + (8<<BUS_STARTBIT) + 0x0003) // 3:Slip Up Int from CUSTOM to ws_pr
#define WS_DBG8_slpdni_cus                  (WS_BLK + DBG64SEL + (8<<BUS_STARTBIT) + 0x0002) // 2:Slip Down Int from CUSTOM to ws_pr
#define WS_DBG8_wsint                       (WS_BLK + DBG64SEL + (8<<BUS_STARTBIT) + 0x0001) // 1:interrupt

/****************************************************************************
* DGB64 BUS LS BLOCK
****************************************************************************/
//LS_DATA_A_SPOKE_CNT
#define LS_DATA_A_SPOKE_CNT_curbit15                        (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_A_SPOKE_CNT<<BUS_STARTBIT) + 0x003F)
#define LS_DATA_A_SPOKE_CNT_curbit14                        (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_A_SPOKE_CNT<<BUS_STARTBIT) + 0x003E)
#define LS_DATA_A_SPOKE_CNT_curbit13                        (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_A_SPOKE_CNT<<BUS_STARTBIT) + 0x003D)
#define LS_DATA_A_SPOKE_CNT_curbit12                        (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_A_SPOKE_CNT<<BUS_STARTBIT) + 0x003C)
#define LS_DATA_A_SPOKE_CNT_curbit11                        (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_A_SPOKE_CNT<<BUS_STARTBIT) + 0x003B)
#define LS_DATA_A_SPOKE_CNT_curbit10                        (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_A_SPOKE_CNT<<BUS_STARTBIT) + 0x003A)
#define LS_DATA_A_SPOKE_CNT_curbit9                         (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_A_SPOKE_CNT<<BUS_STARTBIT) + 0x0039)
#define LS_DATA_A_SPOKE_CNT_curbit8                         (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_A_SPOKE_CNT<<BUS_STARTBIT) + 0x0038)
#define LS_DATA_A_SPOKE_CNT_curbit7                         (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_A_SPOKE_CNT<<BUS_STARTBIT) + 0x0037)
#define LS_DATA_A_SPOKE_CNT_curbit6                         (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_A_SPOKE_CNT<<BUS_STARTBIT) + 0x0036)
#define LS_DATA_A_SPOKE_CNT_curbit5                         (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_A_SPOKE_CNT<<BUS_STARTBIT) + 0x0035)
#define LS_DATA_A_SPOKE_CNT_curbit4                         (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_A_SPOKE_CNT<<BUS_STARTBIT) + 0x0034)
#define LS_DATA_A_SPOKE_CNT_curbit3                         (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_A_SPOKE_CNT<<BUS_STARTBIT) + 0x0033)
#define LS_DATA_A_SPOKE_CNT_curbit2                         (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_A_SPOKE_CNT<<BUS_STARTBIT) + 0x0032)
#define LS_DATA_A_SPOKE_CNT_curbit1                         (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_A_SPOKE_CNT<<BUS_STARTBIT) + 0x0031)
#define LS_DATA_A_SPOKE_CNT_curbit0                         (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_A_SPOKE_CNT<<BUS_STARTBIT) + 0x0030)
#define LS_DATA_A_SPOKE_CNT_spokecnt9                       (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_A_SPOKE_CNT<<BUS_STARTBIT) + 0x0029)
#define LS_DATA_A_SPOKE_CNT_spokecnt8                       (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_A_SPOKE_CNT<<BUS_STARTBIT) + 0x0028)
#define LS_DATA_A_SPOKE_CNT_spokecnt7                       (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_A_SPOKE_CNT<<BUS_STARTBIT) + 0x0027)
#define LS_DATA_A_SPOKE_CNT_spokecnt6                       (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_A_SPOKE_CNT<<BUS_STARTBIT) + 0x0026)
#define LS_DATA_A_SPOKE_CNT_spokecnt5                       (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_A_SPOKE_CNT<<BUS_STARTBIT) + 0x0025)
#define LS_DATA_A_SPOKE_CNT_spokecnt4                       (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_A_SPOKE_CNT<<BUS_STARTBIT) + 0x0024)
#define LS_DATA_A_SPOKE_CNT_spokecnt3                       (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_A_SPOKE_CNT<<BUS_STARTBIT) + 0x0023)
#define LS_DATA_A_SPOKE_CNT_spokecnt2                       (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_A_SPOKE_CNT<<BUS_STARTBIT) + 0x0022)
#define LS_DATA_A_SPOKE_CNT_spokecnt1                       (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_A_SPOKE_CNT<<BUS_STARTBIT) + 0x0021)
#define LS_DATA_A_SPOKE_CNT_spokecnt0                       (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_A_SPOKE_CNT<<BUS_STARTBIT) + 0x0020)
#define LS_DATA_A_SPOKE_CNT_0a                              (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_A_SPOKE_CNT<<BUS_STARTBIT) + 0x001F)
#define LS_DATA_A_SPOKE_CNT_0b                              (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_A_SPOKE_CNT<<BUS_STARTBIT) + 0x001E)
#define LS_DATA_A_SPOKE_CNT_sysclk                          (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_A_SPOKE_CNT<<BUS_STARTBIT) + 0x001D)
#define LS_DATA_A_SPOKE_CNT_wrclk_p                         (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_A_SPOKE_CNT<<BUS_STARTBIT) + 0x001C)
#define LS_DATA_A_SPOKE_CNT_spoke_p                         (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_A_SPOKE_CNT<<BUS_STARTBIT) + 0x001B)
#define LS_DATA_A_SPOKE_CNT_spokecnt799                     (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_A_SPOKE_CNT<<BUS_STARTBIT) + 0x001A)
#define LS_DATA_A_SPOKE_CNT_ls_wrdata                       (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_A_SPOKE_CNT<<BUS_STARTBIT) + 0x0019)
#define LS_DATA_A_SPOKE_CNT_ls_wgate                        (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_A_SPOKE_CNT<<BUS_STARTBIT) + 0x0018)
#define LS_DATA_A_SPOKE_CNT_state_idx2                      (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_A_SPOKE_CNT<<BUS_STARTBIT) + 0x0017)
#define LS_DATA_A_SPOKE_CNT_state_idx1                      (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_A_SPOKE_CNT<<BUS_STARTBIT) + 0x0016)
#define LS_DATA_A_SPOKE_CNT_state_idx0                      (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_A_SPOKE_CNT<<BUS_STARTBIT) + 0x0015)
#define LS_DATA_A_SPOKE_CNT_state_wr1                       (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_A_SPOKE_CNT<<BUS_STARTBIT) + 0x0014)
#define LS_DATA_A_SPOKE_CNT_state_wr0                       (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_A_SPOKE_CNT<<BUS_STARTBIT) + 0x0013)
#define LS_DATA_A_SPOKE_CNT_sawtcnt_sel                     (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_A_SPOKE_CNT<<BUS_STARTBIT) + 0x0012)
#define LS_DATA_A_SPOKE_CNT_second_index_found              (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_A_SPOKE_CNT<<BUS_STARTBIT) + 0x0011)
#define LS_DATA_A_SPOKE_CNT_pre_second_index_found          (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_A_SPOKE_CNT<<BUS_STARTBIT) + 0x0010)
#define LS_DATA_A_SPOKE_CNT_prim_index_found                (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_A_SPOKE_CNT<<BUS_STARTBIT) + 0x000F)
#define LS_DATA_A_SPOKE_CNT_pre_prim_index_found            (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_A_SPOKE_CNT<<BUS_STARTBIT) + 0x000E)
#define LS_DATA_A_SPOKE_CNT_trkptr                          (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_A_SPOKE_CNT<<BUS_STARTBIT) + 0x000D)
#define LS_DATA_A_SPOKE_CNT_lsdata                          (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_A_SPOKE_CNT<<BUS_STARTBIT) + 0x000C)
#define LS_DATA_A_SPOKE_CNT_trig_trkcmp_int                 (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_A_SPOKE_CNT<<BUS_STARTBIT) + 0x000B)
#define LS_DATA_A_SPOKE_CNT_trig_midcmp_int                 (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_A_SPOKE_CNT<<BUS_STARTBIT) + 0x000A)
#define LS_DATA_A_SPOKE_CNT_trig_spoke0_int                 (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_A_SPOKE_CNT<<BUS_STARTBIT) + 0x0009)
#define LS_DATA_A_SPOKE_CNT_trig_spoke_int                  (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_A_SPOKE_CNT<<BUS_STARTBIT) + 0x0008)
#define LS_DATA_A_SPOKE_CNT_trig_lswrstrt_int               (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_A_SPOKE_CNT<<BUS_STARTBIT) + 0x0007)
#define LS_DATA_A_SPOKE_CNT_trig_lswrerr_int                (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_A_SPOKE_CNT<<BUS_STARTBIT) + 0x0006)
#define LS_DATA_A_SPOKE_CNT_trig_idxmark_int                (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_A_SPOKE_CNT<<BUS_STARTBIT) + 0x0005)
#define LS_DATA_A_SPOKE_CNT_trig_sawtooth_int               (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_A_SPOKE_CNT<<BUS_STARTBIT) + 0x0004)
#define LS_DATA_A_SPOKE_CNT_lstbslip                        (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_A_SPOKE_CNT<<BUS_STARTBIT) + 0x0003)
#define LS_DATA_A_SPOKE_CNT_stabslip                        (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_A_SPOKE_CNT<<BUS_STARTBIT) + 0x0002)
#define LS_DATA_A_SPOKE_CNT_idx2miss                        (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_A_SPOKE_CNT<<BUS_STARTBIT) + 0x0001)
#define LS_DATA_A_SPOKE_CNT_idxmiss                         (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_A_SPOKE_CNT<<BUS_STARTBIT) + 0x0000)
//LS_DATA_B_SPOKE_CNT
#define LS_DATA_B_SPOKE_CNT_curbit15                        (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_B_SPOKE_CNT<<BUS_STARTBIT) + 0x003F)
#define LS_DATA_B_SPOKE_CNT_curbit14                        (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_B_SPOKE_CNT<<BUS_STARTBIT) + 0x003E)
#define LS_DATA_B_SPOKE_CNT_curbit13                        (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_B_SPOKE_CNT<<BUS_STARTBIT) + 0x003D)
#define LS_DATA_B_SPOKE_CNT_curbit12                        (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_B_SPOKE_CNT<<BUS_STARTBIT) + 0x003C)
#define LS_DATA_B_SPOKE_CNT_curbit11                        (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_B_SPOKE_CNT<<BUS_STARTBIT) + 0x003B)
#define LS_DATA_B_SPOKE_CNT_curbit10                        (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_B_SPOKE_CNT<<BUS_STARTBIT) + 0x003A)
#define LS_DATA_B_SPOKE_CNT_curbit9                         (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_B_SPOKE_CNT<<BUS_STARTBIT) + 0x0039)
#define LS_DATA_B_SPOKE_CNT_curbit8                         (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_B_SPOKE_CNT<<BUS_STARTBIT) + 0x0038)
#define LS_DATA_B_SPOKE_CNT_curbit7                         (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_B_SPOKE_CNT<<BUS_STARTBIT) + 0x0037)
#define LS_DATA_B_SPOKE_CNT_curbit6                         (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_B_SPOKE_CNT<<BUS_STARTBIT) + 0x0036)
#define LS_DATA_B_SPOKE_CNT_curbit5                         (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_B_SPOKE_CNT<<BUS_STARTBIT) + 0x0035)
#define LS_DATA_B_SPOKE_CNT_curbit4                         (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_B_SPOKE_CNT<<BUS_STARTBIT) + 0x0034)
#define LS_DATA_B_SPOKE_CNT_curbit3                         (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_B_SPOKE_CNT<<BUS_STARTBIT) + 0x0033)
#define LS_DATA_B_SPOKE_CNT_curbit2                         (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_B_SPOKE_CNT<<BUS_STARTBIT) + 0x0032)
#define LS_DATA_B_SPOKE_CNT_curbit1                         (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_B_SPOKE_CNT<<BUS_STARTBIT) + 0x0031)
#define LS_DATA_B_SPOKE_CNT_curbit0                         (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_B_SPOKE_CNT<<BUS_STARTBIT) + 0x0030)
#define LS_DATA_B_SPOKE_CNT_spokecnt9                       (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_B_SPOKE_CNT<<BUS_STARTBIT) + 0x0029)
#define LS_DATA_B_SPOKE_CNT_spokecnt8                       (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_B_SPOKE_CNT<<BUS_STARTBIT) + 0x0028)
#define LS_DATA_B_SPOKE_CNT_spokecnt7                       (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_B_SPOKE_CNT<<BUS_STARTBIT) + 0x0027)
#define LS_DATA_B_SPOKE_CNT_spokecnt6                       (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_B_SPOKE_CNT<<BUS_STARTBIT) + 0x0026)
#define LS_DATA_B_SPOKE_CNT_spokecnt5                       (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_B_SPOKE_CNT<<BUS_STARTBIT) + 0x0025)
#define LS_DATA_B_SPOKE_CNT_spokecnt4                       (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_B_SPOKE_CNT<<BUS_STARTBIT) + 0x0024)
#define LS_DATA_B_SPOKE_CNT_spokecnt3                       (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_B_SPOKE_CNT<<BUS_STARTBIT) + 0x0023)
#define LS_DATA_B_SPOKE_CNT_spokecnt2                       (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_B_SPOKE_CNT<<BUS_STARTBIT) + 0x0022)
#define LS_DATA_B_SPOKE_CNT_spokecnt1                       (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_B_SPOKE_CNT<<BUS_STARTBIT) + 0x0021)
#define LS_DATA_B_SPOKE_CNT_spokecnt0                       (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_B_SPOKE_CNT<<BUS_STARTBIT) + 0x0020)
#define LS_DATA_B_SPOKE_CNT_0a                              (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_B_SPOKE_CNT<<BUS_STARTBIT) + 0x001F)
#define LS_DATA_B_SPOKE_CNT_0b                              (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_B_SPOKE_CNT<<BUS_STARTBIT) + 0x001E)
#define LS_DATA_B_SPOKE_CNT_0c                              (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_B_SPOKE_CNT<<BUS_STARTBIT) + 0x001D)
#define LS_DATA_B_SPOKE_CNT_0d                              (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_B_SPOKE_CNT<<BUS_STARTBIT) + 0x001C)
#define LS_DATA_B_SPOKE_CNT_sysclk                          (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_B_SPOKE_CNT<<BUS_STARTBIT) + 0x001B)
#define LS_DATA_B_SPOKE_CNT_ls_spoke                        (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_B_SPOKE_CNT<<BUS_STARTBIT) + 0x001A)
#define LS_DATA_B_SPOKE_CNT_servo_rp                        (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_B_SPOKE_CNT<<BUS_STARTBIT) + 0x0019)
#define LS_DATA_B_SPOKE_CNT_servo_bs                        (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_B_SPOKE_CNT<<BUS_STARTBIT) + 0x0018)
#define LS_DATA_B_SPOKE_CNT_defect                          (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_B_SPOKE_CNT<<BUS_STARTBIT) + 0x0017)
#define LS_DATA_B_SPOKE_CNT_servo_rx                        (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_B_SPOKE_CNT<<BUS_STARTBIT) + 0x0016)
#define LS_DATA_B_SPOKE_CNT_sram_enable                     (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_B_SPOKE_CNT<<BUS_STARTBIT) + 0x0015)
#define LS_DATA_B_SPOKE_CNT_sram_wen                        (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_B_SPOKE_CNT<<BUS_STARTBIT) + 0x0014)
#define LS_DATA_B_SPOKE_CNT_sram_addr11                     (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_B_SPOKE_CNT<<BUS_STARTBIT) + 0x0013)
#define LS_DATA_B_SPOKE_CNT_sram_addr10                     (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_B_SPOKE_CNT<<BUS_STARTBIT) + 0x0012)
#define LS_DATA_B_SPOKE_CNT_sram_addr9                      (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_B_SPOKE_CNT<<BUS_STARTBIT) + 0x0011)
#define LS_DATA_B_SPOKE_CNT_sram_addr8                      (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_B_SPOKE_CNT<<BUS_STARTBIT) + 0x0010)
#define LS_DATA_B_SPOKE_CNT_sram_addr7                      (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_B_SPOKE_CNT<<BUS_STARTBIT) + 0x000F)
#define LS_DATA_B_SPOKE_CNT_sram_addr6                      (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_B_SPOKE_CNT<<BUS_STARTBIT) + 0x000E)
#define LS_DATA_B_SPOKE_CNT_sram_addr5                      (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_B_SPOKE_CNT<<BUS_STARTBIT) + 0x000D)
#define LS_DATA_B_SPOKE_CNT_sram_addr4                      (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_B_SPOKE_CNT<<BUS_STARTBIT) + 0x000C)
#define LS_DATA_B_SPOKE_CNT_sram_addr3                      (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_B_SPOKE_CNT<<BUS_STARTBIT) + 0x000B)
#define LS_DATA_B_SPOKE_CNT_sram_addr2                      (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_B_SPOKE_CNT<<BUS_STARTBIT) + 0x000A)
#define LS_DATA_B_SPOKE_CNT_sram_addr1                      (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_B_SPOKE_CNT<<BUS_STARTBIT) + 0x0009)
#define LS_DATA_B_SPOKE_CNT_sram_addr0                      (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_B_SPOKE_CNT<<BUS_STARTBIT) + 0x0008)
#define LS_DATA_B_SPOKE_CNT_sram_wdata7                     (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_B_SPOKE_CNT<<BUS_STARTBIT) + 0x0007)
#define LS_DATA_B_SPOKE_CNT_sram_wdata6                     (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_B_SPOKE_CNT<<BUS_STARTBIT) + 0x0006)
#define LS_DATA_B_SPOKE_CNT_sram_wdata5                     (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_B_SPOKE_CNT<<BUS_STARTBIT) + 0x0005)
#define LS_DATA_B_SPOKE_CNT_sram_wdata4                     (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_B_SPOKE_CNT<<BUS_STARTBIT) + 0x0004)
#define LS_DATA_B_SPOKE_CNT_sram_wdata3                     (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_B_SPOKE_CNT<<BUS_STARTBIT) + 0x0003)
#define LS_DATA_B_SPOKE_CNT_sram_wdata2                     (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_B_SPOKE_CNT<<BUS_STARTBIT) + 0x0002)
#define LS_DATA_B_SPOKE_CNT_sram_wdata1                     (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_B_SPOKE_CNT<<BUS_STARTBIT) + 0x0001)
#define LS_DATA_B_SPOKE_CNT_sram_wdata0                     (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_B_SPOKE_CNT<<BUS_STARTBIT) + 0x0000)
//LS_DATA_A_CURBIT_CNT
#define LS_DATA_A_CURBIT_CNT_sawtcnt15                      (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_A_CURBIT_CNT<<BUS_STARTBIT) + 0x003F)
#define LS_DATA_A_CURBIT_CNT_sawtcnt14                      (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_A_CURBIT_CNT<<BUS_STARTBIT) + 0x003E)
#define LS_DATA_A_CURBIT_CNT_sawtcnt13                      (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_A_CURBIT_CNT<<BUS_STARTBIT) + 0x003D)
#define LS_DATA_A_CURBIT_CNT_sawtcnt12                      (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_A_CURBIT_CNT<<BUS_STARTBIT) + 0x003C)
#define LS_DATA_A_CURBIT_CNT_sawtcnt11                      (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_A_CURBIT_CNT<<BUS_STARTBIT) + 0x003B)
#define LS_DATA_A_CURBIT_CNT_sawtcnt10                      (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_A_CURBIT_CNT<<BUS_STARTBIT) + 0x003A)
#define LS_DATA_A_CURBIT_CNT_sawtcnt9                       (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_A_CURBIT_CNT<<BUS_STARTBIT) + 0x0039)
#define LS_DATA_A_CURBIT_CNT_sawtcnt8                       (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_A_CURBIT_CNT<<BUS_STARTBIT) + 0x0038)
#define LS_DATA_A_CURBIT_CNT_sawtcnt7                       (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_A_CURBIT_CNT<<BUS_STARTBIT) + 0x0037)
#define LS_DATA_A_CURBIT_CNT_sawtcnt6                       (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_A_CURBIT_CNT<<BUS_STARTBIT) + 0x0036)
#define LS_DATA_A_CURBIT_CNT_sawtcnt5                       (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_A_CURBIT_CNT<<BUS_STARTBIT) + 0x0035)
#define LS_DATA_A_CURBIT_CNT_sawtcnt4                       (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_A_CURBIT_CNT<<BUS_STARTBIT) + 0x0034)
#define LS_DATA_A_CURBIT_CNT_sawtcnt3                       (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_A_CURBIT_CNT<<BUS_STARTBIT) + 0x0033)
#define LS_DATA_A_CURBIT_CNT_sawtcnt2                       (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_A_CURBIT_CNT<<BUS_STARTBIT) + 0x0032)
#define LS_DATA_A_CURBIT_CNT_sawtcnt1                       (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_A_CURBIT_CNT<<BUS_STARTBIT) + 0x0031)
#define LS_DATA_A_CURBIT_CNT_sawtcnt0                       (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_A_CURBIT_CNT<<BUS_STARTBIT) + 0x0030)
#define LS_DATA_A_CURBIT_CNT_curbit15                       (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_A_CURBIT_CNT<<BUS_STARTBIT) + 0x002F)
#define LS_DATA_A_CURBIT_CNT_curbit14                       (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_A_CURBIT_CNT<<BUS_STARTBIT) + 0x002E)
#define LS_DATA_A_CURBIT_CNT_curbit13                       (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_A_CURBIT_CNT<<BUS_STARTBIT) + 0x002D)
#define LS_DATA_A_CURBIT_CNT_curbit12                       (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_A_CURBIT_CNT<<BUS_STARTBIT) + 0x002C)
#define LS_DATA_A_CURBIT_CNT_curbit11                       (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_A_CURBIT_CNT<<BUS_STARTBIT) + 0x002B)
#define LS_DATA_A_CURBIT_CNT_curbit10                       (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_A_CURBIT_CNT<<BUS_STARTBIT) + 0x002A)
#define LS_DATA_A_CURBIT_CNT_curbit9                        (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_A_CURBIT_CNT<<BUS_STARTBIT) + 0x0029)
#define LS_DATA_A_CURBIT_CNT_curbit8                        (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_A_CURBIT_CNT<<BUS_STARTBIT) + 0x0028)
#define LS_DATA_A_CURBIT_CNT_curbit7                        (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_A_CURBIT_CNT<<BUS_STARTBIT) + 0x0027)
#define LS_DATA_A_CURBIT_CNT_curbit6                        (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_A_CURBIT_CNT<<BUS_STARTBIT) + 0x0026)
#define LS_DATA_A_CURBIT_CNT_curbit5                        (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_A_CURBIT_CNT<<BUS_STARTBIT) + 0x0025)
#define LS_DATA_A_CURBIT_CNT_curbit4                        (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_A_CURBIT_CNT<<BUS_STARTBIT) + 0x0024)
#define LS_DATA_A_CURBIT_CNT_curbit3                        (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_A_CURBIT_CNT<<BUS_STARTBIT) + 0x0023)
#define LS_DATA_A_CURBIT_CNT_curbit2                        (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_A_CURBIT_CNT<<BUS_STARTBIT) + 0x0022)
#define LS_DATA_A_CURBIT_CNT_curbit1                        (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_A_CURBIT_CNT<<BUS_STARTBIT) + 0x0021)
#define LS_DATA_A_CURBIT_CNT_curbit0                        (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_A_CURBIT_CNT<<BUS_STARTBIT) + 0x0020)
#define LS_DATA_A_CURBIT_CNT_0a                             (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_A_CURBIT_CNT<<BUS_STARTBIT) + 0x001F)
#define LS_DATA_A_CURBIT_CNT_0b                             (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_A_CURBIT_CNT<<BUS_STARTBIT) + 0x001E)
#define LS_DATA_A_CURBIT_CNT_sysclk                         (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_A_CURBIT_CNT<<BUS_STARTBIT) + 0x001D)
#define LS_DATA_A_CURBIT_CNT_wrclk_p                        (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_A_CURBIT_CNT<<BUS_STARTBIT) + 0x001C)
#define LS_DATA_A_CURBIT_CNT_spoke_p                        (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_A_CURBIT_CNT<<BUS_STARTBIT) + 0x001B)
#define LS_DATA_A_CURBIT_CNT_curbit799                      (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_A_CURBIT_CNT<<BUS_STARTBIT) + 0x001A)
#define LS_DATA_A_CURBIT_CNT_ls_wrdata                      (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_A_CURBIT_CNT<<BUS_STARTBIT) + 0x0019)
#define LS_DATA_A_CURBIT_CNT_ls_wgate                       (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_A_CURBIT_CNT<<BUS_STARTBIT) + 0x0018)
#define LS_DATA_A_CURBIT_CNT_state_idx2                     (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_A_CURBIT_CNT<<BUS_STARTBIT) + 0x0017)
#define LS_DATA_A_CURBIT_CNT_state_idx1                     (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_A_CURBIT_CNT<<BUS_STARTBIT) + 0x0016)
#define LS_DATA_A_CURBIT_CNT_state_idx0                     (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_A_CURBIT_CNT<<BUS_STARTBIT) + 0x0015)
#define LS_DATA_A_CURBIT_CNT_state_wr1                      (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_A_CURBIT_CNT<<BUS_STARTBIT) + 0x0014)
#define LS_DATA_A_CURBIT_CNT_state_wr0                      (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_A_CURBIT_CNT<<BUS_STARTBIT) + 0x0013)
#define LS_DATA_A_CURBIT_CNT_sawtcnt_sel                    (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_A_CURBIT_CNT<<BUS_STARTBIT) + 0x0012)
#define LS_DATA_A_CURBIT_CNT_second_index_found             (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_A_CURBIT_CNT<<BUS_STARTBIT) + 0x0011)
#define LS_DATA_A_CURBIT_CNT_pre_second_index_found         (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_A_CURBIT_CNT<<BUS_STARTBIT) + 0x0010)
#define LS_DATA_A_CURBIT_CNT_prim_index_found               (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_A_CURBIT_CNT<<BUS_STARTBIT) + 0x000F)
#define LS_DATA_A_CURBIT_CNT_pre_prim_index_found           (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_A_CURBIT_CNT<<BUS_STARTBIT) + 0x000E)
#define LS_DATA_A_CURBIT_CNT_trkptr                         (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_A_CURBIT_CNT<<BUS_STARTBIT) + 0x000D)
#define LS_DATA_A_CURBIT_CNT_lsdata                         (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_A_CURBIT_CNT<<BUS_STARTBIT) + 0x000C)
#define LS_DATA_A_CURBIT_CNT_trig_trkcmp_int                (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_A_CURBIT_CNT<<BUS_STARTBIT) + 0x000B)
#define LS_DATA_A_CURBIT_CNT_trig_midcmp_int                (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_A_CURBIT_CNT<<BUS_STARTBIT) + 0x000A)
#define LS_DATA_A_CURBIT_CNT_trig_spoke0_int                (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_A_CURBIT_CNT<<BUS_STARTBIT) + 0x0009)
#define LS_DATA_A_CURBIT_CNT_trig_spoke_int                 (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_A_CURBIT_CNT<<BUS_STARTBIT) + 0x0008)
#define LS_DATA_A_CURBIT_CNT_trig_lswrstrt_int              (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_A_CURBIT_CNT<<BUS_STARTBIT) + 0x0007)
#define LS_DATA_A_CURBIT_CNT_trig_lswrerr_int               (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_A_CURBIT_CNT<<BUS_STARTBIT) + 0x0006)
#define LS_DATA_A_CURBIT_CNT_trig_idxmark_int               (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_A_CURBIT_CNT<<BUS_STARTBIT) + 0x0005)
#define LS_DATA_A_CURBIT_CNT_trig_sawtooth_int              (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_A_CURBIT_CNT<<BUS_STARTBIT) + 0x0004)
#define LS_DATA_A_CURBIT_CNT_lstbslip                       (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_A_CURBIT_CNT<<BUS_STARTBIT) + 0x0003)
#define LS_DATA_A_CURBIT_CNT_stabslip                       (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_A_CURBIT_CNT<<BUS_STARTBIT) + 0x0002)
#define LS_DATA_A_CURBIT_CNT_idx2miss                       (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_A_CURBIT_CNT<<BUS_STARTBIT) + 0x0001)
#define LS_DATA_A_CURBIT_CNT_idxmiss                        (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_A_CURBIT_CNT<<BUS_STARTBIT) + 0x0000)
//LS_DATA_B_CURBIT_CNT
#define LS_DATA_B_CURBIT_CNT_sawtcnt15                      (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_B_CURBIT_CNT<<BUS_STARTBIT) + 0x003F)
#define LS_DATA_B_CURBIT_CNT_sawtcnt14                      (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_B_CURBIT_CNT<<BUS_STARTBIT) + 0x003E)
#define LS_DATA_B_CURBIT_CNT_sawtcnt13                      (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_B_CURBIT_CNT<<BUS_STARTBIT) + 0x003D)
#define LS_DATA_B_CURBIT_CNT_sawtcnt12                      (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_B_CURBIT_CNT<<BUS_STARTBIT) + 0x003C)
#define LS_DATA_B_CURBIT_CNT_sawtcnt11                      (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_B_CURBIT_CNT<<BUS_STARTBIT) + 0x003B)
#define LS_DATA_B_CURBIT_CNT_sawtcnt10                      (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_B_CURBIT_CNT<<BUS_STARTBIT) + 0x003A)
#define LS_DATA_B_CURBIT_CNT_sawtcnt9                       (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_B_CURBIT_CNT<<BUS_STARTBIT) + 0x0039)
#define LS_DATA_B_CURBIT_CNT_sawtcnt8                       (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_B_CURBIT_CNT<<BUS_STARTBIT) + 0x0038)
#define LS_DATA_B_CURBIT_CNT_sawtcnt7                       (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_B_CURBIT_CNT<<BUS_STARTBIT) + 0x0037)
#define LS_DATA_B_CURBIT_CNT_sawtcnt6                       (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_B_CURBIT_CNT<<BUS_STARTBIT) + 0x0036)
#define LS_DATA_B_CURBIT_CNT_sawtcnt5                       (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_B_CURBIT_CNT<<BUS_STARTBIT) + 0x0035)
#define LS_DATA_B_CURBIT_CNT_sawtcnt4                       (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_B_CURBIT_CNT<<BUS_STARTBIT) + 0x0034)
#define LS_DATA_B_CURBIT_CNT_sawtcnt3                       (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_B_CURBIT_CNT<<BUS_STARTBIT) + 0x0033)
#define LS_DATA_B_CURBIT_CNT_sawtcnt2                       (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_B_CURBIT_CNT<<BUS_STARTBIT) + 0x0032)
#define LS_DATA_B_CURBIT_CNT_sawtcnt1                       (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_B_CURBIT_CNT<<BUS_STARTBIT) + 0x0031)
#define LS_DATA_B_CURBIT_CNT_sawtcnt0                       (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_B_CURBIT_CNT<<BUS_STARTBIT) + 0x0030)
#define LS_DATA_B_CURBIT_CNT_curbit15                       (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_B_CURBIT_CNT<<BUS_STARTBIT) + 0x002F)
#define LS_DATA_B_CURBIT_CNT_curbit14                       (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_B_CURBIT_CNT<<BUS_STARTBIT) + 0x002E)
#define LS_DATA_B_CURBIT_CNT_curbit13                       (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_B_CURBIT_CNT<<BUS_STARTBIT) + 0x002D)
#define LS_DATA_B_CURBIT_CNT_curbit12                       (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_B_CURBIT_CNT<<BUS_STARTBIT) + 0x002C)
#define LS_DATA_B_CURBIT_CNT_curbit11                       (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_B_CURBIT_CNT<<BUS_STARTBIT) + 0x002B)
#define LS_DATA_B_CURBIT_CNT_curbit10                       (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_B_CURBIT_CNT<<BUS_STARTBIT) + 0x002A)
#define LS_DATA_B_CURBIT_CNT_curbit9                        (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_B_CURBIT_CNT<<BUS_STARTBIT) + 0x0029)
#define LS_DATA_B_CURBIT_CNT_curbit8                        (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_B_CURBIT_CNT<<BUS_STARTBIT) + 0x0028)
#define LS_DATA_B_CURBIT_CNT_curbit7                        (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_B_CURBIT_CNT<<BUS_STARTBIT) + 0x0027)
#define LS_DATA_B_CURBIT_CNT_curbit6                        (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_B_CURBIT_CNT<<BUS_STARTBIT) + 0x0026)
#define LS_DATA_B_CURBIT_CNT_curbit5                        (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_B_CURBIT_CNT<<BUS_STARTBIT) + 0x0025)
#define LS_DATA_B_CURBIT_CNT_curbit4                        (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_B_CURBIT_CNT<<BUS_STARTBIT) + 0x0024)
#define LS_DATA_B_CURBIT_CNT_curbit3                        (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_B_CURBIT_CNT<<BUS_STARTBIT) + 0x0023)
#define LS_DATA_B_CURBIT_CNT_curbit2                        (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_B_CURBIT_CNT<<BUS_STARTBIT) + 0x0022)
#define LS_DATA_B_CURBIT_CNT_curbit1                        (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_B_CURBIT_CNT<<BUS_STARTBIT) + 0x0021)
#define LS_DATA_B_CURBIT_CNT_curbit0                        (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_B_CURBIT_CNT<<BUS_STARTBIT) + 0x0020)
#define LS_DATA_B_CURBIT_CNT_0a                             (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_B_CURBIT_CNT<<BUS_STARTBIT) + 0x001F)
#define LS_DATA_B_CURBIT_CNT_0b                             (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_B_CURBIT_CNT<<BUS_STARTBIT) + 0x001E)
#define LS_DATA_B_CURBIT_CNT_0c                             (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_B_CURBIT_CNT<<BUS_STARTBIT) + 0x001D)
#define LS_DATA_B_CURBIT_CNT_0d                             (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_B_CURBIT_CNT<<BUS_STARTBIT) + 0x001C)
#define LS_DATA_B_CURBIT_CNT_sysclk                         (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_B_CURBIT_CNT<<BUS_STARTBIT) + 0x001B)
#define LS_DATA_B_CURBIT_CNT_ls_spoke                       (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_B_CURBIT_CNT<<BUS_STARTBIT) + 0x001A)
#define LS_DATA_B_CURBIT_CNT_servo_rp                       (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_B_CURBIT_CNT<<BUS_STARTBIT) + 0x0019)
#define LS_DATA_B_CURBIT_CNT_servo_bs                       (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_B_CURBIT_CNT<<BUS_STARTBIT) + 0x0018)
#define LS_DATA_B_CURBIT_CNT_defect                         (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_B_CURBIT_CNT<<BUS_STARTBIT) + 0x0017)
#define LS_DATA_B_CURBIT_CNT_servo_rx                       (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_B_CURBIT_CNT<<BUS_STARTBIT) + 0x0016)
#define LS_DATA_B_CURBIT_CNT_sram_enable                    (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_B_CURBIT_CNT<<BUS_STARTBIT) + 0x0015)
#define LS_DATA_B_CURBIT_CNT_sram_wen                       (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_B_CURBIT_CNT<<BUS_STARTBIT) + 0x0014)
#define LS_DATA_B_CURBIT_CNT_sram_addr11                    (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_B_CURBIT_CNT<<BUS_STARTBIT) + 0x0013)
#define LS_DATA_B_CURBIT_CNT_sram_addr10                    (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_B_CURBIT_CNT<<BUS_STARTBIT) + 0x0012)
#define LS_DATA_B_CURBIT_CNT_sram_addr9                     (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_B_CURBIT_CNT<<BUS_STARTBIT) + 0x0011)
#define LS_DATA_B_CURBIT_CNT_sram_addr8                     (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_B_CURBIT_CNT<<BUS_STARTBIT) + 0x0010)
#define LS_DATA_B_CURBIT_CNT_sram_addr7                     (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_B_CURBIT_CNT<<BUS_STARTBIT) + 0x000F)
#define LS_DATA_B_CURBIT_CNT_sram_addr6                     (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_B_CURBIT_CNT<<BUS_STARTBIT) + 0x000E)
#define LS_DATA_B_CURBIT_CNT_sram_addr5                     (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_B_CURBIT_CNT<<BUS_STARTBIT) + 0x000D)
#define LS_DATA_B_CURBIT_CNT_sram_addr4                     (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_B_CURBIT_CNT<<BUS_STARTBIT) + 0x000C)
#define LS_DATA_B_CURBIT_CNT_sram_addr3                     (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_B_CURBIT_CNT<<BUS_STARTBIT) + 0x000B)
#define LS_DATA_B_CURBIT_CNT_sram_addr2                     (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_B_CURBIT_CNT<<BUS_STARTBIT) + 0x000A)
#define LS_DATA_B_CURBIT_CNT_sram_addr1                     (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_B_CURBIT_CNT<<BUS_STARTBIT) + 0x0009)
#define LS_DATA_B_CURBIT_CNT_sram_addr0                     (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_B_CURBIT_CNT<<BUS_STARTBIT) + 0x0008)
#define LS_DATA_B_CURBIT_CNT_sram_wdata7                    (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_B_CURBIT_CNT<<BUS_STARTBIT) + 0x0007)
#define LS_DATA_B_CURBIT_CNT_sram_wdata6                    (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_B_CURBIT_CNT<<BUS_STARTBIT) + 0x0006)
#define LS_DATA_B_CURBIT_CNT_sram_wdata5                    (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_B_CURBIT_CNT<<BUS_STARTBIT) + 0x0005)
#define LS_DATA_B_CURBIT_CNT_sram_wdata4                    (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_B_CURBIT_CNT<<BUS_STARTBIT) + 0x0004)
#define LS_DATA_B_CURBIT_CNT_sram_wdata3                    (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_B_CURBIT_CNT<<BUS_STARTBIT) + 0x0003)
#define LS_DATA_B_CURBIT_CNT_sram_wdata2                    (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_B_CURBIT_CNT<<BUS_STARTBIT) + 0x0002)
#define LS_DATA_B_CURBIT_CNT_sram_wdata1                    (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_B_CURBIT_CNT<<BUS_STARTBIT) + 0x0001)
#define LS_DATA_B_CURBIT_CNT_sram_wdata0                    (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_B_CURBIT_CNT<<BUS_STARTBIT) + 0x0000)
//LS_DATA_A_SAWT_CNT
#define LS_DATA_A_SAWT_CNT_spokecnt9                        (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_A_SAWT_CNT<<BUS_STARTBIT) + 0x0039)
#define LS_DATA_A_SAWT_CNT_spokecnt8                        (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_A_SAWT_CNT<<BUS_STARTBIT) + 0x0038)
#define LS_DATA_A_SAWT_CNT_spokecnt7                        (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_A_SAWT_CNT<<BUS_STARTBIT) + 0x0037)
#define LS_DATA_A_SAWT_CNT_spokecnt6                        (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_A_SAWT_CNT<<BUS_STARTBIT) + 0x0036)
#define LS_DATA_A_SAWT_CNT_spokecnt5                        (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_A_SAWT_CNT<<BUS_STARTBIT) + 0x0035)
#define LS_DATA_A_SAWT_CNT_spokecnt4                        (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_A_SAWT_CNT<<BUS_STARTBIT) + 0x0034)
#define LS_DATA_A_SAWT_CNT_spokecnt3                        (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_A_SAWT_CNT<<BUS_STARTBIT) + 0x0033)
#define LS_DATA_A_SAWT_CNT_spokecnt2                        (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_A_SAWT_CNT<<BUS_STARTBIT) + 0x0032)
#define LS_DATA_A_SAWT_CNT_spokecnt1                        (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_A_SAWT_CNT<<BUS_STARTBIT) + 0x0031)
#define LS_DATA_A_SAWT_CNT_spokecnt0                        (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_A_SAWT_CNT<<BUS_STARTBIT) + 0x0030)
#define LS_DATA_A_SAWT_CNT_sawtcnt15                        (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_A_SAWT_CNT<<BUS_STARTBIT) + 0x002F)
#define LS_DATA_A_SAWT_CNT_sawtcnt14                        (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_A_SAWT_CNT<<BUS_STARTBIT) + 0x002E)
#define LS_DATA_A_SAWT_CNT_sawtcnt13                        (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_A_SAWT_CNT<<BUS_STARTBIT) + 0x002D)
#define LS_DATA_A_SAWT_CNT_sawtcnt12                        (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_A_SAWT_CNT<<BUS_STARTBIT) + 0x002C)
#define LS_DATA_A_SAWT_CNT_sawtcnt11                        (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_A_SAWT_CNT<<BUS_STARTBIT) + 0x002B)
#define LS_DATA_A_SAWT_CNT_sawtcnt10                        (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_A_SAWT_CNT<<BUS_STARTBIT) + 0x002A)
#define LS_DATA_A_SAWT_CNT_sawtcnt9                         (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_A_SAWT_CNT<<BUS_STARTBIT) + 0x0029)
#define LS_DATA_A_SAWT_CNT_sawtcnt8                         (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_A_SAWT_CNT<<BUS_STARTBIT) + 0x0028)
#define LS_DATA_A_SAWT_CNT_sawtcnt7                         (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_A_SAWT_CNT<<BUS_STARTBIT) + 0x0027)
#define LS_DATA_A_SAWT_CNT_sawtcnt6                         (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_A_SAWT_CNT<<BUS_STARTBIT) + 0x0026)
#define LS_DATA_A_SAWT_CNT_sawtcnt5                         (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_A_SAWT_CNT<<BUS_STARTBIT) + 0x0025)
#define LS_DATA_A_SAWT_CNT_sawtcnt4                         (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_A_SAWT_CNT<<BUS_STARTBIT) + 0x0024)
#define LS_DATA_A_SAWT_CNT_sawtcnt3                         (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_A_SAWT_CNT<<BUS_STARTBIT) + 0x0023)
#define LS_DATA_A_SAWT_CNT_sawtcnt2                         (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_A_SAWT_CNT<<BUS_STARTBIT) + 0x0022)
#define LS_DATA_A_SAWT_CNT_sawtcnt1                         (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_A_SAWT_CNT<<BUS_STARTBIT) + 0x0021)
#define LS_DATA_A_SAWT_CNT_sawtcnt0                         (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_A_SAWT_CNT<<BUS_STARTBIT) + 0x0020)
#define LS_DATA_A_SAWT_CNT_0a                               (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_A_SAWT_CNT<<BUS_STARTBIT) + 0x001F)
#define LS_DATA_A_SAWT_CNT_0b                               (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_A_SAWT_CNT<<BUS_STARTBIT) + 0x001E)
#define LS_DATA_A_SAWT_CNT_sysclk                           (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_A_SAWT_CNT<<BUS_STARTBIT) + 0x001D)
#define LS_DATA_A_SAWT_CNT_wrclk_p                          (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_A_SAWT_CNT<<BUS_STARTBIT) + 0x001C)
#define LS_DATA_A_SAWT_CNT_spoke_p                          (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_A_SAWT_CNT<<BUS_STARTBIT) + 0x001B)
#define LS_DATA_A_SAWT_CNT_curbit799                        (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_A_SAWT_CNT<<BUS_STARTBIT) + 0x001A)
#define LS_DATA_A_SAWT_CNT_ls_wrdata                        (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_A_SAWT_CNT<<BUS_STARTBIT) + 0x0019)
#define LS_DATA_A_SAWT_CNT_ls_wgate                         (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_A_SAWT_CNT<<BUS_STARTBIT) + 0x0018)
#define LS_DATA_A_SAWT_CNT_state_idx2                       (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_A_SAWT_CNT<<BUS_STARTBIT) + 0x0017)
#define LS_DATA_A_SAWT_CNT_state_idx1                       (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_A_SAWT_CNT<<BUS_STARTBIT) + 0x0016)
#define LS_DATA_A_SAWT_CNT_state_idx0                       (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_A_SAWT_CNT<<BUS_STARTBIT) + 0x0015)
#define LS_DATA_A_SAWT_CNT_state_wr1                        (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_A_SAWT_CNT<<BUS_STARTBIT) + 0x0014)
#define LS_DATA_A_SAWT_CNT_state_wr0                        (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_A_SAWT_CNT<<BUS_STARTBIT) + 0x0013)
#define LS_DATA_A_SAWT_CNT_sawtcnt_sel                      (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_A_SAWT_CNT<<BUS_STARTBIT) + 0x0012)
#define LS_DATA_A_SAWT_CNT_second_index_found               (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_A_SAWT_CNT<<BUS_STARTBIT) + 0x0011)
#define LS_DATA_A_SAWT_CNT_pre_second_index_found           (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_A_SAWT_CNT<<BUS_STARTBIT) + 0x0010)
#define LS_DATA_A_SAWT_CNT_prim_index_found                 (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_A_SAWT_CNT<<BUS_STARTBIT) + 0x000F)
#define LS_DATA_A_SAWT_CNT_pre_prim_index_found             (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_A_SAWT_CNT<<BUS_STARTBIT) + 0x000E)
#define LS_DATA_A_SAWT_CNT_trkptr                           (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_A_SAWT_CNT<<BUS_STARTBIT) + 0x000D)
#define LS_DATA_A_SAWT_CNT_lsdata                           (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_A_SAWT_CNT<<BUS_STARTBIT) + 0x000C)
#define LS_DATA_A_SAWT_CNT_trig_trkcmp_int                  (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_A_SAWT_CNT<<BUS_STARTBIT) + 0x000B)
#define LS_DATA_A_SAWT_CNT_trig_midcmp_int                  (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_A_SAWT_CNT<<BUS_STARTBIT) + 0x000A)
#define LS_DATA_A_SAWT_CNT_trig_spoke0_int                  (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_A_SAWT_CNT<<BUS_STARTBIT) + 0x0009)
#define LS_DATA_A_SAWT_CNT_trig_spoke_int                   (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_A_SAWT_CNT<<BUS_STARTBIT) + 0x0008)
#define LS_DATA_A_SAWT_CNT_trig_lswrstrt_int                (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_A_SAWT_CNT<<BUS_STARTBIT) + 0x0007)
#define LS_DATA_A_SAWT_CNT_trig_lswrerr_int                 (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_A_SAWT_CNT<<BUS_STARTBIT) + 0x0006)
#define LS_DATA_A_SAWT_CNT_trig_idxmark_int                 (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_A_SAWT_CNT<<BUS_STARTBIT) + 0x0005)
#define LS_DATA_A_SAWT_CNT_trig_sawtooth_int                (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_A_SAWT_CNT<<BUS_STARTBIT) + 0x0004)
#define LS_DATA_A_SAWT_CNT_lstbslip                         (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_A_SAWT_CNT<<BUS_STARTBIT) + 0x0003)
#define LS_DATA_A_SAWT_CNT_stabslip                         (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_A_SAWT_CNT<<BUS_STARTBIT) + 0x0002)
#define LS_DATA_A_SAWT_CNT_idx2miss                         (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_A_SAWT_CNT<<BUS_STARTBIT) + 0x0001)
#define LS_DATA_A_SAWT_CNT_idxmiss                          (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_A_SAWT_CNT<<BUS_STARTBIT) + 0x0000)
//LS_DATA_B_SAWT_CNT
#define LS_DATA_B_SAWT_CNT_spokecnt9                        (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_B_SAWT_CNT<<BUS_STARTBIT) + 0x0039)
#define LS_DATA_B_SAWT_CNT_spokecnt8                        (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_B_SAWT_CNT<<BUS_STARTBIT) + 0x0038)
#define LS_DATA_B_SAWT_CNT_spokecnt7                        (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_B_SAWT_CNT<<BUS_STARTBIT) + 0x0037)
#define LS_DATA_B_SAWT_CNT_spokecnt6                        (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_B_SAWT_CNT<<BUS_STARTBIT) + 0x0036)
#define LS_DATA_B_SAWT_CNT_spokecnt5                        (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_B_SAWT_CNT<<BUS_STARTBIT) + 0x0035)
#define LS_DATA_B_SAWT_CNT_spokecnt4                        (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_B_SAWT_CNT<<BUS_STARTBIT) + 0x0034)
#define LS_DATA_B_SAWT_CNT_spokecnt3                        (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_B_SAWT_CNT<<BUS_STARTBIT) + 0x0033)
#define LS_DATA_B_SAWT_CNT_spokecnt2                        (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_B_SAWT_CNT<<BUS_STARTBIT) + 0x0032)
#define LS_DATA_B_SAWT_CNT_spokecnt1                        (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_B_SAWT_CNT<<BUS_STARTBIT) + 0x0031)
#define LS_DATA_B_SAWT_CNT_spokecnt0                        (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_B_SAWT_CNT<<BUS_STARTBIT) + 0x0030)
#define LS_DATA_B_SAWT_CNT_sawtcnt15                        (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_B_SAWT_CNT<<BUS_STARTBIT) + 0x002F)
#define LS_DATA_B_SAWT_CNT_sawtcnt14                        (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_B_SAWT_CNT<<BUS_STARTBIT) + 0x002E)
#define LS_DATA_B_SAWT_CNT_sawtcnt13                        (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_B_SAWT_CNT<<BUS_STARTBIT) + 0x002D)
#define LS_DATA_B_SAWT_CNT_sawtcnt12                        (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_B_SAWT_CNT<<BUS_STARTBIT) + 0x002C)
#define LS_DATA_B_SAWT_CNT_sawtcnt11                        (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_B_SAWT_CNT<<BUS_STARTBIT) + 0x002B)
#define LS_DATA_B_SAWT_CNT_sawtcnt10                        (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_B_SAWT_CNT<<BUS_STARTBIT) + 0x002A)
#define LS_DATA_B_SAWT_CNT_sawtcnt9                         (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_B_SAWT_CNT<<BUS_STARTBIT) + 0x0029)
#define LS_DATA_B_SAWT_CNT_sawtcnt8                         (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_B_SAWT_CNT<<BUS_STARTBIT) + 0x0028)
#define LS_DATA_B_SAWT_CNT_sawtcnt7                         (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_B_SAWT_CNT<<BUS_STARTBIT) + 0x0027)
#define LS_DATA_B_SAWT_CNT_sawtcnt6                         (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_B_SAWT_CNT<<BUS_STARTBIT) + 0x0026)
#define LS_DATA_B_SAWT_CNT_sawtcnt5                         (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_B_SAWT_CNT<<BUS_STARTBIT) + 0x0025)
#define LS_DATA_B_SAWT_CNT_sawtcnt4                         (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_B_SAWT_CNT<<BUS_STARTBIT) + 0x0024)
#define LS_DATA_B_SAWT_CNT_sawtcnt3                         (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_B_SAWT_CNT<<BUS_STARTBIT) + 0x0023)
#define LS_DATA_B_SAWT_CNT_sawtcnt2                         (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_B_SAWT_CNT<<BUS_STARTBIT) + 0x0022)
#define LS_DATA_B_SAWT_CNT_sawtcnt1                         (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_B_SAWT_CNT<<BUS_STARTBIT) + 0x0021)
#define LS_DATA_B_SAWT_CNT_sawtcnt0                         (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_B_SAWT_CNT<<BUS_STARTBIT) + 0x0020)
#define LS_DATA_B_SAWT_CNT_0a                               (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_B_SAWT_CNT<<BUS_STARTBIT) + 0x001F)
#define LS_DATA_B_SAWT_CNT_0b                               (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_B_SAWT_CNT<<BUS_STARTBIT) + 0x001E)
#define LS_DATA_B_SAWT_CNT_0c                               (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_B_SAWT_CNT<<BUS_STARTBIT) + 0x001D)
#define LS_DATA_B_SAWT_CNT_0d                               (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_B_SAWT_CNT<<BUS_STARTBIT) + 0x001C)
#define LS_DATA_B_SAWT_CNT_sysclk                           (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_B_SAWT_CNT<<BUS_STARTBIT) + 0x001B)
#define LS_DATA_B_SAWT_CNT_ls_spoke                         (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_B_SAWT_CNT<<BUS_STARTBIT) + 0x001A)
#define LS_DATA_B_SAWT_CNT_servo_rp                         (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_B_SAWT_CNT<<BUS_STARTBIT) + 0x0019)
#define LS_DATA_B_SAWT_CNT_servo_bs                         (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_B_SAWT_CNT<<BUS_STARTBIT) + 0x0018)
#define LS_DATA_B_SAWT_CNT_defect                           (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_B_SAWT_CNT<<BUS_STARTBIT) + 0x0017)
#define LS_DATA_B_SAWT_CNT_servo_rx                         (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_B_SAWT_CNT<<BUS_STARTBIT) + 0x0016)
#define LS_DATA_B_SAWT_CNT_sram_enable                      (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_B_SAWT_CNT<<BUS_STARTBIT) + 0x0015)
#define LS_DATA_B_SAWT_CNT_sram_wen                         (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_B_SAWT_CNT<<BUS_STARTBIT) + 0x0014)
#define LS_DATA_B_SAWT_CNT_sram_addr11                      (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_B_SAWT_CNT<<BUS_STARTBIT) + 0x0013)
#define LS_DATA_B_SAWT_CNT_sram_addr10                      (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_B_SAWT_CNT<<BUS_STARTBIT) + 0x0012)
#define LS_DATA_B_SAWT_CNT_sram_addr9                       (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_B_SAWT_CNT<<BUS_STARTBIT) + 0x0011)
#define LS_DATA_B_SAWT_CNT_sram_addr8                       (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_B_SAWT_CNT<<BUS_STARTBIT) + 0x0010)
#define LS_DATA_B_SAWT_CNT_sram_addr7                       (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_B_SAWT_CNT<<BUS_STARTBIT) + 0x000F)
#define LS_DATA_B_SAWT_CNT_sram_addr6                       (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_B_SAWT_CNT<<BUS_STARTBIT) + 0x000E)
#define LS_DATA_B_SAWT_CNT_sram_addr5                       (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_B_SAWT_CNT<<BUS_STARTBIT) + 0x000D)
#define LS_DATA_B_SAWT_CNT_sram_addr4                       (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_B_SAWT_CNT<<BUS_STARTBIT) + 0x000C)
#define LS_DATA_B_SAWT_CNT_sram_addr3                       (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_B_SAWT_CNT<<BUS_STARTBIT) + 0x000B)
#define LS_DATA_B_SAWT_CNT_sram_addr2                       (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_B_SAWT_CNT<<BUS_STARTBIT) + 0x000A)
#define LS_DATA_B_SAWT_CNT_sram_addr1                       (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_B_SAWT_CNT<<BUS_STARTBIT) + 0x0009)
#define LS_DATA_B_SAWT_CNT_sram_addr0                       (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_B_SAWT_CNT<<BUS_STARTBIT) + 0x0008)
#define LS_DATA_B_SAWT_CNT_sram_wdata7                      (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_B_SAWT_CNT<<BUS_STARTBIT) + 0x0007)
#define LS_DATA_B_SAWT_CNT_sram_wdata6                      (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_B_SAWT_CNT<<BUS_STARTBIT) + 0x0006)
#define LS_DATA_B_SAWT_CNT_sram_wdata5                      (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_B_SAWT_CNT<<BUS_STARTBIT) + 0x0005)
#define LS_DATA_B_SAWT_CNT_sram_wdata4                      (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_B_SAWT_CNT<<BUS_STARTBIT) + 0x0004)
#define LS_DATA_B_SAWT_CNT_sram_wdata3                      (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_B_SAWT_CNT<<BUS_STARTBIT) + 0x0003)
#define LS_DATA_B_SAWT_CNT_sram_wdata2                      (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_B_SAWT_CNT<<BUS_STARTBIT) + 0x0002)
#define LS_DATA_B_SAWT_CNT_sram_wdata1                      (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_B_SAWT_CNT<<BUS_STARTBIT) + 0x0001)
#define LS_DATA_B_SAWT_CNT_sram_wdata0                      (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_B_SAWT_CNT<<BUS_STARTBIT) + 0x0000)
//LS_DATA_A_WRCLK_CNT
#define LS_DATA_A_WRCLK_CNT_spokecnt9                       (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_A_WRCLK_CNT<<BUS_STARTBIT) + 0x0039)
#define LS_DATA_A_WRCLK_CNT_spokecnt8                       (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_A_WRCLK_CNT<<BUS_STARTBIT) + 0x0038)
#define LS_DATA_A_WRCLK_CNT_spokecnt7                       (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_A_WRCLK_CNT<<BUS_STARTBIT) + 0x0037)
#define LS_DATA_A_WRCLK_CNT_spokecnt6                       (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_A_WRCLK_CNT<<BUS_STARTBIT) + 0x0036)
#define LS_DATA_A_WRCLK_CNT_spokecnt5                       (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_A_WRCLK_CNT<<BUS_STARTBIT) + 0x0035)
#define LS_DATA_A_WRCLK_CNT_spokecnt4                       (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_A_WRCLK_CNT<<BUS_STARTBIT) + 0x0034)
#define LS_DATA_A_WRCLK_CNT_spokecnt3                       (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_A_WRCLK_CNT<<BUS_STARTBIT) + 0x0033)
#define LS_DATA_A_WRCLK_CNT_spokecnt2                       (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_A_WRCLK_CNT<<BUS_STARTBIT) + 0x0032)
#define LS_DATA_A_WRCLK_CNT_spokecnt1                       (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_A_WRCLK_CNT<<BUS_STARTBIT) + 0x0031)
#define LS_DATA_A_WRCLK_CNT_spokecnt0                       (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_A_WRCLK_CNT<<BUS_STARTBIT) + 0x0030)
#define LS_DATA_A_WRCLK_CNT_wrclk_p_match_cnt_debug15       (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_A_WRCLK_CNT<<BUS_STARTBIT) + 0x002F)
#define LS_DATA_A_WRCLK_CNT_wrclk_p_match_cnt_debug14       (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_A_WRCLK_CNT<<BUS_STARTBIT) + 0x002E)
#define LS_DATA_A_WRCLK_CNT_wrclk_p_match_cnt_debug13       (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_A_WRCLK_CNT<<BUS_STARTBIT) + 0x002D)
#define LS_DATA_A_WRCLK_CNT_wrclk_p_match_cnt_debug12       (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_A_WRCLK_CNT<<BUS_STARTBIT) + 0x002C)
#define LS_DATA_A_WRCLK_CNT_wrclk_p_match_cnt_debug11       (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_A_WRCLK_CNT<<BUS_STARTBIT) + 0x002B)
#define LS_DATA_A_WRCLK_CNT_wrclk_p_match_cnt_debug10       (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_A_WRCLK_CNT<<BUS_STARTBIT) + 0x002A)
#define LS_DATA_A_WRCLK_CNT_wrclk_p_match_cnt_debug9        (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_A_WRCLK_CNT<<BUS_STARTBIT) + 0x0029)
#define LS_DATA_A_WRCLK_CNT_wrclk_p_match_cnt_debug8        (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_A_WRCLK_CNT<<BUS_STARTBIT) + 0x0028)
#define LS_DATA_A_WRCLK_CNT_wrclk_p_match_cnt_debug7        (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_A_WRCLK_CNT<<BUS_STARTBIT) + 0x0027)
#define LS_DATA_A_WRCLK_CNT_wrclk_p_match_cnt_debug6        (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_A_WRCLK_CNT<<BUS_STARTBIT) + 0x0026)
#define LS_DATA_A_WRCLK_CNT_wrclk_p_match_cnt_debug5        (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_A_WRCLK_CNT<<BUS_STARTBIT) + 0x0025)
#define LS_DATA_A_WRCLK_CNT_wrclk_p_match_cnt_debug4        (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_A_WRCLK_CNT<<BUS_STARTBIT) + 0x0024)
#define LS_DATA_A_WRCLK_CNT_wrclk_p_match_cnt_debug3        (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_A_WRCLK_CNT<<BUS_STARTBIT) + 0x0023)
#define LS_DATA_A_WRCLK_CNT_wrclk_p_match_cnt_debug2        (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_A_WRCLK_CNT<<BUS_STARTBIT) + 0x0022)
#define LS_DATA_A_WRCLK_CNT_wrclk_p_match_cnt_debug1        (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_A_WRCLK_CNT<<BUS_STARTBIT) + 0x0021)
#define LS_DATA_A_WRCLK_CNT_wrclk_p_match_cnt_debug0        (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_A_WRCLK_CNT<<BUS_STARTBIT) + 0x0020)
#define LS_DATA_A_WRCLK_CNT_0a                              (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_A_WRCLK_CNT<<BUS_STARTBIT) + 0x001F)
#define LS_DATA_A_WRCLK_CNT_0b                              (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_A_WRCLK_CNT<<BUS_STARTBIT) + 0x001E)
#define LS_DATA_A_WRCLK_CNT_sysclk                          (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_A_WRCLK_CNT<<BUS_STARTBIT) + 0x001D)
#define LS_DATA_A_WRCLK_CNT_wrclk_p                         (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_A_WRCLK_CNT<<BUS_STARTBIT) + 0x001C)
#define LS_DATA_A_WRCLK_CNT_spoke_p                         (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_A_WRCLK_CNT<<BUS_STARTBIT) + 0x001B)
#define LS_DATA_A_WRCLK_CNT_curbit799                       (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_A_WRCLK_CNT<<BUS_STARTBIT) + 0x001A)
#define LS_DATA_A_WRCLK_CNT_ls_wrdata                       (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_A_WRCLK_CNT<<BUS_STARTBIT) + 0x0019)
#define LS_DATA_A_WRCLK_CNT_ls_wgate                        (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_A_WRCLK_CNT<<BUS_STARTBIT) + 0x0018)
#define LS_DATA_A_WRCLK_CNT_state_idx2                      (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_A_WRCLK_CNT<<BUS_STARTBIT) + 0x0017)
#define LS_DATA_A_WRCLK_CNT_state_idx1                      (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_A_WRCLK_CNT<<BUS_STARTBIT) + 0x0016)
#define LS_DATA_A_WRCLK_CNT_state_idx0                      (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_A_WRCLK_CNT<<BUS_STARTBIT) + 0x0015)
#define LS_DATA_A_WRCLK_CNT_state_wr1                       (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_A_WRCLK_CNT<<BUS_STARTBIT) + 0x0014)
#define LS_DATA_A_WRCLK_CNT_state_wr0                       (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_A_WRCLK_CNT<<BUS_STARTBIT) + 0x0013)
#define LS_DATA_A_WRCLK_CNT_sawtcnt_sel                     (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_A_WRCLK_CNT<<BUS_STARTBIT) + 0x0012)
#define LS_DATA_A_WRCLK_CNT_second_index_found              (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_A_WRCLK_CNT<<BUS_STARTBIT) + 0x0011)
#define LS_DATA_A_WRCLK_CNT_pre_second_index_found          (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_A_WRCLK_CNT<<BUS_STARTBIT) + 0x0010)
#define LS_DATA_A_WRCLK_CNT_prim_index_found                (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_A_WRCLK_CNT<<BUS_STARTBIT) + 0x000F)
#define LS_DATA_A_WRCLK_CNT_pre_prim_index_found            (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_A_WRCLK_CNT<<BUS_STARTBIT) + 0x000E)
#define LS_DATA_A_WRCLK_CNT_trkptr                          (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_A_WRCLK_CNT<<BUS_STARTBIT) + 0x000D)
#define LS_DATA_A_WRCLK_CNT_lsdata                          (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_A_WRCLK_CNT<<BUS_STARTBIT) + 0x000C)
#define LS_DATA_A_WRCLK_CNT_trig_trkcmp_int                 (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_A_WRCLK_CNT<<BUS_STARTBIT) + 0x000B)
#define LS_DATA_A_WRCLK_CNT_trig_midcmp_int                 (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_A_WRCLK_CNT<<BUS_STARTBIT) + 0x000A)
#define LS_DATA_A_WRCLK_CNT_trig_spoke0_int                 (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_A_WRCLK_CNT<<BUS_STARTBIT) + 0x0009)
#define LS_DATA_A_WRCLK_CNT_trig_spoke_int                  (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_A_WRCLK_CNT<<BUS_STARTBIT) + 0x0008)
#define LS_DATA_A_WRCLK_CNT_trig_lswrstrt_int               (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_A_WRCLK_CNT<<BUS_STARTBIT) + 0x0007)
#define LS_DATA_A_WRCLK_CNT_trig_lswrerr_int                (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_A_WRCLK_CNT<<BUS_STARTBIT) + 0x0006)
#define LS_DATA_A_WRCLK_CNT_trig_idxmark_int                (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_A_WRCLK_CNT<<BUS_STARTBIT) + 0x0005)
#define LS_DATA_A_WRCLK_CNT_trig_sawtooth_int               (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_A_WRCLK_CNT<<BUS_STARTBIT) + 0x0004)
#define LS_DATA_A_WRCLK_CNT_lstbslip                        (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_A_WRCLK_CNT<<BUS_STARTBIT) + 0x0003)
#define LS_DATA_A_WRCLK_CNT_stabslip                        (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_A_WRCLK_CNT<<BUS_STARTBIT) + 0x0002)
#define LS_DATA_A_WRCLK_CNT_idx2miss                        (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_A_WRCLK_CNT<<BUS_STARTBIT) + 0x0001)
#define LS_DATA_A_WRCLK_CNT_idxmiss                         (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_A_WRCLK_CNT<<BUS_STARTBIT) + 0x0000)
//LS_DATA_B_WRCLK_CNT
#define LS_DATA_B_WRCLK_CNT_spokecnt9                       (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_B_WRCLK_CNT<<BUS_STARTBIT) + 0x0039)
#define LS_DATA_B_WRCLK_CNT_spokecnt8                       (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_B_WRCLK_CNT<<BUS_STARTBIT) + 0x0038)
#define LS_DATA_B_WRCLK_CNT_spokecnt7                       (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_B_WRCLK_CNT<<BUS_STARTBIT) + 0x0037)
#define LS_DATA_B_WRCLK_CNT_spokecnt6                       (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_B_WRCLK_CNT<<BUS_STARTBIT) + 0x0036)
#define LS_DATA_B_WRCLK_CNT_spokecnt5                       (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_B_WRCLK_CNT<<BUS_STARTBIT) + 0x0035)
#define LS_DATA_B_WRCLK_CNT_spokecnt4                       (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_B_WRCLK_CNT<<BUS_STARTBIT) + 0x0034)
#define LS_DATA_B_WRCLK_CNT_spokecnt3                       (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_B_WRCLK_CNT<<BUS_STARTBIT) + 0x0033)
#define LS_DATA_B_WRCLK_CNT_spokecnt2                       (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_B_WRCLK_CNT<<BUS_STARTBIT) + 0x0032)
#define LS_DATA_B_WRCLK_CNT_spokecnt1                       (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_B_WRCLK_CNT<<BUS_STARTBIT) + 0x0031)
#define LS_DATA_B_WRCLK_CNT_spokecnt0                       (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_B_WRCLK_CNT<<BUS_STARTBIT) + 0x0030)
#define LS_DATA_B_WRCLK_CNT_wrclk_p_match_cnt_debug15       (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_B_WRCLK_CNT<<BUS_STARTBIT) + 0x002F)
#define LS_DATA_B_WRCLK_CNT_wrclk_p_match_cnt_debug14       (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_B_WRCLK_CNT<<BUS_STARTBIT) + 0x002E)
#define LS_DATA_B_WRCLK_CNT_wrclk_p_match_cnt_debug13       (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_B_WRCLK_CNT<<BUS_STARTBIT) + 0x002D)
#define LS_DATA_B_WRCLK_CNT_wrclk_p_match_cnt_debug12       (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_B_WRCLK_CNT<<BUS_STARTBIT) + 0x002C)
#define LS_DATA_B_WRCLK_CNT_wrclk_p_match_cnt_debug11       (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_B_WRCLK_CNT<<BUS_STARTBIT) + 0x002B)
#define LS_DATA_B_WRCLK_CNT_wrclk_p_match_cnt_debug10       (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_B_WRCLK_CNT<<BUS_STARTBIT) + 0x002A)
#define LS_DATA_B_WRCLK_CNT_wrclk_p_match_cnt_debug9        (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_B_WRCLK_CNT<<BUS_STARTBIT) + 0x0029)
#define LS_DATA_B_WRCLK_CNT_wrclk_p_match_cnt_debug8        (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_B_WRCLK_CNT<<BUS_STARTBIT) + 0x0028)
#define LS_DATA_B_WRCLK_CNT_wrclk_p_match_cnt_debug7        (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_B_WRCLK_CNT<<BUS_STARTBIT) + 0x0027)
#define LS_DATA_B_WRCLK_CNT_wrclk_p_match_cnt_debug6        (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_B_WRCLK_CNT<<BUS_STARTBIT) + 0x0026)
#define LS_DATA_B_WRCLK_CNT_wrclk_p_match_cnt_debug5        (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_B_WRCLK_CNT<<BUS_STARTBIT) + 0x0025)
#define LS_DATA_B_WRCLK_CNT_wrclk_p_match_cnt_debug4        (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_B_WRCLK_CNT<<BUS_STARTBIT) + 0x0024)
#define LS_DATA_B_WRCLK_CNT_wrclk_p_match_cnt_debug3        (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_B_WRCLK_CNT<<BUS_STARTBIT) + 0x0023)
#define LS_DATA_B_WRCLK_CNT_wrclk_p_match_cnt_debug2        (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_B_WRCLK_CNT<<BUS_STARTBIT) + 0x0022)
#define LS_DATA_B_WRCLK_CNT_wrclk_p_match_cnt_debug1        (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_B_WRCLK_CNT<<BUS_STARTBIT) + 0x0021)
#define LS_DATA_B_WRCLK_CNT_wrclk_p_match_cnt_debug0        (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_B_WRCLK_CNT<<BUS_STARTBIT) + 0x0020)
#define LS_DATA_B_WRCLK_CNT_0a                              (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_B_WRCLK_CNT<<BUS_STARTBIT) + 0x001F)
#define LS_DATA_B_WRCLK_CNT_0b                              (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_B_WRCLK_CNT<<BUS_STARTBIT) + 0x001E)
#define LS_DATA_B_WRCLK_CNT_0c                              (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_B_WRCLK_CNT<<BUS_STARTBIT) + 0x001D)
#define LS_DATA_B_WRCLK_CNT_0d                              (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_B_WRCLK_CNT<<BUS_STARTBIT) + 0x001C)
#define LS_DATA_B_WRCLK_CNT_sysclk                          (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_B_WRCLK_CNT<<BUS_STARTBIT) + 0x001B)
#define LS_DATA_B_WRCLK_CNT_ls_spoke                        (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_B_WRCLK_CNT<<BUS_STARTBIT) + 0x001A)
#define LS_DATA_B_WRCLK_CNT_servo_rp                        (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_B_WRCLK_CNT<<BUS_STARTBIT) + 0x0019)
#define LS_DATA_B_WRCLK_CNT_servo_bs                        (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_B_WRCLK_CNT<<BUS_STARTBIT) + 0x0018)
#define LS_DATA_B_WRCLK_CNT_defect                          (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_B_WRCLK_CNT<<BUS_STARTBIT) + 0x0017)
#define LS_DATA_B_WRCLK_CNT_servo_rx                        (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_B_WRCLK_CNT<<BUS_STARTBIT) + 0x0016)
#define LS_DATA_B_WRCLK_CNT_sram_enable                     (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_B_WRCLK_CNT<<BUS_STARTBIT) + 0x0015)
#define LS_DATA_B_WRCLK_CNT_sram_wen                        (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_B_WRCLK_CNT<<BUS_STARTBIT) + 0x0014)
#define LS_DATA_B_WRCLK_CNT_sram_addr11                     (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_B_WRCLK_CNT<<BUS_STARTBIT) + 0x0013)
#define LS_DATA_B_WRCLK_CNT_sram_addr10                     (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_B_WRCLK_CNT<<BUS_STARTBIT) + 0x0012)
#define LS_DATA_B_WRCLK_CNT_sram_addr9                      (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_B_WRCLK_CNT<<BUS_STARTBIT) + 0x0011)
#define LS_DATA_B_WRCLK_CNT_sram_addr8                      (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_B_WRCLK_CNT<<BUS_STARTBIT) + 0x0010)
#define LS_DATA_B_WRCLK_CNT_sram_addr7                      (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_B_WRCLK_CNT<<BUS_STARTBIT) + 0x000F)
#define LS_DATA_B_WRCLK_CNT_sram_addr6                      (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_B_WRCLK_CNT<<BUS_STARTBIT) + 0x000E)
#define LS_DATA_B_WRCLK_CNT_sram_addr5                      (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_B_WRCLK_CNT<<BUS_STARTBIT) + 0x000D)
#define LS_DATA_B_WRCLK_CNT_sram_addr4                      (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_B_WRCLK_CNT<<BUS_STARTBIT) + 0x000C)
#define LS_DATA_B_WRCLK_CNT_sram_addr3                      (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_B_WRCLK_CNT<<BUS_STARTBIT) + 0x000B)
#define LS_DATA_B_WRCLK_CNT_sram_addr2                      (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_B_WRCLK_CNT<<BUS_STARTBIT) + 0x000A)
#define LS_DATA_B_WRCLK_CNT_sram_addr1                      (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_B_WRCLK_CNT<<BUS_STARTBIT) + 0x0009)
#define LS_DATA_B_WRCLK_CNT_sram_addr0                      (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_B_WRCLK_CNT<<BUS_STARTBIT) + 0x0008)
#define LS_DATA_B_WRCLK_CNT_sram_wdata7                     (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_B_WRCLK_CNT<<BUS_STARTBIT) + 0x0007)
#define LS_DATA_B_WRCLK_CNT_sram_wdata6                     (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_B_WRCLK_CNT<<BUS_STARTBIT) + 0x0006)
#define LS_DATA_B_WRCLK_CNT_sram_wdata5                     (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_B_WRCLK_CNT<<BUS_STARTBIT) + 0x0005)
#define LS_DATA_B_WRCLK_CNT_sram_wdata4                     (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_B_WRCLK_CNT<<BUS_STARTBIT) + 0x0004)
#define LS_DATA_B_WRCLK_CNT_sram_wdata3                     (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_B_WRCLK_CNT<<BUS_STARTBIT) + 0x0003)
#define LS_DATA_B_WRCLK_CNT_sram_wdata2                     (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_B_WRCLK_CNT<<BUS_STARTBIT) + 0x0002)
#define LS_DATA_B_WRCLK_CNT_sram_wdata1                     (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_B_WRCLK_CNT<<BUS_STARTBIT) + 0x0001)
#define LS_DATA_B_WRCLK_CNT_sram_wdata0                     (LS_BLK + DBG64SEL + (halLS_LSDBG_DATA_B_WRCLK_CNT<<BUS_STARTBIT) + 0x0000)


/****************************************************************************
* DGB64 BUS CDD BLOCK
****************************************************************************/
//CDDSP
#define CDD_CDDSP_cclkin                        (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_CDDSP<<BUS_STARTBIT) + 0x0010)
#define CDD_CDDSP_demod_data_valid              (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_CDDSP<<BUS_STARTBIT) + 0x0011)
#define CDD_CDDSP_demod_data0                   (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_CDDSP<<BUS_STARTBIT) + 0x0012)
#define CDD_CDDSP_demod_data1                   (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_CDDSP<<BUS_STARTBIT) + 0x0013)
#define CDD_CDDSP_demod_data2                   (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_CDDSP<<BUS_STARTBIT) + 0x0014)
#define CDD_CDDSP_demod_data3                   (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_CDDSP<<BUS_STARTBIT) + 0x0015)
#define CDD_CDDSP_demod_data4                   (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_CDDSP<<BUS_STARTBIT) + 0x0016)
#define CDD_CDDSP_demod_data5                   (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_CDDSP<<BUS_STARTBIT) + 0x0017)
#define CDD_CDDSP_demod_data6                   (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_CDDSP<<BUS_STARTBIT) + 0x0018)
#define CDD_CDDSP_demod_data7                   (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_CDDSP<<BUS_STARTBIT) + 0x0019)
#define CDD_CDDSP_demod_erasure_flag            (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_CDDSP<<BUS_STARTBIT) + 0x001A)
#define CDD_CDDSP_demod_frame_start             (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_CDDSP<<BUS_STARTBIT) + 0x001B)
#define CDD_CDDSP_demod_cd_subbyte              (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_CDDSP<<BUS_STARTBIT) + 0x001C)
#define CDD_CDDSP_demod_cd_S0_subsync           (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_CDDSP<<BUS_STARTBIT) + 0x001D)
#define CDD_CDDSP_demod_cd_S1_subsync           (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_CDDSP<<BUS_STARTBIT) + 0x001E)
#define CDD_CDDSP_s_srch                        (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_CDDSP<<BUS_STARTBIT) + 0x001F)
#define CDD_CDDSP_dau_debug_out15               (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_CDDSP<<BUS_STARTBIT) + 0x0020)
#define CDD_CDDSP_dau_debug_out14               (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_CDDSP<<BUS_STARTBIT) + 0x0021)
#define CDD_CDDSP_dau_debug_out13               (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_CDDSP<<BUS_STARTBIT) + 0x0022)
#define CDD_CDDSP_dau_debug_out12               (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_CDDSP<<BUS_STARTBIT) + 0x0023)
#define CDD_CDDSP_dau_debug_out11               (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_CDDSP<<BUS_STARTBIT) + 0x0024)
#define CDD_CDDSP_dau_debug_out10               (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_CDDSP<<BUS_STARTBIT) + 0x0025)
#define CDD_CDDSP_dau_debug_out9                (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_CDDSP<<BUS_STARTBIT) + 0x0026)
#define CDD_CDDSP_dau_debug_out8                (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_CDDSP<<BUS_STARTBIT) + 0x0027)
#define CDD_CDDSP_dau_debug_out7                (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_CDDSP<<BUS_STARTBIT) + 0x0028)
#define CDD_CDDSP_dau_debug_out6                (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_CDDSP<<BUS_STARTBIT) + 0x0029)
#define CDD_CDDSP_dau_debug_out5                (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_CDDSP<<BUS_STARTBIT) + 0x002A)
#define CDD_CDDSP_dau_debug_out4                (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_CDDSP<<BUS_STARTBIT) + 0x002B)
#define CDD_CDDSP_dau_debug_out3                (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_CDDSP<<BUS_STARTBIT) + 0x002C)
#define CDD_CDDSP_dau_debug_out2                (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_CDDSP<<BUS_STARTBIT) + 0x002D)
#define CDD_CDDSP_dau_debug_out1                (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_CDDSP<<BUS_STARTBIT) + 0x002E)
#define CDD_CDDSP_dau_debug_out0                (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_CDDSP<<BUS_STARTBIT) + 0x002F)
#define CDD_CDDSP_def_wfck                      (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_CDDSP<<BUS_STARTBIT) + 0x0030)
#define CDD_CDDSP_def_subld                     (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_CDDSP<<BUS_STARTBIT) + 0x0031)
#define CDD_CDDSP_def_esync                     (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_CDDSP<<BUS_STARTBIT) + 0x0032)
#define CDD_CDDSP_efm_flag                      (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_CDDSP<<BUS_STARTBIT) + 0x0033)
#define CDD_CDDSP_d_subval                      (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_CDDSP<<BUS_STARTBIT) + 0x0034)
#define CDD_CDDSP_dsu_scor_pad                  (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_CDDSP<<BUS_STARTBIT) + 0x0035)
#define CDD_CDDSP_dau_xsync                     (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_CDDSP<<BUS_STARTBIT) + 0x0036)
#define CDD_CDDSP_c1_frame_err                  (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_CDDSP<<BUS_STARTBIT) + 0x0037)
#define CDD_CDDSP_c2_frame_err                  (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_CDDSP<<BUS_STARTBIT) + 0x0038)
#define CDD_CDDSP_c1_frame_unc                  (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_CDDSP<<BUS_STARTBIT) + 0x0039)
#define CDD_CDDSP_c2_frame_unc                  (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_CDDSP<<BUS_STARTBIT) + 0x003A)
#define CDD_CDDSP_d_dc2po0                      (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_CDDSP<<BUS_STARTBIT) + 0x003B)
#define CDD_CDDSP_d_dc2po1                      (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_CDDSP<<BUS_STARTBIT) + 0x003C)
#define CDD_CDDSP_d_dc2po2                      (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_CDDSP<<BUS_STARTBIT) + 0x003D)
#define CDD_CDDSP_d_dc2po3                      (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_CDDSP<<BUS_STARTBIT) + 0x003E)
#define CDD_CDDSP_d_val                         (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_CDDSP<<BUS_STARTBIT) + 0x003F)
//CDDSLOT1
#define CDD_CDDSLOT1_dfdata0                    (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_CDDSLOT1<<BUS_STARTBIT) + 0x0010)
#define CDD_CDDSLOT1_dfdata1                    (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_CDDSLOT1<<BUS_STARTBIT) + 0x0011)
#define CDD_CDDSLOT1_dfdata2                    (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_CDDSLOT1<<BUS_STARTBIT) + 0x0012)
#define CDD_CDDSLOT1_dfdata3                    (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_CDDSLOT1<<BUS_STARTBIT) + 0x0013)
#define CDD_CDDSLOT1_dfdata4                    (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_CDDSLOT1<<BUS_STARTBIT) + 0x0014)
#define CDD_CDDSLOT1_dfdata5                    (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_CDDSLOT1<<BUS_STARTBIT) + 0x0015)
#define CDD_CDDSLOT1_dfdata6                    (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_CDDSLOT1<<BUS_STARTBIT) + 0x0016)
#define CDD_CDDSLOT1_dfdata7                    (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_CDDSLOT1<<BUS_STARTBIT) + 0x0017)
#define CDD_CDDSLOT1_dfdata8                    (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_CDDSLOT1<<BUS_STARTBIT) + 0x0018)
#define CDD_CDDSLOT1_dfdata9                    (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_CDDSLOT1<<BUS_STARTBIT) + 0x0019)
#define CDD_CDDSLOT1_dfdata10                   (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_CDDSLOT1<<BUS_STARTBIT) + 0x001A)
#define CDD_CDDSLOT1_dfdata11                   (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_CDDSLOT1<<BUS_STARTBIT) + 0x001B)
#define CDD_CDDSLOT1_dfdata12                   (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_CDDSLOT1<<BUS_STARTBIT) + 0x001C)
#define CDD_CDDSLOT1_dfdata13                   (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_CDDSLOT1<<BUS_STARTBIT) + 0x001D)
#define CDD_CDDSLOT1_dfdata14                   (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_CDDSLOT1<<BUS_STARTBIT) + 0x001E)
#define CDD_CDDSLOT1_dfdata15                   (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_CDDSLOT1<<BUS_STARTBIT) + 0x001F)
#define CDD_CDDSLOT1_clk                        (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_CDDSLOT1<<BUS_STARTBIT) + 0x0020)
#define CDD_CDDSLOT1_dfbyte                     (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_CDDSLOT1<<BUS_STARTBIT) + 0x0021)
#define CDD_CDDSLOT1_dhhsp                      (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_CDDSLOT1<<BUS_STARTBIT) + 0x0022)
#define CDD_CDDSLOT1_dshdld                     (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_CDDSLOT1<<BUS_STARTBIT) + 0x0023)
#define CDD_CDDSLOT1_dsyncd                     (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_CDDSLOT1<<BUS_STARTBIT) + 0x0024)
#define CDD_CDDSLOT1_dwaLHldb                   (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_CDDSLOT1<<BUS_STARTBIT) + 0x0025)
#define CDD_CDDSLOT1_sync_lock_status           (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_CDDSLOT1<<BUS_STARTBIT) + 0x0026)
#define CDD_CDDSLOT1_pkrdstop_buf               (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_CDDSLOT1<<BUS_STARTBIT) + 0x0027)
#define CDD_CDDSLOT1_rout2n3                    (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_CDDSLOT1<<BUS_STARTBIT) + 0x0028)
#define CDD_CDDSLOT1_pktswmode                  (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_CDDSLOT1<<BUS_STARTBIT) + 0x0029)
#define CDD_CDDSLOT1_buffullp                   (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_CDDSLOT1<<BUS_STARTBIT) + 0x002A)
#define CDD_CDDSLOT1_diferrp                    (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_CDDSLOT1<<BUS_STARTBIT) + 0x002B)
#define CDD_CDDSLOT1_bfullstop                  (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_CDDSLOT1<<BUS_STARTBIT) + 0x002C)
#define CDD_CDDSLOT1_dbfullstop2                (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_CDDSLOT1<<BUS_STARTBIT) + 0x002D)
#define CDD_CDDSLOT1_d1byte                     (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_CDDSLOT1<<BUS_STARTBIT) + 0x002E)
#define CDD_CDDSLOT1_dsyncd_a                   (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_CDDSLOT1<<BUS_STARTBIT) + 0x002F)
#define CDD_CDDSLOT1_c2dwacsj                   (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_CDDSLOT1<<BUS_STARTBIT) + 0x0030)
#define CDD_CDDSLOT1_dbneweb                    (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_CDDSLOT1<<BUS_STARTBIT) + 0x0031)
#define CDD_CDDSLOT1_dwrrq                      (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_CDDSLOT1<<BUS_STARTBIT) + 0x0032)
#define CDD_CDDSLOT1_dbnew                      (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_CDDSLOT1<<BUS_STARTBIT) + 0x0033)
#define CDD_CDDSLOT1_ilsync                     (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_CDDSLOT1<<BUS_STARTBIT) + 0x0034)
#define CDD_CDDSLOT1_nosync                     (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_CDDSLOT1<<BUS_STARTBIT) + 0x0035)
#define CDD_CDDSLOT1_wshort                     (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_CDDSLOT1<<BUS_STARTBIT) + 0x0036)
#define CDD_CDDSLOT1_esrload                    (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_CDDSLOT1<<BUS_STARTBIT) + 0x0037)
#define CDD_CDDSLOT1_ewrrq                      (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_CDDSLOT1<<BUS_STARTBIT) + 0x0038)
#define CDD_CDDSLOT1_sp                         (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_CDDSLOT1<<BUS_STARTBIT) + 0x0039)
#define CDD_CDDSLOT1_sq                         (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_CDDSLOT1<<BUS_STARTBIT) + 0x003A)
#define CDD_CDDSLOT1_sd                         (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_CDDSLOT1<<BUS_STARTBIT) + 0x003B)
#define CDD_CDDSLOT1_erhda1sel                  (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_CDDSLOT1<<BUS_STARTBIT) + 0x003C)
#define CDD_CDDSLOT1_synauds                    (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_CDDSLOT1<<BUS_STARTBIT) + 0x003D)
#define CDD_CDDSLOT1_qcrcbad                    (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_CDDSLOT1<<BUS_STARTBIT) + 0x003E)
#define CDD_CDDSLOT1_sqcrcok                    (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_CDDSLOT1<<BUS_STARTBIT) + 0x003F)
//CDDSLOT2
#define CDD_CDDSLOT2_clk                        (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_CDDSLOT2<<BUS_STARTBIT) + 0x0010)
#define CDD_CDDSLOT2_rDbctr0                    (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_CDDSLOT2<<BUS_STARTBIT) + 0x0011)
#define CDD_CDDSLOT2_rDbctr1                    (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_CDDSLOT2<<BUS_STARTBIT) + 0x0012)
#define CDD_CDDSLOT2_rDbctr2                    (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_CDDSLOT2<<BUS_STARTBIT) + 0x0013)
#define CDD_CDDSLOT2_rDbctr3                    (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_CDDSLOT2<<BUS_STARTBIT) + 0x0014)
#define CDD_CDDSLOT2_rDbctr4                    (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_CDDSLOT2<<BUS_STARTBIT) + 0x0015)
#define CDD_CDDSLOT2_rDbctr5                    (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_CDDSLOT2<<BUS_STARTBIT) + 0x0016)
#define CDD_CDDSLOT2_rDbctr6                    (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_CDDSLOT2<<BUS_STARTBIT) + 0x0017)
#define CDD_CDDSLOT2_rDbctr7                    (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_CDDSLOT2<<BUS_STARTBIT) + 0x0018)
#define CDD_CDDSLOT2_rDbctr8                    (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_CDDSLOT2<<BUS_STARTBIT) + 0x0019)
#define CDD_CDDSLOT2_rDbctr9                    (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_CDDSLOT2<<BUS_STARTBIT) + 0x001A)
#define CDD_CDDSLOT2_rDbctr10                   (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_CDDSLOT2<<BUS_STARTBIT) + 0x001B)
#define CDD_CDDSLOT2_rDbctr11                   (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_CDDSLOT2<<BUS_STARTBIT) + 0x001C)
#define CDD_CDDSLOT2_rDbctr12                   (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_CDDSLOT2<<BUS_STARTBIT) + 0x001D)
#define CDD_CDDSLOT2_dbnew                      (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_CDDSLOT2<<BUS_STARTBIT) + 0x001E)
#define CDD_CDDSLOT2_hstpgcnt0                  (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_CDDSLOT2<<BUS_STARTBIT) + 0x001F)
#define CDD_CDDSLOT2_hstpgcnt1                  (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_CDDSLOT2<<BUS_STARTBIT) + 0x0020)
#define CDD_CDDSLOT2_hstpgcnt2                  (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_CDDSLOT2<<BUS_STARTBIT) + 0x0021)
#define CDD_CDDSLOT2_hstpgcnt3                  (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_CDDSLOT2<<BUS_STARTBIT) + 0x0022)
#define CDD_CDDSLOT2_hstpgcnt4                  (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_CDDSLOT2<<BUS_STARTBIT) + 0x0023)
#define CDD_CDDSLOT2_hstpgcnt5                  (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_CDDSLOT2<<BUS_STARTBIT) + 0x0024)
#define CDD_CDDSLOT2_hstpgcnt6                  (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_CDDSLOT2<<BUS_STARTBIT) + 0x0025)
#define CDD_CDDSLOT2_hstpgcnt7                  (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_CDDSLOT2<<BUS_STARTBIT) + 0x0026)
#define CDD_CDDSLOT2_hstpgcnt8                  (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_CDDSLOT2<<BUS_STARTBIT) + 0x0027)
#define CDD_CDDSLOT2_hstpgcnt9                  (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_CDDSLOT2<<BUS_STARTBIT) + 0x0028)
#define CDD_CDDSLOT2_hstpgcnt10                 (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_CDDSLOT2<<BUS_STARTBIT) + 0x0029)
#define CDD_CDDSLOT2_hstpgcnt11                 (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_CDDSLOT2<<BUS_STARTBIT) + 0x002A)
#define CDD_CDDSLOT2_hstpgcnt12                 (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_CDDSLOT2<<BUS_STARTBIT) + 0x002B)
#define CDD_CDDSLOT2_ewrrq                      (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_CDDSLOT2<<BUS_STARTBIT) + 0x002C)
#define CDD_CDDSLOT2_rHAcase1                   (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_CDDSLOT2<<BUS_STARTBIT) + 0x002D)
#define CDD_CDDSLOT2_rHAeqstrPlus1              (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_CDDSLOT2<<BUS_STARTBIT) + 0x002E)
#define CDD_CDDSLOT2_last_second_page           (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_CDDSLOT2<<BUS_STARTBIT) + 0x002F)
#define CDD_CDDSLOT2_last_page                  (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_CDDSLOT2<<BUS_STARTBIT) + 0x0030)
#define CDD_CDDSLOT2_dsyncd                     (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_CDDSLOT2<<BUS_STARTBIT) + 0x0031)
#define CDD_CDDSLOT2_dival                      (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_CDDSLOT2<<BUS_STARTBIT) + 0x0032)
#define CDD_CDDSLOT2_subdata0                   (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_CDDSLOT2<<BUS_STARTBIT) + 0x0033)
#define CDD_CDDSLOT2_subdata1                   (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_CDDSLOT2<<BUS_STARTBIT) + 0x0034)
#define CDD_CDDSLOT2_subdata2                   (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_CDDSLOT2<<BUS_STARTBIT) + 0x0035)
#define CDD_CDDSLOT2_subdata3                   (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_CDDSLOT2<<BUS_STARTBIT) + 0x0036)
#define CDD_CDDSLOT2_subdata4                   (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_CDDSLOT2<<BUS_STARTBIT) + 0x0037)
#define CDD_CDDSLOT2_subdata5                   (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_CDDSLOT2<<BUS_STARTBIT) + 0x0038)
#define CDD_CDDSLOT2_subdata6                   (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_CDDSLOT2<<BUS_STARTBIT) + 0x0039)
#define CDD_CDDSLOT2_subdata7                   (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_CDDSLOT2<<BUS_STARTBIT) + 0x003A)
#define CDD_CDDSLOT2_subval                     (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_CDDSLOT2<<BUS_STARTBIT) + 0x003B)
#define CDD_CDDSLOT2_siscor                     (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_CDDSLOT2<<BUS_STARTBIT) + 0x003C)
#define CDD_CDDSLOT2_sqcrcok                    (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_CDDSLOT2<<BUS_STARTBIT) + 0x003D)
#define CDD_CDDSLOT2_qcrcbad                    (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_CDDSLOT2<<BUS_STARTBIT) + 0x003E)
#define CDD_CDDSLOT2_synlk                      (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_CDDSLOT2<<BUS_STARTBIT) + 0x003F)
//C3BUSR
#define CDD_C3BUSR_c3Address1                   (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_C3BUSR<<BUS_STARTBIT) + 0x0010)
#define CDD_C3BUSR_c3Address2                   (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_C3BUSR<<BUS_STARTBIT) + 0x0011)
#define CDD_C3BUSR_c3Address3                   (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_C3BUSR<<BUS_STARTBIT) + 0x0012)
#define CDD_C3BUSR_c3Address4                   (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_C3BUSR<<BUS_STARTBIT) + 0x0013)
#define CDD_C3BUSR_c3Address5                   (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_C3BUSR<<BUS_STARTBIT) + 0x0014)
#define CDD_C3BUSR_c3Address6                   (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_C3BUSR<<BUS_STARTBIT) + 0x0015)
#define CDD_C3BUSR_c3Address7                   (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_C3BUSR<<BUS_STARTBIT) + 0x0016)
#define CDD_C3BUSR_c3Address8                   (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_C3BUSR<<BUS_STARTBIT) + 0x0017)
#define CDD_C3BUSR_c3Address9                   (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_C3BUSR<<BUS_STARTBIT) + 0x0018)
#define CDD_C3BUSR_c3Address10                  (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_C3BUSR<<BUS_STARTBIT) + 0x0019)
#define CDD_C3BUSR_c3Address11                  (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_C3BUSR<<BUS_STARTBIT) + 0x001A)
#define CDD_C3BUSR_c3Address12                  (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_C3BUSR<<BUS_STARTBIT) + 0x001B)
#define CDD_C3BUSR_c3Address13                  (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_C3BUSR<<BUS_STARTBIT) + 0x001C)
#define CDD_C3BUSR_c3Address14                  (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_C3BUSR<<BUS_STARTBIT) + 0x001D)
#define CDD_C3BUSR_c3Address15                  (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_C3BUSR<<BUS_STARTBIT) + 0x001E)
#define CDD_C3BUSR_c3Address16                  (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_C3BUSR<<BUS_STARTBIT) + 0x001F)
#define CDD_C3BUSR_c3Address17                  (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_C3BUSR<<BUS_STARTBIT) + 0x0020)
#define CDD_C3BUSR_c3Address18                  (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_C3BUSR<<BUS_STARTBIT) + 0x0021)
#define CDD_C3BUSR_c3Address19                  (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_C3BUSR<<BUS_STARTBIT) + 0x0022)
#define CDD_C3BUSR_c3Address20                  (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_C3BUSR<<BUS_STARTBIT) + 0x0023)
#define CDD_C3BUSR_c3Address21                  (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_C3BUSR<<BUS_STARTBIT) + 0x0024)
#define CDD_C3BUSR_c3Address22                  (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_C3BUSR<<BUS_STARTBIT) + 0x0025)
#define CDD_C3BUSR_c3Address23                  (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_C3BUSR<<BUS_STARTBIT) + 0x0026)
#define CDD_C3BUSR_c3Be0                        (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_C3BUSR<<BUS_STARTBIT) + 0x0027)
#define CDD_C3BUSR_c3Be1                        (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_C3BUSR<<BUS_STARTBIT) + 0x0028)
#define CDD_C3BUSR_c3Cmd0                       (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_C3BUSR<<BUS_STARTBIT) + 0x0029)
#define CDD_C3BUSR_c3Cmd1                       (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_C3BUSR<<BUS_STARTBIT) + 0x002A)
#define CDD_C3BUSR_c3CmdVal                     (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_C3BUSR<<BUS_STARTBIT) + 0x002B)
#define CDD_C3BUSR_c3Eop                        (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_C3BUSR<<BUS_STARTBIT) + 0x002C)
#define CDD_C3BUSR_r3CmdAck                     (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_C3BUSR<<BUS_STARTBIT) + 0x002D)
#define CDD_C3BUSR_r3Eop                        (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_C3BUSR<<BUS_STARTBIT) + 0x002E)
#define CDD_C3BUSR_r3RspVal                     (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_C3BUSR<<BUS_STARTBIT) + 0x002F)
#define CDD_C3BUSR_r3Rdata0                     (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_C3BUSR<<BUS_STARTBIT) + 0x0030)
#define CDD_C3BUSR_r3Rdata1                     (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_C3BUSR<<BUS_STARTBIT) + 0x0031)
#define CDD_C3BUSR_r3Rdata2                     (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_C3BUSR<<BUS_STARTBIT) + 0x0032)
#define CDD_C3BUSR_r3Rdata3                     (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_C3BUSR<<BUS_STARTBIT) + 0x0033)
#define CDD_C3BUSR_r3Rdata4                     (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_C3BUSR<<BUS_STARTBIT) + 0x0034)
#define CDD_C3BUSR_r3Rdata5                     (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_C3BUSR<<BUS_STARTBIT) + 0x0035)
#define CDD_C3BUSR_r3Rdata6                     (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_C3BUSR<<BUS_STARTBIT) + 0x0036)
#define CDD_C3BUSR_r3Rdata7                     (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_C3BUSR<<BUS_STARTBIT) + 0x0037)
#define CDD_C3BUSR_r3Rdata8                     (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_C3BUSR<<BUS_STARTBIT) + 0x0038)
#define CDD_C3BUSR_r3Rdata9                     (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_C3BUSR<<BUS_STARTBIT) + 0x0039)
#define CDD_C3BUSR_r3Rdata10                    (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_C3BUSR<<BUS_STARTBIT) + 0x003A)
#define CDD_C3BUSR_r3Rdata11                    (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_C3BUSR<<BUS_STARTBIT) + 0x003B)
#define CDD_C3BUSR_r3Rdata12                    (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_C3BUSR<<BUS_STARTBIT) + 0x003C)
#define CDD_C3BUSR_r3Rdata13                    (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_C3BUSR<<BUS_STARTBIT) + 0x003D)
#define CDD_C3BUSR_r3Rdata14                    (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_C3BUSR<<BUS_STARTBIT) + 0x003E)
#define CDD_C3BUSR_r3Rdata15                    (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_C3BUSR<<BUS_STARTBIT) + 0x003F)
//C3BUSW
#define CDD_C3BUSW_c3Address1                   (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_C3BUSW<<BUS_STARTBIT) + 0x0000)
#define CDD_C3BUSW_c3Address2                   (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_C3BUSW<<BUS_STARTBIT) + 0x0001)
#define CDD_C3BUSW_c3Address3                   (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_C3BUSW<<BUS_STARTBIT) + 0x0002)
#define CDD_C3BUSW_c3Address4                   (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_C3BUSW<<BUS_STARTBIT) + 0x0003)
#define CDD_C3BUSW_c3Address5                   (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_C3BUSW<<BUS_STARTBIT) + 0x0004)
#define CDD_C3BUSW_c3Address6                   (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_C3BUSW<<BUS_STARTBIT) + 0x0005)
#define CDD_C3BUSW_c3Address7                   (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_C3BUSW<<BUS_STARTBIT) + 0x0006)
#define CDD_C3BUSW_c3Address8                   (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_C3BUSW<<BUS_STARTBIT) + 0x0007)
#define CDD_C3BUSW_c3Address9                   (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_C3BUSW<<BUS_STARTBIT) + 0x0008)
#define CDD_C3BUSW_c3Address10                  (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_C3BUSW<<BUS_STARTBIT) + 0x0009)
#define CDD_C3BUSW_c3Address11                  (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_C3BUSW<<BUS_STARTBIT) + 0x000A)
#define CDD_C3BUSW_c3Address12                  (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_C3BUSW<<BUS_STARTBIT) + 0x000B)
#define CDD_C3BUSW_c3Address13                  (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_C3BUSW<<BUS_STARTBIT) + 0x000C)
#define CDD_C3BUSW_c3Address14                  (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_C3BUSW<<BUS_STARTBIT) + 0x000D)
#define CDD_C3BUSW_c3Address15                  (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_C3BUSW<<BUS_STARTBIT) + 0x000E)
#define CDD_C3BUSW_c3Address16                  (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_C3BUSW<<BUS_STARTBIT) + 0x000F)
#define CDD_C3BUSW_c3Address17                  (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_C3BUSW<<BUS_STARTBIT) + 0x0010)
#define CDD_C3BUSW_c3Address18                  (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_C3BUSW<<BUS_STARTBIT) + 0x0011)
#define CDD_C3BUSW_c3Address19                  (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_C3BUSW<<BUS_STARTBIT) + 0x0012)
#define CDD_C3BUSW_c3Address20                  (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_C3BUSW<<BUS_STARTBIT) + 0x0013)
#define CDD_C3BUSW_c3Address21                  (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_C3BUSW<<BUS_STARTBIT) + 0x0014)
#define CDD_C3BUSW_c3Address22                  (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_C3BUSW<<BUS_STARTBIT) + 0x0015)
#define CDD_C3BUSW_c3Address23                  (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_C3BUSW<<BUS_STARTBIT) + 0x0016)
#define CDD_C3BUSW_c3Be0                        (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_C3BUSW<<BUS_STARTBIT) + 0x0017)
#define CDD_C3BUSW_c3Be1                        (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_C3BUSW<<BUS_STARTBIT) + 0x0018)
#define CDD_C3BUSW_c3Cmd0                       (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_C3BUSW<<BUS_STARTBIT) + 0x0019)
#define CDD_C3BUSW_c3Cmd1                       (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_C3BUSW<<BUS_STARTBIT) + 0x001A)
#define CDD_C3BUSW_c3CmdVal                     (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_C3BUSW<<BUS_STARTBIT) + 0x001B)
#define CDD_C3BUSW_c3Eop                        (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_C3BUSW<<BUS_STARTBIT) + 0x001C)
#define CDD_C3BUSW_r3CmdAck                     (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_C3BUSW<<BUS_STARTBIT) + 0x001D)
#define CDD_C3BUSW_c3Wdata0                     (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_C3BUSW<<BUS_STARTBIT) + 0x001E)
#define CDD_C3BUSW_c3Wdata1                     (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_C3BUSW<<BUS_STARTBIT) + 0x001F)
#define CDD_C3BUSW_c3Wdata2                     (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_C3BUSW<<BUS_STARTBIT) + 0x0020)
#define CDD_C3BUSW_c3Wdata3                     (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_C3BUSW<<BUS_STARTBIT) + 0x0021)
#define CDD_C3BUSW_c3Wdata4                     (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_C3BUSW<<BUS_STARTBIT) + 0x0022)
#define CDD_C3BUSW_c3Wdata5                     (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_C3BUSW<<BUS_STARTBIT) + 0x0023)
#define CDD_C3BUSW_c3Wdata6                     (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_C3BUSW<<BUS_STARTBIT) + 0x0024)
#define CDD_C3BUSW_c3Wdata7                     (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_C3BUSW<<BUS_STARTBIT) + 0x0025)
#define CDD_C3BUSW_c3Wdata8                     (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_C3BUSW<<BUS_STARTBIT) + 0x0026)
#define CDD_C3BUSW_c3Wdata9                     (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_C3BUSW<<BUS_STARTBIT) + 0x0027)
#define CDD_C3BUSW_c3Wdata10                    (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_C3BUSW<<BUS_STARTBIT) + 0x0028)
#define CDD_C3BUSW_c3Wdata11                    (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_C3BUSW<<BUS_STARTBIT) + 0x0029)
#define CDD_C3BUSW_c3Wdata12                    (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_C3BUSW<<BUS_STARTBIT) + 0x002A)
#define CDD_C3BUSW_c3Wdata13                    (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_C3BUSW<<BUS_STARTBIT) + 0x002B)
#define CDD_C3BUSW_c3Wdata14                    (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_C3BUSW<<BUS_STARTBIT) + 0x002C)
#define CDD_C3BUSW_c3Wdata15                    (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_C3BUSW<<BUS_STARTBIT) + 0x002D)
#define CDD_C3BUSW_r3Rdata0                     (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_C3BUSW<<BUS_STARTBIT) + 0x002E)
#define CDD_C3BUSW_r3Rdata1                     (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_C3BUSW<<BUS_STARTBIT) + 0x002F)
#define CDD_C3BUSW_r3Rdata2                     (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_C3BUSW<<BUS_STARTBIT) + 0x0030)
#define CDD_C3BUSW_r3Rdata3                     (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_C3BUSW<<BUS_STARTBIT) + 0x0031)
#define CDD_C3BUSW_r3Rdata4                     (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_C3BUSW<<BUS_STARTBIT) + 0x0032)
#define CDD_C3BUSW_r3Rdata5                     (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_C3BUSW<<BUS_STARTBIT) + 0x0033)
#define CDD_C3BUSW_r3Rdata6                     (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_C3BUSW<<BUS_STARTBIT) + 0x0034)
#define CDD_C3BUSW_r3Rdata7                     (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_C3BUSW<<BUS_STARTBIT) + 0x0035)
#define CDD_C3BUSW_r3Rdata8                     (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_C3BUSW<<BUS_STARTBIT) + 0x0036)
#define CDD_C3BUSW_r3Rdata9                     (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_C3BUSW<<BUS_STARTBIT) + 0x0037)
#define CDD_C3BUSW_r3Rdata10                    (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_C3BUSW<<BUS_STARTBIT) + 0x0038)
#define CDD_C3BUSW_r3Rdata11                    (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_C3BUSW<<BUS_STARTBIT) + 0x0039)
#define CDD_C3BUSW_r3Rdata12                    (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_C3BUSW<<BUS_STARTBIT) + 0x003A)
#define CDD_C3BUSW_r3Rdata13                    (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_C3BUSW<<BUS_STARTBIT) + 0x003B)
#define CDD_C3BUSW_r3Rdata14                    (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_C3BUSW<<BUS_STARTBIT) + 0x003C)
#define CDD_C3BUSW_r3Rdata15                    (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_C3BUSW<<BUS_STARTBIT) + 0x003D)
#define CDD_C3BUSW_r3Eop                        (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_C3BUSW<<BUS_STARTBIT) + 0x003E)
#define CDD_C3BUSW_r3RspVal                     (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_C3BUSW<<BUS_STARTBIT) + 0x003F)
//DBG64SL1
#define CDD_DBG64SL1_clk                        (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_DBG64SL1<<BUS_STARTBIT) + 0x0000)
#define CDD_DBG64SL1_dshdld                     (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_DBG64SL1<<BUS_STARTBIT) + 0x0001)
#define CDD_DBG64SL1_dsyncd                     (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_DBG64SL1<<BUS_STARTBIT) + 0x0002)
#define CDD_DBG64SL1_dwaLHldb                   (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_DBG64SL1<<BUS_STARTBIT) + 0x0003)
#define CDD_DBG64SL1_sync_lock_status           (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_DBG64SL1<<BUS_STARTBIT) + 0x0004)
#define CDD_DBG64SL1_pkrdstop_buf               (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_DBG64SL1<<BUS_STARTBIT) + 0x0005)
#define CDD_DBG64SL1_rout2n3                    (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_DBG64SL1<<BUS_STARTBIT) + 0x0006)
#define CDD_DBG64SL1_pktswmode                  (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_DBG64SL1<<BUS_STARTBIT) + 0x0007)
#define CDD_DBG64SL1_buffullp                   (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_DBG64SL1<<BUS_STARTBIT) + 0x0008)
#define CDD_DBG64SL1_diferrp                    (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_DBG64SL1<<BUS_STARTBIT) + 0x0009)
#define CDD_DBG64SL1_bfullstop                  (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_DBG64SL1<<BUS_STARTBIT) + 0x000A)
#define CDD_DBG64SL1_dbfullstop2                (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_DBG64SL1<<BUS_STARTBIT) + 0x000B)
#define CDD_DBG64SL1_d1byte                     (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_DBG64SL1<<BUS_STARTBIT) + 0x000C)
#define CDD_DBG64SL1_c2dwacsj                   (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_DBG64SL1<<BUS_STARTBIT) + 0x000D)
#define CDD_DBG64SL1_dbneweb                    (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_DBG64SL1<<BUS_STARTBIT) + 0x000E)
#define CDD_DBG64SL1_dwrrq                      (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_DBG64SL1<<BUS_STARTBIT) + 0x000F)
#define CDD_DBG64SL1_dbnew                      (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_DBG64SL1<<BUS_STARTBIT) + 0x0010)
#define CDD_DBG64SL1_ilsync                     (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_DBG64SL1<<BUS_STARTBIT) + 0x0011)
#define CDD_DBG64SL1_nosync                     (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_DBG64SL1<<BUS_STARTBIT) + 0x0012)
#define CDD_DBG64SL1_wshort                     (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_DBG64SL1<<BUS_STARTBIT) + 0x0013)
#define CDD_DBG64SL1_esrload                    (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_DBG64SL1<<BUS_STARTBIT) + 0x0014)
#define CDD_DBG64SL1_ewrrq                      (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_DBG64SL1<<BUS_STARTBIT) + 0x0015)
#define CDD_DBG64SL1_sp                         (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_DBG64SL1<<BUS_STARTBIT) + 0x0016)
#define CDD_DBG64SL1_sq                         (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_DBG64SL1<<BUS_STARTBIT) + 0x0017)
#define CDD_DBG64SL1_sd                         (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_DBG64SL1<<BUS_STARTBIT) + 0x0018)
#define CDD_DBG64SL1_erhda1sel                  (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_DBG64SL1<<BUS_STARTBIT) + 0x0019)
#define CDD_DBG64SL1_synauds                    (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_DBG64SL1<<BUS_STARTBIT) + 0x001A)
#define CDD_DBG64SL1_qcrcbad                    (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_DBG64SL1<<BUS_STARTBIT) + 0x001B)
#define CDD_DBG64SL1_sqcrcok                    (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_DBG64SL1<<BUS_STARTBIT) + 0x001C)
#define CDD_DBG64SL1_rHAcase1                   (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_DBG64SL1<<BUS_STARTBIT) + 0x001D)
#define CDD_DBG64SL1_rHAeqstrPlus1              (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_DBG64SL1<<BUS_STARTBIT) + 0x001E)
#define CDD_DBG64SL1_last_second_page           (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_DBG64SL1<<BUS_STARTBIT) + 0x001F)
#define CDD_DBG64SL1_last_page                  (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_DBG64SL1<<BUS_STARTBIT) + 0x0020)
#define CDD_DBG64SL1_rDbctr0                    (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_DBG64SL1<<BUS_STARTBIT) + 0x0021)
#define CDD_DBG64SL1_rDbctr1                    (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_DBG64SL1<<BUS_STARTBIT) + 0x0022)
#define CDD_DBG64SL1_rDbctr2                    (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_DBG64SL1<<BUS_STARTBIT) + 0x0023)
#define CDD_DBG64SL1_rDbctr3                    (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_DBG64SL1<<BUS_STARTBIT) + 0x0024)
#define CDD_DBG64SL1_rDbctr4                    (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_DBG64SL1<<BUS_STARTBIT) + 0x0025)
#define CDD_DBG64SL1_rDbctr5                    (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_DBG64SL1<<BUS_STARTBIT) + 0x0026)
#define CDD_DBG64SL1_rDbctr6                    (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_DBG64SL1<<BUS_STARTBIT) + 0x0027)
#define CDD_DBG64SL1_rDbctr7                    (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_DBG64SL1<<BUS_STARTBIT) + 0x0028)
#define CDD_DBG64SL1_rDbctr8                    (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_DBG64SL1<<BUS_STARTBIT) + 0x0029)
#define CDD_DBG64SL1_rDbctr9                    (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_DBG64SL1<<BUS_STARTBIT) + 0x002A)
#define CDD_DBG64SL1_rDbctr10                   (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_DBG64SL1<<BUS_STARTBIT) + 0x002B)
#define CDD_DBG64SL1_rDbctr11                   (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_DBG64SL1<<BUS_STARTBIT) + 0x002C)
#define CDD_DBG64SL1_rDbctr12                   (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_DBG64SL1<<BUS_STARTBIT) + 0x002D)
#define CDD_DBG64SL1_dfbyte                     (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_DBG64SL1<<BUS_STARTBIT) + 0x002E)
#define CDD_DBG64SL1_dhhsp                      (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_DBG64SL1<<BUS_STARTBIT) + 0x002F)
#define CDD_DBG64SL1_dfdata0                    (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_DBG64SL1<<BUS_STARTBIT) + 0x0030)
#define CDD_DBG64SL1_dfdata1                    (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_DBG64SL1<<BUS_STARTBIT) + 0x0031)
#define CDD_DBG64SL1_dfdata2                    (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_DBG64SL1<<BUS_STARTBIT) + 0x0032)
#define CDD_DBG64SL1_dfdata3                    (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_DBG64SL1<<BUS_STARTBIT) + 0x0033)
#define CDD_DBG64SL1_dfdata4                    (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_DBG64SL1<<BUS_STARTBIT) + 0x0034)
#define CDD_DBG64SL1_dfdata5                    (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_DBG64SL1<<BUS_STARTBIT) + 0x0035)
#define CDD_DBG64SL1_dfdata6                    (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_DBG64SL1<<BUS_STARTBIT) + 0x0036)
#define CDD_DBG64SL1_dfdata7                    (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_DBG64SL1<<BUS_STARTBIT) + 0x0037)
#define CDD_DBG64SL1_dfdata8                    (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_DBG64SL1<<BUS_STARTBIT) + 0x0038)
#define CDD_DBG64SL1_dfdata9                    (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_DBG64SL1<<BUS_STARTBIT) + 0x0039)
#define CDD_DBG64SL1_dfdata10                   (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_DBG64SL1<<BUS_STARTBIT) + 0x003A)
#define CDD_DBG64SL1_dfdata11                   (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_DBG64SL1<<BUS_STARTBIT) + 0x003B)
#define CDD_DBG64SL1_dfdata12                   (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_DBG64SL1<<BUS_STARTBIT) + 0x003C)
#define CDD_DBG64SL1_dfdata13                   (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_DBG64SL1<<BUS_STARTBIT) + 0x003D)
#define CDD_DBG64SL1_dfdata14                   (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_DBG64SL1<<BUS_STARTBIT) + 0x003E)
#define CDD_DBG64SL1_dfdata15                   (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_DBG64SL1<<BUS_STARTBIT) + 0x003F)
//DBG64SL2
#define CDD_DBG64SL2_clk                        (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_DBG64SL2<<BUS_STARTBIT) + 0x0000)
#define CDD_DBG64SL2_didata0                    (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_DBG64SL2<<BUS_STARTBIT) + 0x0001)
#define CDD_DBG64SL2_didata1                    (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_DBG64SL2<<BUS_STARTBIT) + 0x0002)
#define CDD_DBG64SL2_didata2                    (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_DBG64SL2<<BUS_STARTBIT) + 0x0003)
#define CDD_DBG64SL2_didata3                    (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_DBG64SL2<<BUS_STARTBIT) + 0x0004)
#define CDD_DBG64SL2_didata4                    (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_DBG64SL2<<BUS_STARTBIT) + 0x0005)
#define CDD_DBG64SL2_didata5                    (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_DBG64SL2<<BUS_STARTBIT) + 0x0006)
#define CDD_DBG64SL2_didata6                    (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_DBG64SL2<<BUS_STARTBIT) + 0x0007)
#define CDD_DBG64SL2_didata7                    (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_DBG64SL2<<BUS_STARTBIT) + 0x0008)
#define CDD_DBG64SL2_didata8                    (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_DBG64SL2<<BUS_STARTBIT) + 0x0009)
#define CDD_DBG64SL2_didata9                    (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_DBG64SL2<<BUS_STARTBIT) + 0x000A)
#define CDD_DBG64SL2_didata10                   (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_DBG64SL2<<BUS_STARTBIT) + 0x000B)
#define CDD_DBG64SL2_didata11                   (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_DBG64SL2<<BUS_STARTBIT) + 0x000C)
#define CDD_DBG64SL2_didata12                   (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_DBG64SL2<<BUS_STARTBIT) + 0x000D)
#define CDD_DBG64SL2_didata13                   (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_DBG64SL2<<BUS_STARTBIT) + 0x000E)
#define CDD_DBG64SL2_didata14                   (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_DBG64SL2<<BUS_STARTBIT) + 0x000F)
#define CDD_DBG64SL2_didata15                   (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_DBG64SL2<<BUS_STARTBIT) + 0x0010)
#define CDD_DBG64SL2_didata16                   (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_DBG64SL2<<BUS_STARTBIT) + 0x0011)
#define CDD_DBG64SL2_didata17                   (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_DBG64SL2<<BUS_STARTBIT) + 0x0012)
#define CDD_DBG64SL2_didata18                   (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_DBG64SL2<<BUS_STARTBIT) + 0x0013)
#define CDD_DBG64SL2_didata19                   (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_DBG64SL2<<BUS_STARTBIT) + 0x0014)
#define CDD_DBG64SL2_didata20                   (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_DBG64SL2<<BUS_STARTBIT) + 0x0015)
#define CDD_DBG64SL2_didata21                   (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_DBG64SL2<<BUS_STARTBIT) + 0x0016)
#define CDD_DBG64SL2_didata22                   (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_DBG64SL2<<BUS_STARTBIT) + 0x0017)
#define CDD_DBG64SL2_didata23                   (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_DBG64SL2<<BUS_STARTBIT) + 0x0018)
#define CDD_DBG64SL2_didata24                   (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_DBG64SL2<<BUS_STARTBIT) + 0x0019)
#define CDD_DBG64SL2_didata25                   (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_DBG64SL2<<BUS_STARTBIT) + 0x001A)
#define CDD_DBG64SL2_didata26                   (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_DBG64SL2<<BUS_STARTBIT) + 0x001B)
#define CDD_DBG64SL2_didata27                   (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_DBG64SL2<<BUS_STARTBIT) + 0x001C)
#define CDD_DBG64SL2_didata28                   (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_DBG64SL2<<BUS_STARTBIT) + 0x001D)
#define CDD_DBG64SL2_didata29                   (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_DBG64SL2<<BUS_STARTBIT) + 0x001E)
#define CDD_DBG64SL2_didata30                   (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_DBG64SL2<<BUS_STARTBIT) + 0x001F)
#define CDD_DBG64SL2_didata31                   (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_DBG64SL2<<BUS_STARTBIT) + 0x0020)
#define CDD_DBG64SL2_dic2po0                    (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_DBG64SL2<<BUS_STARTBIT) + 0x0021)
#define CDD_DBG64SL2_dic2po1                    (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_DBG64SL2<<BUS_STARTBIT) + 0x0022)
#define CDD_DBG64SL2_dic2po2                    (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_DBG64SL2<<BUS_STARTBIT) + 0x0023)
#define CDD_DBG64SL2_dic2po3                    (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_DBG64SL2<<BUS_STARTBIT) + 0x0024)
#define CDD_DBG64SL2_dival                      (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_DBG64SL2<<BUS_STARTBIT) + 0x0025)
#define CDD_DBG64SL2_subdata0                   (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_DBG64SL2<<BUS_STARTBIT) + 0x0026)
#define CDD_DBG64SL2_subdata1                   (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_DBG64SL2<<BUS_STARTBIT) + 0x0027)
#define CDD_DBG64SL2_subdata2                   (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_DBG64SL2<<BUS_STARTBIT) + 0x0028)
#define CDD_DBG64SL2_subdata3                   (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_DBG64SL2<<BUS_STARTBIT) + 0x0029)
#define CDD_DBG64SL2_subdata4                   (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_DBG64SL2<<BUS_STARTBIT) + 0x002A)
#define CDD_DBG64SL2_subdata5                   (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_DBG64SL2<<BUS_STARTBIT) + 0x002B)
#define CDD_DBG64SL2_subdata6                   (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_DBG64SL2<<BUS_STARTBIT) + 0x002C)
#define CDD_DBG64SL2_subdata7                   (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_DBG64SL2<<BUS_STARTBIT) + 0x002D)
#define CDD_DBG64SL2_subval                     (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_DBG64SL2<<BUS_STARTBIT) + 0x002E)
#define CDD_DBG64SL2_siscor                     (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_DBG64SL2<<BUS_STARTBIT) + 0x002F)
#define CDD_DBG64SL2_hstpgcnt0                  (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_DBG64SL2<<BUS_STARTBIT) + 0x0030)
#define CDD_DBG64SL2_hstpgcnt1                  (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_DBG64SL2<<BUS_STARTBIT) + 0x0031)
#define CDD_DBG64SL2_hstpgcnt2                  (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_DBG64SL2<<BUS_STARTBIT) + 0x0032)
#define CDD_DBG64SL2_hstpgcnt3                  (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_DBG64SL2<<BUS_STARTBIT) + 0x0033)
#define CDD_DBG64SL2_hstpgcnt4                  (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_DBG64SL2<<BUS_STARTBIT) + 0x0034)
#define CDD_DBG64SL2_hstpgcnt5                  (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_DBG64SL2<<BUS_STARTBIT) + 0x0035)
#define CDD_DBG64SL2_hstpgcnt6                  (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_DBG64SL2<<BUS_STARTBIT) + 0x0036)
#define CDD_DBG64SL2_hstpgcnt7                  (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_DBG64SL2<<BUS_STARTBIT) + 0x0037)
#define CDD_DBG64SL2_hstpgcnt8                  (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_DBG64SL2<<BUS_STARTBIT) + 0x0038)
#define CDD_DBG64SL2_hstpgcnt9                  (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_DBG64SL2<<BUS_STARTBIT) + 0x0039)
#define CDD_DBG64SL2_hstpgcnt10                 (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_DBG64SL2<<BUS_STARTBIT) + 0x003A)
#define CDD_DBG64SL2_hstpgcnt11                 (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_DBG64SL2<<BUS_STARTBIT) + 0x003B)
#define CDD_DBG64SL2_hstpgcnt12                 (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_DBG64SL2<<BUS_STARTBIT) + 0x003C)
#define CDD_DBG64SL2_dsyncd                     (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_DBG64SL2<<BUS_STARTBIT) + 0x003D)
#define CDD_DBG64SL2_ewrrq                      (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_DBG64SL2<<BUS_STARTBIT) + 0x003E)
#define CDD_DBG64SL2_dbnew                      (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_DBG64SL2<<BUS_STARTBIT) + 0x003F)

//C3ECC
#define CDD_C3ECC_clk                           (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_C3ECC<<BUS_STARTBIT) + 0x0000)
#define CDD_C3ECC_ecc_incomplete                (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_C3ECC<<BUS_STARTBIT) + 0x0001)
#define CDD_C3ECC_dsp_first_byte                (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_C3ECC<<BUS_STARTBIT) + 0x0002)
#define CDD_C3ECC_rhnewb                        (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_C3ECC<<BUS_STARTBIT) + 0x0003)
#define CDD_C3ECC_rsherd2                       (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_C3ECC<<BUS_STARTBIT) + 0x0004)
#define CDD_C3ECC_erhda1sel                     (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_C3ECC<<BUS_STARTBIT) + 0x0005)
#define CDD_C3ECC_esync_lk_rstb                 (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_C3ECC<<BUS_STARTBIT) + 0x0006)
#define CDD_C3ECC_rybm2                         (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_C3ECC<<BUS_STARTBIT) + 0x0007)
#define CDD_C3ECC_vmsf                          (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_C3ECC<<BUS_STARTBIT) + 0x0008)
#define CDD_C3ECC_decintsel                     (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_C3ECC<<BUS_STARTBIT) + 0x0009)
#define CDD_C3ECC_datainfo                      (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_C3ECC<<BUS_STARTBIT) + 0x000A)
#define CDD_C3ECC_rdmisspb                      (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_C3ECC<<BUS_STARTBIT) + 0x000B)
#define CDD_C3ECC_rmodchgp                      (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_C3ECC<<BUS_STARTBIT) + 0x000C)
#define CDD_C3ECC_msfcerrp                      (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_C3ECC<<BUS_STARTBIT) + 0x000D)
#define CDD_C3ECC_edacerrpb                     (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_C3ECC<<BUS_STARTBIT) + 0x000E)
#define CDD_C3ECC_hdrdypb                       (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_C3ECC<<BUS_STARTBIT) + 0x000F)
#define CDD_C3ECC_tfndp                         (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_C3ECC<<BUS_STARTBIT) + 0x0010)
#define CDD_C3ECC_prdpb                         (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_C3ECC<<BUS_STARTBIT) + 0x0011)
#define CDD_C3ECC_tbuffer                       (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_C3ECC<<BUS_STARTBIT) + 0x0012)
#define CDD_C3ECC_dc2errpb                      (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_C3ECC<<BUS_STARTBIT) + 0x0013)
#define CDD_C3ECC_smsfcerrp                     (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_C3ECC<<BUS_STARTBIT) + 0x0014)
#define CDD_C3ECC_sc3errp                       (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_C3ECC<<BUS_STARTBIT) + 0x0015)
#define CDD_C3ECC_hdrerrp                       (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_C3ECC<<BUS_STARTBIT) + 0x0016)
#define CDD_C3ECC_firstbufp                     (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_C3ECC<<BUS_STARTBIT) + 0x0017)
#define CDD_C3ECC_lnkapb                        (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_C3ECC<<BUS_STARTBIT) + 0x0018)
#define CDD_C3ECC_mfcd                          (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_C3ECC<<BUS_STARTBIT) + 0x0019)
#define CDD_C3ECC_tecc                          (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_C3ECC<<BUS_STARTBIT) + 0x001A)
#define CDD_C3ECC_esrload_inhibit               (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_C3ECC<<BUS_STARTBIT) + 0x001B)
#define CDD_C3ECC_m2f2                          (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_C3ECC<<BUS_STARTBIT) + 0x001C)
#define CDD_C3ECC_rmw_ack_enable                (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_C3ECC<<BUS_STARTBIT) + 0x001D)
#define CDD_C3ECC_head4mode2                    (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_C3ECC<<BUS_STARTBIT) + 0x001E)
#define CDD_C3ECC_read_first_codeword           (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_C3ECC<<BUS_STARTBIT) + 0x001F)
#define CDD_C3ECC_rmw_data_ready_d              (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_C3ECC<<BUS_STARTBIT) + 0x0020)
#define CDD_C3ECC_no_corr_last_cw_d             (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_C3ECC<<BUS_STARTBIT) + 0x0021)
#define CDD_C3ECC_no_corr_cond                  (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_C3ECC<<BUS_STARTBIT) + 0x0022)
#define CDD_C3ECC_sp                            (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_C3ECC<<BUS_STARTBIT) + 0x0023)
#define CDD_C3ECC_sq                            (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_C3ECC<<BUS_STARTBIT) + 0x0024)
#define CDD_C3ECC_sd                            (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_C3ECC<<BUS_STARTBIT) + 0x0025)
#define CDD_C3ECC_mode                          (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_C3ECC<<BUS_STARTBIT) + 0x0026)
#define CDD_C3ECC_ewrrq                         (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_C3ECC<<BUS_STARTBIT) + 0x0027)
#define CDD_C3ECC_edac_running                  (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_C3ECC<<BUS_STARTBIT) + 0x0028)
#define CDD_C3ECC_cw_reading_done               (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_C3ECC<<BUS_STARTBIT) + 0x0029)
#define CDD_C3ECC_last_2_sym                    (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_C3ECC<<BUS_STARTBIT) + 0x002A)
#define CDD_C3ECC_match                         (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_C3ECC<<BUS_STARTBIT) + 0x002B)
#define CDD_C3ECC_qse                           (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_C3ECC<<BUS_STARTBIT) + 0x002C)
#define CDD_C3ECC_ecc_inhibit                   (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_C3ECC<<BUS_STARTBIT) + 0x002D)
#define CDD_C3ECC_aewaes                        (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_C3ECC<<BUS_STARTBIT) + 0x002E)
#define CDD_C3ECC_m2f2_or_m0                    (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_C3ECC<<BUS_STARTBIT) + 0x002F)
#define CDD_C3ECC_modmm                         (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_C3ECC<<BUS_STARTBIT) + 0x0030)
#define CDD_C3ECC_corr_write_enable             (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_C3ECC<<BUS_STARTBIT) + 0x0031)
#define CDD_C3ECC_statam0                       (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_C3ECC<<BUS_STARTBIT) + 0x0032)
#define CDD_C3ECC_bselect                       (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_C3ECC<<BUS_STARTBIT) + 0x0033)
#define CDD_C3ECC_wrrq                          (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_C3ECC<<BUS_STARTBIT) + 0x0034)
#define CDD_C3ECC_corrected_sect                (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_C3ECC<<BUS_STARTBIT) + 0x0035)
#define CDD_C3ECC_uncorr_sect                   (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_C3ECC<<BUS_STARTBIT) + 0x0036)
#define CDD_C3ECC_eccrwdval                     (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_C3ECC<<BUS_STARTBIT) + 0x0037)
#define CDD_C3ECC_edcrwdval                     (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_C3ECC<<BUS_STARTBIT) + 0x0038)
#define CDD_C3ECC_rmwbytesel                    (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_C3ECC<<BUS_STARTBIT) + 0x0039)
#define CDD_C3ECC_rdmodwr                       (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_C3ECC<<BUS_STARTBIT) + 0x003A)
#define CDD_C3ECC_edc_done                      (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_C3ECC<<BUS_STARTBIT) + 0x003B)
#define CDD_C3ECC_edc_remainder_zero            (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_C3ECC<<BUS_STARTBIT) + 0x003C)
#define CDD_C3ECC_uncorr                        (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_C3ECC<<BUS_STARTBIT) + 0x003D)
#define CDD_C3ECC_corr_done                     (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_C3ECC<<BUS_STARTBIT) + 0x003E)
#define CDD_C3ECC_acc_running_match_s0          (CDD_BLK + DBG64SEL + (halCDD_CDDDbgSel_C3ECC<<BUS_STARTBIT) + 0x003F)

/****************************************************************************
* DGB64 BUS CDE BLOCK
****************************************************************************/
//halCDE_efmproc_dbg_bus (slot 0)
#define CDE_EFMPROC0_realwr                     (CDE_BLK + DBG64SEL + (halCDE_efmproc_dbg_bus<<BUS_STARTBIT) + 0x003F)
#define CDE_EFMPROC0_efmsri                     (CDE_BLK + DBG64SEL + (halCDE_efmproc_dbg_bus<<BUS_STARTBIT) + 0x003E)
#define CDE_EFMPROC0_async_fall                 (CDE_BLK + DBG64SEL + (halCDE_efmproc_dbg_bus<<BUS_STARTBIT) + 0x003D)
#define CDE_EFMPROC0_scor_fall                  (CDE_BLK + DBG64SEL + (halCDE_efmproc_dbg_bus<<BUS_STARTBIT) + 0x003C)
#define CDE_EFMPROC0_write_start                (CDE_BLK + DBG64SEL + (halCDE_efmproc_dbg_bus<<BUS_STARTBIT) + 0x003B)
#define CDE_EFMPROC0_init_frmcnt                (CDE_BLK + DBG64SEL + (halCDE_efmproc_dbg_bus<<BUS_STARTBIT) + 0x003A)
#define CDE_EFMPROC0_xlcase2                    (CDE_BLK + DBG64SEL + (halCDE_efmproc_dbg_bus<<BUS_STARTBIT) + 0x0039)
#define CDE_EFMPROC0_xw_efmsync                 (CDE_BLK + DBG64SEL + (halCDE_efmproc_dbg_bus<<BUS_STARTBIT) + 0x0038)
#define CDE_EFMPROC0_frmcnt7                    (CDE_BLK + DBG64SEL + (halCDE_efmproc_dbg_bus<<BUS_STARTBIT) + 0x0037)
#define CDE_EFMPROC0_frmcnt6                    (CDE_BLK + DBG64SEL + (halCDE_efmproc_dbg_bus<<BUS_STARTBIT) + 0x0036)
#define CDE_EFMPROC0_frmcnt5                    (CDE_BLK + DBG64SEL + (halCDE_efmproc_dbg_bus<<BUS_STARTBIT) + 0x0035)
#define CDE_EFMPROC0_frmcnt4                    (CDE_BLK + DBG64SEL + (halCDE_efmproc_dbg_bus<<BUS_STARTBIT) + 0x0034)
#define CDE_EFMPROC0_frmcnt3                    (CDE_BLK + DBG64SEL + (halCDE_efmproc_dbg_bus<<BUS_STARTBIT) + 0x0033)
#define CDE_EFMPROC0_frmcnt2                    (CDE_BLK + DBG64SEL + (halCDE_efmproc_dbg_bus<<BUS_STARTBIT) + 0x0032)
#define CDE_EFMPROC0_frmcnt1                    (CDE_BLK + DBG64SEL + (halCDE_efmproc_dbg_bus<<BUS_STARTBIT) + 0x0031)
#define CDE_EFMPROC0_frmcnt0                    (CDE_BLK + DBG64SEL + (halCDE_efmproc_dbg_bus<<BUS_STARTBIT) + 0x0030)
#define CDE_EFMPROC0_asec3                      (CDE_BLK + DBG64SEL + (halCDE_efmproc_dbg_bus<<BUS_STARTBIT) + 0x002F)
#define CDE_EFMPROC0_asec2                      (CDE_BLK + DBG64SEL + (halCDE_efmproc_dbg_bus<<BUS_STARTBIT) + 0x002E)
#define CDE_EFMPROC0_asec1                      (CDE_BLK + DBG64SEL + (halCDE_efmproc_dbg_bus<<BUS_STARTBIT) + 0x002D)
#define CDE_EFMPROC0_asec0                      (CDE_BLK + DBG64SEL + (halCDE_efmproc_dbg_bus<<BUS_STARTBIT) + 0x002C)
#define CDE_EFMPROC0_afrm7                      (CDE_BLK + DBG64SEL + (halCDE_efmproc_dbg_bus<<BUS_STARTBIT) + 0x002B)
#define CDE_EFMPROC0_afrm6                      (CDE_BLK + DBG64SEL + (halCDE_efmproc_dbg_bus<<BUS_STARTBIT) + 0x002A)
#define CDE_EFMPROC0_afrm5                      (CDE_BLK + DBG64SEL + (halCDE_efmproc_dbg_bus<<BUS_STARTBIT) + 0x0029)
#define CDE_EFMPROC0_afrm4                      (CDE_BLK + DBG64SEL + (halCDE_efmproc_dbg_bus<<BUS_STARTBIT) + 0x0028)
#define CDE_EFMPROC0_afrm3                      (CDE_BLK + DBG64SEL + (halCDE_efmproc_dbg_bus<<BUS_STARTBIT) + 0x0027)
#define CDE_EFMPROC0_afrm2                      (CDE_BLK + DBG64SEL + (halCDE_efmproc_dbg_bus<<BUS_STARTBIT) + 0x0026)
#define CDE_EFMPROC0_afrm1                      (CDE_BLK + DBG64SEL + (halCDE_efmproc_dbg_bus<<BUS_STARTBIT) + 0x0025)
#define CDE_EFMPROC0_afrm0                      (CDE_BLK + DBG64SEL + (halCDE_efmproc_dbg_bus<<BUS_STARTBIT) + 0x0024)
#define CDE_EFMPROC0_targeq                     (CDE_BLK + DBG64SEL + (halCDE_efmproc_dbg_bus<<BUS_STARTBIT) + 0x0023)
#define CDE_EFMPROC0_good_amsf_found            (CDE_BLK + DBG64SEL + (halCDE_efmproc_dbg_bus<<BUS_STARTBIT) + 0x0022)
#define CDE_EFMPROC0_amsf_error                 (CDE_BLK + DBG64SEL + (halCDE_efmproc_dbg_bus<<BUS_STARTBIT) + 0x0021)
#define CDE_EFMPROC0_async_lost                 (CDE_BLK + DBG64SEL + (halCDE_efmproc_dbg_bus<<BUS_STARTBIT) + 0x0020)
#define CDE_EFMPROC0_write_clk                  (CDE_BLK + DBG64SEL + (halCDE_efmproc_dbg_bus<<BUS_STARTBIT) + 0x001F)
#define CDE_EFMPROC0_aaddr_lost                 (CDE_BLK + DBG64SEL + (halCDE_efmproc_dbg_bus<<BUS_STARTBIT) + 0x001E)
#define CDE_EFMPROC0_eefs                       (CDE_BLK + DBG64SEL + (halCDE_efmproc_dbg_bus<<BUS_STARTBIT) + 0x001D)
#define CDE_EFMPROC0_esfs                       (CDE_BLK + DBG64SEL + (halCDE_efmproc_dbg_bus<<BUS_STARTBIT) + 0x001C)
#define CDE_EFMPROC0_esfs_mid                   (CDE_BLK + DBG64SEL + (halCDE_efmproc_dbg_bus<<BUS_STARTBIT) + 0x001B)
#define CDE_EFMPROC0_efmsync                    (CDE_BLK + DBG64SEL + (halCDE_efmproc_dbg_bus<<BUS_STARTBIT) + 0x001A)
#define CDE_EFMPROC0_wrstate_write              (CDE_BLK + DBG64SEL + (halCDE_efmproc_dbg_bus<<BUS_STARTBIT) + 0x0019)
#define CDE_EFMPROC0_wrstate_search             (CDE_BLK + DBG64SEL + (halCDE_efmproc_dbg_bus<<BUS_STARTBIT) + 0x0018)
#define CDE_EFMPROC0_wrstate_wrstop_xlnk        (CDE_BLK + DBG64SEL + (halCDE_efmproc_dbg_bus<<BUS_STARTBIT) + 0x0017)
#define CDE_EFMPROC0_wrstate_clr_optrig         (CDE_BLK + DBG64SEL + (halCDE_efmproc_dbg_bus<<BUS_STARTBIT) + 0x0016)
#define CDE_EFMPROC0_wrstate_wrstop             (CDE_BLK + DBG64SEL + (halCDE_efmproc_dbg_bus<<BUS_STARTBIT) + 0x0015)
#define CDE_EFMPROC0_amsf_error_a               (CDE_BLK + DBG64SEL + (halCDE_efmproc_dbg_bus<<BUS_STARTBIT) + 0x0014)
#define CDE_EFMPROC0_recode_error               (CDE_BLK + DBG64SEL + (halCDE_efmproc_dbg_bus<<BUS_STARTBIT) + 0x0013)
#define CDE_EFMPROC0_panicin_wrclk              (CDE_BLK + DBG64SEL + (halCDE_efmproc_dbg_bus<<BUS_STARTBIT) + 0x0012)
#define CDE_EFMPROC0_write_before_stop          (CDE_BLK + DBG64SEL + (halCDE_efmproc_dbg_bus<<BUS_STARTBIT) + 0x0011)
#define CDE_EFMPROC0_brktime                    (CDE_BLK + DBG64SEL + (halCDE_efmproc_dbg_bus<<BUS_STARTBIT) + 0x0010)
#define CDE_EFMPROC0_write_clk_a                (CDE_BLK + DBG64SEL + (halCDE_efmproc_dbg_bus<<BUS_STARTBIT) + 0x000F)
#define CDE_EFMPROC0_wladdwin                   (CDE_BLK + DBG64SEL + (halCDE_efmproc_dbg_bus<<BUS_STARTBIT) + 0x000E)
#define CDE_EFMPROC0_wladd_state1               (CDE_BLK + DBG64SEL + (halCDE_efmproc_dbg_bus<<BUS_STARTBIT) + 0x000D)
#define CDE_EFMPROC0_wladd_state0               (CDE_BLK + DBG64SEL + (halCDE_efmproc_dbg_bus<<BUS_STARTBIT) + 0x000C)
#define CDE_EFMPROC0_wlbsy                      (CDE_BLK + DBG64SEL + (halCDE_efmproc_dbg_bus<<BUS_STARTBIT) + 0x000B)
#define CDE_EFMPROC0_trig_wrcount               (CDE_BLK + DBG64SEL + (halCDE_efmproc_dbg_bus<<BUS_STARTBIT) + 0x000A)
#define CDE_EFMPROC0_dec_wrcount                (CDE_BLK + DBG64SEL + (halCDE_efmproc_dbg_bus<<BUS_STARTBIT) + 0x0009)
#define CDE_EFMPROC0_wrcount_end                (CDE_BLK + DBG64SEL + (halCDE_efmproc_dbg_bus<<BUS_STARTBIT) + 0x0008)
#define CDE_EFMPROC0_recode_prep                (CDE_BLK + DBG64SEL + (halCDE_efmproc_dbg_bus<<BUS_STARTBIT) + 0x0007)
#define CDE_EFMPROC0_recode_write               (CDE_BLK + DBG64SEL + (halCDE_efmproc_dbg_bus<<BUS_STARTBIT) + 0x0006)
#define CDE_EFMPROC0_scor_wrclk                 (CDE_BLK + DBG64SEL + (halCDE_efmproc_dbg_bus<<BUS_STARTBIT) + 0x0005)
#define CDE_EFMPROC0_wrtbreak_hold              (CDE_BLK + DBG64SEL + (halCDE_efmproc_dbg_bus<<BUS_STARTBIT) + 0x0004)
#define CDE_EFMPROC0_timset1                    (CDE_BLK + DBG64SEL + (halCDE_efmproc_dbg_bus<<BUS_STARTBIT) + 0x0003)
#define CDE_EFMPROC0_timset2                    (CDE_BLK + DBG64SEL + (halCDE_efmproc_dbg_bus<<BUS_STARTBIT) + 0x0002)
#define CDE_EFMPROC0_timset3                    (CDE_BLK + DBG64SEL + (halCDE_efmproc_dbg_bus<<BUS_STARTBIT) + 0x0001)
#define CDE_EFMPROC0_sysclk                     (CDE_BLK + DBG64SEL + (halCDE_efmproc_dbg_bus<<BUS_STARTBIT) + 0x0000)
//halCDE_efmproc_dbg_bus (slot 1)
#define CDE_EFMPROC1_frmcnt7                    (CDE_BLK + DBG64SEL + (halCDE_efmproc_dbg_bus<<BUS_STARTBIT) + 0x012F)
#define CDE_EFMPROC1_frmcnt6                    (CDE_BLK + DBG64SEL + (halCDE_efmproc_dbg_bus<<BUS_STARTBIT) + 0x012E)
#define CDE_EFMPROC1_frmcnt5                    (CDE_BLK + DBG64SEL + (halCDE_efmproc_dbg_bus<<BUS_STARTBIT) + 0x012D)
#define CDE_EFMPROC1_frmcnt4                    (CDE_BLK + DBG64SEL + (halCDE_efmproc_dbg_bus<<BUS_STARTBIT) + 0x012C)
#define CDE_EFMPROC1_frmcnt3                    (CDE_BLK + DBG64SEL + (halCDE_efmproc_dbg_bus<<BUS_STARTBIT) + 0x012B)
#define CDE_EFMPROC1_frmcnt2                    (CDE_BLK + DBG64SEL + (halCDE_efmproc_dbg_bus<<BUS_STARTBIT) + 0x012A)
#define CDE_EFMPROC1_frmcnt1                    (CDE_BLK + DBG64SEL + (halCDE_efmproc_dbg_bus<<BUS_STARTBIT) + 0x0129)
#define CDE_EFMPROC1_frmcnt0                    (CDE_BLK + DBG64SEL + (halCDE_efmproc_dbg_bus<<BUS_STARTBIT) + 0x0128)
#define CDE_EFMPROC1_wdcnt5                     (CDE_BLK + DBG64SEL + (halCDE_efmproc_dbg_bus<<BUS_STARTBIT) + 0x0127)
#define CDE_EFMPROC1_wdcnt4                     (CDE_BLK + DBG64SEL + (halCDE_efmproc_dbg_bus<<BUS_STARTBIT) + 0x0126)
#define CDE_EFMPROC1_wdcnt3                     (CDE_BLK + DBG64SEL + (halCDE_efmproc_dbg_bus<<BUS_STARTBIT) + 0x0125)
#define CDE_EFMPROC1_wdcnt2                     (CDE_BLK + DBG64SEL + (halCDE_efmproc_dbg_bus<<BUS_STARTBIT) + 0x0124)
#define CDE_EFMPROC1_wdcnt1                     (CDE_BLK + DBG64SEL + (halCDE_efmproc_dbg_bus<<BUS_STARTBIT) + 0x0123)
#define CDE_EFMPROC1_wdcnt0                     (CDE_BLK + DBG64SEL + (halCDE_efmproc_dbg_bus<<BUS_STARTBIT) + 0x0122)
#define CDE_EFMPROC1_bitcnt4                    (CDE_BLK + DBG64SEL + (halCDE_efmproc_dbg_bus<<BUS_STARTBIT) + 0x0121)
#define CDE_EFMPROC1_bitcnt3                    (CDE_BLK + DBG64SEL + (halCDE_efmproc_dbg_bus<<BUS_STARTBIT) + 0x0120)
#define CDE_EFMPROC1_bitcnt2                    (CDE_BLK + DBG64SEL + (halCDE_efmproc_dbg_bus<<BUS_STARTBIT) + 0x011F)
#define CDE_EFMPROC1_bitcnt1                    (CDE_BLK + DBG64SEL + (halCDE_efmproc_dbg_bus<<BUS_STARTBIT) + 0x011E)
#define CDE_EFMPROC1_bitcnt0                    (CDE_BLK + DBG64SEL + (halCDE_efmproc_dbg_bus<<BUS_STARTBIT) + 0x011D)
#define CDE_EFMPROC1_write_clk                  (CDE_BLK + DBG64SEL + (halCDE_efmproc_dbg_bus<<BUS_STARTBIT) + 0x011C)
#define CDE_EFMPROC1_wgate_cde                  (CDE_BLK + DBG64SEL + (halCDE_efmproc_dbg_bus<<BUS_STARTBIT) + 0x011B)
#define CDE_EFMPROC1_hfsw1st                    (CDE_BLK + DBG64SEL + (halCDE_efmproc_dbg_bus<<BUS_STARTBIT) + 0x011A)
#define CDE_EFMPROC1_hfsw2nd                    (CDE_BLK + DBG64SEL + (halCDE_efmproc_dbg_bus<<BUS_STARTBIT) + 0x0119)
#define CDE_EFMPROC1_efmsri                     (CDE_BLK + DBG64SEL + (halCDE_efmproc_dbg_bus<<BUS_STARTBIT) + 0x0118)
#define CDE_EFMPROC1_hfon_wrclk                 (CDE_BLK + DBG64SEL + (halCDE_efmproc_dbg_bus<<BUS_STARTBIT) + 0x0117)
#define CDE_EFMPROC1_wgate_cutoff               (CDE_BLK + DBG64SEL + (halCDE_efmproc_dbg_bus<<BUS_STARTBIT) + 0x0116)
#define CDE_EFMPROC1_targeq                     (CDE_BLK + DBG64SEL + (halCDE_efmproc_dbg_bus<<BUS_STARTBIT) + 0x0115)
#define CDE_EFMPROC1_targeq_a                   (CDE_BLK + DBG64SEL + (halCDE_efmproc_dbg_bus<<BUS_STARTBIT) + 0x0114)
#define CDE_EFMPROC1_good_amsf_found            (CDE_BLK + DBG64SEL + (halCDE_efmproc_dbg_bus<<BUS_STARTBIT) + 0x0113)
#define CDE_EFMPROC1_amsf_error                 (CDE_BLK + DBG64SEL + (halCDE_efmproc_dbg_bus<<BUS_STARTBIT) + 0x0112)
#define CDE_EFMPROC1_async_lost                 (CDE_BLK + DBG64SEL + (halCDE_efmproc_dbg_bus<<BUS_STARTBIT) + 0x0111)
#define CDE_EFMPROC1_aaddr_lost                 (CDE_BLK + DBG64SEL + (halCDE_efmproc_dbg_bus<<BUS_STARTBIT) + 0x0110)
#define CDE_EFMPROC1_scor_wrclk                 (CDE_BLK + DBG64SEL + (halCDE_efmproc_dbg_bus<<BUS_STARTBIT) + 0x010F)
#define CDE_EFMPROC1_async                      (CDE_BLK + DBG64SEL + (halCDE_efmproc_dbg_bus<<BUS_STARTBIT) + 0x010E)
#define CDE_EFMPROC1_esfs                       (CDE_BLK + DBG64SEL + (halCDE_efmproc_dbg_bus<<BUS_STARTBIT) + 0x010D)
#define CDE_EFMPROC1_eefs                       (CDE_BLK + DBG64SEL + (halCDE_efmproc_dbg_bus<<BUS_STARTBIT) + 0x010C)
#define CDE_EFMPROC1_cd_write_esfs              (CDE_BLK + DBG64SEL + (halCDE_efmproc_dbg_bus<<BUS_STARTBIT) + 0x010B)
#define CDE_EFMPROC1_cd_rcode_esfs              (CDE_BLK + DBG64SEL + (halCDE_efmproc_dbg_bus<<BUS_STARTBIT) + 0x010A)
#define CDE_EFMPROC1_wrstate_idle               (CDE_BLK + DBG64SEL + (halCDE_efmproc_dbg_bus<<BUS_STARTBIT) + 0x0109)
#define CDE_EFMPROC1_wrstate_prep               (CDE_BLK + DBG64SEL + (halCDE_efmproc_dbg_bus<<BUS_STARTBIT) + 0x0108)
#define CDE_EFMPROC1_wrstate_search             (CDE_BLK + DBG64SEL + (halCDE_efmproc_dbg_bus<<BUS_STARTBIT) + 0x0107)
#define CDE_EFMPROC1_wrstate_wrstart            (CDE_BLK + DBG64SEL + (halCDE_efmproc_dbg_bus<<BUS_STARTBIT) + 0x0106)
#define CDE_EFMPROC1_wrstate_write              (CDE_BLK + DBG64SEL + (halCDE_efmproc_dbg_bus<<BUS_STARTBIT) + 0x0105)
#define CDE_EFMPROC1_wrstate_wrstop             (CDE_BLK + DBG64SEL + (halCDE_efmproc_dbg_bus<<BUS_STARTBIT) + 0x0104)
#define CDE_EFMPROC1_wrstate_wrstop_xlnk        (CDE_BLK + DBG64SEL + (halCDE_efmproc_dbg_bus<<BUS_STARTBIT) + 0x0103)
#define CDE_EFMPROC1_rstrt                      (CDE_BLK + DBG64SEL + (halCDE_efmproc_dbg_bus<<BUS_STARTBIT) + 0x0102)
#define CDE_EFMPROC1_recode_prep                (CDE_BLK + DBG64SEL + (halCDE_efmproc_dbg_bus<<BUS_STARTBIT) + 0x0101)
#define CDE_EFMPROC1_recode_write               (CDE_BLK + DBG64SEL + (halCDE_efmproc_dbg_bus<<BUS_STARTBIT) + 0x0100)
//halCDE_lf_dbg_bus (slot 0)
#define CDE_LF0_basic_ang_wrclk_p               (CDE_BLK + DBG64SEL + (halCDE_lf_dbg_bus<<BUS_STARTBIT) + 0x003F)
#define CDE_LF0_lf_state1                       (CDE_BLK + DBG64SEL + (halCDE_lf_dbg_bus<<BUS_STARTBIT) + 0x003E)
#define CDE_LF0_lf_state0                       (CDE_BLK + DBG64SEL + (halCDE_lf_dbg_bus<<BUS_STARTBIT) + 0x003D)
#define CDE_LF0_lf_window                       (CDE_BLK + DBG64SEL + (halCDE_lf_dbg_bus<<BUS_STARTBIT) + 0x003C)
#define CDE_LF0_lf_trg                          (CDE_BLK + DBG64SEL + (halCDE_lf_dbg_bus<<BUS_STARTBIT) + 0x003B)
#define CDE_LF0_lf_dotx                         (CDE_BLK + DBG64SEL + (halCDE_lf_dbg_bus<<BUS_STARTBIT) + 0x003A)
#define CDE_LF0_bitcnt_lf4                      (CDE_BLK + DBG64SEL + (halCDE_lf_dbg_bus<<BUS_STARTBIT) + 0x0039)
#define CDE_LF0_bitcnt_lf3                      (CDE_BLK + DBG64SEL + (halCDE_lf_dbg_bus<<BUS_STARTBIT) + 0x0038)
#define CDE_LF0_bitcnt_lf2                      (CDE_BLK + DBG64SEL + (halCDE_lf_dbg_bus<<BUS_STARTBIT) + 0x0037)
#define CDE_LF0_bitcnt_lf1                      (CDE_BLK + DBG64SEL + (halCDE_lf_dbg_bus<<BUS_STARTBIT) + 0x0036)
#define CDE_LF0_bitcnt_lf0                      (CDE_BLK + DBG64SEL + (halCDE_lf_dbg_bus<<BUS_STARTBIT) + 0x0035)
#define CDE_LF0_wdcnt_lf5                       (CDE_BLK + DBG64SEL + (halCDE_lf_dbg_bus<<BUS_STARTBIT) + 0x0034)
#define CDE_LF0_wdcnt_lf4                       (CDE_BLK + DBG64SEL + (halCDE_lf_dbg_bus<<BUS_STARTBIT) + 0x0033)
#define CDE_LF0_wdcnt_lf3                       (CDE_BLK + DBG64SEL + (halCDE_lf_dbg_bus<<BUS_STARTBIT) + 0x0032)
#define CDE_LF0_wdcnt_lf2                       (CDE_BLK + DBG64SEL + (halCDE_lf_dbg_bus<<BUS_STARTBIT) + 0x0031)
#define CDE_LF0_wdcnt_lf1                       (CDE_BLK + DBG64SEL + (halCDE_lf_dbg_bus<<BUS_STARTBIT) + 0x0030)
#define CDE_LF0_wdcnt_lf0                       (CDE_BLK + DBG64SEL + (halCDE_lf_dbg_bus<<BUS_STARTBIT) + 0x002F)
#define CDE_LF0_frmcnt_lf6                      (CDE_BLK + DBG64SEL + (halCDE_lf_dbg_bus<<BUS_STARTBIT) + 0x002E)
#define CDE_LF0_frmcnt_lf5                      (CDE_BLK + DBG64SEL + (halCDE_lf_dbg_bus<<BUS_STARTBIT) + 0x002D)
#define CDE_LF0_frmcnt_lf4                      (CDE_BLK + DBG64SEL + (halCDE_lf_dbg_bus<<BUS_STARTBIT) + 0x002C)
#define CDE_LF0_frmcnt_lf3                      (CDE_BLK + DBG64SEL + (halCDE_lf_dbg_bus<<BUS_STARTBIT) + 0x002B)
#define CDE_LF0_frmcnt_lf2                      (CDE_BLK + DBG64SEL + (halCDE_lf_dbg_bus<<BUS_STARTBIT) + 0x002A)
#define CDE_LF0_frmcnt_lf1                      (CDE_BLK + DBG64SEL + (halCDE_lf_dbg_bus<<BUS_STARTBIT) + 0x0029)
#define CDE_LF0_frmcnt_lf0                      (CDE_BLK + DBG64SEL + (halCDE_lf_dbg_bus<<BUS_STARTBIT) + 0x0028)
#define CDE_LF0_seccnt_lf7                      (CDE_BLK + DBG64SEL + (halCDE_lf_dbg_bus<<BUS_STARTBIT) + 0x0027)
#define CDE_LF0_seccnt_lf6                      (CDE_BLK + DBG64SEL + (halCDE_lf_dbg_bus<<BUS_STARTBIT) + 0x0026)
#define CDE_LF0_seccnt_lf5                      (CDE_BLK + DBG64SEL + (halCDE_lf_dbg_bus<<BUS_STARTBIT) + 0x0025)
#define CDE_LF0_seccnt_lf4                      (CDE_BLK + DBG64SEL + (halCDE_lf_dbg_bus<<BUS_STARTBIT) + 0x0024)
#define CDE_LF0_seccnt_lf3                      (CDE_BLK + DBG64SEL + (halCDE_lf_dbg_bus<<BUS_STARTBIT) + 0x0023)
#define CDE_LF0_seccnt_lf2                      (CDE_BLK + DBG64SEL + (halCDE_lf_dbg_bus<<BUS_STARTBIT) + 0x0022)
#define CDE_LF0_seccnt_lf1                      (CDE_BLK + DBG64SEL + (halCDE_lf_dbg_bus<<BUS_STARTBIT) + 0x0021)
#define CDE_LF0_seccnt_lf0                      (CDE_BLK + DBG64SEL + (halCDE_lf_dbg_bus<<BUS_STARTBIT) + 0x0020)
#define CDE_LF0_trkcnt_lf6                      (CDE_BLK + DBG64SEL + (halCDE_lf_dbg_bus<<BUS_STARTBIT) + 0x001F)
#define CDE_LF0_trkcnt_lf5                      (CDE_BLK + DBG64SEL + (halCDE_lf_dbg_bus<<BUS_STARTBIT) + 0x001E)
#define CDE_LF0_trkcnt_lf4                      (CDE_BLK + DBG64SEL + (halCDE_lf_dbg_bus<<BUS_STARTBIT) + 0x001D)
#define CDE_LF0_trkcnt_lf3                      (CDE_BLK + DBG64SEL + (halCDE_lf_dbg_bus<<BUS_STARTBIT) + 0x001C)
#define CDE_LF0_trkcnt_lf2                      (CDE_BLK + DBG64SEL + (halCDE_lf_dbg_bus<<BUS_STARTBIT) + 0x001B)
#define CDE_LF0_trkcnt_lf1                      (CDE_BLK + DBG64SEL + (halCDE_lf_dbg_bus<<BUS_STARTBIT) + 0x001A)
#define CDE_LF0_trkcnt_lf0                      (CDE_BLK + DBG64SEL + (halCDE_lf_dbg_bus<<BUS_STARTBIT) + 0x0019)
#define CDE_LF0_lf_frm7                         (CDE_BLK + DBG64SEL + (halCDE_lf_dbg_bus<<BUS_STARTBIT) + 0x0018)
#define CDE_LF0_lf_frm6                         (CDE_BLK + DBG64SEL + (halCDE_lf_dbg_bus<<BUS_STARTBIT) + 0x0017)
#define CDE_LF0_lf_frm5                         (CDE_BLK + DBG64SEL + (halCDE_lf_dbg_bus<<BUS_STARTBIT) + 0x0016)
#define CDE_LF0_lf_frm4                         (CDE_BLK + DBG64SEL + (halCDE_lf_dbg_bus<<BUS_STARTBIT) + 0x0015)
#define CDE_LF0_lf_frm3                         (CDE_BLK + DBG64SEL + (halCDE_lf_dbg_bus<<BUS_STARTBIT) + 0x0014)
#define CDE_LF0_lf_frm2                         (CDE_BLK + DBG64SEL + (halCDE_lf_dbg_bus<<BUS_STARTBIT) + 0x0013)
#define CDE_LF0_lf_frm1                         (CDE_BLK + DBG64SEL + (halCDE_lf_dbg_bus<<BUS_STARTBIT) + 0x0012)
#define CDE_LF0_lf_frm0                         (CDE_BLK + DBG64SEL + (halCDE_lf_dbg_bus<<BUS_STARTBIT) + 0x0011)
#define CDE_LF0_lf_sec7                         (CDE_BLK + DBG64SEL + (halCDE_lf_dbg_bus<<BUS_STARTBIT) + 0x0010)
#define CDE_LF0_lf_sec6                         (CDE_BLK + DBG64SEL + (halCDE_lf_dbg_bus<<BUS_STARTBIT) + 0x000F)
#define CDE_LF0_lf_sec5                         (CDE_BLK + DBG64SEL + (halCDE_lf_dbg_bus<<BUS_STARTBIT) + 0x000E)
#define CDE_LF0_lf_sec4                         (CDE_BLK + DBG64SEL + (halCDE_lf_dbg_bus<<BUS_STARTBIT) + 0x000D)
#define CDE_LF0_lf_sec3                         (CDE_BLK + DBG64SEL + (halCDE_lf_dbg_bus<<BUS_STARTBIT) + 0x000C)
#define CDE_LF0_lf_sec2                         (CDE_BLK + DBG64SEL + (halCDE_lf_dbg_bus<<BUS_STARTBIT) + 0x000B)
#define CDE_LF0_lf_sec1                         (CDE_BLK + DBG64SEL + (halCDE_lf_dbg_bus<<BUS_STARTBIT) + 0x000A)
#define CDE_LF0_lf_sec0                         (CDE_BLK + DBG64SEL + (halCDE_lf_dbg_bus<<BUS_STARTBIT) + 0x0009)
#define CDE_LF0_lf_min7                         (CDE_BLK + DBG64SEL + (halCDE_lf_dbg_bus<<BUS_STARTBIT) + 0x0008)
#define CDE_LF0_lf_min6                         (CDE_BLK + DBG64SEL + (halCDE_lf_dbg_bus<<BUS_STARTBIT) + 0x0007)
#define CDE_LF0_lf_min5                         (CDE_BLK + DBG64SEL + (halCDE_lf_dbg_bus<<BUS_STARTBIT) + 0x0006)
#define CDE_LF0_lf_min4                         (CDE_BLK + DBG64SEL + (halCDE_lf_dbg_bus<<BUS_STARTBIT) + 0x0005)
#define CDE_LF0_lf_min3                         (CDE_BLK + DBG64SEL + (halCDE_lf_dbg_bus<<BUS_STARTBIT) + 0x0004)
#define CDE_LF0_lf_min2                         (CDE_BLK + DBG64SEL + (halCDE_lf_dbg_bus<<BUS_STARTBIT) + 0x0003)
#define CDE_LF0_lf_min1                         (CDE_BLK + DBG64SEL + (halCDE_lf_dbg_bus<<BUS_STARTBIT) + 0x0002)
#define CDE_LF0_lf_min0                         (CDE_BLK + DBG64SEL + (halCDE_lf_dbg_bus<<BUS_STARTBIT) + 0x0001)
#define CDE_LF0_write_clk                       (CDE_BLK + DBG64SEL + (halCDE_lf_dbg_bus<<BUS_STARTBIT) + 0x0000)
//halCDE_lf_dbg_bus (slot 1)
//4 signals missing!
#define CDE_LF1_basic_ang_wrclk                 (CDE_BLK + DBG64SEL + (halCDE_lf_dbg_bus<<BUS_STARTBIT) + 0x013B)
#define CDE_LF1_basic_ang_wrclk_p               (CDE_BLK + DBG64SEL + (halCDE_lf_dbg_bus<<BUS_STARTBIT) + 0x013A)
#define CDE_LF1_cali_basic_ang                  (CDE_BLK + DBG64SEL + (halCDE_lf_dbg_bus<<BUS_STARTBIT) + 0x0139)
#define CDE_LF1_write_basic_ang                 (CDE_BLK + DBG64SEL + (halCDE_lf_dbg_bus<<BUS_STARTBIT) + 0x0138)
#define CDE_LF1_match_basic_ang                 (CDE_BLK + DBG64SEL + (halCDE_lf_dbg_bus<<BUS_STARTBIT) + 0x0137)
#define CDE_LF1_lf_astar                        (CDE_BLK + DBG64SEL + (halCDE_lf_dbg_bus<<BUS_STARTBIT) + 0x0136)
#define CDE_LF1_target_match                    (CDE_BLK + DBG64SEL + (halCDE_lf_dbg_bus<<BUS_STARTBIT) + 0x0135)
#define CDE_LF1_trig_basicang_int               (CDE_BLK + DBG64SEL + (halCDE_lf_dbg_bus<<BUS_STARTBIT) + 0x0134)
#define CDE_LF1_trig_basicerr_int               (CDE_BLK + DBG64SEL + (halCDE_lf_dbg_bus<<BUS_STARTBIT) + 0x0133)
#define CDE_LF1_lf_trg_syn                      (CDE_BLK + DBG64SEL + (halCDE_lf_dbg_bus<<BUS_STARTBIT) + 0x0132)
#define CDE_LF1_lf_async                        (CDE_BLK + DBG64SEL + (halCDE_lf_dbg_bus<<BUS_STARTBIT) + 0x0131)
#define CDE_LF1_lf_trg_cnt5                     (CDE_BLK + DBG64SEL + (halCDE_lf_dbg_bus<<BUS_STARTBIT) + 0x0130)
#define CDE_LF1_lf_trg_cnt4                     (CDE_BLK + DBG64SEL + (halCDE_lf_dbg_bus<<BUS_STARTBIT) + 0x012F)
#define CDE_LF1_lf_trg_cnt3                     (CDE_BLK + DBG64SEL + (halCDE_lf_dbg_bus<<BUS_STARTBIT) + 0x012E)
#define CDE_LF1_lf_trg_cnt2                     (CDE_BLK + DBG64SEL + (halCDE_lf_dbg_bus<<BUS_STARTBIT) + 0x012D)
#define CDE_LF1_lf_trg_cnt1                     (CDE_BLK + DBG64SEL + (halCDE_lf_dbg_bus<<BUS_STARTBIT) + 0x012C)
#define CDE_LF1_lf_trg_cnt0                     (CDE_BLK + DBG64SEL + (halCDE_lf_dbg_bus<<BUS_STARTBIT) + 0x012B)
#define CDE_LF1_frmcnt_lf6                      (CDE_BLK + DBG64SEL + (halCDE_lf_dbg_bus<<BUS_STARTBIT) + 0x012A)
#define CDE_LF1_frmcnt_lf5                      (CDE_BLK + DBG64SEL + (halCDE_lf_dbg_bus<<BUS_STARTBIT) + 0x0129)
#define CDE_LF1_frmcnt_lf4                      (CDE_BLK + DBG64SEL + (halCDE_lf_dbg_bus<<BUS_STARTBIT) + 0x0128)
#define CDE_LF1_frmcnt_lf3                      (CDE_BLK + DBG64SEL + (halCDE_lf_dbg_bus<<BUS_STARTBIT) + 0x0127)
#define CDE_LF1_frmcnt_lf2                      (CDE_BLK + DBG64SEL + (halCDE_lf_dbg_bus<<BUS_STARTBIT) + 0x0126)
#define CDE_LF1_frmcnt_lf1                      (CDE_BLK + DBG64SEL + (halCDE_lf_dbg_bus<<BUS_STARTBIT) + 0x0125)
#define CDE_LF1_frmcnt_lf0                      (CDE_BLK + DBG64SEL + (halCDE_lf_dbg_bus<<BUS_STARTBIT) + 0x0124)
#define CDE_LF1_wdcnt_lf5                       (CDE_BLK + DBG64SEL + (halCDE_lf_dbg_bus<<BUS_STARTBIT) + 0x0123)
#define CDE_LF1_wdcnt_lf4                       (CDE_BLK + DBG64SEL + (halCDE_lf_dbg_bus<<BUS_STARTBIT) + 0x0122)
#define CDE_LF1_wdcnt_lf3                       (CDE_BLK + DBG64SEL + (halCDE_lf_dbg_bus<<BUS_STARTBIT) + 0x0121)
#define CDE_LF1_wdcnt_lf2                       (CDE_BLK + DBG64SEL + (halCDE_lf_dbg_bus<<BUS_STARTBIT) + 0x0120)
#define CDE_LF1_wdcnt_lf1                       (CDE_BLK + DBG64SEL + (halCDE_lf_dbg_bus<<BUS_STARTBIT) + 0x011F)
#define CDE_LF1_wdcnt_lf0                       (CDE_BLK + DBG64SEL + (halCDE_lf_dbg_bus<<BUS_STARTBIT) + 0x011E)
#define CDE_LF1_bitcnt_lf4                      (CDE_BLK + DBG64SEL + (halCDE_lf_dbg_bus<<BUS_STARTBIT) + 0x011D)
#define CDE_LF1_bitcnt_lf3                      (CDE_BLK + DBG64SEL + (halCDE_lf_dbg_bus<<BUS_STARTBIT) + 0x011C)
#define CDE_LF1_bitcnt_lf2                      (CDE_BLK + DBG64SEL + (halCDE_lf_dbg_bus<<BUS_STARTBIT) + 0x011B)
#define CDE_LF1_bitcnt_lf1                      (CDE_BLK + DBG64SEL + (halCDE_lf_dbg_bus<<BUS_STARTBIT) + 0x011A)
#define CDE_LF1_bitcnt_lf0                      (CDE_BLK + DBG64SEL + (halCDE_lf_dbg_bus<<BUS_STARTBIT) + 0x0119)
#define CDE_LF1_lf_frm7                         (CDE_BLK + DBG64SEL + (halCDE_lf_dbg_bus<<BUS_STARTBIT) + 0x0118)
#define CDE_LF1_lf_frm6                         (CDE_BLK + DBG64SEL + (halCDE_lf_dbg_bus<<BUS_STARTBIT) + 0x0117)
#define CDE_LF1_lf_frm5                         (CDE_BLK + DBG64SEL + (halCDE_lf_dbg_bus<<BUS_STARTBIT) + 0x0116)
#define CDE_LF1_lf_frm4                         (CDE_BLK + DBG64SEL + (halCDE_lf_dbg_bus<<BUS_STARTBIT) + 0x0115)
#define CDE_LF1_lf_frm3                         (CDE_BLK + DBG64SEL + (halCDE_lf_dbg_bus<<BUS_STARTBIT) + 0x0114)
#define CDE_LF1_lf_frm2                         (CDE_BLK + DBG64SEL + (halCDE_lf_dbg_bus<<BUS_STARTBIT) + 0x0113)
#define CDE_LF1_lf_frm1                         (CDE_BLK + DBG64SEL + (halCDE_lf_dbg_bus<<BUS_STARTBIT) + 0x0112)
#define CDE_LF1_lf_frm0                         (CDE_BLK + DBG64SEL + (halCDE_lf_dbg_bus<<BUS_STARTBIT) + 0x0111)
#define CDE_LF1_lf_sec7                         (CDE_BLK + DBG64SEL + (halCDE_lf_dbg_bus<<BUS_STARTBIT) + 0x0110)
#define CDE_LF1_lf_sec6                         (CDE_BLK + DBG64SEL + (halCDE_lf_dbg_bus<<BUS_STARTBIT) + 0x010F)
#define CDE_LF1_lf_sec5                         (CDE_BLK + DBG64SEL + (halCDE_lf_dbg_bus<<BUS_STARTBIT) + 0x010E)
#define CDE_LF1_lf_sec4                         (CDE_BLK + DBG64SEL + (halCDE_lf_dbg_bus<<BUS_STARTBIT) + 0x010D)
#define CDE_LF1_lf_sec3                         (CDE_BLK + DBG64SEL + (halCDE_lf_dbg_bus<<BUS_STARTBIT) + 0x010C)
#define CDE_LF1_lf_sec2                         (CDE_BLK + DBG64SEL + (halCDE_lf_dbg_bus<<BUS_STARTBIT) + 0x010B)
#define CDE_LF1_lf_sec1                         (CDE_BLK + DBG64SEL + (halCDE_lf_dbg_bus<<BUS_STARTBIT) + 0x010A)
#define CDE_LF1_lf_sec0                         (CDE_BLK + DBG64SEL + (halCDE_lf_dbg_bus<<BUS_STARTBIT) + 0x0109)
#define CDE_LF1_lf_frm7_a                       (CDE_BLK + DBG64SEL + (halCDE_lf_dbg_bus<<BUS_STARTBIT) + 0x0108)
#define CDE_LF1_lf_frm6_a                       (CDE_BLK + DBG64SEL + (halCDE_lf_dbg_bus<<BUS_STARTBIT) + 0x0107)
#define CDE_LF1_lf_frm5_a                       (CDE_BLK + DBG64SEL + (halCDE_lf_dbg_bus<<BUS_STARTBIT) + 0x0106)
#define CDE_LF1_lf_frm4_a                       (CDE_BLK + DBG64SEL + (halCDE_lf_dbg_bus<<BUS_STARTBIT) + 0x0105)
#define CDE_LF1_lf_frm3_a                       (CDE_BLK + DBG64SEL + (halCDE_lf_dbg_bus<<BUS_STARTBIT) + 0x0104)
#define CDE_LF1_lf_frm2_a                       (CDE_BLK + DBG64SEL + (halCDE_lf_dbg_bus<<BUS_STARTBIT) + 0x0103)
#define CDE_LF1_lf_frm1_a                       (CDE_BLK + DBG64SEL + (halCDE_lf_dbg_bus<<BUS_STARTBIT) + 0x0102)
#define CDE_LF1_lf_frm0_a                       (CDE_BLK + DBG64SEL + (halCDE_lf_dbg_bus<<BUS_STARTBIT) + 0x0101)
#define CDE_LF1_write_clk                       (CDE_BLK + DBG64SEL + (halCDE_lf_dbg_bus<<BUS_STARTBIT) + 0x0100)

//halCDE_subproc_dbg_bus (slot 0)
//??#define CDE_SUBPROC0_sysclk                     (CDE_BLK + DBG64SEL + (halCDE_subproc_dbg_bus<<BUS_STARTBIT) + 0x0033)
//??#define CDE_SUBPROC0_esfs_wr_sysclk             (CDE_BLK + DBG64SEL + (halCDE_subproc_dbg_bus<<BUS_STARTBIT) + 0x0032)
//??#define CDE_SUBPROC0_cd_write_init_sysclk       (CDE_BLK + DBG64SEL + (halCDE_subproc_dbg_bus<<BUS_STARTBIT) + 0x0031)
//??#define CDE_SUBPROC0_rstrt_sysclk               (CDE_BLK + DBG64SEL + (halCDE_subproc_dbg_bus<<BUS_STARTBIT) + 0x0030)
#define CDE_SUBPROC0_pqsrc1                     (CDE_BLK + DBG64SEL + (halCDE_subproc_dbg_bus<<BUS_STARTBIT) + 0x002F)
#define CDE_SUBPROC0_pqsrc0                     (CDE_BLK + DBG64SEL + (halCDE_subproc_dbg_bus<<BUS_STARTBIT) + 0x002E)
#define CDE_SUBPROC0_pqsrc_esfs1                (CDE_BLK + DBG64SEL + (halCDE_subproc_dbg_bus<<BUS_STARTBIT) + 0x002D)
#define CDE_SUBPROC0_pqsrc_esfs0                (CDE_BLK + DBG64SEL + (halCDE_subproc_dbg_bus<<BUS_STARTBIT) + 0x002C)
#define CDE_SUBPROC0_qregindex3                 (CDE_BLK + DBG64SEL + (halCDE_subproc_dbg_bus<<BUS_STARTBIT) + 0x002B)
#define CDE_SUBPROC0_qregindex2                 (CDE_BLK + DBG64SEL + (halCDE_subproc_dbg_bus<<BUS_STARTBIT) + 0x002A)
#define CDE_SUBPROC0_qregindex1                 (CDE_BLK + DBG64SEL + (halCDE_subproc_dbg_bus<<BUS_STARTBIT) + 0x0029)
#define CDE_SUBPROC0_qregindex0                 (CDE_BLK + DBG64SEL + (halCDE_subproc_dbg_bus<<BUS_STARTBIT) + 0x0028)
#define CDE_SUBPROC0_qregcptrig                 (CDE_BLK + DBG64SEL + (halCDE_subproc_dbg_bus<<BUS_STARTBIT) + 0x0027)
#define CDE_SUBPROC0_efm_sub_ack                (CDE_BLK + DBG64SEL + (halCDE_subproc_dbg_bus<<BUS_STARTBIT) + 0x0026)
#define CDE_SUBPROC0_xw_init                    (CDE_BLK + DBG64SEL + (halCDE_subproc_dbg_bus<<BUS_STARTBIT) + 0x0025)
#define CDE_SUBPROC0_xw_cp_rstrt                (CDE_BLK + DBG64SEL + (halCDE_subproc_dbg_bus<<BUS_STARTBIT) + 0x0024)
#define CDE_SUBPROC0_pw_state2                  (CDE_BLK + DBG64SEL + (halCDE_subproc_dbg_bus<<BUS_STARTBIT) + 0x0023)
#define CDE_SUBPROC0_pw_state1                  (CDE_BLK + DBG64SEL + (halCDE_subproc_dbg_bus<<BUS_STARTBIT) + 0x0022)
#define CDE_SUBPROC0_pw_state0                  (CDE_BLK + DBG64SEL + (halCDE_subproc_dbg_bus<<BUS_STARTBIT) + 0x0021)
#define CDE_SUBPROC0_pwblksymcnt6               (CDE_BLK + DBG64SEL + (halCDE_subproc_dbg_bus<<BUS_STARTBIT) + 0x0020)
#define CDE_SUBPROC0_pwblksymcnt5               (CDE_BLK + DBG64SEL + (halCDE_subproc_dbg_bus<<BUS_STARTBIT) + 0x001F)
#define CDE_SUBPROC0_pwblksymcnt4               (CDE_BLK + DBG64SEL + (halCDE_subproc_dbg_bus<<BUS_STARTBIT) + 0x001E)
#define CDE_SUBPROC0_pwblksymcnt3               (CDE_BLK + DBG64SEL + (halCDE_subproc_dbg_bus<<BUS_STARTBIT) + 0x001D)
#define CDE_SUBPROC0_pwblksymcnt2               (CDE_BLK + DBG64SEL + (halCDE_subproc_dbg_bus<<BUS_STARTBIT) + 0x001C)
#define CDE_SUBPROC0_pwblksymcnt1               (CDE_BLK + DBG64SEL + (halCDE_subproc_dbg_bus<<BUS_STARTBIT) + 0x001B)
#define CDE_SUBPROC0_pwblksymcnt0               (CDE_BLK + DBG64SEL + (halCDE_subproc_dbg_bus<<BUS_STARTBIT) + 0x001A)
#define CDE_SUBPROC0_sqm3seq2                   (CDE_BLK + DBG64SEL + (halCDE_subproc_dbg_bus<<BUS_STARTBIT) + 0x0019)
#define CDE_SUBPROC0_sqm3seq1                   (CDE_BLK + DBG64SEL + (halCDE_subproc_dbg_bus<<BUS_STARTBIT) + 0x0018)
#define CDE_SUBPROC0_sqm3seq0                   (CDE_BLK + DBG64SEL + (halCDE_subproc_dbg_bus<<BUS_STARTBIT) + 0x0017)
#define CDE_SUBPROC0_sbuf_state2                (CDE_BLK + DBG64SEL + (halCDE_subproc_dbg_bus<<BUS_STARTBIT) + 0x0016)
#define CDE_SUBPROC0_sbuf_state1                (CDE_BLK + DBG64SEL + (halCDE_subproc_dbg_bus<<BUS_STARTBIT) + 0x0015)
#define CDE_SUBPROC0_sbuf_state0                (CDE_BLK + DBG64SEL + (halCDE_subproc_dbg_bus<<BUS_STARTBIT) + 0x0014)
#define CDE_SUBPROC0_efm_sub_rdata7             (CDE_BLK + DBG64SEL + (halCDE_subproc_dbg_bus<<BUS_STARTBIT) + 0x0013)
#define CDE_SUBPROC0_efm_sub_rdata6             (CDE_BLK + DBG64SEL + (halCDE_subproc_dbg_bus<<BUS_STARTBIT) + 0x0012)
#define CDE_SUBPROC0_efm_sub_rdata5             (CDE_BLK + DBG64SEL + (halCDE_subproc_dbg_bus<<BUS_STARTBIT) + 0x0011)
#define CDE_SUBPROC0_efm_sub_rdata4             (CDE_BLK + DBG64SEL + (halCDE_subproc_dbg_bus<<BUS_STARTBIT) + 0x0010)
#define CDE_SUBPROC0_efm_sub_rdata3             (CDE_BLK + DBG64SEL + (halCDE_subproc_dbg_bus<<BUS_STARTBIT) + 0x000F)
#define CDE_SUBPROC0_efm_sub_rdata2             (CDE_BLK + DBG64SEL + (halCDE_subproc_dbg_bus<<BUS_STARTBIT) + 0x000E)
#define CDE_SUBPROC0_efm_sub_rdata1             (CDE_BLK + DBG64SEL + (halCDE_subproc_dbg_bus<<BUS_STARTBIT) + 0x000D)
#define CDE_SUBPROC0_efm_sub_rdata0             (CDE_BLK + DBG64SEL + (halCDE_subproc_dbg_bus<<BUS_STARTBIT) + 0x000C)
#define CDE_SUBPROC0_at001                      (CDE_BLK + DBG64SEL + (halCDE_subproc_dbg_bus<<BUS_STARTBIT) + 0x000B)
#define CDE_SUBPROC0_rt001                      (CDE_BLK + DBG64SEL + (halCDE_subproc_dbg_bus<<BUS_STARTBIT) + 0x000A)
#define CDE_SUBPROC0_load_next_relative_msf     (CDE_BLK + DBG64SEL + (halCDE_subproc_dbg_bus<<BUS_STARTBIT) + 0x0009)
#define CDE_SUBPROC0_state4                     (CDE_BLK + DBG64SEL + (halCDE_subproc_dbg_bus<<BUS_STARTBIT) + 0x0008)
#define CDE_SUBPROC0_state3                     (CDE_BLK + DBG64SEL + (halCDE_subproc_dbg_bus<<BUS_STARTBIT) + 0x0007)
#define CDE_SUBPROC0_state2                     (CDE_BLK + DBG64SEL + (halCDE_subproc_dbg_bus<<BUS_STARTBIT) + 0x0006)
#define CDE_SUBPROC0_state1                     (CDE_BLK + DBG64SEL + (halCDE_subproc_dbg_bus<<BUS_STARTBIT) + 0x0005)
#define CDE_SUBPROC0_state0                     (CDE_BLK + DBG64SEL + (halCDE_subproc_dbg_bus<<BUS_STARTBIT) + 0x0004)
#define CDE_SUBPROC0_amsfi                      (CDE_BLK + DBG64SEL + (halCDE_subproc_dbg_bus<<BUS_STARTBIT) + 0x0003)
#define CDE_SUBPROC0_amsfd                      (CDE_BLK + DBG64SEL + (halCDE_subproc_dbg_bus<<BUS_STARTBIT) + 0x0002)
#define CDE_SUBPROC0_rmsfi                      (CDE_BLK + DBG64SEL + (halCDE_subproc_dbg_bus<<BUS_STARTBIT) + 0x0001)
#define CDE_SUBPROC0_rmsfd                      (CDE_BLK + DBG64SEL + (halCDE_subproc_dbg_bus<<BUS_STARTBIT) + 0x0000)
//halCDE_subproc_dbg_bus (slot 1)
#define CDE_SUBPROC1_cprptctr7                  (CDE_BLK + DBG64SEL + (halCDE_subproc_dbg_bus<<BUS_STARTBIT) + 0x012F)
#define CDE_SUBPROC1_cprptctr6                  (CDE_BLK + DBG64SEL + (halCDE_subproc_dbg_bus<<BUS_STARTBIT) + 0x012E)
#define CDE_SUBPROC1_cprptctr5                  (CDE_BLK + DBG64SEL + (halCDE_subproc_dbg_bus<<BUS_STARTBIT) + 0x012D)
#define CDE_SUBPROC1_cprptctr4                  (CDE_BLK + DBG64SEL + (halCDE_subproc_dbg_bus<<BUS_STARTBIT) + 0x012C)
#define CDE_SUBPROC1_cprptctr3                  (CDE_BLK + DBG64SEL + (halCDE_subproc_dbg_bus<<BUS_STARTBIT) + 0x012B)
#define CDE_SUBPROC1_cprptctr2                  (CDE_BLK + DBG64SEL + (halCDE_subproc_dbg_bus<<BUS_STARTBIT) + 0x012A)
#define CDE_SUBPROC1_cprptctr1                  (CDE_BLK + DBG64SEL + (halCDE_subproc_dbg_bus<<BUS_STARTBIT) + 0x0129)
#define CDE_SUBPROC1_cprptctr0                  (CDE_BLK + DBG64SEL + (halCDE_subproc_dbg_bus<<BUS_STARTBIT) + 0x0128)
#define CDE_SUBPROC1_sub_current_msf23          (CDE_BLK + DBG64SEL + (halCDE_subproc_dbg_bus<<BUS_STARTBIT) + 0x0127)
#define CDE_SUBPROC1_sub_current_msf22          (CDE_BLK + DBG64SEL + (halCDE_subproc_dbg_bus<<BUS_STARTBIT) + 0x0126)
#define CDE_SUBPROC1_sub_current_msf21          (CDE_BLK + DBG64SEL + (halCDE_subproc_dbg_bus<<BUS_STARTBIT) + 0x0125)
#define CDE_SUBPROC1_sub_current_msf20          (CDE_BLK + DBG64SEL + (halCDE_subproc_dbg_bus<<BUS_STARTBIT) + 0x0124)
#define CDE_SUBPROC1_sub_current_msf19          (CDE_BLK + DBG64SEL + (halCDE_subproc_dbg_bus<<BUS_STARTBIT) + 0x0123)
#define CDE_SUBPROC1_sub_current_msf18          (CDE_BLK + DBG64SEL + (halCDE_subproc_dbg_bus<<BUS_STARTBIT) + 0x0122)
#define CDE_SUBPROC1_sub_current_msf17          (CDE_BLK + DBG64SEL + (halCDE_subproc_dbg_bus<<BUS_STARTBIT) + 0x0121)
#define CDE_SUBPROC1_sub_current_msf16          (CDE_BLK + DBG64SEL + (halCDE_subproc_dbg_bus<<BUS_STARTBIT) + 0x0120)
#define CDE_SUBPROC1_sub_current_msf15          (CDE_BLK + DBG64SEL + (halCDE_subproc_dbg_bus<<BUS_STARTBIT) + 0x011F)
#define CDE_SUBPROC1_sub_current_msf14          (CDE_BLK + DBG64SEL + (halCDE_subproc_dbg_bus<<BUS_STARTBIT) + 0x011E)
#define CDE_SUBPROC1_sub_current_msf13          (CDE_BLK + DBG64SEL + (halCDE_subproc_dbg_bus<<BUS_STARTBIT) + 0x011D)
#define CDE_SUBPROC1_sub_current_msf12          (CDE_BLK + DBG64SEL + (halCDE_subproc_dbg_bus<<BUS_STARTBIT) + 0x011C)
#define CDE_SUBPROC1_sub_current_msf11          (CDE_BLK + DBG64SEL + (halCDE_subproc_dbg_bus<<BUS_STARTBIT) + 0x011B)
#define CDE_SUBPROC1_sub_current_msf10          (CDE_BLK + DBG64SEL + (halCDE_subproc_dbg_bus<<BUS_STARTBIT) + 0x011A)
#define CDE_SUBPROC1_sub_current_msf9           (CDE_BLK + DBG64SEL + (halCDE_subproc_dbg_bus<<BUS_STARTBIT) + 0x0119)
#define CDE_SUBPROC1_sub_current_msf8           (CDE_BLK + DBG64SEL + (halCDE_subproc_dbg_bus<<BUS_STARTBIT) + 0x0118)
#define CDE_SUBPROC1_sub_current_msf7           (CDE_BLK + DBG64SEL + (halCDE_subproc_dbg_bus<<BUS_STARTBIT) + 0x0117)
#define CDE_SUBPROC1_sub_current_msf6           (CDE_BLK + DBG64SEL + (halCDE_subproc_dbg_bus<<BUS_STARTBIT) + 0x0116)
#define CDE_SUBPROC1_sub_current_msf5           (CDE_BLK + DBG64SEL + (halCDE_subproc_dbg_bus<<BUS_STARTBIT) + 0x0115)
#define CDE_SUBPROC1_sub_current_msf4           (CDE_BLK + DBG64SEL + (halCDE_subproc_dbg_bus<<BUS_STARTBIT) + 0x0114)
#define CDE_SUBPROC1_sub_current_msf3           (CDE_BLK + DBG64SEL + (halCDE_subproc_dbg_bus<<BUS_STARTBIT) + 0x0113)
#define CDE_SUBPROC1_sub_current_msf2           (CDE_BLK + DBG64SEL + (halCDE_subproc_dbg_bus<<BUS_STARTBIT) + 0x0112)
#define CDE_SUBPROC1_sub_current_msf1           (CDE_BLK + DBG64SEL + (halCDE_subproc_dbg_bus<<BUS_STARTBIT) + 0x0111)
#define CDE_SUBPROC1_sub_current_msf0           (CDE_BLK + DBG64SEL + (halCDE_subproc_dbg_bus<<BUS_STARTBIT) + 0x0110)
#define CDE_SUBPROC1_cp_seqA_sel                (CDE_BLK + DBG64SEL + (halCDE_subproc_dbg_bus<<BUS_STARTBIT) + 0x010F)
#define CDE_SUBPROC1_cp_rtdec                   (CDE_BLK + DBG64SEL + (halCDE_subproc_dbg_bus<<BUS_STARTBIT) + 0x010E)
#define CDE_SUBPROC1_cp_rtinc                   (CDE_BLK + DBG64SEL + (halCDE_subproc_dbg_bus<<BUS_STARTBIT) + 0x010D)
#define CDE_SUBPROC1_load_cp_mode_rpt0          (CDE_BLK + DBG64SEL + (halCDE_subproc_dbg_bus<<BUS_STARTBIT) + 0x010C)
#define CDE_SUBPROC1_load_cp_mode               (CDE_BLK + DBG64SEL + (halCDE_subproc_dbg_bus<<BUS_STARTBIT) + 0x010B)
#define CDE_SUBPROC1_cp_rt000                   (CDE_BLK + DBG64SEL + (halCDE_subproc_dbg_bus<<BUS_STARTBIT) + 0x010A)
#define CDE_SUBPROC1_load_cpqctl                (CDE_BLK + DBG64SEL + (halCDE_subproc_dbg_bus<<BUS_STARTBIT) + 0x0109)
#define CDE_SUBPROC1_selraw                     (CDE_BLK + DBG64SEL + (halCDE_subproc_dbg_bus<<BUS_STARTBIT) + 0x0108)
#define CDE_SUBPROC1_copyq3                     (CDE_BLK + DBG64SEL + (halCDE_subproc_dbg_bus<<BUS_STARTBIT) + 0x0107)
#define CDE_SUBPROC1_copyq2                     (CDE_BLK + DBG64SEL + (halCDE_subproc_dbg_bus<<BUS_STARTBIT) + 0x0106)
#define CDE_SUBPROC1_copyq1                     (CDE_BLK + DBG64SEL + (halCDE_subproc_dbg_bus<<BUS_STARTBIT) + 0x0105)
#define CDE_SUBPROC1_copyq0                     (CDE_BLK + DBG64SEL + (halCDE_subproc_dbg_bus<<BUS_STARTBIT) + 0x0104)
#define CDE_SUBPROC1_zerocnt3                   (CDE_BLK + DBG64SEL + (halCDE_subproc_dbg_bus<<BUS_STARTBIT) + 0x0103)
#define CDE_SUBPROC1_zerocnt2                   (CDE_BLK + DBG64SEL + (halCDE_subproc_dbg_bus<<BUS_STARTBIT) + 0x0102)
#define CDE_SUBPROC1_zerocnt1                   (CDE_BLK + DBG64SEL + (halCDE_subproc_dbg_bus<<BUS_STARTBIT) + 0x0101)
#define CDE_SUBPROC1_zerocnt0                   (CDE_BLK + DBG64SEL + (halCDE_subproc_dbg_bus<<BUS_STARTBIT) + 0x0100)
//halCDE_secproc_dbg_bus
#define CDE_SECPROC_spmsf_state2                (CDE_BLK + DBG64SEL + (halCDE_secproc_dbg_bus<<BUS_STARTBIT) + 0x002F)
#define CDE_SECPROC_spmsf_state1                (CDE_BLK + DBG64SEL + (halCDE_secproc_dbg_bus<<BUS_STARTBIT) + 0x002E)
#define CDE_SECPROC_spmsf_state0                (CDE_BLK + DBG64SEL + (halCDE_secproc_dbg_bus<<BUS_STARTBIT) + 0x002D)
#define CDE_SECPROC_eregld                      (CDE_BLK + DBG64SEL + (halCDE_secproc_dbg_bus<<BUS_STARTBIT) + 0x002C)
#define CDE_SECPROC_rptld                       (CDE_BLK + DBG64SEL + (halCDE_secproc_dbg_bus<<BUS_STARTBIT) + 0x002B)
#define CDE_SECPROC_cdpginc                     (CDE_BLK + DBG64SEL + (halCDE_secproc_dbg_bus<<BUS_STARTBIT) + 0x002A)
#define CDE_SECPROC_sectorend                   (CDE_BLK + DBG64SEL + (halCDE_secproc_dbg_bus<<BUS_STARTBIT) + 0x0029)
#define CDE_SECPROC_trig_eprd_int               (CDE_BLK + DBG64SEL + (halCDE_secproc_dbg_bus<<BUS_STARTBIT) + 0x0028)
#define CDE_SECPROC_bufmode3                    (CDE_BLK + DBG64SEL + (halCDE_secproc_dbg_bus<<BUS_STARTBIT) + 0x0027)
#define CDE_SECPROC_bufmode2                    (CDE_BLK + DBG64SEL + (halCDE_secproc_dbg_bus<<BUS_STARTBIT) + 0x0026)
#define CDE_SECPROC_bufmode1                    (CDE_BLK + DBG64SEL + (halCDE_secproc_dbg_bus<<BUS_STARTBIT) + 0x0025)
#define CDE_SECPROC_bufmode0                    (CDE_BLK + DBG64SEL + (halCDE_secproc_dbg_bus<<BUS_STARTBIT) + 0x0024)
#define CDE_SECPROC_rtstate3                    (CDE_BLK + DBG64SEL + (halCDE_secproc_dbg_bus<<BUS_STARTBIT) + 0x0023)
#define CDE_SECPROC_rtstate2                    (CDE_BLK + DBG64SEL + (halCDE_secproc_dbg_bus<<BUS_STARTBIT) + 0x0022)
#define CDE_SECPROC_rtstate1                    (CDE_BLK + DBG64SEL + (halCDE_secproc_dbg_bus<<BUS_STARTBIT) + 0x0021)
#define CDE_SECPROC_rtstate0                    (CDE_BLK + DBG64SEL + (halCDE_secproc_dbg_bus<<BUS_STARTBIT) + 0x0020)
#define CDE_SECPROC_spgoend                     (CDE_BLK + DBG64SEL + (halCDE_secproc_dbg_bus<<BUS_STARTBIT) + 0x001F)
#define CDE_SECPROC_hmodify                     (CDE_BLK + DBG64SEL + (halCDE_secproc_dbg_bus<<BUS_STARTBIT) + 0x001E)
#define CDE_SECPROC_xwinitsp                    (CDE_BLK + DBG64SEL + (halCDE_secproc_dbg_bus<<BUS_STARTBIT) + 0x001D)
#define CDE_SECPROC_sp_msf_ack                  (CDE_BLK + DBG64SEL + (halCDE_secproc_dbg_bus<<BUS_STARTBIT) + 0x001C)
#define CDE_SECPROC_h0w                         (CDE_BLK + DBG64SEL + (halCDE_secproc_dbg_bus<<BUS_STARTBIT) + 0x001B)
#define CDE_SECPROC_h1w                         (CDE_BLK + DBG64SEL + (halCDE_secproc_dbg_bus<<BUS_STARTBIT) + 0x001A)
#define CDE_SECPROC_sh0w                        (CDE_BLK + DBG64SEL + (halCDE_secproc_dbg_bus<<BUS_STARTBIT) + 0x0019)
#define CDE_SECPROC_sh1w                        (CDE_BLK + DBG64SEL + (halCDE_secproc_dbg_bus<<BUS_STARTBIT) + 0x0018)
#define CDE_SECPROC_modew                       (CDE_BLK + DBG64SEL + (halCDE_secproc_dbg_bus<<BUS_STARTBIT) + 0x0017)
#define CDE_SECPROC_amld                        (CDE_BLK + DBG64SEL + (halCDE_secproc_dbg_bus<<BUS_STARTBIT) + 0x0016)
#define CDE_SECPROC_af0ld                       (CDE_BLK + DBG64SEL + (halCDE_secproc_dbg_bus<<BUS_STARTBIT) + 0x0015)
#define CDE_SECPROC_fomb0                       (CDE_BLK + DBG64SEL + (halCDE_secproc_dbg_bus<<BUS_STARTBIT) + 0x0014)
#define CDE_SECPROC_ahmd1                       (CDE_BLK + DBG64SEL + (halCDE_secproc_dbg_bus<<BUS_STARTBIT) + 0x0013)
#define CDE_SECPROC_ahmd0                       (CDE_BLK + DBG64SEL + (halCDE_secproc_dbg_bus<<BUS_STARTBIT) + 0x0012)
#define CDE_SECPROC_pperiod                     (CDE_BLK + DBG64SEL + (halCDE_secproc_dbg_bus<<BUS_STARTBIT) + 0x0011)
#define CDE_SECPROC_pari1st                     (CDE_BLK + DBG64SEL + (halCDE_secproc_dbg_bus<<BUS_STARTBIT) + 0x0010)
#define CDE_SECPROC_encseq3                     (CDE_BLK + DBG64SEL + (halCDE_secproc_dbg_bus<<BUS_STARTBIT) + 0x000F)
#define CDE_SECPROC_encseq2                     (CDE_BLK + DBG64SEL + (halCDE_secproc_dbg_bus<<BUS_STARTBIT) + 0x000E)
#define CDE_SECPROC_encseq1                     (CDE_BLK + DBG64SEL + (halCDE_secproc_dbg_bus<<BUS_STARTBIT) + 0x000D)
#define CDE_SECPROC_encseq0                     (CDE_BLK + DBG64SEL + (halCDE_secproc_dbg_bus<<BUS_STARTBIT) + 0x000C)
#define CDE_SECPROC_femp                        (CDE_BLK + DBG64SEL + (halCDE_secproc_dbg_bus<<BUS_STARTBIT) + 0x000B)
#define CDE_SECPROC_aempty                      (CDE_BLK + DBG64SEL + (halCDE_secproc_dbg_bus<<BUS_STARTBIT) + 0x000A)
#define CDE_SECPROC_penc                        (CDE_BLK + DBG64SEL + (halCDE_secproc_dbg_bus<<BUS_STARTBIT) + 0x0009)
#define CDE_SECPROC_qenc                        (CDE_BLK + DBG64SEL + (halCDE_secproc_dbg_bus<<BUS_STARTBIT) + 0x0008)
#define CDE_SECPROC_fclr                        (CDE_BLK + DBG64SEL + (halCDE_secproc_dbg_bus<<BUS_STARTBIT) + 0x0007)
#define CDE_SECPROC_hbyte                       (CDE_BLK + DBG64SEL + (halCDE_secproc_dbg_bus<<BUS_STARTBIT) + 0x0006)
#define CDE_SECPROC_ack                         (CDE_BLK + DBG64SEL + (halCDE_secproc_dbg_bus<<BUS_STARTBIT) + 0x0005)
#define CDE_SECPROC_rack                        (CDE_BLK + DBG64SEL + (halCDE_secproc_dbg_bus<<BUS_STARTBIT) + 0x0004)
#define CDE_SECPROC_wenq                        (CDE_BLK + DBG64SEL + (halCDE_secproc_dbg_bus<<BUS_STARTBIT) + 0x0003)
#define CDE_SECPROC_hbyte_a                     (CDE_BLK + DBG64SEL + (halCDE_secproc_dbg_bus<<BUS_STARTBIT) + 0x0002)
#define CDE_SECPROC_cien                        (CDE_BLK + DBG64SEL + (halCDE_secproc_dbg_bus<<BUS_STARTBIT) + 0x0001)
#define CDE_SECPROC_sysclk                      (CDE_BLK + DBG64SEL + (halCDE_secproc_dbg_bus<<BUS_STARTBIT) + 0x0000)
//halCDE_bvci_dbg_bus (slot 0)
#define CDE_BVCI0_cdbufpg_first                 (CDE_BLK + DBG64SEL + (halCDE_bvci_dbg_bus<<BUS_STARTBIT) + 0x002F)
#define CDE_BVCI0_cdbufpg_eq_rptpg              (CDE_BLK + DBG64SEL + (halCDE_bvci_dbg_bus<<BUS_STARTBIT) + 0x002E)
#define CDE_BVCI0_cdbufpg_in_rptpg              (CDE_BLK + DBG64SEL + (halCDE_bvci_dbg_bus<<BUS_STARTBIT) + 0x002D)
#define CDE_BVCI0_cdbufpg_in_rpt                (CDE_BLK + DBG64SEL + (halCDE_bvci_dbg_bus<<BUS_STARTBIT) + 0x002C)
#define CDE_BVCI0_cdbufpg_eq_rout1              (CDE_BLK + DBG64SEL + (halCDE_bvci_dbg_bus<<BUS_STARTBIT) + 0x002B)
#define CDE_BVCI0_cdbufpg_eq_nextpg             (CDE_BLK + DBG64SEL + (halCDE_bvci_dbg_bus<<BUS_STARTBIT) + 0x002A)
#define CDE_BVCI0_cd1pg_first                   (CDE_BLK + DBG64SEL + (halCDE_bvci_dbg_bus<<BUS_STARTBIT) + 0x0029)
#define CDE_BVCI0_cd1pg_last                    (CDE_BLK + DBG64SEL + (halCDE_bvci_dbg_bus<<BUS_STARTBIT) + 0x0028)
#define CDE_BVCI0_cd2pg_last                    (CDE_BLK + DBG64SEL + (halCDE_bvci_dbg_bus<<BUS_STARTBIT) + 0x0027)
#define CDE_BVCI0_cd1rtn                        (CDE_BLK + DBG64SEL + (halCDE_bvci_dbg_bus<<BUS_STARTBIT) + 0x0026)
#define CDE_BVCI0_cd2rtn                        (CDE_BLK + DBG64SEL + (halCDE_bvci_dbg_bus<<BUS_STARTBIT) + 0x0025)
#define CDE_BVCI0_cd1goro                       (CDE_BLK + DBG64SEL + (halCDE_bvci_dbg_bus<<BUS_STARTBIT) + 0x0024)
#define CDE_BVCI0_cd2goro                       (CDE_BLK + DBG64SEL + (halCDE_bvci_dbg_bus<<BUS_STARTBIT) + 0x0023)
#define CDE_BVCI0_cd1pg_go_rptpg                (CDE_BLK + DBG64SEL + (halCDE_bvci_dbg_bus<<BUS_STARTBIT) + 0x0022)
#define CDE_BVCI0_sppg_first                    (CDE_BLK + DBG64SEL + (halCDE_bvci_dbg_bus<<BUS_STARTBIT) + 0x0021)
#define CDE_BVCI0_nextpg_last                   (CDE_BLK + DBG64SEL + (halCDE_bvci_dbg_bus<<BUS_STARTBIT) + 0x0020)
#define CDE_BVCI0_nextpg_2nd_last               (CDE_BLK + DBG64SEL + (halCDE_bvci_dbg_bus<<BUS_STARTBIT) + 0x001F)
#define CDE_BVCI0_nextpg_first                  (CDE_BLK + DBG64SEL + (halCDE_bvci_dbg_bus<<BUS_STARTBIT) + 0x001E)
#define CDE_BVCI0_nextpg_second                 (CDE_BLK + DBG64SEL + (halCDE_bvci_dbg_bus<<BUS_STARTBIT) + 0x001D)
#define CDE_BVCI0_rptpg_last                    (CDE_BLK + DBG64SEL + (halCDE_bvci_dbg_bus<<BUS_STARTBIT) + 0x001C)
#define CDE_BVCI0_rptcnt_eq_org                 (CDE_BLK + DBG64SEL + (halCDE_bvci_dbg_bus<<BUS_STARTBIT) + 0x001B)
#define CDE_BVCI0_rptcnt_eq_org_m1              (CDE_BLK + DBG64SEL + (halCDE_bvci_dbg_bus<<BUS_STARTBIT) + 0x001A)
#define CDE_BVCI0_trig_cdbufpg                  (CDE_BLK + DBG64SEL + (halCDE_bvci_dbg_bus<<BUS_STARTBIT) + 0x0019)
#define CDE_BVCI0_cd_write_init_sysclk          (CDE_BLK + DBG64SEL + (halCDE_bvci_dbg_bus<<BUS_STARTBIT) + 0x0018)
#define CDE_BVCI0_eregld                        (CDE_BLK + DBG64SEL + (halCDE_bvci_dbg_bus<<BUS_STARTBIT) + 0x0017)
#define CDE_BVCI0_cdpginc                       (CDE_BLK + DBG64SEL + (halCDE_bvci_dbg_bus<<BUS_STARTBIT) + 0x0016)
#define CDE_BVCI0_last_cd1rpt_block             (CDE_BLK + DBG64SEL + (halCDE_bvci_dbg_bus<<BUS_STARTBIT) + 0x0015)
#define CDE_BVCI0_cd_erpten                     (CDE_BLK + DBG64SEL + (halCDE_bvci_dbg_bus<<BUS_STARTBIT) + 0x0014)
#define CDE_BVCI0_sp_erpten                     (CDE_BLK + DBG64SEL + (halCDE_bvci_dbg_bus<<BUS_STARTBIT) + 0x0013)
#define CDE_BVCI0_encrpt_odd                    (CDE_BLK + DBG64SEL + (halCDE_bvci_dbg_bus<<BUS_STARTBIT) + 0x0012)
#define CDE_BVCI0_ropgsel                       (CDE_BLK + DBG64SEL + (halCDE_bvci_dbg_bus<<BUS_STARTBIT) + 0x0011)
#define CDE_BVCI0_hcf                           (CDE_BLK + DBG64SEL + (halCDE_bvci_dbg_bus<<BUS_STARTBIT) + 0x0010)
#define CDE_BVCI0_scf                           (CDE_BLK + DBG64SEL + (halCDE_bvci_dbg_bus<<BUS_STARTBIT) + 0x000F)
#define CDE_BVCI0_shf                           (CDE_BLK + DBG64SEL + (halCDE_bvci_dbg_bus<<BUS_STARTBIT) + 0x000E)
#define CDE_BVCI0_equnder                       (CDE_BLK + DBG64SEL + (halCDE_bvci_dbg_bus<<BUS_STARTBIT) + 0x000D)
#define CDE_BVCI0_cdspurun                      (CDE_BLK + DBG64SEL + (halCDE_bvci_dbg_bus<<BUS_STARTBIT) + 0x000C)
#define CDE_BVCI0_stptim3                       (CDE_BLK + DBG64SEL + (halCDE_bvci_dbg_bus<<BUS_STARTBIT) + 0x000B)
#define CDE_BVCI0_stptim2                       (CDE_BLK + DBG64SEL + (halCDE_bvci_dbg_bus<<BUS_STARTBIT) + 0x000A)
#define CDE_BVCI0_stptim1                       (CDE_BLK + DBG64SEL + (halCDE_bvci_dbg_bus<<BUS_STARTBIT) + 0x0009)
#define CDE_BVCI0_stptim0                       (CDE_BLK + DBG64SEL + (halCDE_bvci_dbg_bus<<BUS_STARTBIT) + 0x0008)
#define CDE_BVCI0_hstspurun                     (CDE_BLK + DBG64SEL + (halCDE_bvci_dbg_bus<<BUS_STARTBIT) + 0x0007)
#define CDE_BVCI0_int2                          (CDE_BLK + DBG64SEL + (halCDE_bvci_dbg_bus<<BUS_STARTBIT) + 0x0006)
#define CDE_BVCI0_int1                          (CDE_BLK + DBG64SEL + (halCDE_bvci_dbg_bus<<BUS_STARTBIT) + 0x0005)
#define CDE_BVCI0_int0                          (CDE_BLK + DBG64SEL + (halCDE_bvci_dbg_bus<<BUS_STARTBIT) + 0x0004)
#define CDE_BVCI0_sel_data_area                 (CDE_BLK + DBG64SEL + (halCDE_bvci_dbg_bus<<BUS_STARTBIT) + 0x0003)
#define CDE_BVCI0_bvci_8wd_boundary             (CDE_BLK + DBG64SEL + (halCDE_bvci_dbg_bus<<BUS_STARTBIT) + 0x0002)
#define CDE_BVCI0_page_inside_ring              (CDE_BLK + DBG64SEL + (halCDE_bvci_dbg_bus<<BUS_STARTBIT) + 0x0001)
#define CDE_BVCI0_sysclk                        (CDE_BLK + DBG64SEL + (halCDE_bvci_dbg_bus<<BUS_STARTBIT) + 0x0000)
//halCDE_bvci_dbg_bus (slot 1)
#define CDE_BVCI1_cCmdVal                       (CDE_BLK + DBG64SEL + (halCDE_bvci_dbg_bus<<BUS_STARTBIT) + 0x012F)
#define CDE_BVCI1_rCmdAck                       (CDE_BLK + DBG64SEL + (halCDE_bvci_dbg_bus<<BUS_STARTBIT) + 0x012E)
#define CDE_BVCI1_cCmd1                         (CDE_BLK + DBG64SEL + (halCDE_bvci_dbg_bus<<BUS_STARTBIT) + 0x012D)
#define CDE_BVCI1_cCmd0                         (CDE_BLK + DBG64SEL + (halCDE_bvci_dbg_bus<<BUS_STARTBIT) + 0x012C)
#define CDE_BVCI1_cEop                          (CDE_BLK + DBG64SEL + (halCDE_bvci_dbg_bus<<BUS_STARTBIT) + 0x012B)
#define CDE_BVCI1_rRspVal                       (CDE_BLK + DBG64SEL + (halCDE_bvci_dbg_bus<<BUS_STARTBIT) + 0x012A)
#define CDE_BVCI1_rEop                          (CDE_BLK + DBG64SEL + (halCDE_bvci_dbg_bus<<BUS_STARTBIT) + 0x0129)
#define CDE_BVCI1_sp_bvci_req                   (CDE_BLK + DBG64SEL + (halCDE_bvci_dbg_bus<<BUS_STARTBIT) + 0x0128)
#define CDE_BVCI1_sp_bvci_ack                   (CDE_BLK + DBG64SEL + (halCDE_bvci_dbg_bus<<BUS_STARTBIT) + 0x0127)
#define CDE_BVCI1_sp_bvci_next_ack              (CDE_BLK + DBG64SEL + (halCDE_bvci_dbg_bus<<BUS_STARTBIT) + 0x0126)
#define CDE_BVCI1_sp_bvci_rwn                   (CDE_BLK + DBG64SEL + (halCDE_bvci_dbg_bus<<BUS_STARTBIT) + 0x0125)
#define CDE_BVCI1_sp_bvci_comp                  (CDE_BLK + DBG64SEL + (halCDE_bvci_dbg_bus<<BUS_STARTBIT) + 0x0124)
#define CDE_BVCI1_sp_bvci_bursten               (CDE_BLK + DBG64SEL + (halCDE_bvci_dbg_bus<<BUS_STARTBIT) + 0x0123)
#define CDE_BVCI1_sp_bvci_wc2                   (CDE_BLK + DBG64SEL + (halCDE_bvci_dbg_bus<<BUS_STARTBIT) + 0x0122)
#define CDE_BVCI1_sp_bvci_wc1                   (CDE_BLK + DBG64SEL + (halCDE_bvci_dbg_bus<<BUS_STARTBIT) + 0x0121)
#define CDE_BVCI1_sp_bvci_wc0                   (CDE_BLK + DBG64SEL + (halCDE_bvci_dbg_bus<<BUS_STARTBIT) + 0x0120)
#define CDE_BVCI1_cd1_bvci_req                  (CDE_BLK + DBG64SEL + (halCDE_bvci_dbg_bus<<BUS_STARTBIT) + 0x011F)
#define CDE_BVCI1_cd1_bvci_ack                  (CDE_BLK + DBG64SEL + (halCDE_bvci_dbg_bus<<BUS_STARTBIT) + 0x011E)
#define CDE_BVCI1_cd2_bvci_req                  (CDE_BLK + DBG64SEL + (halCDE_bvci_dbg_bus<<BUS_STARTBIT) + 0x011D)
#define CDE_BVCI1_cd2_bvci_ack                  (CDE_BLK + DBG64SEL + (halCDE_bvci_dbg_bus<<BUS_STARTBIT) + 0x011C)
#define CDE_BVCI1_sub_bvci_req                  (CDE_BLK + DBG64SEL + (halCDE_bvci_dbg_bus<<BUS_STARTBIT) + 0x011B)
#define CDE_BVCI1_sub_bvci_ack                  (CDE_BLK + DBG64SEL + (halCDE_bvci_dbg_bus<<BUS_STARTBIT) + 0x011A)
#define CDE_BVCI1_efm_bvci_req                  (CDE_BLK + DBG64SEL + (halCDE_bvci_dbg_bus<<BUS_STARTBIT) + 0x0119)
#define CDE_BVCI1_efm_bvci_ack                  (CDE_BLK + DBG64SEL + (halCDE_bvci_dbg_bus<<BUS_STARTBIT) + 0x0118)
#define CDE_BVCI1_sub_bvci_wc2                  (CDE_BLK + DBG64SEL + (halCDE_bvci_dbg_bus<<BUS_STARTBIT) + 0x0117)
#define CDE_BVCI1_sub_bvci_wc1                  (CDE_BLK + DBG64SEL + (halCDE_bvci_dbg_bus<<BUS_STARTBIT) + 0x0116)
#define CDE_BVCI1_sub_bvci_wc0                  (CDE_BLK + DBG64SEL + (halCDE_bvci_dbg_bus<<BUS_STARTBIT) + 0x0115)
#define CDE_BVCI1_master2                       (CDE_BLK + DBG64SEL + (halCDE_bvci_dbg_bus<<BUS_STARTBIT) + 0x0114)
#define CDE_BVCI1_master1                       (CDE_BLK + DBG64SEL + (halCDE_bvci_dbg_bus<<BUS_STARTBIT) + 0x0113)
#define CDE_BVCI1_master0                       (CDE_BLK + DBG64SEL + (halCDE_bvci_dbg_bus<<BUS_STARTBIT) + 0x0112)
#define CDE_BVCI1_autroseq1                     (CDE_BLK + DBG64SEL + (halCDE_bvci_dbg_bus<<BUS_STARTBIT) + 0x0111)
#define CDE_BVCI1_autroseq0                     (CDE_BLK + DBG64SEL + (halCDE_bvci_dbg_bus<<BUS_STARTBIT) + 0x0110)
#define CDE_BVCI1_rtstate3                      (CDE_BLK + DBG64SEL + (halCDE_bvci_dbg_bus<<BUS_STARTBIT) + 0x010F)
#define CDE_BVCI1_rtstate2                      (CDE_BLK + DBG64SEL + (halCDE_bvci_dbg_bus<<BUS_STARTBIT) + 0x010E)
#define CDE_BVCI1_rtstate1                      (CDE_BLK + DBG64SEL + (halCDE_bvci_dbg_bus<<BUS_STARTBIT) + 0x010D)
#define CDE_BVCI1_rtstate0                      (CDE_BLK + DBG64SEL + (halCDE_bvci_dbg_bus<<BUS_STARTBIT) + 0x010C)
#define CDE_BVCI1_fixpkt2                       (CDE_BLK + DBG64SEL + (halCDE_bvci_dbg_bus<<BUS_STARTBIT) + 0x010B)
#define CDE_BVCI1_fixpkt1                       (CDE_BLK + DBG64SEL + (halCDE_bvci_dbg_bus<<BUS_STARTBIT) + 0x010A)
#define CDE_BVCI1_fixpkt0                       (CDE_BLK + DBG64SEL + (halCDE_bvci_dbg_bus<<BUS_STARTBIT) + 0x0109)
#define CDE_BVCI1_spmaster4                     (CDE_BLK + DBG64SEL + (halCDE_bvci_dbg_bus<<BUS_STARTBIT) + 0x0108)
#define CDE_BVCI1_spmaster3                     (CDE_BLK + DBG64SEL + (halCDE_bvci_dbg_bus<<BUS_STARTBIT) + 0x0107)
#define CDE_BVCI1_spmaster2                     (CDE_BLK + DBG64SEL + (halCDE_bvci_dbg_bus<<BUS_STARTBIT) + 0x0106)
#define CDE_BVCI1_spmaster1                     (CDE_BLK + DBG64SEL + (halCDE_bvci_dbg_bus<<BUS_STARTBIT) + 0x0105)
#define CDE_BVCI1_spmaster0                     (CDE_BLK + DBG64SEL + (halCDE_bvci_dbg_bus<<BUS_STARTBIT) + 0x0104)
#define CDE_BVCI1_efm_bvci_rwn                  (CDE_BLK + DBG64SEL + (halCDE_bvci_dbg_bus<<BUS_STARTBIT) + 0x0103)
#define CDE_BVCI1_memrwb                        (CDE_BLK + DBG64SEL + (halCDE_bvci_dbg_bus<<BUS_STARTBIT) + 0x0102)
#define CDE_BVCI1_memadr_inc                    (CDE_BLK + DBG64SEL + (halCDE_bvci_dbg_bus<<BUS_STARTBIT) + 0x0101)
#define CDE_BVCI1_sysclk                        (CDE_BLK + DBG64SEL + (halCDE_bvci_dbg_bus<<BUS_STARTBIT) + 0x0100)
//halCDE_bvcibus_dbg_bus_R
#define CDE_BVCI_R_cAddress23                   (CDE_BLK + DBG64SEL + (halCDE_bvcibus_dbg_bus_R<<BUS_STARTBIT) + 0x002F)
#define CDE_BVCI_R_cAddress22                   (CDE_BLK + DBG64SEL + (halCDE_bvcibus_dbg_bus_R<<BUS_STARTBIT) + 0x002E)
#define CDE_BVCI_R_cAddress21                   (CDE_BLK + DBG64SEL + (halCDE_bvcibus_dbg_bus_R<<BUS_STARTBIT) + 0x002D)
#define CDE_BVCI_R_cAddress20                   (CDE_BLK + DBG64SEL + (halCDE_bvcibus_dbg_bus_R<<BUS_STARTBIT) + 0x002C)
#define CDE_BVCI_R_cAddress19                   (CDE_BLK + DBG64SEL + (halCDE_bvcibus_dbg_bus_R<<BUS_STARTBIT) + 0x002B)
#define CDE_BVCI_R_cAddress18                   (CDE_BLK + DBG64SEL + (halCDE_bvcibus_dbg_bus_R<<BUS_STARTBIT) + 0x002A)
#define CDE_BVCI_R_cAddress17                   (CDE_BLK + DBG64SEL + (halCDE_bvcibus_dbg_bus_R<<BUS_STARTBIT) + 0x0029)
#define CDE_BVCI_R_cAddress16                   (CDE_BLK + DBG64SEL + (halCDE_bvcibus_dbg_bus_R<<BUS_STARTBIT) + 0x0028)
#define CDE_BVCI_R_cAddress15                   (CDE_BLK + DBG64SEL + (halCDE_bvcibus_dbg_bus_R<<BUS_STARTBIT) + 0x0027)
#define CDE_BVCI_R_cAddress14                   (CDE_BLK + DBG64SEL + (halCDE_bvcibus_dbg_bus_R<<BUS_STARTBIT) + 0x0026)
#define CDE_BVCI_R_cAddress13                   (CDE_BLK + DBG64SEL + (halCDE_bvcibus_dbg_bus_R<<BUS_STARTBIT) + 0x0025)
#define CDE_BVCI_R_cAddress12                   (CDE_BLK + DBG64SEL + (halCDE_bvcibus_dbg_bus_R<<BUS_STARTBIT) + 0x0024)
#define CDE_BVCI_R_cAddress11                   (CDE_BLK + DBG64SEL + (halCDE_bvcibus_dbg_bus_R<<BUS_STARTBIT) + 0x0023)
#define CDE_BVCI_R_cAddress10                   (CDE_BLK + DBG64SEL + (halCDE_bvcibus_dbg_bus_R<<BUS_STARTBIT) + 0x0022)
#define CDE_BVCI_R_cAddress9                    (CDE_BLK + DBG64SEL + (halCDE_bvcibus_dbg_bus_R<<BUS_STARTBIT) + 0x0021)
#define CDE_BVCI_R_cAddress8                    (CDE_BLK + DBG64SEL + (halCDE_bvcibus_dbg_bus_R<<BUS_STARTBIT) + 0x0020)
#define CDE_BVCI_R_cAddress7                    (CDE_BLK + DBG64SEL + (halCDE_bvcibus_dbg_bus_R<<BUS_STARTBIT) + 0x001F)
#define CDE_BVCI_R_cAddress6                    (CDE_BLK + DBG64SEL + (halCDE_bvcibus_dbg_bus_R<<BUS_STARTBIT) + 0x001E)
#define CDE_BVCI_R_cAddress5                    (CDE_BLK + DBG64SEL + (halCDE_bvcibus_dbg_bus_R<<BUS_STARTBIT) + 0x001D)
#define CDE_BVCI_R_cAddress4                    (CDE_BLK + DBG64SEL + (halCDE_bvcibus_dbg_bus_R<<BUS_STARTBIT) + 0x001C)
#define CDE_BVCI_R_cAddress3                    (CDE_BLK + DBG64SEL + (halCDE_bvcibus_dbg_bus_R<<BUS_STARTBIT) + 0x001B)
#define CDE_BVCI_R_cAddress2                    (CDE_BLK + DBG64SEL + (halCDE_bvcibus_dbg_bus_R<<BUS_STARTBIT) + 0x001A)
#define CDE_BVCI_R_cAddress1                    (CDE_BLK + DBG64SEL + (halCDE_bvcibus_dbg_bus_R<<BUS_STARTBIT) + 0x0019)
#define CDE_BVCI_R_0                            (CDE_BLK + DBG64SEL + (halCDE_bvcibus_dbg_bus_R<<BUS_STARTBIT) + 0x0018)
#define CDE_BVCI_R_cCmd1                        (CDE_BLK + DBG64SEL + (halCDE_bvcibus_dbg_bus_R<<BUS_STARTBIT) + 0x0017)
#define CDE_BVCI_R_cCmd0                        (CDE_BLK + DBG64SEL + (halCDE_bvcibus_dbg_bus_R<<BUS_STARTBIT) + 0x0016)
#define CDE_BVCI_R_cCmdVal                      (CDE_BLK + DBG64SEL + (halCDE_bvcibus_dbg_bus_R<<BUS_STARTBIT) + 0x0015)
#define CDE_BVCI_R_cEop                         (CDE_BLK + DBG64SEL + (halCDE_bvcibus_dbg_bus_R<<BUS_STARTBIT) + 0x0014)
#define CDE_BVCI_R_rCmdAck                      (CDE_BLK + DBG64SEL + (halCDE_bvcibus_dbg_bus_R<<BUS_STARTBIT) + 0x0013)
#define CDE_BVCI_R_rEop                         (CDE_BLK + DBG64SEL + (halCDE_bvcibus_dbg_bus_R<<BUS_STARTBIT) + 0x0012)
#define CDE_BVCI_R_rRspVal                      (CDE_BLK + DBG64SEL + (halCDE_bvcibus_dbg_bus_R<<BUS_STARTBIT) + 0x0011)
#define CDE_BVCI_R_rRdata15                     (CDE_BLK + DBG64SEL + (halCDE_bvcibus_dbg_bus_R<<BUS_STARTBIT) + 0x0010)
#define CDE_BVCI_R_rRdata14                     (CDE_BLK + DBG64SEL + (halCDE_bvcibus_dbg_bus_R<<BUS_STARTBIT) + 0x000F)
#define CDE_BVCI_R_rRdata13                     (CDE_BLK + DBG64SEL + (halCDE_bvcibus_dbg_bus_R<<BUS_STARTBIT) + 0x000E)
#define CDE_BVCI_R_rRdata12                     (CDE_BLK + DBG64SEL + (halCDE_bvcibus_dbg_bus_R<<BUS_STARTBIT) + 0x000D)
#define CDE_BVCI_R_rRdata11                     (CDE_BLK + DBG64SEL + (halCDE_bvcibus_dbg_bus_R<<BUS_STARTBIT) + 0x000C)
#define CDE_BVCI_R_rRdata10                     (CDE_BLK + DBG64SEL + (halCDE_bvcibus_dbg_bus_R<<BUS_STARTBIT) + 0x000B)
#define CDE_BVCI_R_rRdata9                      (CDE_BLK + DBG64SEL + (halCDE_bvcibus_dbg_bus_R<<BUS_STARTBIT) + 0x000A)
#define CDE_BVCI_R_rRdata8                      (CDE_BLK + DBG64SEL + (halCDE_bvcibus_dbg_bus_R<<BUS_STARTBIT) + 0x0009)
#define CDE_BVCI_R_rRdata7                      (CDE_BLK + DBG64SEL + (halCDE_bvcibus_dbg_bus_R<<BUS_STARTBIT) + 0x0008)
#define CDE_BVCI_R_rRdata6                      (CDE_BLK + DBG64SEL + (halCDE_bvcibus_dbg_bus_R<<BUS_STARTBIT) + 0x0007)
#define CDE_BVCI_R_rRdata5                      (CDE_BLK + DBG64SEL + (halCDE_bvcibus_dbg_bus_R<<BUS_STARTBIT) + 0x0006)
#define CDE_BVCI_R_rRdata4                      (CDE_BLK + DBG64SEL + (halCDE_bvcibus_dbg_bus_R<<BUS_STARTBIT) + 0x0005)
#define CDE_BVCI_R_rRdata3                      (CDE_BLK + DBG64SEL + (halCDE_bvcibus_dbg_bus_R<<BUS_STARTBIT) + 0x0004)
#define CDE_BVCI_R_rRdata2                      (CDE_BLK + DBG64SEL + (halCDE_bvcibus_dbg_bus_R<<BUS_STARTBIT) + 0x0003)
#define CDE_BVCI_R_rRdata1                      (CDE_BLK + DBG64SEL + (halCDE_bvcibus_dbg_bus_R<<BUS_STARTBIT) + 0x0002)
#define CDE_BVCI_R_rRdata0                      (CDE_BLK + DBG64SEL + (halCDE_bvcibus_dbg_bus_R<<BUS_STARTBIT) + 0x0001)
#define CDE_BVCI_R_sysclk                       (CDE_BLK + DBG64SEL + (halCDE_bvcibus_dbg_bus_R<<BUS_STARTBIT) + 0x0000)
//halCDE_bvcibus_dbg_bus_W
#define CDE_BVCI_W_cAddress23                   (CDE_BLK + DBG64SEL + (halCDE_bvcibus_dbg_bus_W<<BUS_STARTBIT) + 0x002F)
#define CDE_BVCI_W_cAddress22                   (CDE_BLK + DBG64SEL + (halCDE_bvcibus_dbg_bus_W<<BUS_STARTBIT) + 0x002E)
#define CDE_BVCI_W_cAddress21                   (CDE_BLK + DBG64SEL + (halCDE_bvcibus_dbg_bus_W<<BUS_STARTBIT) + 0x002D)
#define CDE_BVCI_W_cAddress20                   (CDE_BLK + DBG64SEL + (halCDE_bvcibus_dbg_bus_W<<BUS_STARTBIT) + 0x002C)
#define CDE_BVCI_W_cAddress19                   (CDE_BLK + DBG64SEL + (halCDE_bvcibus_dbg_bus_W<<BUS_STARTBIT) + 0x002B)
#define CDE_BVCI_W_cAddress18                   (CDE_BLK + DBG64SEL + (halCDE_bvcibus_dbg_bus_W<<BUS_STARTBIT) + 0x002A)
#define CDE_BVCI_W_cAddress17                   (CDE_BLK + DBG64SEL + (halCDE_bvcibus_dbg_bus_W<<BUS_STARTBIT) + 0x0029)
#define CDE_BVCI_W_cAddress16                   (CDE_BLK + DBG64SEL + (halCDE_bvcibus_dbg_bus_W<<BUS_STARTBIT) + 0x0028)
#define CDE_BVCI_W_cAddress15                   (CDE_BLK + DBG64SEL + (halCDE_bvcibus_dbg_bus_W<<BUS_STARTBIT) + 0x0027)
#define CDE_BVCI_W_cAddress14                   (CDE_BLK + DBG64SEL + (halCDE_bvcibus_dbg_bus_W<<BUS_STARTBIT) + 0x0026)
#define CDE_BVCI_W_cAddress13                   (CDE_BLK + DBG64SEL + (halCDE_bvcibus_dbg_bus_W<<BUS_STARTBIT) + 0x0025)
#define CDE_BVCI_W_cAddress12                   (CDE_BLK + DBG64SEL + (halCDE_bvcibus_dbg_bus_W<<BUS_STARTBIT) + 0x0024)
#define CDE_BVCI_W_cAddress11                   (CDE_BLK + DBG64SEL + (halCDE_bvcibus_dbg_bus_W<<BUS_STARTBIT) + 0x0023)
#define CDE_BVCI_W_cAddress10                   (CDE_BLK + DBG64SEL + (halCDE_bvcibus_dbg_bus_W<<BUS_STARTBIT) + 0x0022)
#define CDE_BVCI_W_cAddress9                    (CDE_BLK + DBG64SEL + (halCDE_bvcibus_dbg_bus_W<<BUS_STARTBIT) + 0x0021)
#define CDE_BVCI_W_cAddress8                    (CDE_BLK + DBG64SEL + (halCDE_bvcibus_dbg_bus_W<<BUS_STARTBIT) + 0x0020)
#define CDE_BVCI_W_cAddress7                    (CDE_BLK + DBG64SEL + (halCDE_bvcibus_dbg_bus_W<<BUS_STARTBIT) + 0x001F)
#define CDE_BVCI_W_cAddress6                    (CDE_BLK + DBG64SEL + (halCDE_bvcibus_dbg_bus_W<<BUS_STARTBIT) + 0x001E)
#define CDE_BVCI_W_cAddress5                    (CDE_BLK + DBG64SEL + (halCDE_bvcibus_dbg_bus_W<<BUS_STARTBIT) + 0x001D)
#define CDE_BVCI_W_cAddress4                    (CDE_BLK + DBG64SEL + (halCDE_bvcibus_dbg_bus_W<<BUS_STARTBIT) + 0x001C)
#define CDE_BVCI_W_cAddress3                    (CDE_BLK + DBG64SEL + (halCDE_bvcibus_dbg_bus_W<<BUS_STARTBIT) + 0x001B)
#define CDE_BVCI_W_cAddress2                    (CDE_BLK + DBG64SEL + (halCDE_bvcibus_dbg_bus_W<<BUS_STARTBIT) + 0x001A)
#define CDE_BVCI_W_cAddress1                    (CDE_BLK + DBG64SEL + (halCDE_bvcibus_dbg_bus_W<<BUS_STARTBIT) + 0x0019)
#define CDE_BVCI_W_0                            (CDE_BLK + DBG64SEL + (halCDE_bvcibus_dbg_bus_W<<BUS_STARTBIT) + 0x0018)
#define CDE_BVCI_W_cCmd1                        (CDE_BLK + DBG64SEL + (halCDE_bvcibus_dbg_bus_W<<BUS_STARTBIT) + 0x0017)
#define CDE_BVCI_W_cCmd0                        (CDE_BLK + DBG64SEL + (halCDE_bvcibus_dbg_bus_W<<BUS_STARTBIT) + 0x0016)
#define CDE_BVCI_W_cCmdVal                      (CDE_BLK + DBG64SEL + (halCDE_bvcibus_dbg_bus_W<<BUS_STARTBIT) + 0x0015)
#define CDE_BVCI_W_cEop                         (CDE_BLK + DBG64SEL + (halCDE_bvcibus_dbg_bus_W<<BUS_STARTBIT) + 0x0014)
#define CDE_BVCI_W_rCmdAck                      (CDE_BLK + DBG64SEL + (halCDE_bvcibus_dbg_bus_W<<BUS_STARTBIT) + 0x0013)
#define CDE_BVCI_W_rEop                         (CDE_BLK + DBG64SEL + (halCDE_bvcibus_dbg_bus_W<<BUS_STARTBIT) + 0x0012)
#define CDE_BVCI_W_rRspVal                      (CDE_BLK + DBG64SEL + (halCDE_bvcibus_dbg_bus_W<<BUS_STARTBIT) + 0x0011)
#define CDE_BVCI_W_rRdata15                     (CDE_BLK + DBG64SEL + (halCDE_bvcibus_dbg_bus_W<<BUS_STARTBIT) + 0x0010)
#define CDE_BVCI_W_rRdata14                     (CDE_BLK + DBG64SEL + (halCDE_bvcibus_dbg_bus_W<<BUS_STARTBIT) + 0x000F)
#define CDE_BVCI_W_rRdata13                     (CDE_BLK + DBG64SEL + (halCDE_bvcibus_dbg_bus_W<<BUS_STARTBIT) + 0x000E)
#define CDE_BVCI_W_rRdata12                     (CDE_BLK + DBG64SEL + (halCDE_bvcibus_dbg_bus_W<<BUS_STARTBIT) + 0x000D)
#define CDE_BVCI_W_rRdata11                     (CDE_BLK + DBG64SEL + (halCDE_bvcibus_dbg_bus_W<<BUS_STARTBIT) + 0x000C)
#define CDE_BVCI_W_rRdata10                     (CDE_BLK + DBG64SEL + (halCDE_bvcibus_dbg_bus_W<<BUS_STARTBIT) + 0x000B)
#define CDE_BVCI_W_rRdata9                      (CDE_BLK + DBG64SEL + (halCDE_bvcibus_dbg_bus_W<<BUS_STARTBIT) + 0x000A)
#define CDE_BVCI_W_rRdata8                      (CDE_BLK + DBG64SEL + (halCDE_bvcibus_dbg_bus_W<<BUS_STARTBIT) + 0x0009)
#define CDE_BVCI_W_rRdata7                      (CDE_BLK + DBG64SEL + (halCDE_bvcibus_dbg_bus_W<<BUS_STARTBIT) + 0x0008)
#define CDE_BVCI_W_rRdata6                      (CDE_BLK + DBG64SEL + (halCDE_bvcibus_dbg_bus_W<<BUS_STARTBIT) + 0x0007)
#define CDE_BVCI_W_rRdata5                      (CDE_BLK + DBG64SEL + (halCDE_bvcibus_dbg_bus_W<<BUS_STARTBIT) + 0x0006)
#define CDE_BVCI_W_rRdata4                      (CDE_BLK + DBG64SEL + (halCDE_bvcibus_dbg_bus_W<<BUS_STARTBIT) + 0x0005)
#define CDE_BVCI_W_rRdata3                      (CDE_BLK + DBG64SEL + (halCDE_bvcibus_dbg_bus_W<<BUS_STARTBIT) + 0x0004)
#define CDE_BVCI_W_rRdata2                      (CDE_BLK + DBG64SEL + (halCDE_bvcibus_dbg_bus_W<<BUS_STARTBIT) + 0x0003)
#define CDE_BVCI_W_rRdata1                      (CDE_BLK + DBG64SEL + (halCDE_bvcibus_dbg_bus_W<<BUS_STARTBIT) + 0x0002)
#define CDE_BVCI_W_rRdata0                      (CDE_BLK + DBG64SEL + (halCDE_bvcibus_dbg_bus_W<<BUS_STARTBIT) + 0x0001)
#define CDE_BVCI_W_sysclk                       (CDE_BLK + DBG64SEL + (halCDE_bvcibus_dbg_bus_W<<BUS_STARTBIT) + 0x0000)

/****************************************************************************
* DGB64 BUS OPC BLOCK
****************************************************************************/
//OPC BUS1
#define OPC_BUS1_opc_start_enc              (OPC_BLK + DBG64SEL + (0<<BUS_STARTBIT) + 0x002F)
#define OPC_BUS1_adcdata9                   (OPC_BLK + DBG64SEL + (0<<BUS_STARTBIT) + 0x002E)
#define OPC_BUS1_adcdata8                   (OPC_BLK + DBG64SEL + (0<<BUS_STARTBIT) + 0x002D)
#define OPC_BUS1_adcdata7                   (OPC_BLK + DBG64SEL + (0<<BUS_STARTBIT) + 0x002C)
#define OPC_BUS1_adcdata6                   (OPC_BLK + DBG64SEL + (0<<BUS_STARTBIT) + 0x002B)
#define OPC_BUS1_adcdata5                   (OPC_BLK + DBG64SEL + (0<<BUS_STARTBIT) + 0x002A)
#define OPC_BUS1_adcdata4                   (OPC_BLK + DBG64SEL + (0<<BUS_STARTBIT) + 0x0029)
#define OPC_BUS1_adcdata3                   (OPC_BLK + DBG64SEL + (0<<BUS_STARTBIT) + 0x0028)
#define OPC_BUS1_adcdata2                   (OPC_BLK + DBG64SEL + (0<<BUS_STARTBIT) + 0x0027)
#define OPC_BUS1_adcdata1                   (OPC_BLK + DBG64SEL + (0<<BUS_STARTBIT) + 0x0026)
#define OPC_BUS1_adcdata0                   (OPC_BLK + DBG64SEL + (0<<BUS_STARTBIT) + 0x0025)
#define OPC_BUS1_opc_wblstm                 (OPC_BLK + DBG64SEL + (0<<BUS_STARTBIT) + 0x0024)
#define OPC_BUS1_opc_wgate                  (OPC_BLK + DBG64SEL + (0<<BUS_STARTBIT) + 0x0023)
#define OPC_BUS1_sysclk                     (OPC_BLK + DBG64SEL + (0<<BUS_STARTBIT) + 0x0022)
#define OPC_BUS1_wobble_opc_pulse           (OPC_BLK + DBG64SEL + (0<<BUS_STARTBIT) + 0x0021)
#define OPC_BUS1_opc_clk                    (OPC_BLK + DBG64SEL + (0<<BUS_STARTBIT) + 0x0020)
#define OPC_BUS1_opc_if_data11              (OPC_BLK + DBG64SEL + (0<<BUS_STARTBIT) + 0x001F)
#define OPC_BUS1_opc_if_data10              (OPC_BLK + DBG64SEL + (0<<BUS_STARTBIT) + 0x001E)
#define OPC_BUS1_opc_if_data9               (OPC_BLK + DBG64SEL + (0<<BUS_STARTBIT) + 0x001D)
#define OPC_BUS1_opc_if_data8               (OPC_BLK + DBG64SEL + (0<<BUS_STARTBIT) + 0x001C)
#define OPC_BUS1_opc_if_data7               (OPC_BLK + DBG64SEL + (0<<BUS_STARTBIT) + 0x001B)
#define OPC_BUS1_opc_if_data6               (OPC_BLK + DBG64SEL + (0<<BUS_STARTBIT) + 0x001A)
#define OPC_BUS1_opc_if_data5               (OPC_BLK + DBG64SEL + (0<<BUS_STARTBIT) + 0x0019)
#define OPC_BUS1_opc_if_data4               (OPC_BLK + DBG64SEL + (0<<BUS_STARTBIT) + 0x0018)
#define OPC_BUS1_opc_if_data3               (OPC_BLK + DBG64SEL + (0<<BUS_STARTBIT) + 0x0017)
#define OPC_BUS1_opc_if_data2               (OPC_BLK + DBG64SEL + (0<<BUS_STARTBIT) + 0x0016)
#define OPC_BUS1_opc_if_data1               (OPC_BLK + DBG64SEL + (0<<BUS_STARTBIT) + 0x0015)
#define OPC_BUS1_opc_if_data0               (OPC_BLK + DBG64SEL + (0<<BUS_STARTBIT) + 0x0014)
#define OPC_BUS1_opc_tc_tr_dfe              (OPC_BLK + DBG64SEL + (0<<BUS_STARTBIT) + 0x0013)
#define OPC_BUS1_sysclk_a                   (OPC_BLK + DBG64SEL + (0<<BUS_STARTBIT) + 0x0012)
#define OPC_BUS1_wobble_opc_pulse_a         (OPC_BLK + DBG64SEL + (0<<BUS_STARTBIT) + 0x0011)
#define OPC_BUS1_opc_clk_a                  (OPC_BLK + DBG64SEL + (0<<BUS_STARTBIT) + 0x0010)
#define OPC_BUS1_opc_read                   (OPC_BLK + DBG64SEL + (0<<BUS_STARTBIT) + 0x000F)
#define OPC_BUS1_opc_write                  (OPC_BLK + DBG64SEL + (0<<BUS_STARTBIT) + 0x000E)
#define OPC_BUS1_opc_start                  (OPC_BLK + DBG64SEL + (0<<BUS_STARTBIT) + 0x000D)
#define OPC_BUS1_opc_stop                   (OPC_BLK + DBG64SEL + (0<<BUS_STARTBIT) + 0x000C)
#define OPC_BUS1_wobble_opc_pulse_b         (OPC_BLK + DBG64SEL + (0<<BUS_STARTBIT) + 0x000B)
#define OPC_BUS1_opc_tr_dfe                 (OPC_BLK + DBG64SEL + (0<<BUS_STARTBIT) + 0x000A)
#define OPC_BUS1_opc_tc_dfe                 (OPC_BLK + DBG64SEL + (0<<BUS_STARTBIT) + 0x0009)
#define OPC_BUS1_opc_td_dfe                 (OPC_BLK + DBG64SEL + (0<<BUS_STARTBIT) + 0x0008)
#define OPC_BUS1_opc_samp                   (OPC_BLK + DBG64SEL + (0<<BUS_STARTBIT) + 0x0007)
#define OPC_BUS1_srv_stm_d_opc              (OPC_BLK + DBG64SEL + (0<<BUS_STARTBIT) + 0x0006)
#define OPC_BUS1_opc_rate                   (OPC_BLK + DBG64SEL + (0<<BUS_STARTBIT) + 0x0005)
#define OPC_BUS1_sram_request               (OPC_BLK + DBG64SEL + (0<<BUS_STARTBIT) + 0x0004)
#define OPC_BUS1_sram_ack                   (OPC_BLK + DBG64SEL + (0<<BUS_STARTBIT) + 0x0003)
#define OPC_BUS1_monitadcld                 (OPC_BLK + DBG64SEL + (0<<BUS_STARTBIT) + 0x0002)
#define OPC_BUS1_opc_if_req                 (OPC_BLK + DBG64SEL + (0<<BUS_STARTBIT) + 0x0001)
#define OPC_BUS1_opc_if_ack                 (OPC_BLK + DBG64SEL + (0<<BUS_STARTBIT) + 0x0000)
//OPC BUS2
#define OPC_BUS2_opc_afe_tr                 (OPC_BLK + DBG64SEL + (1<<BUS_STARTBIT) + 0x0032)
#define OPC_BUS2_lch_afe_reg                (OPC_BLK + DBG64SEL + (1<<BUS_STARTBIT) + 0x0031)
#define OPC_BUS2_update_afe_reg             (OPC_BLK + DBG64SEL + (1<<BUS_STARTBIT) + 0x0030)
#define OPC_BUS2_opc_afe_data15             (OPC_BLK + DBG64SEL + (1<<BUS_STARTBIT) + 0x002F)
#define OPC_BUS2_opc_afe_data14             (OPC_BLK + DBG64SEL + (1<<BUS_STARTBIT) + 0x002E)
#define OPC_BUS2_opc_afe_data13             (OPC_BLK + DBG64SEL + (1<<BUS_STARTBIT) + 0x002D)
#define OPC_BUS2_opc_afe_data12             (OPC_BLK + DBG64SEL + (1<<BUS_STARTBIT) + 0x002C)
#define OPC_BUS2_opc_afe_data11             (OPC_BLK + DBG64SEL + (1<<BUS_STARTBIT) + 0x002B)
#define OPC_BUS2_opc_afe_data10             (OPC_BLK + DBG64SEL + (1<<BUS_STARTBIT) + 0x002A)
#define OPC_BUS2_opc_afe_data9              (OPC_BLK + DBG64SEL + (1<<BUS_STARTBIT) + 0x0029)
#define OPC_BUS2_opc_afe_data8              (OPC_BLK + DBG64SEL + (1<<BUS_STARTBIT) + 0x0028)
#define OPC_BUS2_opc_afe_data7              (OPC_BLK + DBG64SEL + (1<<BUS_STARTBIT) + 0x0027)
#define OPC_BUS2_opc_afe_data6              (OPC_BLK + DBG64SEL + (1<<BUS_STARTBIT) + 0x0026)
#define OPC_BUS2_opc_afe_data5              (OPC_BLK + DBG64SEL + (1<<BUS_STARTBIT) + 0x0025)
#define OPC_BUS2_opc_afe_data4              (OPC_BLK + DBG64SEL + (1<<BUS_STARTBIT) + 0x0024)
#define OPC_BUS2_opc_afe_data3              (OPC_BLK + DBG64SEL + (1<<BUS_STARTBIT) + 0x0023)
#define OPC_BUS2_opc_afe_data2              (OPC_BLK + DBG64SEL + (1<<BUS_STARTBIT) + 0x0022)
#define OPC_BUS2_opc_afe_data1              (OPC_BLK + DBG64SEL + (1<<BUS_STARTBIT) + 0x0021)
#define OPC_BUS2_opc_afe_data0              (OPC_BLK + DBG64SEL + (1<<BUS_STARTBIT) + 0x0020)
#define OPC_BUS2_opc_tr                     (OPC_BLK + DBG64SEL + (1<<BUS_STARTBIT) + 0x001F)
#define OPC_BUS2_opc_tc                     (OPC_BLK + DBG64SEL + (1<<BUS_STARTBIT) + 0x001E)
#define OPC_BUS2_opc_td                     (OPC_BLK + DBG64SEL + (1<<BUS_STARTBIT) + 0x001D)
#define OPC_BUS2_sram_addr12                (OPC_BLK + DBG64SEL + (1<<BUS_STARTBIT) + 0x001C)
#define OPC_BUS2_sram_addr11                (OPC_BLK + DBG64SEL + (1<<BUS_STARTBIT) + 0x001B)
#define OPC_BUS2_sram_addr10                (OPC_BLK + DBG64SEL + (1<<BUS_STARTBIT) + 0x001A)
#define OPC_BUS2_sram_addr9                 (OPC_BLK + DBG64SEL + (1<<BUS_STARTBIT) + 0x0019)
#define OPC_BUS2_sram_addr8                 (OPC_BLK + DBG64SEL + (1<<BUS_STARTBIT) + 0x0018)
#define OPC_BUS2_sram_addr7                 (OPC_BLK + DBG64SEL + (1<<BUS_STARTBIT) + 0x0017)
#define OPC_BUS2_sram_addr6                 (OPC_BLK + DBG64SEL + (1<<BUS_STARTBIT) + 0x0016)
#define OPC_BUS2_sram_addr5                 (OPC_BLK + DBG64SEL + (1<<BUS_STARTBIT) + 0x0015)
#define OPC_BUS2_sram_addr4                 (OPC_BLK + DBG64SEL + (1<<BUS_STARTBIT) + 0x0014)
#define OPC_BUS2_sram_addr3                 (OPC_BLK + DBG64SEL + (1<<BUS_STARTBIT) + 0x0013)
#define OPC_BUS2_sram_addr2                 (OPC_BLK + DBG64SEL + (1<<BUS_STARTBIT) + 0x0012)
#define OPC_BUS2_sram_addr1                 (OPC_BLK + DBG64SEL + (1<<BUS_STARTBIT) + 0x0011)
#define OPC_BUS2_sram_addr0                 (OPC_BLK + DBG64SEL + (1<<BUS_STARTBIT) + 0x0010)
#define OPC_BUS2_sram_data7                 (OPC_BLK + DBG64SEL + (1<<BUS_STARTBIT) + 0x000D)
#define OPC_BUS2_sram_data6                 (OPC_BLK + DBG64SEL + (1<<BUS_STARTBIT) + 0x000C)
#define OPC_BUS2_sram_data5                 (OPC_BLK + DBG64SEL + (1<<BUS_STARTBIT) + 0x000B)
#define OPC_BUS2_sram_data4                 (OPC_BLK + DBG64SEL + (1<<BUS_STARTBIT) + 0x000A)
#define OPC_BUS2_sram_data3                 (OPC_BLK + DBG64SEL + (1<<BUS_STARTBIT) + 0x0009)
#define OPC_BUS2_sram_data2                 (OPC_BLK + DBG64SEL + (1<<BUS_STARTBIT) + 0x0008)
#define OPC_BUS2_sram_data1                 (OPC_BLK + DBG64SEL + (1<<BUS_STARTBIT) + 0x0007)
#define OPC_BUS2_sram_data0                 (OPC_BLK + DBG64SEL + (1<<BUS_STARTBIT) + 0x0006)
#define OPC_BUS2_sram_full                  (OPC_BLK + DBG64SEL + (1<<BUS_STARTBIT) + 0x0005)
#define OPC_BUS2_samp_overlap               (OPC_BLK + DBG64SEL + (1<<BUS_STARTBIT) + 0x0004)
#define OPC_BUS2_opc_samp                   (OPC_BLK + DBG64SEL + (1<<BUS_STARTBIT) + 0x0003)
#define OPC_BUS2_sysclk                     (OPC_BLK + DBG64SEL + (1<<BUS_STARTBIT) + 0x0002)
#define OPC_BUS2_wobble_opc_pulse           (OPC_BLK + DBG64SEL + (1<<BUS_STARTBIT) + 0x0001)
#define OPC_BUS2_opc_clk                    (OPC_BLK + DBG64SEL + (1<<BUS_STARTBIT) + 0x0000)

/****************************************************************************
* DGB64 BUS HOST BLOCK
****************************************************************************/
//PRIMITIVE
#define HOST_PRIMITIVE_dbg_rx_eof_extand                    (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_PRIMITIVE<<BUS_STARTBIT) + 0x000F)
#define HOST_PRIMITIVE_dbg_r0_dmat                          (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_PRIMITIVE<<BUS_STARTBIT) + 0x000E)
#define HOST_PRIMITIVE_dbg_r0_decerr                        (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_PRIMITIVE<<BUS_STARTBIT) + 0x000D)
#define HOST_PRIMITIVE_dbg_r0_x_rdy                         (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_PRIMITIVE<<BUS_STARTBIT) + 0x000C)
#define HOST_PRIMITIVE_dbg_r0_r_ip                          (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_PRIMITIVE<<BUS_STARTBIT) + 0x000B)
#define HOST_PRIMITIVE_dbg_r0_r_ok                          (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_PRIMITIVE<<BUS_STARTBIT) + 0x000A)
#define HOST_PRIMITIVE_dbg_r0_r_err                         (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_PRIMITIVE<<BUS_STARTBIT) + 0x0009)
#define HOST_PRIMITIVE_dbg_r0_r_rdy                         (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_PRIMITIVE<<BUS_STARTBIT) + 0x0008)
#define HOST_PRIMITIVE_dbg_r0_wtrm                          (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_PRIMITIVE<<BUS_STARTBIT) + 0x0007)
#define HOST_PRIMITIVE_dbg_r0_cont                          (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_PRIMITIVE<<BUS_STARTBIT) + 0x0006)
#define HOST_PRIMITIVE_dbg_r0_sync                          (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_PRIMITIVE<<BUS_STARTBIT) + 0x0005)
#define HOST_PRIMITIVE_dbg_r0_align                         (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_PRIMITIVE<<BUS_STARTBIT) + 0x0004)
#define HOST_PRIMITIVE_dbg_r0_holda                         (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_PRIMITIVE<<BUS_STARTBIT) + 0x0003)
#define HOST_PRIMITIVE_dbg_r0_hold                          (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_PRIMITIVE<<BUS_STARTBIT) + 0x0002)
#define HOST_PRIMITIVE_dbg_r0_eof                           (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_PRIMITIVE<<BUS_STARTBIT) + 0x0001)
#define HOST_PRIMITIVE_dbg_r0_sof                           (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_PRIMITIVE<<BUS_STARTBIT) + 0x0000)
//ASEQ
#define HOST_ASEQ_b0                                        (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_ASEQ<<BUS_STARTBIT) + 0x000F)
#define HOST_ASEQ_dbg_partial                               (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_ASEQ<<BUS_STARTBIT) + 0x000E)
#define HOST_ASEQ_dbg_slumber                               (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_ASEQ<<BUS_STARTBIT) + 0x000D)
#define HOST_ASEQ_dbg_txreq_wakeupreq                       (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_ASEQ<<BUS_STARTBIT) + 0x000C)
#define HOST_ASEQ_dbg_ps_confirm                            (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_ASEQ<<BUS_STARTBIT) + 0x000B)
#define HOST_ASEQ_dbg_p2slumber                             (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_ASEQ<<BUS_STARTBIT) + 0x000A)
#define HOST_ASEQ_dbg_discnt_reach                          (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_ASEQ<<BUS_STARTBIT) + 0x0009)
#define HOST_ASEQ_dbg_rdycnt_reach                          (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_ASEQ<<BUS_STARTBIT) + 0x0008)
#define HOST_ASEQ_dbg_cnt_value_rst                         (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_ASEQ<<BUS_STARTBIT) + 0x0007)
#define HOST_ASEQ_dbg_reach_value                           (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_ASEQ<<BUS_STARTBIT) + 0x0006)
#define HOST_ASEQ_dbg_clr_auto_fis34                        (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_ASEQ<<BUS_STARTBIT) + 0x0005)
#define HOST_ASEQ_dbg_auto_fis34                            (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_ASEQ<<BUS_STARTBIT) + 0x0004)
#define HOST_ASEQ_dbg_sata_phyrdy                           (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_ASEQ<<BUS_STARTBIT) + 0x0003)
#define HOST_ASEQ_dbg_sata_linkrdy                          (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_ASEQ<<BUS_STARTBIT) + 0x0002)
#define HOST_ASEQ_dbg_auto_fis34_state1                     (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_ASEQ<<BUS_STARTBIT) + 0x0001)
#define HOST_ASEQ_dbg_auto_fis34_state0                     (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_ASEQ<<BUS_STARTBIT) + 0x0000)
//BISTL
#define HOST_BISTL_dbg_bsm_state2                           (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_BISTL<<BUS_STARTBIT) + 0x000F)
#define HOST_BISTL_dbg_bsm_state1                           (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_BISTL<<BUS_STARTBIT) + 0x000E)
#define HOST_BISTL_dbg_bsm_state0                           (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_BISTL<<BUS_STARTBIT) + 0x000D)
#define HOST_BISTL_dbg_rxd40valid                           (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_BISTL<<BUS_STARTBIT) + 0x000C)
#define HOST_BISTL_dbg_rxd40valid_dw                        (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_BISTL<<BUS_STARTBIT) + 0x000B)
#define HOST_BISTL_dbg_r0_align                             (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_BISTL<<BUS_STARTBIT) + 0x000A)
#define HOST_BISTL_dbg_bist_scr_run                         (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_BISTL<<BUS_STARTBIT) + 0x0009)
#define HOST_BISTL_dbg_bist_scr_init                        (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_BISTL<<BUS_STARTBIT) + 0x0008)
#define HOST_BISTL_dbg_bist_scram_en                        (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_BISTL<<BUS_STARTBIT) + 0x0007)
#define HOST_BISTL_dbg_scr_init_normal                      (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_BISTL<<BUS_STARTBIT) + 0x0006)
#define HOST_BISTL_dbg_scr_run_normal                       (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_BISTL<<BUS_STARTBIT) + 0x0005)
#define HOST_BISTL_dbg_bist_prmt                            (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_BISTL<<BUS_STARTBIT) + 0x0004)
#define HOST_BISTL_dbg_align_pairs                          (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_BISTL<<BUS_STARTBIT) + 0x0003)
#define HOST_BISTL_dbg_align_gen                            (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_BISTL<<BUS_STARTBIT) + 0x0002)
#define HOST_BISTL_dbg_bist_empty_int                       (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_BISTL<<BUS_STARTBIT) + 0x0001)
#define HOST_BISTL_dbg_bist_tx_prmt                         (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_BISTL<<BUS_STARTBIT) + 0x0000)
//DLRSM
#define HOST_DLRSM_dbg_tx_fis_ok                            (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_DLRSM<<BUS_STARTBIT) + 0x000F)
#define HOST_DLRSM_dbg_tx_fis_err                           (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_DLRSM<<BUS_STARTBIT) + 0x000E)
#define HOST_DLRSM_dbg_rx_fis_ok                            (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_DLRSM<<BUS_STARTBIT) + 0x000D)
#define HOST_DLRSM_dbg_rx_fis_err                           (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_DLRSM<<BUS_STARTBIT) + 0x000C)
#define HOST_DLRSM_dbg_sata_rxfifo_empty                    (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_DLRSM<<BUS_STARTBIT) + 0x000B)
#define HOST_DLRSM_dbg_dlrsm10                              (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_DLRSM<<BUS_STARTBIT) + 0x000A)
#define HOST_DLRSM_dbg_dlrsm9                               (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_DLRSM<<BUS_STARTBIT) + 0x0009)
#define HOST_DLRSM_dbg_dlrsm8                               (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_DLRSM<<BUS_STARTBIT) + 0x0008)
#define HOST_DLRSM_dbg_dlrsm7                               (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_DLRSM<<BUS_STARTBIT) + 0x0007)
#define HOST_DLRSM_dbg_dlrsm6                               (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_DLRSM<<BUS_STARTBIT) + 0x0006)
#define HOST_DLRSM_dbg_dlrsm5                               (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_DLRSM<<BUS_STARTBIT) + 0x0005)
#define HOST_DLRSM_dbg_dlrsm4                               (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_DLRSM<<BUS_STARTBIT) + 0x0004)
#define HOST_DLRSM_dbg_dlrsm3                               (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_DLRSM<<BUS_STARTBIT) + 0x0003)
#define HOST_DLRSM_dbg_dlrsm2                               (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_DLRSM<<BUS_STARTBIT) + 0x0002)
#define HOST_DLRSM_dbg_dlrsm1                               (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_DLRSM<<BUS_STARTBIT) + 0x0001)
#define HOST_DLRSM_dbg_dlrsm0                               (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_DLRSM<<BUS_STARTBIT) + 0x0000)
//DLXSM
#define HOST_DLXSM_dbg_sata_txfifo_empty                    (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_DLXSM<<BUS_STARTBIT) + 0x000F)
#define HOST_DLXSM_dbg_dlxsm14                              (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_DLXSM<<BUS_STARTBIT) + 0x000E)
#define HOST_DLXSM_dbg_dlxsm13                              (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_DLXSM<<BUS_STARTBIT) + 0x000D)
#define HOST_DLXSM_dbg_dlxsm12                              (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_DLXSM<<BUS_STARTBIT) + 0x000C)
#define HOST_DLXSM_dbg_dlxsm11                              (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_DLXSM<<BUS_STARTBIT) + 0x000B)
#define HOST_DLXSM_dbg_dlxsm10                              (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_DLXSM<<BUS_STARTBIT) + 0x000A)
#define HOST_DLXSM_dbg_dlxsm9                               (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_DLXSM<<BUS_STARTBIT) + 0x0009)
#define HOST_DLXSM_dbg_dlxsm8                               (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_DLXSM<<BUS_STARTBIT) + 0x0008)
#define HOST_DLXSM_dbg_dlxsm7                               (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_DLXSM<<BUS_STARTBIT) + 0x0007)
#define HOST_DLXSM_dbg_dlxsm6                               (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_DLXSM<<BUS_STARTBIT) + 0x0006)
#define HOST_DLXSM_dbg_dlxsm5                               (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_DLXSM<<BUS_STARTBIT) + 0x0005)
#define HOST_DLXSM_dbg_dlxsm4                               (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_DLXSM<<BUS_STARTBIT) + 0x0004)
#define HOST_DLXSM_dbg_dlxsm3                               (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_DLXSM<<BUS_STARTBIT) + 0x0003)
#define HOST_DLXSM_dbg_dlxsm2                               (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_DLXSM<<BUS_STARTBIT) + 0x0002)
#define HOST_DLXSM_dbg_dlxsm1                               (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_DLXSM<<BUS_STARTBIT) + 0x0001)
#define HOST_DLXSM_dbg_dlxsm0                               (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_DLXSM<<BUS_STARTBIT) + 0x0000)
//DCSM_DSM
#define HOST_DCSM_DSM_b0                                    (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_DCSM_DSM<<BUS_STARTBIT) + 0x000F)
#define HOST_DCSM_DSM_b0_a                                  (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_DCSM_DSM<<BUS_STARTBIT) + 0x000E)
#define HOST_DCSM_DSM_dbg_dcsm5                             (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_DCSM_DSM<<BUS_STARTBIT) + 0x000D)
#define HOST_DCSM_DSM_dbg_dcsm4                             (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_DCSM_DSM<<BUS_STARTBIT) + 0x000C)
#define HOST_DCSM_DSM_dbg_dcsm3                             (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_DCSM_DSM<<BUS_STARTBIT) + 0x000B)
#define HOST_DCSM_DSM_dbg_dcsm2                             (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_DCSM_DSM<<BUS_STARTBIT) + 0x000A)
#define HOST_DCSM_DSM_dbg_dcsm1                             (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_DCSM_DSM<<BUS_STARTBIT) + 0x0009)
#define HOST_DCSM_DSM_dbg_dcsm0                             (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_DCSM_DSM<<BUS_STARTBIT) + 0x0008)
#define HOST_DCSM_DSM_dbg_dsm7                              (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_DCSM_DSM<<BUS_STARTBIT) + 0x0007)
#define HOST_DCSM_DSM_dbg_dsm6                              (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_DCSM_DSM<<BUS_STARTBIT) + 0x0006)
#define HOST_DCSM_DSM_dbg_dsm5                              (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_DCSM_DSM<<BUS_STARTBIT) + 0x0005)
#define HOST_DCSM_DSM_dbg_dsm4                              (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_DCSM_DSM<<BUS_STARTBIT) + 0x0004)
#define HOST_DCSM_DSM_dbg_dsm3                              (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_DCSM_DSM<<BUS_STARTBIT) + 0x0003)
#define HOST_DCSM_DSM_dbg_dsm2                              (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_DCSM_DSM<<BUS_STARTBIT) + 0x0002)
#define HOST_DCSM_DSM_dbg_dsm1                              (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_DCSM_DSM<<BUS_STARTBIT) + 0x0001)
#define HOST_DCSM_DSM_dbg_dsm0                              (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_DCSM_DSM<<BUS_STARTBIT) + 0x0000)
//SDIF
#define HOST_SDIF_dbg_sata_phyrdy                           (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_SDIF<<BUS_STARTBIT) + 0x000F)
#define HOST_SDIF_dbg_sata_linkrdy                          (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_SDIF<<BUS_STARTBIT) + 0x000E)
#define HOST_SDIF_dbg_phy_cr                                (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_SDIF<<BUS_STARTBIT) + 0x000D)
#define HOST_SDIF_dbg_phy_cw                                (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_SDIF<<BUS_STARTBIT) + 0x000C)
#define HOST_SDIF_dbg_tx_toggle_valid                       (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_SDIF<<BUS_STARTBIT) + 0x000B)
#define HOST_SDIF_dbg_tx_fifo_valid                         (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_SDIF<<BUS_STARTBIT) + 0x000A)
#define HOST_SDIF_dbg_read_rxdfifo_even                     (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_SDIF<<BUS_STARTBIT) + 0x0009)
#define HOST_SDIF_dbg_read_rxdfifo_odd                      (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_SDIF<<BUS_STARTBIT) + 0x0008)
#define HOST_SDIF_dbg_ra_rxd10b_val_even                    (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_SDIF<<BUS_STARTBIT) + 0x0007)
#define HOST_SDIF_dbg_ra_rxd10b_val_odd                     (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_SDIF<<BUS_STARTBIT) + 0x0006)
#define HOST_SDIF_dbg_ra_rxd20b_val                         (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_SDIF<<BUS_STARTBIT) + 0x0005)
#define HOST_SDIF_dbg_sata_rxfifo_empty                     (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_SDIF<<BUS_STARTBIT) + 0x0004)
#define HOST_SDIF_dbg_tx_align                              (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_SDIF<<BUS_STARTBIT) + 0x0003)
#define HOST_SDIF_dbg_tx_on                                 (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_SDIF<<BUS_STARTBIT) + 0x0002)
#define HOST_SDIF_dbg_tx_cominit                            (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_SDIF<<BUS_STARTBIT) + 0x0001)
#define HOST_SDIF_dbg_tx_comwake                            (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_SDIF<<BUS_STARTBIT) + 0x0000)
//RXTXCTL
#define HOST_RXTXCTL_dbg_init                               (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_RXTXCTL<<BUS_STARTBIT) + 0x000F)
#define HOST_RXTXCTL_dbg_r0_rxoverrun                       (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_RXTXCTL<<BUS_STARTBIT) + 0x000E)
#define HOST_RXTXCTL_dbg_rx_full_state                      (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_RXTXCTL<<BUS_STARTBIT) + 0x000D)
#define HOST_RXTXCTL_dbg_rx_empty_state                     (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_RXTXCTL<<BUS_STARTBIT) + 0x000C)
#define HOST_RXTXCTL_dbg_rxfifo_rd                          (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_RXTXCTL<<BUS_STARTBIT) + 0x000B)
#define HOST_RXTXCTL_dbg_wrrxfifo_temp                      (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_RXTXCTL<<BUS_STARTBIT) + 0x000A)
#define HOST_RXTXCTL_dbg_hif_wfull                          (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_RXTXCTL<<BUS_STARTBIT) + 0x0009)
#define HOST_RXTXCTL_dbg_sata_txfifo_empty                  (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_RXTXCTL<<BUS_STARTBIT) + 0x0008)
#define HOST_RXTXCTL_dbg_txfifo_data_rd                     (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_RXTXCTL<<BUS_STARTBIT) + 0x0007)
#define HOST_RXTXCTL_dbg_ram_sata_txfifo_wr                 (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_RXTXCTL<<BUS_STARTBIT) + 0x0006)
#define HOST_RXTXCTL_dbg_init_sata_txfifo                   (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_RXTXCTL<<BUS_STARTBIT) + 0x0005)
#define HOST_RXTXCTL_dbg_hif_tail_pt4                       (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_RXTXCTL<<BUS_STARTBIT) + 0x0004)
#define HOST_RXTXCTL_dbg_hif_tail_pt3                       (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_RXTXCTL<<BUS_STARTBIT) + 0x0003)
#define HOST_RXTXCTL_dbg_hif_tail_pt2                       (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_RXTXCTL<<BUS_STARTBIT) + 0x0002)
#define HOST_RXTXCTL_dbg_hif_tail_pt1                       (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_RXTXCTL<<BUS_STARTBIT) + 0x0001)
#define HOST_RXTXCTL_dbg_hif_tail_pt0                       (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_RXTXCTL<<BUS_STARTBIT) + 0x0000)
//RXFIFO
#define HOST_RXFIFO_dbg_r0_rdring7                          (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_RXFIFO<<BUS_STARTBIT) + 0x000F)
#define HOST_RXFIFO_dbg_r0_rdring6                          (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_RXFIFO<<BUS_STARTBIT) + 0x000E)
#define HOST_RXFIFO_dbg_r0_rdring5                          (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_RXFIFO<<BUS_STARTBIT) + 0x000D)
#define HOST_RXFIFO_dbg_r0_rdring4                          (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_RXFIFO<<BUS_STARTBIT) + 0x000C)
#define HOST_RXFIFO_dbg_r0_rdring3                          (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_RXFIFO<<BUS_STARTBIT) + 0x000B)
#define HOST_RXFIFO_dbg_r0_rdring2                          (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_RXFIFO<<BUS_STARTBIT) + 0x000A)
#define HOST_RXFIFO_dbg_r0_rdring1                          (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_RXFIFO<<BUS_STARTBIT) + 0x0009)
#define HOST_RXFIFO_dbg_r0_rdring0                          (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_RXFIFO<<BUS_STARTBIT) + 0x0008)
#define HOST_RXFIFO_dbg_r0_wrring7                          (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_RXFIFO<<BUS_STARTBIT) + 0x0007)
#define HOST_RXFIFO_dbg_r0_wrring6                          (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_RXFIFO<<BUS_STARTBIT) + 0x0006)
#define HOST_RXFIFO_dbg_r0_wrring5                          (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_RXFIFO<<BUS_STARTBIT) + 0x0005)
#define HOST_RXFIFO_dbg_r0_wrring4                          (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_RXFIFO<<BUS_STARTBIT) + 0x0004)
#define HOST_RXFIFO_dbg_r0_wrring3                          (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_RXFIFO<<BUS_STARTBIT) + 0x0003)
#define HOST_RXFIFO_dbg_r0_wrring2                          (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_RXFIFO<<BUS_STARTBIT) + 0x0002)
#define HOST_RXFIFO_dbg_r0_wrring1                          (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_RXFIFO<<BUS_STARTBIT) + 0x0001)
#define HOST_RXFIFO_dbg_r0_wrring0                          (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_RXFIFO<<BUS_STARTBIT) + 0x0000)
//TXFIFO
#define HOST_TXFIFO_dbg_sata_txfifo_empty                   (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_TXFIFO<<BUS_STARTBIT) + 0x000F)
#define HOST_TXFIFO_dbg_txfifo_level4                       (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_TXFIFO<<BUS_STARTBIT) + 0x000E)
#define HOST_TXFIFO_dbg_txfifo_level3                       (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_TXFIFO<<BUS_STARTBIT) + 0x000D)
#define HOST_TXFIFO_dbg_txfifo_level2                       (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_TXFIFO<<BUS_STARTBIT) + 0x000C)
#define HOST_TXFIFO_dbg_txfifo_level1                       (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_TXFIFO<<BUS_STARTBIT) + 0x000B)
#define HOST_TXFIFO_dbg_txfifo_level0                       (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_TXFIFO<<BUS_STARTBIT) + 0x000A)
#define HOST_TXFIFO_dbg_head_pt4                            (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_TXFIFO<<BUS_STARTBIT) + 0x0009)
#define HOST_TXFIFO_dbg_head_pt3                            (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_TXFIFO<<BUS_STARTBIT) + 0x0008)
#define HOST_TXFIFO_dbg_head_pt2                            (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_TXFIFO<<BUS_STARTBIT) + 0x0007)
#define HOST_TXFIFO_dbg_head_pt1                            (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_TXFIFO<<BUS_STARTBIT) + 0x0006)
#define HOST_TXFIFO_dbg_head_pt0                            (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_TXFIFO<<BUS_STARTBIT) + 0x0005)
#define HOST_TXFIFO_dbg_tx_tail_pt4                         (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_TXFIFO<<BUS_STARTBIT) + 0x0004)
#define HOST_TXFIFO_dbg_tx_tail_pt3                         (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_TXFIFO<<BUS_STARTBIT) + 0x0003)
#define HOST_TXFIFO_dbg_tx_tail_pt2                         (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_TXFIFO<<BUS_STARTBIT) + 0x0002)
#define HOST_TXFIFO_dbg_tx_tail_pt1                         (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_TXFIFO<<BUS_STARTBIT) + 0x0001)
#define HOST_TXFIFO_dbg_tx_tail_pt0                         (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_TXFIFO<<BUS_STARTBIT) + 0x0000)
//RAMIF
#define HOST_RAMIF_dbg_sata_txfifo_empty                    (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_RAMIF<<BUS_STARTBIT) + 0x000F)
#define HOST_RAMIF_dbg_sata_rxfifo_empty                    (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_RAMIF<<BUS_STARTBIT) + 0x000E)
#define HOST_RAMIF_hif_qf_cmd_val                           (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_RAMIF<<BUS_STARTBIT) + 0x0008)
#define HOST_RAMIF_hif_ram_eop                              (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_RAMIF<<BUS_STARTBIT) + 0x0006)
#define HOST_RAMIF_hif_ram_rsp_ack                          (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_RAMIF<<BUS_STARTBIT) + 0x0005)
#define HOST_RAMIF_hif_ram_cmd_val                          (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_RAMIF<<BUS_STARTBIT) + 0x0004)
#define HOST_RAMIF_ram_hif_rsp_eop                          (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_RAMIF<<BUS_STARTBIT) + 0x0002)
#define HOST_RAMIF_ram_hif_cmd_ack                          (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_RAMIF<<BUS_STARTBIT) + 0x0001)
#define HOST_RAMIF_ram_hif_rsp_val                          (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_RAMIF<<BUS_STARTBIT) + 0x0000)
//CSS
#define HOST_CSS_dbg_css_real_start                         (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_CSS<<BUS_STARTBIT) + 0x000F)
#define HOST_CSS_dbg_css_scrambler_done                     (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_CSS<<BUS_STARTBIT) + 0x000E)
#define HOST_CSS_dbg_css_sym_cnt13                          (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_CSS<<BUS_STARTBIT) + 0x000D)
#define HOST_CSS_dbg_css_sym_cnt12                          (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_CSS<<BUS_STARTBIT) + 0x000C)
#define HOST_CSS_dbg_css_sym_cnt11                          (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_CSS<<BUS_STARTBIT) + 0x000B)
#define HOST_CSS_dbg_css_sym_cnt10                          (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_CSS<<BUS_STARTBIT) + 0x000A)
#define HOST_CSS_dbg_css_sym_cnt9                           (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_CSS<<BUS_STARTBIT) + 0x0009)
#define HOST_CSS_dbg_css_sym_cnt8                           (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_CSS<<BUS_STARTBIT) + 0x0008)
#define HOST_CSS_dbg_css_sym_cnt7                           (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_CSS<<BUS_STARTBIT) + 0x0007)
#define HOST_CSS_dbg_css_sym_cnt6                           (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_CSS<<BUS_STARTBIT) + 0x0006)
#define HOST_CSS_dbg_css_sym_cnt5                           (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_CSS<<BUS_STARTBIT) + 0x0005)
#define HOST_CSS_dbg_css_sym_cnt4                           (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_CSS<<BUS_STARTBIT) + 0x0004)
#define HOST_CSS_dbg_css_sym_cnt3                           (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_CSS<<BUS_STARTBIT) + 0x0003)
#define HOST_CSS_dbg_css_sym_cnt2                           (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_CSS<<BUS_STARTBIT) + 0x0002)
#define HOST_CSS_dbg_css_sym_cnt1                           (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_CSS<<BUS_STARTBIT) + 0x0001)
#define HOST_CSS_dbg_css_sym_cnt0                           (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_CSS<<BUS_STARTBIT) + 0x0000)
//AES
#define HOST_AES_dbg_aes32_15                               (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_AES<<BUS_STARTBIT) + 0x000F)
#define HOST_AES_dbg_aes32_14                               (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_AES<<BUS_STARTBIT) + 0x000E)
#define HOST_AES_dbg_aes32_13                               (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_AES<<BUS_STARTBIT) + 0x000D)
#define HOST_AES_dbg_aes32_12                               (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_AES<<BUS_STARTBIT) + 0x000C)
#define HOST_AES_dbg_aes32_11                               (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_AES<<BUS_STARTBIT) + 0x000B)
#define HOST_AES_dbg_aes32_10                               (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_AES<<BUS_STARTBIT) + 0x000A)
#define HOST_AES_dbg_aes32_9                                (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_AES<<BUS_STARTBIT) + 0x0009)
#define HOST_AES_dbg_aes32_8                                (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_AES<<BUS_STARTBIT) + 0x0008)
#define HOST_AES_dbg_aes32_7                                (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_AES<<BUS_STARTBIT) + 0x0007)
#define HOST_AES_dbg_aes32_6                                (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_AES<<BUS_STARTBIT) + 0x0006)
#define HOST_AES_dbg_aes32_5                                (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_AES<<BUS_STARTBIT) + 0x0005)
#define HOST_AES_dbg_aes32_4                                (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_AES<<BUS_STARTBIT) + 0x0004)
#define HOST_AES_dbg_aes32_3                                (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_AES<<BUS_STARTBIT) + 0x0003)
#define HOST_AES_dbg_aes32_2                                (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_AES<<BUS_STARTBIT) + 0x0002)
#define HOST_AES_dbg_aes32_1                                (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_AES<<BUS_STARTBIT) + 0x0001)
#define HOST_AES_dbg_aes32_0                                (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_AES<<BUS_STARTBIT) + 0x0000)
//KBE
#define HOST_KBE_dbg_aes32_31                               (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_KBE<<BUS_STARTBIT) + 0x000F)
#define HOST_KBE_dbg_aes32_30                               (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_KBE<<BUS_STARTBIT) + 0x000E)
#define HOST_KBE_dbg_aes32_29                               (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_KBE<<BUS_STARTBIT) + 0x000D)
#define HOST_KBE_dbg_aes32_28                               (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_KBE<<BUS_STARTBIT) + 0x000C)
#define HOST_KBE_dbg_aes32_27                               (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_KBE<<BUS_STARTBIT) + 0x000B)
#define HOST_KBE_dbg_aes32_26                               (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_KBE<<BUS_STARTBIT) + 0x000A)
#define HOST_KBE_dbg_aes32_25                               (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_KBE<<BUS_STARTBIT) + 0x0009)
#define HOST_KBE_dbg_aes32_24                               (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_KBE<<BUS_STARTBIT) + 0x0008)
#define HOST_KBE_dbg_aes32_23                               (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_KBE<<BUS_STARTBIT) + 0x0007)
#define HOST_KBE_dbg_aes32_22                               (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_KBE<<BUS_STARTBIT) + 0x0006)
#define HOST_KBE_dbg_aes32_21                               (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_KBE<<BUS_STARTBIT) + 0x0005)
#define HOST_KBE_dbg_aes32_20                               (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_KBE<<BUS_STARTBIT) + 0x0004)
#define HOST_KBE_dbg_aes32_19                               (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_KBE<<BUS_STARTBIT) + 0x0003)
#define HOST_KBE_dbg_aes32_18                               (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_KBE<<BUS_STARTBIT) + 0x0002)
#define HOST_KBE_dbg_aes32_17                               (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_KBE<<BUS_STARTBIT) + 0x0001)
#define HOST_KBE_dbg_aes32_16                               (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_KBE<<BUS_STARTBIT) + 0x0000)
//BEFBUS0
#define HOST_BEFBUS0_dbg_bef32_15                           (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_BEFBUS0<<BUS_STARTBIT) + 0x000F)
#define HOST_BEFBUS0_dbg_bef32_14                           (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_BEFBUS0<<BUS_STARTBIT) + 0x000E)
#define HOST_BEFBUS0_dbg_bef32_13                           (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_BEFBUS0<<BUS_STARTBIT) + 0x000D)
#define HOST_BEFBUS0_dbg_bef32_12                           (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_BEFBUS0<<BUS_STARTBIT) + 0x000C)
#define HOST_BEFBUS0_dbg_bef32_11                           (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_BEFBUS0<<BUS_STARTBIT) + 0x000B)
#define HOST_BEFBUS0_dbg_bef32_10                           (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_BEFBUS0<<BUS_STARTBIT) + 0x000A)
#define HOST_BEFBUS0_dbg_bef32_9                            (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_BEFBUS0<<BUS_STARTBIT) + 0x0009)
#define HOST_BEFBUS0_dbg_bef32_8                            (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_BEFBUS0<<BUS_STARTBIT) + 0x0008)
#define HOST_BEFBUS0_dbg_bef32_7                            (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_BEFBUS0<<BUS_STARTBIT) + 0x0007)
#define HOST_BEFBUS0_dbg_bef32_6                            (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_BEFBUS0<<BUS_STARTBIT) + 0x0006)
#define HOST_BEFBUS0_dbg_bef32_5                            (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_BEFBUS0<<BUS_STARTBIT) + 0x0005)
#define HOST_BEFBUS0_dbg_bef32_4                            (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_BEFBUS0<<BUS_STARTBIT) + 0x0004)
#define HOST_BEFBUS0_dbg_bef32_3                            (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_BEFBUS0<<BUS_STARTBIT) + 0x0003)
#define HOST_BEFBUS0_dbg_bef32_2                            (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_BEFBUS0<<BUS_STARTBIT) + 0x0002)
#define HOST_BEFBUS0_dbg_bef32_1                            (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_BEFBUS0<<BUS_STARTBIT) + 0x0001)
#define HOST_BEFBUS0_dbg_bef32_0                            (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_BEFBUS0<<BUS_STARTBIT) + 0x0000)
//BEFBUS1
#define HOST_BEFBUS1_dbg_bef32_31                           (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_BEFBUS1<<BUS_STARTBIT) + 0x000F)
#define HOST_BEFBUS1_dbg_bef32_30                           (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_BEFBUS1<<BUS_STARTBIT) + 0x000E)
#define HOST_BEFBUS1_dbg_bef32_29                           (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_BEFBUS1<<BUS_STARTBIT) + 0x000D)
#define HOST_BEFBUS1_dbg_bef32_28                           (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_BEFBUS1<<BUS_STARTBIT) + 0x000C)
#define HOST_BEFBUS1_dbg_bef32_27                           (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_BEFBUS1<<BUS_STARTBIT) + 0x000B)
#define HOST_BEFBUS1_dbg_bef32_26                           (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_BEFBUS1<<BUS_STARTBIT) + 0x000A)
#define HOST_BEFBUS1_dbg_bef32_25                           (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_BEFBUS1<<BUS_STARTBIT) + 0x0009)
#define HOST_BEFBUS1_dbg_bef32_24                           (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_BEFBUS1<<BUS_STARTBIT) + 0x0008)
#define HOST_BEFBUS1_dbg_bef32_23                           (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_BEFBUS1<<BUS_STARTBIT) + 0x0007)
#define HOST_BEFBUS1_dbg_bef32_22                           (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_BEFBUS1<<BUS_STARTBIT) + 0x0006)
#define HOST_BEFBUS1_dbg_bef32_21                           (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_BEFBUS1<<BUS_STARTBIT) + 0x0005)
#define HOST_BEFBUS1_dbg_bef32_20                           (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_BEFBUS1<<BUS_STARTBIT) + 0x0004)
#define HOST_BEFBUS1_dbg_bef32_19                           (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_BEFBUS1<<BUS_STARTBIT) + 0x0003)
#define HOST_BEFBUS1_dbg_bef32_18                           (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_BEFBUS1<<BUS_STARTBIT) + 0x0002)
#define HOST_BEFBUS1_dbg_bef32_17                           (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_BEFBUS1<<BUS_STARTBIT) + 0x0001)
#define HOST_BEFBUS1_dbg_bef32_16                           (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_BEFBUS1<<BUS_STARTBIT) + 0x0000)
//PM_PHYSM
#define HOST_PM_PHYSM_dbg_sata_phyrdy                       (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_PM_PHYSM<<BUS_STARTBIT) + 0x000F)
#define HOST_PM_PHYSM_dbg_sata_linkrdy                      (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_PM_PHYSM<<BUS_STARTBIT) + 0x000E)
#define HOST_PM_PHYSM_dbg_tx_comwake                        (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_PM_PHYSM<<BUS_STARTBIT) + 0x000D)
#define HOST_PM_PHYSM_dbg_tx_cominit                        (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_PM_PHYSM<<BUS_STARTBIT) + 0x000C)
#define HOST_PM_PHYSM_dbg_sata_comreset_n                   (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_PM_PHYSM<<BUS_STARTBIT) + 0x000B)
#define HOST_PM_PHYSM_dbg_phy_cr                            (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_PM_PHYSM<<BUS_STARTBIT) + 0x000A)
#define HOST_PM_PHYSM_dbg_phy_cw                            (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_PM_PHYSM<<BUS_STARTBIT) + 0x0009)
#define HOST_PM_PHYSM_dbg_oob_state4                        (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_PM_PHYSM<<BUS_STARTBIT) + 0x0008)
#define HOST_PM_PHYSM_dbg_oob_state3                        (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_PM_PHYSM<<BUS_STARTBIT) + 0x0007)
#define HOST_PM_PHYSM_dbg_oob_state2                        (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_PM_PHYSM<<BUS_STARTBIT) + 0x0006)
#define HOST_PM_PHYSM_dbg_oob_state1                        (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_PM_PHYSM<<BUS_STARTBIT) + 0x0005)
#define HOST_PM_PHYSM_dbg_oob_state0                        (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_PM_PHYSM<<BUS_STARTBIT) + 0x0004)
#define HOST_PM_PHYSM_dbg_pm_state3                         (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_PM_PHYSM<<BUS_STARTBIT) + 0x0003)
#define HOST_PM_PHYSM_dbg_pm_state2                         (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_PM_PHYSM<<BUS_STARTBIT) + 0x0002)
#define HOST_PM_PHYSM_dbg_pm_state1                         (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_PM_PHYSM<<BUS_STARTBIT) + 0x0001)
#define HOST_PM_PHYSM_dbg_pm_state0                         (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_PM_PHYSM<<BUS_STARTBIT) + 0x0000)
//PM_MANUAL
#define HOST_PM_MANUAL_dbg_dcsm5                            (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_PM_MANUAL<<BUS_STARTBIT) + 0x000F)
#define HOST_PM_MANUAL_dbg_dcsm4                            (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_PM_MANUAL<<BUS_STARTBIT) + 0x000E)
#define HOST_PM_MANUAL_dbg_dcsm3                            (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_PM_MANUAL<<BUS_STARTBIT) + 0x000D)
#define HOST_PM_MANUAL_dbg_dcsm2                            (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_PM_MANUAL<<BUS_STARTBIT) + 0x000C)
#define HOST_PM_MANUAL_dbg_dcsm1                            (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_PM_MANUAL<<BUS_STARTBIT) + 0x000B)
#define HOST_PM_MANUAL_dbg_dcsm0                            (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_PM_MANUAL<<BUS_STARTBIT) + 0x000A)
#define HOST_PM_MANUAL_dbg_busidle_p                        (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_PM_MANUAL<<BUS_STARTBIT) + 0x0009)
#define HOST_PM_MANUAL_dbg_busidle_s                        (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_PM_MANUAL<<BUS_STARTBIT) + 0x0008)
#define HOST_PM_MANUAL_dbg_r0_pmack                         (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_PM_MANUAL<<BUS_STARTBIT) + 0x0007)
#define HOST_PM_MANUAL_dbg_r0_pmnak                         (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_PM_MANUAL<<BUS_STARTBIT) + 0x0006)
#define HOST_PM_MANUAL_dbg_rxpmreq_p                        (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_PM_MANUAL<<BUS_STARTBIT) + 0x0005)
#define HOST_PM_MANUAL_dbg_rxpmreq_s                        (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_PM_MANUAL<<BUS_STARTBIT) + 0x0004)
#define HOST_PM_MANUAL_dbg_rxwkupreq                        (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_PM_MANUAL<<BUS_STARTBIT) + 0x0003)
#define HOST_PM_MANUAL_dbg_txreq_partialreq                 (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_PM_MANUAL<<BUS_STARTBIT) + 0x0002)
#define HOST_PM_MANUAL_dbg_txreq_slumberreq                 (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_PM_MANUAL<<BUS_STARTBIT) + 0x0001)
#define HOST_PM_MANUAL_dbg_txreq_wakeupreq                  (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_PM_MANUAL<<BUS_STARTBIT) + 0x0000)
//PM_AUTO
#define HOST_PM_AUTO_b0                                     (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_PM_AUTO<<BUS_STARTBIT) + 0x000F)
#define HOST_PM_AUTO_dbg_pmidlecnt_en                       (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_PM_AUTO<<BUS_STARTBIT) + 0x000E)
#define HOST_PM_AUTO_dbg_pmidlecnt_dis                      (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_PM_AUTO<<BUS_STARTBIT) + 0x000D)
#define HOST_PM_AUTO_dbg_sm_idle                            (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_PM_AUTO<<BUS_STARTBIT) + 0x000C)
#define HOST_PM_AUTO_dbg_busidle_p                          (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_PM_AUTO<<BUS_STARTBIT) + 0x000B)
#define HOST_PM_AUTO_dbg_busidle_s                          (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_PM_AUTO<<BUS_STARTBIT) + 0x000A)
#define HOST_PM_AUTO_dbg_partialreq_auto                    (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_PM_AUTO<<BUS_STARTBIT) + 0x0009)
#define HOST_PM_AUTO_dbg_slumberreq_auto                    (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_PM_AUTO<<BUS_STARTBIT) + 0x0008)
#define HOST_PM_AUTO_dbg_wakeupreq_auto                     (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_PM_AUTO<<BUS_STARTBIT) + 0x0007)
#define HOST_PM_AUTO_dbg_atrg_signal                        (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_PM_AUTO<<BUS_STARTBIT) + 0x0006)
#define HOST_PM_AUTO_dbg_partial_pwrdn                      (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_PM_AUTO<<BUS_STARTBIT) + 0x0005)
#define HOST_PM_AUTO_dbg_slumber_pwrdn                      (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_PM_AUTO<<BUS_STARTBIT) + 0x0004)
#define HOST_PM_AUTO_dbg_p2slumber                          (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_PM_AUTO<<BUS_STARTBIT) + 0x0003)
#define HOST_PM_AUTO_dbg_ps_confirm                         (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_PM_AUTO<<BUS_STARTBIT) + 0x0002)
#define HOST_PM_AUTO_dbg_dwclkon_auto                       (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_PM_AUTO<<BUS_STARTBIT) + 0x0001)
#define HOST_PM_AUTO_dbg_dwclkoff_auto                      (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_PM_AUTO<<BUS_STARTBIT) + 0x0000)
//RSV19
#define HOST_RSV19_dbg_bsm_state2                           (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_RSV19<<BUS_STARTBIT) + 0x000F)
#define HOST_RSV19_dbg_bsm_state1                           (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_RSV19<<BUS_STARTBIT) + 0x000E)
#define HOST_RSV19_dbg_bsm_state0                           (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_RSV19<<BUS_STARTBIT) + 0x000D)
#define HOST_RSV19_dbg_bist_t0_sof                          (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_RSV19<<BUS_STARTBIT) + 0x000C)
#define HOST_RSV19_dbg_bist_dtstrb                          (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_RSV19<<BUS_STARTBIT) + 0x000B)
#define HOST_RSV19_dbg_bistdone                             (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_RSV19<<BUS_STARTBIT) + 0x000A)
#define HOST_RSV19_dbg_bistOK                               (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_RSV19<<BUS_STARTBIT) + 0x0009)
#define HOST_RSV19_dbg_fbist_rdy                            (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_RSV19<<BUS_STARTBIT) + 0x0008)
#define HOST_RSV19_dbg_fbistL_flag                          (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_RSV19<<BUS_STARTBIT) + 0x0007)
#define HOST_RSV19_dbg_fbistT_flag                          (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_RSV19<<BUS_STARTBIT) + 0x0006)
#define HOST_RSV19_dbg_fbistL_esig                          (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_RSV19<<BUS_STARTBIT) + 0x0005)
#define HOST_RSV19_dbg_tsp_biston_mix                       (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_RSV19<<BUS_STARTBIT) + 0x0004)
#define HOST_RSV19_dbg_bist_errcnt3                         (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_RSV19<<BUS_STARTBIT) + 0x0003)
#define HOST_RSV19_dbg_bist_errcnt2                         (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_RSV19<<BUS_STARTBIT) + 0x0002)
#define HOST_RSV19_dbg_bist_errcnt1                         (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_RSV19<<BUS_STARTBIT) + 0x0001)
#define HOST_RSV19_dbg_bist_errcnt0                         (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_RSV19<<BUS_STARTBIT) + 0x0000)
//RXDE
#define HOST_RXDE_phy_hif_rxdo_valid                        (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_RXDE<<BUS_STARTBIT) + 0x001A)
#define HOST_RXDE_phy_hif_rxdo9                             (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_RXDE<<BUS_STARTBIT) + 0x0019)
#define HOST_RXDE_phy_hif_rxdo8                             (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_RXDE<<BUS_STARTBIT) + 0x0018)
#define HOST_RXDE_phy_hif_rxdo7                             (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_RXDE<<BUS_STARTBIT) + 0x0017)
#define HOST_RXDE_phy_hif_rxdo6                             (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_RXDE<<BUS_STARTBIT) + 0x0016)
#define HOST_RXDE_phy_hif_rxdo5                             (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_RXDE<<BUS_STARTBIT) + 0x0015)
#define HOST_RXDE_phy_hif_rxdo4                             (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_RXDE<<BUS_STARTBIT) + 0x0014)
#define HOST_RXDE_phy_hif_rxdo3                             (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_RXDE<<BUS_STARTBIT) + 0x0013)
#define HOST_RXDE_phy_hif_rxdo2                             (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_RXDE<<BUS_STARTBIT) + 0x0012)
#define HOST_RXDE_phy_hif_rxdo1                             (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_RXDE<<BUS_STARTBIT) + 0x0011)
#define HOST_RXDE_phy_hif_rxdo0                             (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_RXDE<<BUS_STARTBIT) + 0x0010)
#define HOST_RXDE_dbg_sata_phyrdy                           (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_RXDE<<BUS_STARTBIT) + 0x000F)
#define HOST_RXDE_dbg_sata_linkrdy                          (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_RXDE<<BUS_STARTBIT) + 0x000E)
#define HOST_RXDE_dbg_r0_eof                                (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_RXDE<<BUS_STARTBIT) + 0x000D)
#define HOST_RXDE_dbg_r0_sof                                (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_RXDE<<BUS_STARTBIT) + 0x000C)
#define HOST_RXDE_dbg_rx_eof_extand                         (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_RXDE<<BUS_STARTBIT) + 0x000B)
#define HOST_RXDE_phy_hif_rxde_valid                        (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_RXDE<<BUS_STARTBIT) + 0x000A)
#define HOST_RXDE_phy_hif_rxde9                             (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_RXDE<<BUS_STARTBIT) + 0x0009)
#define HOST_RXDE_phy_hif_rxde8                             (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_RXDE<<BUS_STARTBIT) + 0x0008)
#define HOST_RXDE_phy_hif_rxde7                             (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_RXDE<<BUS_STARTBIT) + 0x0007)
#define HOST_RXDE_phy_hif_rxde6                             (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_RXDE<<BUS_STARTBIT) + 0x0006)
#define HOST_RXDE_phy_hif_rxde5                             (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_RXDE<<BUS_STARTBIT) + 0x0005)
#define HOST_RXDE_phy_hif_rxde4                             (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_RXDE<<BUS_STARTBIT) + 0x0004)
#define HOST_RXDE_phy_hif_rxde3                             (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_RXDE<<BUS_STARTBIT) + 0x0003)
#define HOST_RXDE_phy_hif_rxde2                             (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_RXDE<<BUS_STARTBIT) + 0x0002)
#define HOST_RXDE_phy_hif_rxde1                             (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_RXDE<<BUS_STARTBIT) + 0x0001)
#define HOST_RXDE_phy_hif_rxde0                             (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_RXDE<<BUS_STARTBIT) + 0x0000)
//TXDE
#define HOST_TXDE_dbg_tx_fis_ok                             (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_TXDE<<BUS_STARTBIT) + 0x001F)
#define HOST_TXDE_dbg_tx_fis_err                            (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_TXDE<<BUS_STARTBIT) + 0x001E)
#define HOST_TXDE_dbg_rx_fis_ok                             (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_TXDE<<BUS_STARTBIT) + 0x001D)
#define HOST_TXDE_dbg_rx_fis_err                            (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_TXDE<<BUS_STARTBIT) + 0x001C)
#define HOST_TXDE_phy_dbg_t0_txrok                          (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_TXDE<<BUS_STARTBIT) + 0x001B)
#define HOST_TXDE_dbg_lnk_tx_fis                            (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_TXDE<<BUS_STARTBIT) + 0x001A)
#define HOST_TXDE_hif_phy_txde9                             (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_TXDE<<BUS_STARTBIT) + 0x0019)
#define HOST_TXDE_hif_phy_txde8                             (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_TXDE<<BUS_STARTBIT) + 0x0018)
#define HOST_TXDE_hif_phy_txde7                             (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_TXDE<<BUS_STARTBIT) + 0x0017)
#define HOST_TXDE_hif_phy_txde6                             (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_TXDE<<BUS_STARTBIT) + 0x0016)
#define HOST_TXDE_hif_phy_txde5                             (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_TXDE<<BUS_STARTBIT) + 0x0015)
#define HOST_TXDE_hif_phy_txde4                             (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_TXDE<<BUS_STARTBIT) + 0x0014)
#define HOST_TXDE_hif_phy_txde3                             (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_TXDE<<BUS_STARTBIT) + 0x0013)
#define HOST_TXDE_hif_phy_txde2                             (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_TXDE<<BUS_STARTBIT) + 0x0012)
#define HOST_TXDE_hif_phy_txde1                             (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_TXDE<<BUS_STARTBIT) + 0x0011)
#define HOST_TXDE_hif_phy_txde0                             (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_TXDE<<BUS_STARTBIT) + 0x0010)
#define HOST_TXDE_dbg_txreq_wakeupreq                       (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_TXDE<<BUS_STARTBIT) + 0x000F)
#define HOST_TXDE_dbg_t0_srst                               (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_TXDE<<BUS_STARTBIT) + 0x000E)
#define HOST_TXDE_dbg_t0_txndatafislat                      (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_TXDE<<BUS_STARTBIT) + 0x000D)
#define HOST_TXDE_dbg_tx_ndatafis                           (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_TXDE<<BUS_STARTBIT) + 0x000C)
#define HOST_TXDE_dbg_tx_datafis                            (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_TXDE<<BUS_STARTBIT) + 0x000B)
#define HOST_TXDE_hif_phy_tbc20                             (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_TXDE<<BUS_STARTBIT) + 0x000A)
#define HOST_TXDE_hif_phy_txdo9                             (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_TXDE<<BUS_STARTBIT) + 0x0009)
#define HOST_TXDE_hif_phy_txdo8                             (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_TXDE<<BUS_STARTBIT) + 0x0008)
#define HOST_TXDE_hif_phy_txdo7                             (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_TXDE<<BUS_STARTBIT) + 0x0007)
#define HOST_TXDE_hif_phy_txdo6                             (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_TXDE<<BUS_STARTBIT) + 0x0006)
#define HOST_TXDE_hif_phy_txdo5                             (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_TXDE<<BUS_STARTBIT) + 0x0005)
#define HOST_TXDE_hif_phy_txdo4                             (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_TXDE<<BUS_STARTBIT) + 0x0004)
#define HOST_TXDE_hif_phy_txdo3                             (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_TXDE<<BUS_STARTBIT) + 0x0003)
#define HOST_TXDE_hif_phy_txdo2                             (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_TXDE<<BUS_STARTBIT) + 0x0002)
#define HOST_TXDE_hif_phy_txdo1                             (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_TXDE<<BUS_STARTBIT) + 0x0001)
#define HOST_TXDE_hif_phy_txdo0                             (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_TXDE<<BUS_STARTBIT) + 0x0000)
//RXD32
#define HOST_RXD32_dbg_rxd32_31                             (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_RXD32<<BUS_STARTBIT) + 0x001F)
#define HOST_RXD32_dbg_rxd32_30                             (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_RXD32<<BUS_STARTBIT) + 0x001E)
#define HOST_RXD32_dbg_rxd32_29                             (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_RXD32<<BUS_STARTBIT) + 0x001D)
#define HOST_RXD32_dbg_rxd32_28                             (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_RXD32<<BUS_STARTBIT) + 0x001C)
#define HOST_RXD32_dbg_rxd32_27                             (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_RXD32<<BUS_STARTBIT) + 0x001B)
#define HOST_RXD32_dbg_rxd32_26                             (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_RXD32<<BUS_STARTBIT) + 0x001A)
#define HOST_RXD32_dbg_rxd32_25                             (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_RXD32<<BUS_STARTBIT) + 0x0019)
#define HOST_RXD32_dbg_rxd32_24                             (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_RXD32<<BUS_STARTBIT) + 0x0018)
#define HOST_RXD32_dbg_rxd32_23                             (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_RXD32<<BUS_STARTBIT) + 0x0017)
#define HOST_RXD32_dbg_rxd32_22                             (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_RXD32<<BUS_STARTBIT) + 0x0016)
#define HOST_RXD32_dbg_rxd32_21                             (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_RXD32<<BUS_STARTBIT) + 0x0015)
#define HOST_RXD32_dbg_rxd32_20                             (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_RXD32<<BUS_STARTBIT) + 0x0014)
#define HOST_RXD32_dbg_rxd32_19                             (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_RXD32<<BUS_STARTBIT) + 0x0013)
#define HOST_RXD32_dbg_rxd32_18                             (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_RXD32<<BUS_STARTBIT) + 0x0012)
#define HOST_RXD32_dbg_rxd32_17                             (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_RXD32<<BUS_STARTBIT) + 0x0011)
#define HOST_RXD32_dbg_rxd32_16                             (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_RXD32<<BUS_STARTBIT) + 0x0010)
#define HOST_RXD32_dbg_rxd32_15                             (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_RXD32<<BUS_STARTBIT) + 0x000F)
#define HOST_RXD32_dbg_rxd32_14                             (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_RXD32<<BUS_STARTBIT) + 0x000E)
#define HOST_RXD32_dbg_rxd32_13                             (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_RXD32<<BUS_STARTBIT) + 0x000D)
#define HOST_RXD32_dbg_rxd32_12                             (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_RXD32<<BUS_STARTBIT) + 0x000C)
#define HOST_RXD32_dbg_rxd32_11                             (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_RXD32<<BUS_STARTBIT) + 0x000B)
#define HOST_RXD32_dbg_rxd32_10                             (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_RXD32<<BUS_STARTBIT) + 0x000A)
#define HOST_RXD32_dbg_rxd32_9                              (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_RXD32<<BUS_STARTBIT) + 0x0009)
#define HOST_RXD32_dbg_rxd32_8                              (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_RXD32<<BUS_STARTBIT) + 0x0008)
#define HOST_RXD32_dbg_rxd32_7                              (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_RXD32<<BUS_STARTBIT) + 0x0007)
#define HOST_RXD32_dbg_rxd32_6                              (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_RXD32<<BUS_STARTBIT) + 0x0006)
#define HOST_RXD32_dbg_rxd32_5                              (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_RXD32<<BUS_STARTBIT) + 0x0005)
#define HOST_RXD32_dbg_rxd32_4                              (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_RXD32<<BUS_STARTBIT) + 0x0004)
#define HOST_RXD32_dbg_rxd32_3                              (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_RXD32<<BUS_STARTBIT) + 0x0003)
#define HOST_RXD32_dbg_rxd32_2                              (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_RXD32<<BUS_STARTBIT) + 0x0002)
#define HOST_RXD32_dbg_rxd32_1                              (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_RXD32<<BUS_STARTBIT) + 0x0001)
#define HOST_RXD32_dbg_rxd32_0                              (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_RXD32<<BUS_STARTBIT) + 0x0000)
//TXD32
#define HOST_TXD32_dbg_txd32_31                             (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_TXD32<<BUS_STARTBIT) + 0x001F)
#define HOST_TXD32_dbg_txd32_30                             (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_TXD32<<BUS_STARTBIT) + 0x001E)
#define HOST_TXD32_dbg_txd32_29                             (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_TXD32<<BUS_STARTBIT) + 0x001D)
#define HOST_TXD32_dbg_txd32_28                             (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_TXD32<<BUS_STARTBIT) + 0x001C)
#define HOST_TXD32_dbg_txd32_27                             (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_TXD32<<BUS_STARTBIT) + 0x001B)
#define HOST_TXD32_dbg_txd32_26                             (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_TXD32<<BUS_STARTBIT) + 0x001A)
#define HOST_TXD32_dbg_txd32_25                             (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_TXD32<<BUS_STARTBIT) + 0x0019)
#define HOST_TXD32_dbg_txd32_24                             (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_TXD32<<BUS_STARTBIT) + 0x0018)
#define HOST_TXD32_dbg_txd32_23                             (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_TXD32<<BUS_STARTBIT) + 0x0017)
#define HOST_TXD32_dbg_txd32_22                             (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_TXD32<<BUS_STARTBIT) + 0x0016)
#define HOST_TXD32_dbg_txd32_21                             (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_TXD32<<BUS_STARTBIT) + 0x0015)
#define HOST_TXD32_dbg_txd32_20                             (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_TXD32<<BUS_STARTBIT) + 0x0014)
#define HOST_TXD32_dbg_txd32_19                             (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_TXD32<<BUS_STARTBIT) + 0x0013)
#define HOST_TXD32_dbg_txd32_18                             (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_TXD32<<BUS_STARTBIT) + 0x0012)
#define HOST_TXD32_dbg_txd32_17                             (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_TXD32<<BUS_STARTBIT) + 0x0011)
#define HOST_TXD32_dbg_txd32_16                             (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_TXD32<<BUS_STARTBIT) + 0x0010)
#define HOST_TXD32_dbg_txd32_15                             (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_TXD32<<BUS_STARTBIT) + 0x000F)
#define HOST_TXD32_dbg_txd32_14                             (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_TXD32<<BUS_STARTBIT) + 0x000E)
#define HOST_TXD32_dbg_txd32_13                             (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_TXD32<<BUS_STARTBIT) + 0x000D)
#define HOST_TXD32_dbg_txd32_12                             (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_TXD32<<BUS_STARTBIT) + 0x000C)
#define HOST_TXD32_dbg_txd32_11                             (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_TXD32<<BUS_STARTBIT) + 0x000B)
#define HOST_TXD32_dbg_txd32_10                             (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_TXD32<<BUS_STARTBIT) + 0x000A)
#define HOST_TXD32_dbg_txd32_9                              (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_TXD32<<BUS_STARTBIT) + 0x0009)
#define HOST_TXD32_dbg_txd32_8                              (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_TXD32<<BUS_STARTBIT) + 0x0008)
#define HOST_TXD32_dbg_txd32_7                              (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_TXD32<<BUS_STARTBIT) + 0x0007)
#define HOST_TXD32_dbg_txd32_6                              (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_TXD32<<BUS_STARTBIT) + 0x0006)
#define HOST_TXD32_dbg_txd32_5                              (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_TXD32<<BUS_STARTBIT) + 0x0005)
#define HOST_TXD32_dbg_txd32_4                              (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_TXD32<<BUS_STARTBIT) + 0x0004)
#define HOST_TXD32_dbg_txd32_3                              (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_TXD32<<BUS_STARTBIT) + 0x0003)
#define HOST_TXD32_dbg_txd32_2                              (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_TXD32<<BUS_STARTBIT) + 0x0002)
#define HOST_TXD32_dbg_txd32_1                              (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_TXD32<<BUS_STARTBIT) + 0x0001)
#define HOST_TXD32_dbg_txd32_0                              (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_TXD32<<BUS_STARTBIT) + 0x0000)
//RAMRL
#define HOST_RAMRL_ram_hif_rdata_31                         (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_RAMRL<<BUS_STARTBIT) + 0x001F)
#define HOST_RAMRL_ram_hif_rdata_30                         (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_RAMRL<<BUS_STARTBIT) + 0x001E)
#define HOST_RAMRL_ram_hif_rdata_29                         (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_RAMRL<<BUS_STARTBIT) + 0x001D)
#define HOST_RAMRL_ram_hif_rdata_28                         (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_RAMRL<<BUS_STARTBIT) + 0x001C)
#define HOST_RAMRL_ram_hif_rdata_27                         (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_RAMRL<<BUS_STARTBIT) + 0x001B)
#define HOST_RAMRL_ram_hif_rdata_26                         (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_RAMRL<<BUS_STARTBIT) + 0x001A)
#define HOST_RAMRL_ram_hif_rdata_25                         (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_RAMRL<<BUS_STARTBIT) + 0x0019)
#define HOST_RAMRL_ram_hif_rdata_24                         (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_RAMRL<<BUS_STARTBIT) + 0x0018)
#define HOST_RAMRL_ram_hif_rdata_23                         (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_RAMRL<<BUS_STARTBIT) + 0x0017)
#define HOST_RAMRL_ram_hif_rdata_22                         (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_RAMRL<<BUS_STARTBIT) + 0x0016)
#define HOST_RAMRL_ram_hif_rdata_21                         (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_RAMRL<<BUS_STARTBIT) + 0x0015)
#define HOST_RAMRL_ram_hif_rdata_20                         (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_RAMRL<<BUS_STARTBIT) + 0x0014)
#define HOST_RAMRL_ram_hif_rdata_19                         (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_RAMRL<<BUS_STARTBIT) + 0x0013)
#define HOST_RAMRL_ram_hif_rdata_18                         (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_RAMRL<<BUS_STARTBIT) + 0x0012)
#define HOST_RAMRL_ram_hif_rdata_17                         (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_RAMRL<<BUS_STARTBIT) + 0x0011)
#define HOST_RAMRL_ram_hif_rdata_16                         (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_RAMRL<<BUS_STARTBIT) + 0x0010)
#define HOST_RAMRL_ram_hif_rdata_15                         (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_RAMRL<<BUS_STARTBIT) + 0x000F)
#define HOST_RAMRL_ram_hif_rdata_14                         (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_RAMRL<<BUS_STARTBIT) + 0x000E)
#define HOST_RAMRL_ram_hif_rdata_13                         (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_RAMRL<<BUS_STARTBIT) + 0x000D)
#define HOST_RAMRL_ram_hif_rdata_12                         (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_RAMRL<<BUS_STARTBIT) + 0x000C)
#define HOST_RAMRL_ram_hif_rdata_11                         (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_RAMRL<<BUS_STARTBIT) + 0x000B)
#define HOST_RAMRL_ram_hif_rdata_10                         (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_RAMRL<<BUS_STARTBIT) + 0x000A)
#define HOST_RAMRL_ram_hif_rdata_9                          (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_RAMRL<<BUS_STARTBIT) + 0x0009)
#define HOST_RAMRL_ram_hif_rdata_8                          (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_RAMRL<<BUS_STARTBIT) + 0x0008)
#define HOST_RAMRL_ram_hif_rdata_7                          (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_RAMRL<<BUS_STARTBIT) + 0x0007)
#define HOST_RAMRL_ram_hif_rdata_6                          (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_RAMRL<<BUS_STARTBIT) + 0x0006)
#define HOST_RAMRL_ram_hif_rdata_5                          (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_RAMRL<<BUS_STARTBIT) + 0x0005)
#define HOST_RAMRL_ram_hif_rdata_4                          (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_RAMRL<<BUS_STARTBIT) + 0x0004)
#define HOST_RAMRL_ram_hif_rdata_3                          (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_RAMRL<<BUS_STARTBIT) + 0x0003)
#define HOST_RAMRL_ram_hif_rdata_2                          (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_RAMRL<<BUS_STARTBIT) + 0x0002)
#define HOST_RAMRL_ram_hif_rdata_1                          (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_RAMRL<<BUS_STARTBIT) + 0x0001)
#define HOST_RAMRL_ram_hif_rdata_0                          (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_RAMRL<<BUS_STARTBIT) + 0x0000)
//RAMWL
#define HOST_RAMWL_ram_hif_wdata_31                         (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_RAMWL<<BUS_STARTBIT) + 0x001F)
#define HOST_RAMWL_ram_hif_wdata_30                         (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_RAMWL<<BUS_STARTBIT) + 0x001E)
#define HOST_RAMWL_ram_hif_wdata_29                         (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_RAMWL<<BUS_STARTBIT) + 0x001D)
#define HOST_RAMWL_ram_hif_wdata_28                         (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_RAMWL<<BUS_STARTBIT) + 0x001C)
#define HOST_RAMWL_ram_hif_wdata_27                         (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_RAMWL<<BUS_STARTBIT) + 0x001B)
#define HOST_RAMWL_ram_hif_wdata_26                         (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_RAMWL<<BUS_STARTBIT) + 0x001A)
#define HOST_RAMWL_ram_hif_wdata_25                         (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_RAMWL<<BUS_STARTBIT) + 0x0019)
#define HOST_RAMWL_ram_hif_wdata_24                         (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_RAMWL<<BUS_STARTBIT) + 0x0018)
#define HOST_RAMWL_ram_hif_wdata_23                         (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_RAMWL<<BUS_STARTBIT) + 0x0017)
#define HOST_RAMWL_ram_hif_wdata_22                         (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_RAMWL<<BUS_STARTBIT) + 0x0016)
#define HOST_RAMWL_ram_hif_wdata_21                         (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_RAMWL<<BUS_STARTBIT) + 0x0015)
#define HOST_RAMWL_ram_hif_wdata_20                         (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_RAMWL<<BUS_STARTBIT) + 0x0014)
#define HOST_RAMWL_ram_hif_wdata_19                         (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_RAMWL<<BUS_STARTBIT) + 0x0013)
#define HOST_RAMWL_ram_hif_wdata_18                         (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_RAMWL<<BUS_STARTBIT) + 0x0012)
#define HOST_RAMWL_ram_hif_wdata_17                         (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_RAMWL<<BUS_STARTBIT) + 0x0011)
#define HOST_RAMWL_ram_hif_wdata_16                         (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_RAMWL<<BUS_STARTBIT) + 0x0010)
#define HOST_RAMWL_ram_hif_wdata_15                         (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_RAMWL<<BUS_STARTBIT) + 0x000F)
#define HOST_RAMWL_ram_hif_wdata_14                         (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_RAMWL<<BUS_STARTBIT) + 0x000E)
#define HOST_RAMWL_ram_hif_wdata_13                         (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_RAMWL<<BUS_STARTBIT) + 0x000D)
#define HOST_RAMWL_ram_hif_wdata_12                         (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_RAMWL<<BUS_STARTBIT) + 0x000C)
#define HOST_RAMWL_ram_hif_wdata_11                         (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_RAMWL<<BUS_STARTBIT) + 0x000B)
#define HOST_RAMWL_ram_hif_wdata_10                         (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_RAMWL<<BUS_STARTBIT) + 0x000A)
#define HOST_RAMWL_ram_hif_wdata_9                          (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_RAMWL<<BUS_STARTBIT) + 0x0009)
#define HOST_RAMWL_ram_hif_wdata_8                          (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_RAMWL<<BUS_STARTBIT) + 0x0008)
#define HOST_RAMWL_ram_hif_wdata_7                          (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_RAMWL<<BUS_STARTBIT) + 0x0007)
#define HOST_RAMWL_ram_hif_wdata_6                          (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_RAMWL<<BUS_STARTBIT) + 0x0006)
#define HOST_RAMWL_ram_hif_wdata_5                          (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_RAMWL<<BUS_STARTBIT) + 0x0005)
#define HOST_RAMWL_ram_hif_wdata_4                          (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_RAMWL<<BUS_STARTBIT) + 0x0004)
#define HOST_RAMWL_ram_hif_wdata_3                          (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_RAMWL<<BUS_STARTBIT) + 0x0003)
#define HOST_RAMWL_ram_hif_wdata_2                          (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_RAMWL<<BUS_STARTBIT) + 0x0002)
#define HOST_RAMWL_ram_hif_wdata_1                          (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_RAMWL<<BUS_STARTBIT) + 0x0001)
#define HOST_RAMWL_ram_hif_wdata_0                          (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_RAMWL<<BUS_STARTBIT) + 0x0000)
//CSSMASKL
#define HOST_CSSMASKL_dbg_css_mask_31                       (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_CSSMASKL<<BUS_STARTBIT) + 0x001F)
#define HOST_CSSMASKL_dbg_css_mask_30                       (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_CSSMASKL<<BUS_STARTBIT) + 0x001E)
#define HOST_CSSMASKL_dbg_css_mask_29                       (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_CSSMASKL<<BUS_STARTBIT) + 0x001D)
#define HOST_CSSMASKL_dbg_css_mask_28                       (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_CSSMASKL<<BUS_STARTBIT) + 0x001C)
#define HOST_CSSMASKL_dbg_css_mask_27                       (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_CSSMASKL<<BUS_STARTBIT) + 0x001B)
#define HOST_CSSMASKL_dbg_css_mask_26                       (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_CSSMASKL<<BUS_STARTBIT) + 0x001A)
#define HOST_CSSMASKL_dbg_css_mask_25                       (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_CSSMASKL<<BUS_STARTBIT) + 0x0019)
#define HOST_CSSMASKL_dbg_css_mask_24                       (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_CSSMASKL<<BUS_STARTBIT) + 0x0018)
#define HOST_CSSMASKL_dbg_css_mask_23                       (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_CSSMASKL<<BUS_STARTBIT) + 0x0017)
#define HOST_CSSMASKL_dbg_css_mask_22                       (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_CSSMASKL<<BUS_STARTBIT) + 0x0016)
#define HOST_CSSMASKL_dbg_css_mask_21                       (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_CSSMASKL<<BUS_STARTBIT) + 0x0015)
#define HOST_CSSMASKL_dbg_css_mask_20                       (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_CSSMASKL<<BUS_STARTBIT) + 0x0014)
#define HOST_CSSMASKL_dbg_css_mask_19                       (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_CSSMASKL<<BUS_STARTBIT) + 0x0013)
#define HOST_CSSMASKL_dbg_css_mask_18                       (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_CSSMASKL<<BUS_STARTBIT) + 0x0012)
#define HOST_CSSMASKL_dbg_css_mask_17                       (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_CSSMASKL<<BUS_STARTBIT) + 0x0011)
#define HOST_CSSMASKL_dbg_css_mask_16                       (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_CSSMASKL<<BUS_STARTBIT) + 0x0010)
#define HOST_CSSMASKL_dbg_css_mask_15                       (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_CSSMASKL<<BUS_STARTBIT) + 0x000F)
#define HOST_CSSMASKL_dbg_css_mask_14                       (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_CSSMASKL<<BUS_STARTBIT) + 0x000E)
#define HOST_CSSMASKL_dbg_css_mask_13                       (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_CSSMASKL<<BUS_STARTBIT) + 0x000D)
#define HOST_CSSMASKL_dbg_css_mask_12                       (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_CSSMASKL<<BUS_STARTBIT) + 0x000C)
#define HOST_CSSMASKL_dbg_css_mask_11                       (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_CSSMASKL<<BUS_STARTBIT) + 0x000B)
#define HOST_CSSMASKL_dbg_css_mask_10                       (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_CSSMASKL<<BUS_STARTBIT) + 0x000A)
#define HOST_CSSMASKL_dbg_css_mask_9                        (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_CSSMASKL<<BUS_STARTBIT) + 0x0009)
#define HOST_CSSMASKL_dbg_css_mask_8                        (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_CSSMASKL<<BUS_STARTBIT) + 0x0008)
#define HOST_CSSMASKL_dbg_css_mask_7                        (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_CSSMASKL<<BUS_STARTBIT) + 0x0007)
#define HOST_CSSMASKL_dbg_css_mask_6                        (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_CSSMASKL<<BUS_STARTBIT) + 0x0006)
#define HOST_CSSMASKL_dbg_css_mask_5                        (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_CSSMASKL<<BUS_STARTBIT) + 0x0005)
#define HOST_CSSMASKL_dbg_css_mask_4                        (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_CSSMASKL<<BUS_STARTBIT) + 0x0004)
#define HOST_CSSMASKL_dbg_css_mask_3                        (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_CSSMASKL<<BUS_STARTBIT) + 0x0003)
#define HOST_CSSMASKL_dbg_css_mask_2                        (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_CSSMASKL<<BUS_STARTBIT) + 0x0002)
#define HOST_CSSMASKL_dbg_css_mask_1                        (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_CSSMASKL<<BUS_STARTBIT) + 0x0001)
#define HOST_CSSMASKL_dbg_css_mask_0                        (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_CSSMASKL<<BUS_STARTBIT) + 0x0000)
//BISTTXDATAL
#define HOST_BISTTXDATAL_dbg_bist_txdata_out_31             (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_BISTTXDATAL <<BUS_STARTBIT) + 0x001F)
#define HOST_BISTTXDATAL_dbg_bist_txdata_out_30             (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_BISTTXDATAL <<BUS_STARTBIT) + 0x001E)
#define HOST_BISTTXDATAL_dbg_bist_txdata_out_29             (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_BISTTXDATAL <<BUS_STARTBIT) + 0x001D)
#define HOST_BISTTXDATAL_dbg_bist_txdata_out_28             (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_BISTTXDATAL <<BUS_STARTBIT) + 0x001C)
#define HOST_BISTTXDATAL_dbg_bist_txdata_out_27             (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_BISTTXDATAL <<BUS_STARTBIT) + 0x001B)
#define HOST_BISTTXDATAL_dbg_bist_txdata_out_26             (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_BISTTXDATAL <<BUS_STARTBIT) + 0x001A)
#define HOST_BISTTXDATAL_dbg_bist_txdata_out_25             (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_BISTTXDATAL <<BUS_STARTBIT) + 0x0019)
#define HOST_BISTTXDATAL_dbg_bist_txdata_out_24             (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_BISTTXDATAL <<BUS_STARTBIT) + 0x0018)
#define HOST_BISTTXDATAL_dbg_bist_txdata_out_23             (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_BISTTXDATAL <<BUS_STARTBIT) + 0x0017)
#define HOST_BISTTXDATAL_dbg_bist_txdata_out_22             (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_BISTTXDATAL <<BUS_STARTBIT) + 0x0016)
#define HOST_BISTTXDATAL_dbg_bist_txdata_out_21             (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_BISTTXDATAL <<BUS_STARTBIT) + 0x0015)
#define HOST_BISTTXDATAL_dbg_bist_txdata_out_20             (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_BISTTXDATAL <<BUS_STARTBIT) + 0x0014)
#define HOST_BISTTXDATAL_dbg_bist_txdata_out_19             (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_BISTTXDATAL <<BUS_STARTBIT) + 0x0013)
#define HOST_BISTTXDATAL_dbg_bist_txdata_out_18             (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_BISTTXDATAL <<BUS_STARTBIT) + 0x0012)
#define HOST_BISTTXDATAL_dbg_bist_txdata_out_17             (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_BISTTXDATAL <<BUS_STARTBIT) + 0x0011)
#define HOST_BISTTXDATAL_dbg_bist_txdata_out_16             (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_BISTTXDATAL <<BUS_STARTBIT) + 0x0010)
#define HOST_BISTTXDATAL_dbg_bist_txdata_out_15             (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_BISTTXDATAL <<BUS_STARTBIT) + 0x000F)
#define HOST_BISTTXDATAL_dbg_bist_txdata_out_14             (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_BISTTXDATAL <<BUS_STARTBIT) + 0x000E)
#define HOST_BISTTXDATAL_dbg_bist_txdata_out_13             (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_BISTTXDATAL <<BUS_STARTBIT) + 0x000D)
#define HOST_BISTTXDATAL_dbg_bist_txdata_out_12             (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_BISTTXDATAL <<BUS_STARTBIT) + 0x000C)
#define HOST_BISTTXDATAL_dbg_bist_txdata_out_11             (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_BISTTXDATAL <<BUS_STARTBIT) + 0x000B)
#define HOST_BISTTXDATAL_dbg_bist_txdata_out_10             (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_BISTTXDATAL <<BUS_STARTBIT) + 0x000A)
#define HOST_BISTTXDATAL_dbg_bist_txdata_out_9              (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_BISTTXDATAL <<BUS_STARTBIT) + 0x0009)
#define HOST_BISTTXDATAL_dbg_bist_txdata_out_8              (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_BISTTXDATAL <<BUS_STARTBIT) + 0x0008)
#define HOST_BISTTXDATAL_dbg_bist_txdata_out_7              (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_BISTTXDATAL <<BUS_STARTBIT) + 0x0007)
#define HOST_BISTTXDATAL_dbg_bist_txdata_out_6              (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_BISTTXDATAL <<BUS_STARTBIT) + 0x0006)
#define HOST_BISTTXDATAL_dbg_bist_txdata_out_5              (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_BISTTXDATAL <<BUS_STARTBIT) + 0x0005)
#define HOST_BISTTXDATAL_dbg_bist_txdata_out_4              (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_BISTTXDATAL <<BUS_STARTBIT) + 0x0004)
#define HOST_BISTTXDATAL_dbg_bist_txdata_out_3              (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_BISTTXDATAL <<BUS_STARTBIT) + 0x0003)
#define HOST_BISTTXDATAL_dbg_bist_txdata_out_2              (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_BISTTXDATAL <<BUS_STARTBIT) + 0x0002)
#define HOST_BISTTXDATAL_dbg_bist_txdata_out_1              (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_BISTTXDATAL <<BUS_STARTBIT) + 0x0001)
#define HOST_BISTTXDATAL_dbg_bist_txdata_out_0              (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_BISTTXDATAL <<BUS_STARTBIT) + 0x0000)
//RXFIFORDATAL
#define HOST_RXFIFORDATAL_dbg_sata_rxfifo_rdata_31          (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_RXFIFORDATAL <<BUS_STARTBIT) + 0x001F)
#define HOST_RXFIFORDATAL_dbg_sata_rxfifo_rdata_30          (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_RXFIFORDATAL <<BUS_STARTBIT) + 0x001E)
#define HOST_RXFIFORDATAL_dbg_sata_rxfifo_rdata_29          (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_RXFIFORDATAL <<BUS_STARTBIT) + 0x001D)
#define HOST_RXFIFORDATAL_dbg_sata_rxfifo_rdata_28          (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_RXFIFORDATAL <<BUS_STARTBIT) + 0x001C)
#define HOST_RXFIFORDATAL_dbg_sata_rxfifo_rdata_27          (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_RXFIFORDATAL <<BUS_STARTBIT) + 0x001B)
#define HOST_RXFIFORDATAL_dbg_sata_rxfifo_rdata_26          (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_RXFIFORDATAL <<BUS_STARTBIT) + 0x001A)
#define HOST_RXFIFORDATAL_dbg_sata_rxfifo_rdata_25          (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_RXFIFORDATAL <<BUS_STARTBIT) + 0x0019)
#define HOST_RXFIFORDATAL_dbg_sata_rxfifo_rdata_24          (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_RXFIFORDATAL <<BUS_STARTBIT) + 0x0018)
#define HOST_RXFIFORDATAL_dbg_sata_rxfifo_rdata_23          (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_RXFIFORDATAL <<BUS_STARTBIT) + 0x0017)
#define HOST_RXFIFORDATAL_dbg_sata_rxfifo_rdata_22          (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_RXFIFORDATAL <<BUS_STARTBIT) + 0x0016)
#define HOST_RXFIFORDATAL_dbg_sata_rxfifo_rdata_21          (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_RXFIFORDATAL <<BUS_STARTBIT) + 0x0015)
#define HOST_RXFIFORDATAL_dbg_sata_rxfifo_rdata_20          (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_RXFIFORDATAL <<BUS_STARTBIT) + 0x0014)
#define HOST_RXFIFORDATAL_dbg_sata_rxfifo_rdata_19          (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_RXFIFORDATAL <<BUS_STARTBIT) + 0x0013)
#define HOST_RXFIFORDATAL_dbg_sata_rxfifo_rdata_18          (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_RXFIFORDATAL <<BUS_STARTBIT) + 0x0012)
#define HOST_RXFIFORDATAL_dbg_sata_rxfifo_rdata_17          (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_RXFIFORDATAL <<BUS_STARTBIT) + 0x0011)
#define HOST_RXFIFORDATAL_dbg_sata_rxfifo_rdata_16          (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_RXFIFORDATAL <<BUS_STARTBIT) + 0x0010)
#define HOST_RXFIFORDATAL_dbg_sata_rxfifo_rdata_15          (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_RXFIFORDATAL <<BUS_STARTBIT) + 0x000F)
#define HOST_RXFIFORDATAL_dbg_sata_rxfifo_rdata_14          (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_RXFIFORDATAL <<BUS_STARTBIT) + 0x000E)
#define HOST_RXFIFORDATAL_dbg_sata_rxfifo_rdata_13          (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_RXFIFORDATAL <<BUS_STARTBIT) + 0x000D)
#define HOST_RXFIFORDATAL_dbg_sata_rxfifo_rdata_12          (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_RXFIFORDATAL <<BUS_STARTBIT) + 0x000C)
#define HOST_RXFIFORDATAL_dbg_sata_rxfifo_rdata_11          (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_RXFIFORDATAL <<BUS_STARTBIT) + 0x000B)
#define HOST_RXFIFORDATAL_dbg_sata_rxfifo_rdata_10          (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_RXFIFORDATAL <<BUS_STARTBIT) + 0x000A)
#define HOST_RXFIFORDATAL_dbg_sata_rxfifo_rdata_9           (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_RXFIFORDATAL <<BUS_STARTBIT) + 0x0009)
#define HOST_RXFIFORDATAL_dbg_sata_rxfifo_rdata_8           (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_RXFIFORDATAL <<BUS_STARTBIT) + 0x0008)
#define HOST_RXFIFORDATAL_dbg_sata_rxfifo_rdata_7           (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_RXFIFORDATAL <<BUS_STARTBIT) + 0x0007)
#define HOST_RXFIFORDATAL_dbg_sata_rxfifo_rdata_6           (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_RXFIFORDATAL <<BUS_STARTBIT) + 0x0006)
#define HOST_RXFIFORDATAL_dbg_sata_rxfifo_rdata_5           (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_RXFIFORDATAL <<BUS_STARTBIT) + 0x0005)
#define HOST_RXFIFORDATAL_dbg_sata_rxfifo_rdata_4           (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_RXFIFORDATAL <<BUS_STARTBIT) + 0x0004)
#define HOST_RXFIFORDATAL_dbg_sata_rxfifo_rdata_3           (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_RXFIFORDATAL <<BUS_STARTBIT) + 0x0003)
#define HOST_RXFIFORDATAL_dbg_sata_rxfifo_rdata_2           (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_RXFIFORDATAL <<BUS_STARTBIT) + 0x0002)
#define HOST_RXFIFORDATAL_dbg_sata_rxfifo_rdata_1           (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_RXFIFORDATAL <<BUS_STARTBIT) + 0x0001)
#define HOST_RXFIFORDATAL_dbg_sata_rxfifo_rdata_0           (HOST_BLK + DBG64SEL + (halHST_HSTDBGMXLSEL_RXFIFORDATAL <<BUS_STARTBIT) + 0x0000)

/****************************************************************************
* DGB64 BUS BVCI BLOCK
****************************************************************************/
//BVCI BUS1
#define BVCI_BUS1_mema_sd_cWdata23            (BVCI_BLK + DBG64SEL + (0<<BUS_STARTBIT) + 0x003F)
#define BVCI_BUS1_mema_sd_cWdata22            (BVCI_BLK + DBG64SEL + (0<<BUS_STARTBIT) + 0x003E)
#define BVCI_BUS1_mema_sd_cWdata21            (BVCI_BLK + DBG64SEL + (0<<BUS_STARTBIT) + 0x003D)
#define BVCI_BUS1_mema_sd_cWdata20            (BVCI_BLK + DBG64SEL + (0<<BUS_STARTBIT) + 0x003C)
#define BVCI_BUS1_mema_sd_cWdata19            (BVCI_BLK + DBG64SEL + (0<<BUS_STARTBIT) + 0x003B)
#define BVCI_BUS1_mema_sd_cWdata18            (BVCI_BLK + DBG64SEL + (0<<BUS_STARTBIT) + 0x003A)
#define BVCI_BUS1_mema_sd_cWdata17            (BVCI_BLK + DBG64SEL + (0<<BUS_STARTBIT) + 0x0039)
#define BVCI_BUS1_mema_sd_cWdata16            (BVCI_BLK + DBG64SEL + (0<<BUS_STARTBIT) + 0x0038)
#define BVCI_BUS1_mema_sd_cWdata15            (BVCI_BLK + DBG64SEL + (0<<BUS_STARTBIT) + 0x0037)
#define BVCI_BUS1_mema_sd_cWdata14            (BVCI_BLK + DBG64SEL + (0<<BUS_STARTBIT) + 0x0036)
#define BVCI_BUS1_mema_sd_cWdata13            (BVCI_BLK + DBG64SEL + (0<<BUS_STARTBIT) + 0x0035)
#define BVCI_BUS1_mema_sd_cWdata12            (BVCI_BLK + DBG64SEL + (0<<BUS_STARTBIT) + 0x0034)
#define BVCI_BUS1_mema_sd_cWdata11            (BVCI_BLK + DBG64SEL + (0<<BUS_STARTBIT) + 0x0033)
#define BVCI_BUS1_mema_sd_cWdata10            (BVCI_BLK + DBG64SEL + (0<<BUS_STARTBIT) + 0x0032)
#define BVCI_BUS1_mema_sd_cWdata9             (BVCI_BLK + DBG64SEL + (0<<BUS_STARTBIT) + 0x0031)
#define BVCI_BUS1_mema_sd_cWdata8             (BVCI_BLK + DBG64SEL + (0<<BUS_STARTBIT) + 0x0030)
#define BVCI_BUS1_memc_sd_rRdata15            (BVCI_BLK + DBG64SEL + (0<<BUS_STARTBIT) + 0x002F)
#define BVCI_BUS1_memc_sd_rRdata14            (BVCI_BLK + DBG64SEL + (0<<BUS_STARTBIT) + 0x002E)
#define BVCI_BUS1_memc_sd_rRdata13            (BVCI_BLK + DBG64SEL + (0<<BUS_STARTBIT) + 0x002D)
#define BVCI_BUS1_memc_sd_rRdata12            (BVCI_BLK + DBG64SEL + (0<<BUS_STARTBIT) + 0x002C)
#define BVCI_BUS1_memc_sd_rRdata11            (BVCI_BLK + DBG64SEL + (0<<BUS_STARTBIT) + 0x002B)
#define BVCI_BUS1_memc_sd_rRdata10            (BVCI_BLK + DBG64SEL + (0<<BUS_STARTBIT) + 0x002A)
#define BVCI_BUS1_memc_sd_rRdata9             (BVCI_BLK + DBG64SEL + (0<<BUS_STARTBIT) + 0x0029)
#define BVCI_BUS1_memc_sd_rRdata8             (BVCI_BLK + DBG64SEL + (0<<BUS_STARTBIT) + 0x0028)
#define BVCI_BUS1_memc_sd_rRdata7             (BVCI_BLK + DBG64SEL + (0<<BUS_STARTBIT) + 0x0027)
#define BVCI_BUS1_memc_sd_rRdata6             (BVCI_BLK + DBG64SEL + (0<<BUS_STARTBIT) + 0x0026)
#define BVCI_BUS1_memc_sd_rRdata5             (BVCI_BLK + DBG64SEL + (0<<BUS_STARTBIT) + 0x0025)
#define BVCI_BUS1_memc_sd_rRdata4             (BVCI_BLK + DBG64SEL + (0<<BUS_STARTBIT) + 0x0024)
#define BVCI_BUS1_memc_sd_rRdata3             (BVCI_BLK + DBG64SEL + (0<<BUS_STARTBIT) + 0x0023)
#define BVCI_BUS1_memc_sd_rRdata2             (BVCI_BLK + DBG64SEL + (0<<BUS_STARTBIT) + 0x0022)
#define BVCI_BUS1_memc_sd_rRdata1             (BVCI_BLK + DBG64SEL + (0<<BUS_STARTBIT) + 0x0021)
#define BVCI_BUS1_memc_sd_rRdata0             (BVCI_BLK + DBG64SEL + (0<<BUS_STARTBIT) + 0x0020)
#define BVCI_BUS1_0b                          (BVCI_BLK + DBG64SEL + (0<<BUS_STARTBIT) + 0x001F)
#define BVCI_BUS1_cg_sysclk_armp              (BVCI_BLK + DBG64SEL + (0<<BUS_STARTBIT) + 0x001E)
#define BVCI_BUS1_ReqId3                      (BVCI_BLK + DBG64SEL + (0<<BUS_STARTBIT) + 0x001D)
#define BVCI_BUS1_ReqId2                      (BVCI_BLK + DBG64SEL + (0<<BUS_STARTBIT) + 0x001C)
#define BVCI_BUS1_ReqId1                      (BVCI_BLK + DBG64SEL + (0<<BUS_STARTBIT) + 0x001B)
#define BVCI_BUS1_ReqId0                      (BVCI_BLK + DBG64SEL + (0<<BUS_STARTBIT) + 0x001A)
#define BVCI_BUS1_CmdId3                      (BVCI_BLK + DBG64SEL + (0<<BUS_STARTBIT) + 0x0019)
#define BVCI_BUS1_CmdId2                      (BVCI_BLK + DBG64SEL + (0<<BUS_STARTBIT) + 0x0018)
#define BVCI_BUS1_CmdId1                      (BVCI_BLK + DBG64SEL + (0<<BUS_STARTBIT) + 0x0017)
#define BVCI_BUS1_CmdId0                      (BVCI_BLK + DBG64SEL + (0<<BUS_STARTBIT) + 0x0016)
#define BVCI_BUS1_memc_sd_rCmdAck             (BVCI_BLK + DBG64SEL + (0<<BUS_STARTBIT) + 0x0015)
#define BVCI_BUS1_memc_sd_rRspVal             (BVCI_BLK + DBG64SEL + (0<<BUS_STARTBIT) + 0x0014)
#define BVCI_BUS1_memc_sd_rEop                (BVCI_BLK + DBG64SEL + (0<<BUS_STARTBIT) + 0x0013)
#define BVCI_BUS1_memc_sd_rAddr0              (BVCI_BLK + DBG64SEL + (0<<BUS_STARTBIT) + 0x0012)
#define BVCI_BUS1_memc_sd_rSingle             (BVCI_BLK + DBG64SEL + (0<<BUS_STARTBIT) + 0x0011)
#define BVCI_BUS1_mema_sd_cRead               (BVCI_BLK + DBG64SEL + (0<<BUS_STARTBIT) + 0x0010)
#define BVCI_BUS1_mema_sd_cWdata7             (BVCI_BLK + DBG64SEL + (0<<BUS_STARTBIT) + 0x000F)
#define BVCI_BUS1_mema_sd_cWdata6             (BVCI_BLK + DBG64SEL + (0<<BUS_STARTBIT) + 0x000E)
#define BVCI_BUS1_mema_sd_cWdata5             (BVCI_BLK + DBG64SEL + (0<<BUS_STARTBIT) + 0x000D)
#define BVCI_BUS1_mema_sd_cWdata4             (BVCI_BLK + DBG64SEL + (0<<BUS_STARTBIT) + 0x000C)
#define BVCI_BUS1_mema_sd_cWdata3             (BVCI_BLK + DBG64SEL + (0<<BUS_STARTBIT) + 0x000B)
#define BVCI_BUS1_mema_sd_cWdata2             (BVCI_BLK + DBG64SEL + (0<<BUS_STARTBIT) + 0x000A)
#define BVCI_BUS1_mema_sd_cWdata1             (BVCI_BLK + DBG64SEL + (0<<BUS_STARTBIT) + 0x0009)
#define BVCI_BUS1_mema_sd_cWdata0             (BVCI_BLK + DBG64SEL + (0<<BUS_STARTBIT) + 0x0008)
#define BVCI_BUS1_mema_sd_cBe3                (BVCI_BLK + DBG64SEL + (0<<BUS_STARTBIT) + 0x0007)
#define BVCI_BUS1_mema_sd_cBe2                (BVCI_BLK + DBG64SEL + (0<<BUS_STARTBIT) + 0x0006)
#define BVCI_BUS1_mema_sd_cBe1                (BVCI_BLK + DBG64SEL + (0<<BUS_STARTBIT) + 0x0005)
#define BVCI_BUS1_mema_sd_cBe0                (BVCI_BLK + DBG64SEL + (0<<BUS_STARTBIT) + 0x0004)
#define BVCI_BUS1_mema_sd_cEop                (BVCI_BLK + DBG64SEL + (0<<BUS_STARTBIT) + 0x0003)
#define BVCI_BUS1_mema_sd_cCmdVal             (BVCI_BLK + DBG64SEL + (0<<BUS_STARTBIT) + 0x0002)
#define BVCI_BUS1_mema_sd_cRspAck             (BVCI_BLK + DBG64SEL + (0<<BUS_STARTBIT) + 0x0001)
#define BVCI_BUS1_mema_sd_cSingle             (BVCI_BLK + DBG64SEL + (0<<BUS_STARTBIT) + 0x0000)
//BVCI BUS2
#define BVCI_BUS2_cg_sysclk_armp              (BVCI_BLK + DBG64SEL + (1<<BUS_STARTBIT) + 0x001F)
#define BVCI_BUS2_mema_sd_cBe3                (BVCI_BLK + DBG64SEL + (1<<BUS_STARTBIT) + 0x001E)
#define BVCI_BUS2_mema_sd_cBe2                (BVCI_BLK + DBG64SEL + (1<<BUS_STARTBIT) + 0x001D)
#define BVCI_BUS2_mema_sd_cBe1                (BVCI_BLK + DBG64SEL + (1<<BUS_STARTBIT) + 0x001C)
#define BVCI_BUS2_mema_sd_cBe0                (BVCI_BLK + DBG64SEL + (1<<BUS_STARTBIT) + 0x001B)
#define BVCI_BUS2_mema_sd_cEop                (BVCI_BLK + DBG64SEL + (1<<BUS_STARTBIT) + 0x001A)
#define BVCI_BUS2_mema_sd_cCmdVal             (BVCI_BLK + DBG64SEL + (1<<BUS_STARTBIT) + 0x0019)
#define BVCI_BUS2_mema_sd_cRspAck             (BVCI_BLK + DBG64SEL + (1<<BUS_STARTBIT) + 0x0018)
#define BVCI_BUS2_mema_sd_cSingle             (BVCI_BLK + DBG64SEL + (1<<BUS_STARTBIT) + 0x0017)
#define BVCI_BUS2_mema_sd_cAddress23          (BVCI_BLK + DBG64SEL + (1<<BUS_STARTBIT) + 0x0016)
#define BVCI_BUS2_mema_sd_cAddress22          (BVCI_BLK + DBG64SEL + (1<<BUS_STARTBIT) + 0x0015)
#define BVCI_BUS2_mema_sd_cAddress21          (BVCI_BLK + DBG64SEL + (1<<BUS_STARTBIT) + 0x0014)
#define BVCI_BUS2_mema_sd_cAddress20          (BVCI_BLK + DBG64SEL + (1<<BUS_STARTBIT) + 0x0013)
#define BVCI_BUS2_mema_sd_cAddress19          (BVCI_BLK + DBG64SEL + (1<<BUS_STARTBIT) + 0x0012)
#define BVCI_BUS2_mema_sd_cAddress18          (BVCI_BLK + DBG64SEL + (1<<BUS_STARTBIT) + 0x0011)
#define BVCI_BUS2_mema_sd_cAddress17          (BVCI_BLK + DBG64SEL + (1<<BUS_STARTBIT) + 0x0010)
#define BVCI_BUS2_mema_sd_cAddress16          (BVCI_BLK + DBG64SEL + (1<<BUS_STARTBIT) + 0x000F)
#define BVCI_BUS2_mema_sd_cAddress15          (BVCI_BLK + DBG64SEL + (1<<BUS_STARTBIT) + 0x000E)
#define BVCI_BUS2_mema_sd_cAddress14          (BVCI_BLK + DBG64SEL + (1<<BUS_STARTBIT) + 0x000D)
#define BVCI_BUS2_mema_sd_cAddress13          (BVCI_BLK + DBG64SEL + (1<<BUS_STARTBIT) + 0x000C)
#define BVCI_BUS2_mema_sd_cAddress12          (BVCI_BLK + DBG64SEL + (1<<BUS_STARTBIT) + 0x000B)
#define BVCI_BUS2_mema_sd_cAddress11          (BVCI_BLK + DBG64SEL + (1<<BUS_STARTBIT) + 0x000A)
#define BVCI_BUS2_mema_sd_cAddress10          (BVCI_BLK + DBG64SEL + (1<<BUS_STARTBIT) + 0x0009)
#define BVCI_BUS2_mema_sd_cAddress9           (BVCI_BLK + DBG64SEL + (1<<BUS_STARTBIT) + 0x0008)
#define BVCI_BUS2_mema_sd_cAddress8           (BVCI_BLK + DBG64SEL + (1<<BUS_STARTBIT) + 0x0007)
#define BVCI_BUS2_mema_sd_cAddress7           (BVCI_BLK + DBG64SEL + (1<<BUS_STARTBIT) + 0x0006)
#define BVCI_BUS2_mema_sd_cAddress6           (BVCI_BLK + DBG64SEL + (1<<BUS_STARTBIT) + 0x0005)
#define BVCI_BUS2_mema_sd_cAddress5           (BVCI_BLK + DBG64SEL + (1<<BUS_STARTBIT) + 0x0004)
#define BVCI_BUS2_mema_sd_cAddress4           (BVCI_BLK + DBG64SEL + (1<<BUS_STARTBIT) + 0x0003)
#define BVCI_BUS2_mema_sd_cAddress3           (BVCI_BLK + DBG64SEL + (1<<BUS_STARTBIT) + 0x0002)
#define BVCI_BUS2_mema_sd_cAddress2           (BVCI_BLK + DBG64SEL + (1<<BUS_STARTBIT) + 0x0001)
#define BVCI_BUS2_mema_sd_cAddress1           (BVCI_BLK + DBG64SEL + (1<<BUS_STARTBIT) + 0x0000)
//PVCI BUS3
#define PVCI_BUS3_armt_rb_address15           (BVCI_BLK + DBG64SEL + (2<<BUS_STARTBIT) + 0x002F)
#define PVCI_BUS3_armt_rb_address14           (BVCI_BLK + DBG64SEL + (2<<BUS_STARTBIT) + 0x002E)
#define PVCI_BUS3_armt_rb_address13           (BVCI_BLK + DBG64SEL + (2<<BUS_STARTBIT) + 0x002D)
#define PVCI_BUS3_armt_rb_address12           (BVCI_BLK + DBG64SEL + (2<<BUS_STARTBIT) + 0x002C)
#define PVCI_BUS3_armt_rb_address11           (BVCI_BLK + DBG64SEL + (2<<BUS_STARTBIT) + 0x002B)
#define PVCI_BUS3_armt_rb_address10           (BVCI_BLK + DBG64SEL + (2<<BUS_STARTBIT) + 0x002A)
#define PVCI_BUS3_armt_rb_address9            (BVCI_BLK + DBG64SEL + (2<<BUS_STARTBIT) + 0x0029)
#define PVCI_BUS3_armt_rb_address8            (BVCI_BLK + DBG64SEL + (2<<BUS_STARTBIT) + 0x0028)
#define PVCI_BUS3_armt_rb_address7            (BVCI_BLK + DBG64SEL + (2<<BUS_STARTBIT) + 0x0027)
#define PVCI_BUS3_armt_rb_address6            (BVCI_BLK + DBG64SEL + (2<<BUS_STARTBIT) + 0x0026)
#define PVCI_BUS3_armt_rb_address5            (BVCI_BLK + DBG64SEL + (2<<BUS_STARTBIT) + 0x0025)
#define PVCI_BUS3_armt_rb_address4            (BVCI_BLK + DBG64SEL + (2<<BUS_STARTBIT) + 0x0024)
#define PVCI_BUS3_armt_rb_address3            (BVCI_BLK + DBG64SEL + (2<<BUS_STARTBIT) + 0x0023)
#define PVCI_BUS3_armt_rb_address2            (BVCI_BLK + DBG64SEL + (2<<BUS_STARTBIT) + 0x0022)
#define PVCI_BUS3_armt_rb_address1            (BVCI_BLK + DBG64SEL + (2<<BUS_STARTBIT) + 0x0021)
#define PVCI_BUS3_armt_rb_address0            (BVCI_BLK + DBG64SEL + (2<<BUS_STARTBIT) + 0x0020)
#define PVCI_BUS3_armt_rb_wdata7              (BVCI_BLK + DBG64SEL + (2<<BUS_STARTBIT) + 0x001F)
#define PVCI_BUS3_armt_rb_wdata6              (BVCI_BLK + DBG64SEL + (2<<BUS_STARTBIT) + 0x001E)
#define PVCI_BUS3_armt_rb_wdata5              (BVCI_BLK + DBG64SEL + (2<<BUS_STARTBIT) + 0x001D)
#define PVCI_BUS3_armt_rb_wdata4              (BVCI_BLK + DBG64SEL + (2<<BUS_STARTBIT) + 0x001C)
#define PVCI_BUS3_armt_rb_wdata3              (BVCI_BLK + DBG64SEL + (2<<BUS_STARTBIT) + 0x001B)
#define PVCI_BUS3_armt_rb_wdata2              (BVCI_BLK + DBG64SEL + (2<<BUS_STARTBIT) + 0x001A)
#define PVCI_BUS3_armt_rb_wdata1              (BVCI_BLK + DBG64SEL + (2<<BUS_STARTBIT) + 0x0019)
#define PVCI_BUS3_armt_rb_wdata0              (BVCI_BLK + DBG64SEL + (2<<BUS_STARTBIT) + 0x0018)
#define PVCI_BUS3_cg_sysclk_armp              (BVCI_BLK + DBG64SEL + (2<<BUS_STARTBIT) + 0x0013)
#define PVCI_BUS3_armt_rb_rd                  (BVCI_BLK + DBG64SEL + (2<<BUS_STARTBIT) + 0x0012)
#define PVCI_BUS3_armt_rb_val                 (BVCI_BLK + DBG64SEL + (2<<BUS_STARTBIT) + 0x0011)
#define PVCI_BUS3_ucif_xrb_ack                (BVCI_BLK + DBG64SEL + (2<<BUS_STARTBIT) + 0x0010)
#define PVCI_BUS3_ucif_rb_rdata7              (BVCI_BLK + DBG64SEL + (2<<BUS_STARTBIT) + 0x000F)
#define PVCI_BUS3_ucif_rb_rdata6              (BVCI_BLK + DBG64SEL + (2<<BUS_STARTBIT) + 0x000E)
#define PVCI_BUS3_ucif_rb_rdata5              (BVCI_BLK + DBG64SEL + (2<<BUS_STARTBIT) + 0x000D)
#define PVCI_BUS3_ucif_rb_rdata4              (BVCI_BLK + DBG64SEL + (2<<BUS_STARTBIT) + 0x000C)
#define PVCI_BUS3_ucif_rb_rdata3              (BVCI_BLK + DBG64SEL + (2<<BUS_STARTBIT) + 0x000B)
#define PVCI_BUS3_ucif_rb_rdata2              (BVCI_BLK + DBG64SEL + (2<<BUS_STARTBIT) + 0x000A)
#define PVCI_BUS3_ucif_rb_rdata1              (BVCI_BLK + DBG64SEL + (2<<BUS_STARTBIT) + 0x0009)
#define PVCI_BUS3_ucif_rb_rdata0              (BVCI_BLK + DBG64SEL + (2<<BUS_STARTBIT) + 0x0008)
#define PVCI_BUS3_cg_sysclk_armp_a            (BVCI_BLK + DBG64SEL + (2<<BUS_STARTBIT) + 0x0003)
#define PVCI_BUS3_armt_rb_rd_a                (BVCI_BLK + DBG64SEL + (2<<BUS_STARTBIT) + 0x0002)
#define PVCI_BUS3_armt_rb_val_a               (BVCI_BLK + DBG64SEL + (2<<BUS_STARTBIT) + 0x0001)
#define PVCI_BUS3_ucif_xrb_ack_a              (BVCI_BLK + DBG64SEL + (2<<BUS_STARTBIT) + 0x0000)
//FLASH BUS4
#define FLASH_BUS4_dbg_SFcmd_tx_rx2            (BVCI_BLK + DBG64SEL + (3<<BUS_STARTBIT) + 0x003E)
#define FLASH_BUS4_dbg_SFcmd_tx_rx1            (BVCI_BLK + DBG64SEL + (3<<BUS_STARTBIT) + 0x003D)
#define FLASH_BUS4_dbg_SFcmd_tx_rx0            (BVCI_BLK + DBG64SEL + (3<<BUS_STARTBIT) + 0x003C)
#define FLASH_BUS4_dbg_cache4                  (BVCI_BLK + DBG64SEL + (3<<BUS_STARTBIT) + 0x003B)
#define FLASH_BUS4_dbg_cache3                  (BVCI_BLK + DBG64SEL + (3<<BUS_STARTBIT) + 0x003A)
#define FLASH_BUS4_dbg_cache2                  (BVCI_BLK + DBG64SEL + (3<<BUS_STARTBIT) + 0x0039)
#define FLASH_BUS4_dbg_cache1                  (BVCI_BLK + DBG64SEL + (3<<BUS_STARTBIT) + 0x0038)
#define FLASH_BUS4_dbg_cache0                  (BVCI_BLK + DBG64SEL + (3<<BUS_STARTBIT) + 0x0037)
#define FLASH_BUS4_cache_monitor2              (BVCI_BLK + DBG64SEL + (3<<BUS_STARTBIT) + 0x0036)
#define FLASH_BUS4_cache_monitor1              (BVCI_BLK + DBG64SEL + (3<<BUS_STARTBIT) + 0x0035)
#define FLASH_BUS4_cache_monitor0              (BVCI_BLK + DBG64SEL + (3<<BUS_STARTBIT) + 0x0034)
#define FLASH_BUS4_dbg_ahb2sfEn_cur_state3     (BVCI_BLK + DBG64SEL + (3<<BUS_STARTBIT) + 0x0033)
#define FLASH_BUS4_dbg_ahb2sfEn_cur_state2     (BVCI_BLK + DBG64SEL + (3<<BUS_STARTBIT) + 0x0032)
#define FLASH_BUS4_dbg_ahb2sfEn_cur_state1     (BVCI_BLK + DBG64SEL + (3<<BUS_STARTBIT) + 0x0031)
#define FLASH_BUS4_dbg_ahb2sfEn_cur_state0     (BVCI_BLK + DBG64SEL + (3<<BUS_STARTBIT) + 0x0030)
#define FLASH_BUS4_dbg_SFrdata31               (BVCI_BLK + DBG64SEL + (3<<BUS_STARTBIT) + 0x002F)
#define FLASH_BUS4_dbg_SFrdata30               (BVCI_BLK + DBG64SEL + (3<<BUS_STARTBIT) + 0x002E)
#define FLASH_BUS4_dbg_SFrdata29               (BVCI_BLK + DBG64SEL + (3<<BUS_STARTBIT) + 0x002D)
#define FLASH_BUS4_dbg_SFrdata28               (BVCI_BLK + DBG64SEL + (3<<BUS_STARTBIT) + 0x002C)
#define FLASH_BUS4_dbg_SFrdata27               (BVCI_BLK + DBG64SEL + (3<<BUS_STARTBIT) + 0x002B)
#define FLASH_BUS4_dbg_SFrdata26               (BVCI_BLK + DBG64SEL + (3<<BUS_STARTBIT) + 0x002A)
#define FLASH_BUS4_dbg_SFrdata25               (BVCI_BLK + DBG64SEL + (3<<BUS_STARTBIT) + 0x0029)
#define FLASH_BUS4_dbg_SFrdata24               (BVCI_BLK + DBG64SEL + (3<<BUS_STARTBIT) + 0x0028)
#define FLASH_BUS4_dbg_SFrdata23               (BVCI_BLK + DBG64SEL + (3<<BUS_STARTBIT) + 0x0027)
#define FLASH_BUS4_dbg_SFrdata22               (BVCI_BLK + DBG64SEL + (3<<BUS_STARTBIT) + 0x0026)
#define FLASH_BUS4_dbg_SFrdata21               (BVCI_BLK + DBG64SEL + (3<<BUS_STARTBIT) + 0x0025)
#define FLASH_BUS4_dbg_SFrdata20               (BVCI_BLK + DBG64SEL + (3<<BUS_STARTBIT) + 0x0024)
#define FLASH_BUS4_dbg_SFrdata19               (BVCI_BLK + DBG64SEL + (3<<BUS_STARTBIT) + 0x0023)
#define FLASH_BUS4_dbg_SFrdata18               (BVCI_BLK + DBG64SEL + (3<<BUS_STARTBIT) + 0x0022)
#define FLASH_BUS4_dbg_SFrdata17               (BVCI_BLK + DBG64SEL + (3<<BUS_STARTBIT) + 0x0021)
#define FLASH_BUS4_dbg_SFrdata16               (BVCI_BLK + DBG64SEL + (3<<BUS_STARTBIT) + 0x0020)
#define FLASH_BUS4_dbg_SFrdata15               (BVCI_BLK + DBG64SEL + (3<<BUS_STARTBIT) + 0x001F)
#define FLASH_BUS4_dbg_SFrdata14               (BVCI_BLK + DBG64SEL + (3<<BUS_STARTBIT) + 0x001E)
#define FLASH_BUS4_dbg_SFrdata13               (BVCI_BLK + DBG64SEL + (3<<BUS_STARTBIT) + 0x001D)
#define FLASH_BUS4_dbg_SFrdata12               (BVCI_BLK + DBG64SEL + (3<<BUS_STARTBIT) + 0x001C)
#define FLASH_BUS4_dbg_SFrdata11               (BVCI_BLK + DBG64SEL + (3<<BUS_STARTBIT) + 0x001B)
#define FLASH_BUS4_dbg_SFrdata10               (BVCI_BLK + DBG64SEL + (3<<BUS_STARTBIT) + 0x001A)
#define FLASH_BUS4_dbg_SFrdata9                (BVCI_BLK + DBG64SEL + (3<<BUS_STARTBIT) + 0x0019)
#define FLASH_BUS4_dbg_SFrdata8                (BVCI_BLK + DBG64SEL + (3<<BUS_STARTBIT) + 0x0018)
#define FLASH_BUS4_dbg_SFrdata7                (BVCI_BLK + DBG64SEL + (3<<BUS_STARTBIT) + 0x0017)
#define FLASH_BUS4_dbg_SFrdata6                (BVCI_BLK + DBG64SEL + (3<<BUS_STARTBIT) + 0x0016)
#define FLASH_BUS4_dbg_SFrdata5                (BVCI_BLK + DBG64SEL + (3<<BUS_STARTBIT) + 0x0015)
#define FLASH_BUS4_dbg_SFrdata4                (BVCI_BLK + DBG64SEL + (3<<BUS_STARTBIT) + 0x0014)
#define FLASH_BUS4_dbg_SFrdata3                (BVCI_BLK + DBG64SEL + (3<<BUS_STARTBIT) + 0x0013)
#define FLASH_BUS4_dbg_SFrdata2                (BVCI_BLK + DBG64SEL + (3<<BUS_STARTBIT) + 0x0012)
#define FLASH_BUS4_dbg_SFrdata1                (BVCI_BLK + DBG64SEL + (3<<BUS_STARTBIT) + 0x0011)
#define FLASH_BUS4_dbg_SFrdata0                (BVCI_BLK + DBG64SEL + (3<<BUS_STARTBIT) + 0x0010)
#define FLASH_BUS4_cg_sfclk                    (BVCI_BLK + DBG64SEL + (3<<BUS_STARTBIT) + 0x000E)
#define FLASH_BUS4_sfclk_disable               (BVCI_BLK + DBG64SEL + (3<<BUS_STARTBIT) + 0x000D)
#define FLASH_BUS4_dbg_sf_ctl_cur_state4       (BVCI_BLK + DBG64SEL + (3<<BUS_STARTBIT) + 0x000C)
#define FLASH_BUS4_dbg_sf_ctl_cur_state3       (BVCI_BLK + DBG64SEL + (3<<BUS_STARTBIT) + 0x000B)
#define FLASH_BUS4_dbg_sf_ctl_cur_state2       (BVCI_BLK + DBG64SEL + (3<<BUS_STARTBIT) + 0x000A)
#define FLASH_BUS4_dbg_sf_ctl_cur_state1       (BVCI_BLK + DBG64SEL + (3<<BUS_STARTBIT) + 0x0009)
#define FLASH_BUS4_dbg_sf_ctl_cur_state0       (BVCI_BLK + DBG64SEL + (3<<BUS_STARTBIT) + 0x0008)
#define FLASH_BUS4_sfck_in                     (BVCI_BLK + DBG64SEL + (3<<BUS_STARTBIT) + 0x0007)
#define FLASH_BUS4_armt_sfcsn_out              (BVCI_BLK + DBG64SEL + (3<<BUS_STARTBIT) + 0x0006)
#define FLASH_BUS4_pad_sfdo_in                 (BVCI_BLK + DBG64SEL + (3<<BUS_STARTBIT) + 0x0005)
#define FLASH_BUS4_armt_sfdo_oen               (BVCI_BLK + DBG64SEL + (3<<BUS_STARTBIT) + 0x0004)
#define FLASH_BUS4_armt_sfdo_out               (BVCI_BLK + DBG64SEL + (3<<BUS_STARTBIT) + 0x0003)
#define FLASH_BUS4_armt_sfdi_out               (BVCI_BLK + DBG64SEL + (3<<BUS_STARTBIT) + 0x0002)
#define FLASH_BUS4_armt_sfdi_oen               (BVCI_BLK + DBG64SEL + (3<<BUS_STARTBIT) + 0x0001)
#define FLASH_BUS4_pad_sfdi_in                 (BVCI_BLK + DBG64SEL + (3<<BUS_STARTBIT) + 0x0000)
//SDIF BUS5
#define SDIF_BUS5_ddO15                        (BVCI_BLK + DBG64SEL + (4<<BUS_STARTBIT) + 0x003F)
#define SDIF_BUS5_ddO14                        (BVCI_BLK + DBG64SEL + (4<<BUS_STARTBIT) + 0x003E)
#define SDIF_BUS5_ddO13                        (BVCI_BLK + DBG64SEL + (4<<BUS_STARTBIT) + 0x003D)
#define SDIF_BUS5_ddO12                        (BVCI_BLK + DBG64SEL + (4<<BUS_STARTBIT) + 0x003C)
#define SDIF_BUS5_ddO11                        (BVCI_BLK + DBG64SEL + (4<<BUS_STARTBIT) + 0x003B)
#define SDIF_BUS5_ddO10                        (BVCI_BLK + DBG64SEL + (4<<BUS_STARTBIT) + 0x003A)
#define SDIF_BUS5_ddO9                         (BVCI_BLK + DBG64SEL + (4<<BUS_STARTBIT) + 0x0039)
#define SDIF_BUS5_ddO8                         (BVCI_BLK + DBG64SEL + (4<<BUS_STARTBIT) + 0x0038)
#define SDIF_BUS5_ddO7                         (BVCI_BLK + DBG64SEL + (4<<BUS_STARTBIT) + 0x0037)
#define SDIF_BUS5_ddO6                         (BVCI_BLK + DBG64SEL + (4<<BUS_STARTBIT) + 0x0036)
#define SDIF_BUS5_ddO5                         (BVCI_BLK + DBG64SEL + (4<<BUS_STARTBIT) + 0x0035)
#define SDIF_BUS5_ddO4                         (BVCI_BLK + DBG64SEL + (4<<BUS_STARTBIT) + 0x0034)
#define SDIF_BUS5_ddO3                         (BVCI_BLK + DBG64SEL + (4<<BUS_STARTBIT) + 0x0033)
#define SDIF_BUS5_ddO2                         (BVCI_BLK + DBG64SEL + (4<<BUS_STARTBIT) + 0x0032)
#define SDIF_BUS5_ddO1                         (BVCI_BLK + DBG64SEL + (4<<BUS_STARTBIT) + 0x0031)
#define SDIF_BUS5_ddO0                         (BVCI_BLK + DBG64SEL + (4<<BUS_STARTBIT) + 0x0030)
#define SDIF_BUS5_ddI15                        (BVCI_BLK + DBG64SEL + (4<<BUS_STARTBIT) + 0x002F)
#define SDIF_BUS5_ddI14                        (BVCI_BLK + DBG64SEL + (4<<BUS_STARTBIT) + 0x002E)
#define SDIF_BUS5_ddI13                        (BVCI_BLK + DBG64SEL + (4<<BUS_STARTBIT) + 0x002D)
#define SDIF_BUS5_ddI12                        (BVCI_BLK + DBG64SEL + (4<<BUS_STARTBIT) + 0x002C)
#define SDIF_BUS5_ddI11                        (BVCI_BLK + DBG64SEL + (4<<BUS_STARTBIT) + 0x002B)
#define SDIF_BUS5_ddI10                        (BVCI_BLK + DBG64SEL + (4<<BUS_STARTBIT) + 0x002A)
#define SDIF_BUS5_ddI9                         (BVCI_BLK + DBG64SEL + (4<<BUS_STARTBIT) + 0x0029)
#define SDIF_BUS5_ddI8                         (BVCI_BLK + DBG64SEL + (4<<BUS_STARTBIT) + 0x0028)
#define SDIF_BUS5_ddI7                         (BVCI_BLK + DBG64SEL + (4<<BUS_STARTBIT) + 0x0027)
#define SDIF_BUS5_ddI6                         (BVCI_BLK + DBG64SEL + (4<<BUS_STARTBIT) + 0x0026)
#define SDIF_BUS5_ddI5                         (BVCI_BLK + DBG64SEL + (4<<BUS_STARTBIT) + 0x0025)
#define SDIF_BUS5_ddI4                         (BVCI_BLK + DBG64SEL + (4<<BUS_STARTBIT) + 0x0024)
#define SDIF_BUS5_ddI3                         (BVCI_BLK + DBG64SEL + (4<<BUS_STARTBIT) + 0x0023)
#define SDIF_BUS5_ddI2                         (BVCI_BLK + DBG64SEL + (4<<BUS_STARTBIT) + 0x0022)
#define SDIF_BUS5_ddI1                         (BVCI_BLK + DBG64SEL + (4<<BUS_STARTBIT) + 0x0021)
#define SDIF_BUS5_ddI0                         (BVCI_BLK + DBG64SEL + (4<<BUS_STARTBIT) + 0x0020)
#define SDIF_BUS5_ddEnN1                       (BVCI_BLK + DBG64SEL + (4<<BUS_STARTBIT) + 0x001F)
#define SDIF_BUS5_ddEnN0                       (BVCI_BLK + DBG64SEL + (4<<BUS_STARTBIT) + 0x001E)
#define SDIF_BUS5_dbaO1                        (BVCI_BLK + DBG64SEL + (4<<BUS_STARTBIT) + 0x001D)
#define SDIF_BUS5_dbaO0                        (BVCI_BLK + DBG64SEL + (4<<BUS_STARTBIT) + 0x001C)
#define SDIF_BUS5_daO11                        (BVCI_BLK + DBG64SEL + (4<<BUS_STARTBIT) + 0x001B)
#define SDIF_BUS5_daO10                        (BVCI_BLK + DBG64SEL + (4<<BUS_STARTBIT) + 0x001A)
#define SDIF_BUS5_daO9                         (BVCI_BLK + DBG64SEL + (4<<BUS_STARTBIT) + 0x0019)
#define SDIF_BUS5_daO8                         (BVCI_BLK + DBG64SEL + (4<<BUS_STARTBIT) + 0x0018)
#define SDIF_BUS5_daO7                         (BVCI_BLK + DBG64SEL + (4<<BUS_STARTBIT) + 0x0017)
#define SDIF_BUS5_daO6                         (BVCI_BLK + DBG64SEL + (4<<BUS_STARTBIT) + 0x0016)
#define SDIF_BUS5_daO5                         (BVCI_BLK + DBG64SEL + (4<<BUS_STARTBIT) + 0x0015)
#define SDIF_BUS5_daO4                         (BVCI_BLK + DBG64SEL + (4<<BUS_STARTBIT) + 0x0014)
#define SDIF_BUS5_daO3                         (BVCI_BLK + DBG64SEL + (4<<BUS_STARTBIT) + 0x0013)
#define SDIF_BUS5_daO2                         (BVCI_BLK + DBG64SEL + (4<<BUS_STARTBIT) + 0x0012)
#define SDIF_BUS5_daO1                         (BVCI_BLK + DBG64SEL + (4<<BUS_STARTBIT) + 0x0011)
#define SDIF_BUS5_daO0                         (BVCI_BLK + DBG64SEL + (4<<BUS_STARTBIT) + 0x0010)
#define SDIF_BUS5_dmO2                         (BVCI_BLK + DBG64SEL + (4<<BUS_STARTBIT) + 0x000F)
#define SDIF_BUS5_dmO1                         (BVCI_BLK + DBG64SEL + (4<<BUS_STARTBIT) + 0x000E)
#define SDIF_BUS5_dmO0                         (BVCI_BLK + DBG64SEL + (4<<BUS_STARTBIT) + 0x000D)
#define SDIF_BUS5_sdPDown                      (BVCI_BLK + DBG64SEL + (4<<BUS_STARTBIT) + 0x000C)
#define SDIF_BUS5_dweON                        (BVCI_BLK + DBG64SEL + (4<<BUS_STARTBIT) + 0x000B)
#define SDIF_BUS5_dcasON                       (BVCI_BLK + DBG64SEL + (4<<BUS_STARTBIT) + 0x000A)
#define SDIF_BUS5_drasON                       (BVCI_BLK + DBG64SEL + (4<<BUS_STARTBIT) + 0x0009)
#define SDIF_BUS5_dcsON                        (BVCI_BLK + DBG64SEL + (4<<BUS_STARTBIT) + 0x0008)
#define SDIF_BUS5_dbg_sdram_state3             (BVCI_BLK + DBG64SEL + (4<<BUS_STARTBIT) + 0x0007)
#define SDIF_BUS5_dbg_sdram_state2             (BVCI_BLK + DBG64SEL + (4<<BUS_STARTBIT) + 0x0006)
#define SDIF_BUS5_dbg_sdram_state1             (BVCI_BLK + DBG64SEL + (4<<BUS_STARTBIT) + 0x0005)
#define SDIF_BUS5_dbg_sdram_state0             (BVCI_BLK + DBG64SEL + (4<<BUS_STARTBIT) + 0x0004)
#define SDIF_BUS5_dckeO                        (BVCI_BLK + DBG64SEL + (4<<BUS_STARTBIT) + 0x0003)
#define SDIF_BUS5_dclkI                        (BVCI_BLK + DBG64SEL + (4<<BUS_STARTBIT) + 0x0002)
#define SDIF_BUS5_dclkO                        (BVCI_BLK + DBG64SEL + (4<<BUS_STARTBIT) + 0x0001)
#define SDIF_BUS5_sysclk                       (BVCI_BLK + DBG64SEL + (4<<BUS_STARTBIT) + 0x0000)

/**************************************************************************
* DGB64 BUS SERVO BLOCK
****************************************************************************/
//DBGBUSSEL_0
#define SERVO_sfr_fsrch             (SERVO_BLK + DBG64SEL + 0x000F)
#define SERVO_sfr_dljmp_q           (SERVO_BLK + DBG64SEL + 0x000E)
#define SERVO_sfr_fson              (SERVO_BLK + DBG64SEL + 0x000D)
#define SERVO_sfr_fok               (SERVO_BLK + DBG64SEL + 0x000C)
#define SERVO_fng_foo_sw            (SERVO_BLK + DBG64SEL + 0x000B)
#define SERVO_srch_standby          (SERVO_BLK + DBG64SEL + 0x000A)
#define SERVO_sfr_test9             (SERVO_BLK + DBG64SEL + 0x0009)
#define SERVO_sfr_test8             (SERVO_BLK + DBG64SEL + 0x0008)
#define SERVO_sfr_test7             (SERVO_BLK + DBG64SEL + 0x0007)
#define SERVO_sfr_test6             (SERVO_BLK + DBG64SEL + 0x0006)
#define SERVO_sfr_test5             (SERVO_BLK + DBG64SEL + 0x0005)
#define SERVO_sfr_test4             (SERVO_BLK + DBG64SEL + 0x0004)
#define SERVO_sfr_test3             (SERVO_BLK + DBG64SEL + 0x0003)
#define SERVO_sfr_test2             (SERVO_BLK + DBG64SEL + 0x0002)
#define SERVO_sfr_test1             (SERVO_BLK + DBG64SEL + 0x0001)
#define SERVO_sfr_test0             (SERVO_BLK + DBG64SEL + 0x0000)
//DBGBUSSEL_1
#define SERVO_src_fg_disappear      (SERVO_BLK + DBG64SEL + 0x010F)
#define SERVO_src_fg_lock           (SERVO_BLK + DBG64SEL + 0x010E)
#define SERVO_src_one_revol         (SERVO_BLK + DBG64SEL + 0x010D)
#define SERVO_src_fgcount_pulse     (SERVO_BLK + DBG64SEL + 0x010C)
#define SERVO_saj_mask              (SERVO_BLK + DBG64SEL + 0x010B)
#define SERVO_apc_feedback          (SERVO_BLK + DBG64SEL + 0x010A)
#define SERVO_apc_reference         (SERVO_BLK + DBG64SEL + 0x0109)
#define SERVO_apc_diff_phase        (SERVO_BLK + DBG64SEL + 0x0108)
#define SERVO_fg_lock               (SERVO_BLK + DBG64SEL + 0x0107)
#define SERVO_real_wblock           (SERVO_BLK + DBG64SEL + 0x0106)
#define SERVO_sbl_tx                (SERVO_BLK + DBG64SEL + 0x0105)
#define SERVO_sbl_rx                (SERVO_BLK + DBG64SEL + 0x0104)
#define SERVO_sbl_blank             (SERVO_BLK + DBG64SEL + 0x0103)
#define SERVO_sbl_newblank          (SERVO_BLK + DBG64SEL + 0x0102)
#define SERVO_sbl_tx_db             (SERVO_BLK + DBG64SEL + 0x0101)
#define SERVO_inhibit_tx            (SERVO_BLK + DBG64SEL + 0x0100)
//DBGBUSSEL_2
#define SERVO_ssk_hyson             (SERVO_BLK + DBG64SEL + 0x020F)
#define SERVO_ssk_tgup              (SERVO_BLK + DBG64SEL + 0x020E)
#define SERVO_ssk_tson              (SERVO_BLK + DBG64SEL + 0x020D)
#define SERVO_ssk_trsr              (SERVO_BLK + DBG64SEL + 0x020C)
#define SERVO_ssk_srch              (SERVO_BLK + DBG64SEL + 0x020B)
#define SERVO_ssk_fines             (SERVO_BLK + DBG64SEL + 0x020A)
#define SERVO_ssk_dir               (SERVO_BLK + DBG64SEL + 0x0209)
#define SERVO_ssk_txs               (SERVO_BLK + DBG64SEL + 0x0208)
#define SERVO_ssk_rxs               (SERVO_BLK + DBG64SEL + 0x0207)
#define SERVO_ssk_pulse             (SERVO_BLK + DBG64SEL + 0x0206)
#define SERVO_ssk_roughs            (SERVO_BLK + DBG64SEL + 0x0205)
#define SERVO_ssk_ontrk             (SERVO_BLK + DBG64SEL + 0x0204)
#define SERVO_stk_shc               (SERVO_BLK + DBG64SEL + 0x0203)
#define SERVO_s_dfct                (SERVO_BLK + DBG64SEL + 0x0202)
#define SERVO_s_defect2afe          (SERVO_BLK + DBG64SEL + 0x0201)
#define SERVO_stf_slow              (SERVO_BLK + DBG64SEL + 0x0200)
//DBGBUSSEL_3
#define SERVO_ssc_brake_t4          (SERVO_BLK + DBG64SEL + 0x030F)
#define SERVO_ssc_brake_t21         (SERVO_BLK + DBG64SEL + 0x030E)
#define SERVO_ssc_brake_cal         (SERVO_BLK + DBG64SEL + 0x030D)
#define SERVO_ssc_brake_t21_dly     (SERVO_BLK + DBG64SEL + 0x030C)
#define SERVO_ssc_brake_a0_dly      (SERVO_BLK + DBG64SEL + 0x030B)
#define SERVO_limit_mask            (SERVO_BLK + DBG64SEL + 0x030A)
#define SERVO_ssc_stkick_d          (SERVO_BLK + DBG64SEL + 0x0309)
#define SERVO_sct_dson              (SERVO_BLK + DBG64SEL + 0x0304)
#define SERVO_sct_teup              (SERVO_BLK + DBG64SEL + 0x0303)
#define SERVO_sct_feup              (SERVO_BLK + DBG64SEL + 0x0302)
#define SERVO_sout_on               (SERVO_BLK + DBG64SEL + 0x0301)
#define SERVO_stk_dfct              (SERVO_BLK + DBG64SEL + 0x0300)
//DBGBUSSEL_4
#define SERVO_scd_fe_slewrate_en    (SERVO_BLK + DBG64SEL + 0x040F)
#define SERVO_diff_temp             (SERVO_BLK + DBG64SEL + 0x040E)
#define SERVO_time176k_enc          (SERVO_BLK + DBG64SEL + 0x040D)
#define SERVO_update_temp           (SERVO_BLK + DBG64SEL + 0x040C)
#define SERVO_new_feA_peak          (SERVO_BLK + DBG64SEL + 0x040B)
#define SERVO_feA_comp_a_qgtb       (SERVO_BLK + DBG64SEL + 0x040A)
#define SERVO_new_feA_bott          (SERVO_BLK + DBG64SEL + 0x0409)
#define SERVO_new_feB_peak          (SERVO_BLK + DBG64SEL + 0x0408)
#define SERVO_feB_comp_a_qgtb       (SERVO_BLK + DBG64SEL + 0x0407)
#define SERVO_new_feB_bott          (SERVO_BLK + DBG64SEL + 0x0406)
#define SERVO_sms_feld1_q           (SERVO_BLK + DBG64SEL + 0x0405)
#define SERVO_sms_feld2_q           (SERVO_BLK + DBG64SEL + 0x0404)
#define SERVO_feA_comp_a_qslb       (SERVO_BLK + DBG64SEL + 0x0403)
#define SERVO_feB_comp_a_qslb       (SERVO_BLK + DBG64SEL + 0x0402)
#define SERVO_feA_comp_agtb         (SERVO_BLK + DBG64SEL + 0x0401)
#define SERVO_feB_comp_agtb         (SERVO_BLK + DBG64SEL + 0x0400)
//DBGBUSSEL_5
#define SERVO_srv_landgroove        (SERVO_BLK + DBG64SEL + 0x050F)
#define SERVO_adv_landgroove_d      (SERVO_BLK + DBG64SEL + 0x050E)
#define SERVO_srv_wob_hold          (SERVO_BLK + DBG64SEL + 0x050D)
#define SERVO_srv_te_hold           (SERVO_BLK + DBG64SEL + 0x050C)
#define SERVO_basic_angle           (SERVO_BLK + DBG64SEL + 0x050B)
#define SERVO_dsp_basic_angle       (SERVO_BLK + DBG64SEL + 0x050A)
#define SERVO_dsp_basic_angle_out_d (SERVO_BLK + DBG64SEL + 0x0509)
#define SERVO_sst_phase_index3      (SERVO_BLK + DBG64SEL + 0x0508)
#define SERVO_sst_phase_index2      (SERVO_BLK + DBG64SEL + 0x0507)
#define SERVO_sst_phase_index1      (SERVO_BLK + DBG64SEL + 0x0506)
#define SERVO_sst_phase_index0      (SERVO_BLK + DBG64SEL + 0x0505)
#define SERVO_fake_rxedge           (SERVO_BLK + DBG64SEL + 0x0502)
#define SERVO_tx_short              (SERVO_BLK + DBG64SEL + 0x0501)
#define SERVO_fake_rx_q             (SERVO_BLK + DBG64SEL + 0x0500)
//DBGBUSSEL_6
#define SERVO_time176k_q7           (SERVO_BLK + DBG64SEL + 0x060F)
#define SERVO_time176k_q6           (SERVO_BLK + DBG64SEL + 0x060E)
#define SERVO_time176k_q5           (SERVO_BLK + DBG64SEL + 0x060D)
#define SERVO_time176k_q4           (SERVO_BLK + DBG64SEL + 0x060C)
#define SERVO_time176k_q3           (SERVO_BLK + DBG64SEL + 0x060B)
#define SERVO_time176k_q2           (SERVO_BLK + DBG64SEL + 0x060A)
#define SERVO_time176k_q1           (SERVO_BLK + DBG64SEL + 0x0609)
#define SERVO_time176k_q0           (SERVO_BLK + DBG64SEL + 0x0608)
#define SERVO_ssc_error_q7          (SERVO_BLK + DBG64SEL + 0x0607)
#define SERVO_ssc_error_q6          (SERVO_BLK + DBG64SEL + 0x0606)
#define SERVO_ssc_error_q5          (SERVO_BLK + DBG64SEL + 0x0605)
#define SERVO_ssc_error_q4          (SERVO_BLK + DBG64SEL + 0x0604)
#define SERVO_ssc_error_q3          (SERVO_BLK + DBG64SEL + 0x0603)
#define SERVO_ssc_error_q2          (SERVO_BLK + DBG64SEL + 0x0602)
#define SERVO_ssc_error_q1          (SERVO_BLK + DBG64SEL + 0x0601)
#define SERVO_ssc_error_q0          (SERVO_BLK + DBG64SEL + 0x0600)
//DBGBUSSEL_7
#define SERVO_seek_start_ld         (SERVO_BLK + DBG64SEL + 0x070F)
#define SERVO_seek_end              (SERVO_BLK + DBG64SEL + 0x070E)
#define SERVO_sst_step_clk          (SERVO_BLK + DBG64SEL + 0x070D)
#define SERVO_sst_full_speed        (SERVO_BLK + DBG64SEL + 0x070C)
#define SERVO_sst_acc               (SERVO_BLK + DBG64SEL + 0x070B)
#define SERVO_sst_hold_speed        (SERVO_BLK + DBG64SEL + 0x070A)
#define SERVO_ent_fullmod           (SERVO_BLK + DBG64SEL + 0x0709)
#define SERVO_standby_entfull       (SERVO_BLK + DBG64SEL + 0x0708)
#define SERVO_stp_loc_ld            (SERVO_BLK + DBG64SEL + 0x0707)
#define SERVO_step_cnt_ld           (SERVO_BLK + DBG64SEL + 0x0706)
#define SERVO_step_cnt_up           (SERVO_BLK + DBG64SEL + 0x0705)
#define SERVO_step_cnt_dn           (SERVO_BLK + DBG64SEL + 0x0704)
#define SERVO_dco_out               (SERVO_BLK + DBG64SEL + 0x0703)
//DBGBUSSEL_8
#define SERVO_mux_a15               (SERVO_BLK + DBG64SEL + 0x080F)
#define SERVO_mux_a14               (SERVO_BLK + DBG64SEL + 0x080E)
#define SERVO_mux_a13               (SERVO_BLK + DBG64SEL + 0x080D)
#define SERVO_mux_a12               (SERVO_BLK + DBG64SEL + 0x080C)
#define SERVO_mux_a11               (SERVO_BLK + DBG64SEL + 0x080B)
#define SERVO_mux_a10               (SERVO_BLK + DBG64SEL + 0x080A)
#define SERVO_mux_a9                (SERVO_BLK + DBG64SEL + 0x0809)
#define SERVO_mux_a8                (SERVO_BLK + DBG64SEL + 0x0808)
#define SERVO_mux_a7                (SERVO_BLK + DBG64SEL + 0x0807)
#define SERVO_mux_a6                (SERVO_BLK + DBG64SEL + 0x0806)
#define SERVO_mux_a5                (SERVO_BLK + DBG64SEL + 0x0805)
#define SERVO_mux_a4                (SERVO_BLK + DBG64SEL + 0x0804)
#define SERVO_mux_a3                (SERVO_BLK + DBG64SEL + 0x0803)
#define SERVO_mux_a2                (SERVO_BLK + DBG64SEL + 0x0802)
#define SERVO_mux_a1                (SERVO_BLK + DBG64SEL + 0x0801)
#define SERVO_mux_a0                (SERVO_BLK + DBG64SEL + 0x0800)
//DBGBUSSEL_9
#define SERVO_mux_a31               (SERVO_BLK + DBG64SEL + 0x090F)
#define SERVO_mux_a30               (SERVO_BLK + DBG64SEL + 0x090E)
#define SERVO_mux_a29               (SERVO_BLK + DBG64SEL + 0x090D)
#define SERVO_mux_a28               (SERVO_BLK + DBG64SEL + 0x090C)
#define SERVO_mux_a27               (SERVO_BLK + DBG64SEL + 0x090B)
#define SERVO_mux_a26               (SERVO_BLK + DBG64SEL + 0x090A)
#define SERVO_mux_a25               (SERVO_BLK + DBG64SEL + 0x0909)
#define SERVO_mux_a24               (SERVO_BLK + DBG64SEL + 0x0908)
#define SERVO_mux_a23               (SERVO_BLK + DBG64SEL + 0x0907)
#define SERVO_mux_a22               (SERVO_BLK + DBG64SEL + 0x0906)
#define SERVO_mux_a21               (SERVO_BLK + DBG64SEL + 0x0905)
#define SERVO_mux_a20               (SERVO_BLK + DBG64SEL + 0x0904)
#define SERVO_mux_a19               (SERVO_BLK + DBG64SEL + 0x0903)
#define SERVO_mux_a18               (SERVO_BLK + DBG64SEL + 0x0902)
#define SERVO_mux_a17               (SERVO_BLK + DBG64SEL + 0x0901)
#define SERVO_mux_a16               (SERVO_BLK + DBG64SEL + 0x0900)
//DBGBUSSEL_A
#define SERVO_mux_a47               (SERVO_BLK + DBG64SEL + 0x0A0F)
#define SERVO_mux_a46               (SERVO_BLK + DBG64SEL + 0x0A0E)
#define SERVO_mux_a45               (SERVO_BLK + DBG64SEL + 0x0A0D)
#define SERVO_mux_a44               (SERVO_BLK + DBG64SEL + 0x0A0C)
#define SERVO_mux_a43               (SERVO_BLK + DBG64SEL + 0x0A0B)
#define SERVO_mux_a42               (SERVO_BLK + DBG64SEL + 0x0A0A)
#define SERVO_mux_a41               (SERVO_BLK + DBG64SEL + 0x0A09)
#define SERVO_mux_a40               (SERVO_BLK + DBG64SEL + 0x0A08)
#define SERVO_mux_a39               (SERVO_BLK + DBG64SEL + 0x0A07)
#define SERVO_mux_a38               (SERVO_BLK + DBG64SEL + 0x0A06)
#define SERVO_mux_a37               (SERVO_BLK + DBG64SEL + 0x0A05)
#define SERVO_mux_a36               (SERVO_BLK + DBG64SEL + 0x0A04)
#define SERVO_mux_a35               (SERVO_BLK + DBG64SEL + 0x0A03)
#define SERVO_mux_a34               (SERVO_BLK + DBG64SEL + 0x0A02)
#define SERVO_mux_a33               (SERVO_BLK + DBG64SEL + 0x0A01)
#define SERVO_mux_a32               (SERVO_BLK + DBG64SEL + 0x0A00)
//DBGBUSSEL_B
#define SERVO_mux_a63               (SERVO_BLK + DBG64SEL + 0x0B0F)
#define SERVO_mux_a62               (SERVO_BLK + DBG64SEL + 0x0B0E)
#define SERVO_mux_a61               (SERVO_BLK + DBG64SEL + 0x0B0D)
#define SERVO_mux_a60               (SERVO_BLK + DBG64SEL + 0x0B0C)
#define SERVO_mux_a59               (SERVO_BLK + DBG64SEL + 0x0B0B)
#define SERVO_mux_a58               (SERVO_BLK + DBG64SEL + 0x0B0A)
#define SERVO_mux_a57               (SERVO_BLK + DBG64SEL + 0x0B09)
#define SERVO_mux_a56               (SERVO_BLK + DBG64SEL + 0x0B08)
#define SERVO_mux_a55               (SERVO_BLK + DBG64SEL + 0x0B07)
#define SERVO_mux_a54               (SERVO_BLK + DBG64SEL + 0x0B06)
#define SERVO_mux_a53               (SERVO_BLK + DBG64SEL + 0x0B05)
#define SERVO_mux_a52               (SERVO_BLK + DBG64SEL + 0x0B04)
#define SERVO_mux_a51               (SERVO_BLK + DBG64SEL + 0x0B03)
#define SERVO_mux_a50               (SERVO_BLK + DBG64SEL + 0x0B02)
#define SERVO_mux_a49               (SERVO_BLK + DBG64SEL + 0x0B01)
#define SERVO_mux_a48               (SERVO_BLK + DBG64SEL + 0x0B00)
//DBGBUSSEL_C
#define SERVO_mux_b15               (SERVO_BLK + DBG64SEL + 0x0C0F)
#define SERVO_mux_b14               (SERVO_BLK + DBG64SEL + 0x0C0E)
#define SERVO_mux_b13               (SERVO_BLK + DBG64SEL + 0x0C0D)
#define SERVO_mux_b12               (SERVO_BLK + DBG64SEL + 0x0C0C)
#define SERVO_mux_b11               (SERVO_BLK + DBG64SEL + 0x0C0B)
#define SERVO_mux_b10               (SERVO_BLK + DBG64SEL + 0x0C0A)
#define SERVO_mux_b9                (SERVO_BLK + DBG64SEL + 0x0C09)
#define SERVO_mux_b8                (SERVO_BLK + DBG64SEL + 0x0C08)
#define SERVO_mux_b7                (SERVO_BLK + DBG64SEL + 0x0C07)
#define SERVO_mux_b6                (SERVO_BLK + DBG64SEL + 0x0C06)
#define SERVO_mux_b5                (SERVO_BLK + DBG64SEL + 0x0C05)
#define SERVO_mux_b4                (SERVO_BLK + DBG64SEL + 0x0C04)
#define SERVO_mux_b3                (SERVO_BLK + DBG64SEL + 0x0C03)
#define SERVO_mux_b2                (SERVO_BLK + DBG64SEL + 0x0C02)
#define SERVO_mux_b1                (SERVO_BLK + DBG64SEL + 0x0C01)
#define SERVO_mux_b0                (SERVO_BLK + DBG64SEL + 0x0C00)
//DBGBUSSEL_D
#define SERVO_mux_b31               (SERVO_BLK + DBG64SEL + 0x0D0F)
#define SERVO_mux_b30               (SERVO_BLK + DBG64SEL + 0x0D0E)
#define SERVO_mux_b29               (SERVO_BLK + DBG64SEL + 0x0D0D)
#define SERVO_mux_b28               (SERVO_BLK + DBG64SEL + 0x0D0C)
#define SERVO_mux_b27               (SERVO_BLK + DBG64SEL + 0x0D0B)
#define SERVO_mux_b26               (SERVO_BLK + DBG64SEL + 0x0D0A)
#define SERVO_mux_b25               (SERVO_BLK + DBG64SEL + 0x0D09)
#define SERVO_mux_b24               (SERVO_BLK + DBG64SEL + 0x0D08)
#define SERVO_mux_b23               (SERVO_BLK + DBG64SEL + 0x0D07)
#define SERVO_mux_b22               (SERVO_BLK + DBG64SEL + 0x0D06)
#define SERVO_mux_b21               (SERVO_BLK + DBG64SEL + 0x0D05)
#define SERVO_mux_b20               (SERVO_BLK + DBG64SEL + 0x0D04)
#define SERVO_mux_b19               (SERVO_BLK + DBG64SEL + 0x0D03)
#define SERVO_mux_b18               (SERVO_BLK + DBG64SEL + 0x0D02)
#define SERVO_mux_b17               (SERVO_BLK + DBG64SEL + 0x0D01)
#define SERVO_mux_b16               (SERVO_BLK + DBG64SEL + 0x0D00)
//DBGBUSSEL_E
#define SERVO_mux_b47               (SERVO_BLK + DBG64SEL + 0x0E0F)
#define SERVO_mux_b46               (SERVO_BLK + DBG64SEL + 0x0E0E)
#define SERVO_mux_b45               (SERVO_BLK + DBG64SEL + 0x0E0D)
#define SERVO_mux_b44               (SERVO_BLK + DBG64SEL + 0x0E0C)
#define SERVO_mux_b43               (SERVO_BLK + DBG64SEL + 0x0E0B)
#define SERVO_mux_b42               (SERVO_BLK + DBG64SEL + 0x0E0A)
#define SERVO_mux_b41               (SERVO_BLK + DBG64SEL + 0x0E09)
#define SERVO_mux_b40               (SERVO_BLK + DBG64SEL + 0x0E08)
#define SERVO_mux_b39               (SERVO_BLK + DBG64SEL + 0x0E07)
#define SERVO_mux_b38               (SERVO_BLK + DBG64SEL + 0x0E06)
#define SERVO_mux_b37               (SERVO_BLK + DBG64SEL + 0x0E05)
#define SERVO_mux_b36               (SERVO_BLK + DBG64SEL + 0x0E04)
#define SERVO_mux_b35               (SERVO_BLK + DBG64SEL + 0x0E03)
#define SERVO_mux_b34               (SERVO_BLK + DBG64SEL + 0x0E02)
#define SERVO_mux_b33               (SERVO_BLK + DBG64SEL + 0x0E01)
#define SERVO_mux_b32               (SERVO_BLK + DBG64SEL + 0x0E00)
//DBGBUSSEL_F
#define SERVO_mux_b63               (SERVO_BLK + DBG64SEL + 0x0F0F)
#define SERVO_mux_b62               (SERVO_BLK + DBG64SEL + 0x0F0E)
#define SERVO_mux_b61               (SERVO_BLK + DBG64SEL + 0x0F0D)
#define SERVO_mux_b60               (SERVO_BLK + DBG64SEL + 0x0F0C)
#define SERVO_mux_b59               (SERVO_BLK + DBG64SEL + 0x0F0B)
#define SERVO_mux_b58               (SERVO_BLK + DBG64SEL + 0x0F0A)
#define SERVO_mux_b57               (SERVO_BLK + DBG64SEL + 0x0F09)
#define SERVO_mux_b56               (SERVO_BLK + DBG64SEL + 0x0F08)
#define SERVO_mux_b55               (SERVO_BLK + DBG64SEL + 0x0F07)
#define SERVO_mux_b54               (SERVO_BLK + DBG64SEL + 0x0F06)
#define SERVO_mux_b53               (SERVO_BLK + DBG64SEL + 0x0F05)
#define SERVO_mux_b52               (SERVO_BLK + DBG64SEL + 0x0F04)
#define SERVO_mux_b51               (SERVO_BLK + DBG64SEL + 0x0F03)
#define SERVO_mux_b50               (SERVO_BLK + DBG64SEL + 0x0F02)
#define SERVO_mux_b49               (SERVO_BLK + DBG64SEL + 0x0F01)
#define SERVO_mux_b48               (SERVO_BLK + DBG64SEL + 0x0F00)

    #endif // #if (CHIP_REV >= 0xC0)


void HAL_debug_MIO0(ULONG signal);
void HAL_debug_MIO1(ULONG signal);
void HAL_debug_MIO2(ULONG signal);
void HAL_debug_MIO3(ULONG signal);


#endif // #ifndef _HAL_DEBUG_H_

/*------------------------------------------------------------------------*/
/* The end of file                                                        */
/*------------------------------------------------------------------------*/
